bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  group  =(OptionGroup)option.next();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  group  =(OptionGroup)option.next();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  group  =(OptionGroup)option.next();	  Option    group    =(OptionGroup)opt.next();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
2	[BUG]  [BUGGY]  Option  group  =(OptionGroup)opt.getValue();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  group  =(OptionGroup)opt.getValue();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  group  =(OptionGroup)opt.getValue();	  Option    group    =(OptionGroup)opt.next();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
3	[BUG]  [BUGGY]  Option  option  =  opt.getOptionOptions();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =  opt.getOptionOptions();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =  opt.getOptionOptions();	  Option    option    =    options.getOptionOptions();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
4	[BUG]  [BUGGY]  Option  option  =  options.getOptionOption(opt);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =  options.getOptionOption(opt);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =  options.getOptionOption(opt);	  Option    option    =    options.getOptionOptions();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
5	[BUG]  [BUGGY]  Option  group  =(OptionGroup)opt.getOptionGroups().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  group  =(OptionGroup)opt.getOptionGroups().iterator();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  group  =(OptionGroup)opt.getOptionGroups().iterator();	  Option    group    =(OptionGroup)options.getOptionGroups().iterator();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
6	[BUG]  [BUGGY]  Option  group  =(OptionGroup)options.getGroups().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  group  =(OptionGroup)options.getGroups().iterator();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  group  =(OptionGroup)options.getGroups().iterator();	  Option    group    =(OptionGroup)options.getOptionGroups().iterator();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
7	[BUG]  [BUGGY]  Option  group  =(OptionGroup)options.getSelectedOptions().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  group  =(OptionGroup)options.getSelectedOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  group  =(OptionGroup)options.getSelectedOptions().iterator();	  Option    group    =(OptionGroup)options.getOptionGroups().iterator();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
8	[BUG]  [BUGGY]  Option  group  =(OptionGroup)options.getKey();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  group  =(OptionGroup)options.getKey();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  group  =(OptionGroup)options.getKey();	  Option    group    =(OptionGroup)options.getValue();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
9	[BUG]  [BUGGY]  Option  group  =(OptionGroup)options.getSelectedValue();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  group  =(OptionGroup)options.getSelectedValue();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  group  =(OptionGroup)options.getSelectedValue();	  Option    group    =(OptionGroup)options.getValue();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
10	[BUG]  [BUGGY]  for(Iterator  it  =  option.optionsRequiredOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  option.optionsRequiredOptions().iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  option.optionsRequiredOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.optionsRequiredOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
11	[BUG]  [BUGGY]  Option  group  =  options.getGroups().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  group  =  options.getGroups().iterator();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  group  =  options.getGroups().iterator();	  Option    group    =    options.getOptionGroups().iterator();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
12	[BUG]  [BUGGY]  Option  group  =  opt.getOptionGroups().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  group  =  opt.getOptionGroups().iterator();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  group  =  opt.getOptionGroups().iterator();	  Option    group    =    options.getOptionGroups().iterator();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
13	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroups();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  group  =  options.getOptionGroups();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  group  =  options.getOptionGroups();	  Option    group    =    options.getOptionGroups().iterator();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
14	[BUG]  [BUGGY]  Option  option  =  opt.getOptionOption();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =  opt.getOptionOption();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =  opt.getOptionOption();	  Option    option    =    options.getOptionOption();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
15	[BUG]  [BUGGY]  Option  group  =(OptionGroup)opt.getSelected();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  group  =(OptionGroup)opt.getSelected();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  group  =(OptionGroup)opt.getSelected();	  Option    group    =(OptionGroup)options.getSelected();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
16	[BUG]  [BUGGY]  Option  option  =(Option)options.next();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =(Option)options.next();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =(Option)options.next();	  Option    option    =(Option)it.next();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
17	[BUG]  [BUGGY]  for(Iterator  it  =  option.requireOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  option.requireOptions().iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  option.requireOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    opt.requireOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
18	[BUG]  [BUGGY]  for(Iterator  it  =  requiredOptions.iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  requiredOptions.iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  requiredOptions.iterator();  it.hasNext();)  {	  for(Iterator    it    =    opt.requireOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
19	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)option.getSelectedValues();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =(OptionGroup)option.getSelectedValues();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =(OptionGroup)option.getSelectedValues();	  OptionGroup    group    =(OptionGroup)opt.getSelectedValues();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
20	[BUG]  [BUGGY]  Option  option  =  opt.getOptionGroups().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =  opt.getOptionGroups().iterator();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =  opt.getOptionGroups().iterator();	  Option    option    =    options.getOptionGroups().iterator();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
21	[BUG]  [BUGGY]  Option  option  =  options.getOptionOptions().iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =  options.getOptionOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =  options.getOptionOptions().iterator();	  Option    option    =    options.getOptionGroups().iterator();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
22	[BUG]  [BUGGY]  Option  option  =  options.getOptions().iterator();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =  options.getOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =  options.getOptions().iterator();	  Option    option    =    options.getOptionGroups().iterator();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
23	[BUG]  [BUGGY]  for(Iterator  it  =  opts.options().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  opts.options().iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  opts.options().iterator();  it.hasNext();)  {	  for(Iterator    it    =    opts.opts().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
24	[BUG]  [BUGGY]  Option  group  =(OptionGroup)options.get(0);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  group  =(OptionGroup)options.get(0);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  group  =(OptionGroup)options.get(0);	  Option    group    =(OptionGroup)options.next();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
25	[BUG]  [BUGGY]  Option  group  =(OptionGroup)options.get(opt);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  group  =(OptionGroup)options.get(opt);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  group  =(OptionGroup)options.get(opt);	  Option    group    =(OptionGroup)options.next();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
26	[BUG]  [BUGGY]  Option  group  =(Option)it.next();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  group  =(Option)it.next();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  group  =(Option)it.next();	  Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    group    =(OptionGroup)it.next();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
27	[BUG]  [BUGGY]  for(Iterator  it  =  options.requiresRequiresOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  options.requiresRequiresOptions().iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  options.requiresRequiresOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.optionsRequiresOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
28	[BUG]  [BUGGY]  for(Iterator  it  =  option.optionsRequiresOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  option.optionsRequiresOptions().iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  option.optionsRequiresOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.optionsRequiresOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
29	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)option.getGroup();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =(OptionGroup)option.getGroup();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =(OptionGroup)option.getGroup();	  OptionGroup    group    =(OptionGroup)opt.getGroup();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
30	[BUG]  [BUGGY]  Option  group  =(Option)opt.clone();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  group  =(Option)opt.clone();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  group  =(Option)opt.clone();	  Option    group    =(OptionGroup)opt.clone();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
31	[BUG]  [BUGGY]  Option  group  =(OptionGroup)option.clone();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  group  =(OptionGroup)option.clone();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  group  =(OptionGroup)option.clone();	  Option    group    =(OptionGroup)opt.clone();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
32	[BUG]  [BUGGY]  Option  group  =(OptionGroup)options.clone();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  group  =(OptionGroup)options.clone();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  group  =(OptionGroup)options.clone();	  Option    group    =(OptionGroup)opt.clone();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
33	[BUG]  [BUGGY]  for(Iterator  it  =  options.requiredOptions.iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  options.requiredOptions.iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  options.requiredOptions.iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.options.getRequiredOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
34	[BUG]  [BUGGY]  for(Iterator  it  =  options.opts.getRequiredOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  options.opts.getRequiredOptions().iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  options.opts.getRequiredOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.options.getRequiredOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
35	[BUG]  [BUGGY]  for(Iterator  it  =  opt.options().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  opt.options().iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  opt.options().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.options().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
36	[BUG]  [BUGGY]  Option  option  =(Option)opt.getOptionGroup();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =(Option)opt.getOptionGroup();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =(Option)opt.getOptionGroup();	  Option    option    =(Option)opt.getOption();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
37	[BUG]  [BUGGY]  Option  option  =(Option)option.getOption();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =(Option)option.getOption();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =(Option)option.getOption();	  Option    option    =(Option)opt.getOption();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
38	[BUG]  [BUGGY]  Option  group  =(OptionGroup)opt.getOptionGroups().next();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  group  =(OptionGroup)opt.getOptionGroups().next();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  group  =(OptionGroup)opt.getOptionGroups().next();	  Option    group    =(OptionGroup)options.getOptionGroups().next();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
39	[BUG]  [BUGGY]  Option  group  =(OptionGroup)options.getOptionGroups().get(0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  group  =(OptionGroup)options.getOptionGroups().get(0);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  group  =(OptionGroup)options.getOptionGroups().get(0);	  Option    group    =(OptionGroup)options.getOptionGroups().next();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
40	[BUG]  [BUGGY]  for(Iterator  it  =  opt.addOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  opt.addOptions().iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  opt.addOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.addOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
41	[BUG]  [BUGGY]  optionGroup  group  =(OptionGroup)opt.next();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  optionGroup  group  =(OptionGroup)opt.next();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	optionGroup  group  =(OptionGroup)opt.next();	  OptionGroup    group    =(OptionGroup)option.next();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
42	[BUG]  [BUGGY]  Option  option  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =  options.getOption(option);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =  options.getOption(option);	  Option    option    =    opt.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
43	[BUG]  [BUGGY]  Option  option  =(Option)option.clone();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =(Option)option.clone();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =(Option)option.clone();	  Option    option    =(Option)option.next();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
44	[BUG]  [BUGGY]  option  =(Option)opt.next();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  option  =(Option)opt.next();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	option  =(Option)opt.next();	  Option    option    =(Option)option.next();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
45	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)opts.clone();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =(OptionGroup)opts.clone();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =(OptionGroup)opts.clone();	  OptionGroup    group    =(OptionGroup)options.clone();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
46	[BUG]  [BUGGY]  for(Iterator  it  =  option.opts().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  option.opts().iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  option.opts().iterator();  it.hasNext();)  {	  for(Iterator    it    =    opt.opts().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
47	[BUG]  [BUGGY]  ListIterator  it  =  option.getRequiredOptions().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  ListIterator  it  =  option.getRequiredOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	ListIterator  it  =  option.getRequiredOptions().iterator();	  ListIterator    it    =    options.getRequiredOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
48	[BUG]  [BUGGY]  Iterator  it  =  options.getRequiredOptions().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Iterator  it  =  options.getRequiredOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Iterator  it  =  options.getRequiredOptions().iterator();	  ListIterator    it    =    options.getRequiredOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
49	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)option.getImplicitReturn();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =(OptionGroup)option.getImplicitReturn();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =(OptionGroup)option.getImplicitReturn();	  OptionGroup    group    =(OptionGroup)opt.getImplicitReturn();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
50	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getReturn();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getReturn();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =(OptionGroup)opt.getReturn();	  OptionGroup    group    =(OptionGroup)opt.getImplicitReturn();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
51	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup(opt);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =  option.getOptionGroup(opt);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =  option.getOptionGroup(opt);	  OptionGroup    group    =    opt.getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
52	[BUG]  [BUGGY]  OptionGroup  group  =  opt.getOptionGroups().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =  opt.getOptionGroups().iterator();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =  opt.getOptionGroups().iterator();	  OptionGroup    group    =    options.getOptionGroups().iterator();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
53	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroups().iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =  options.getGroups().iterator();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =  options.getGroups().iterator();	  OptionGroup    group    =    options.getOptionGroups().iterator();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
54	[BUG]  [BUGGY]  ListIterator  it  =  opt.getOptions().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  ListIterator  it  =  opt.getOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	ListIterator  it  =  opt.getOptions().iterator();	  ListIterator    it    =    options.getOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
55	[BUG]  [BUGGY]  Iterator  it  =  options.getRequiredOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Iterator  it  =  options.getRequiredOptions().iterator();  it.hasNext();)  {  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Iterator  it  =  options.getRequiredOptions().iterator();  it.hasNext();)  {	  Iterator    it    =    options.getOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
56	[BUG]  [BUGGY]  Iterator  it  =  options.getAllOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Iterator  it  =  options.getAllOptions().iterator();  it.hasNext();)  {  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Iterator  it  =  options.getAllOptions().iterator();  it.hasNext();)  {	  Iterator    it    =    options.getOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
57	[BUG]  [BUGGY]  Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Iterator  it  =  options.opts().iterator();  it.hasNext();)  {	  Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
58	[BUG]  [BUGGY]  optionGroup  group  =(OptionGroup)opt.getSelected();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  optionGroup  group  =(OptionGroup)opt.getSelected();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	optionGroup  group  =(OptionGroup)opt.getSelected();	  OptionGroup    group    =(OptionGroup)option.getSelected();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
59	[BUG]  [BUGGY]  Option  group  =(Option)opt.getGroups().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  group  =(Option)opt.getGroups().iterator();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  group  =(Option)opt.getGroups().iterator();	  Option    group    =(Option)options.getGroups().iterator();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
60	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt,  null);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt,  null);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =  options.getOptionGroup(opt,  null);	  OptionGroup    group    =    options.getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
61	[BUG]  [BUGGY]  OptionGroup  group  =  opt.getOptionGroup(option);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =  opt.getOptionGroup(option);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =  opt.getOptionGroup(option);	  OptionGroup    group    =    options.getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
62	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt,  t);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt,  t);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =  options.getOptionGroup(opt,  t);	  OptionGroup    group    =    options.getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
63	[BUG]  [BUGGY]  for(Iterator  it  =  options.optsOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  options.optsOptions().iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  options.optsOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.optionsOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
64	[BUG]  [BUGGY]  for(Iterator  it  =  opt.optionsOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  opt.optionsOptions().iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  opt.optionsOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.optionsOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
65	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(t);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =  options.getOptionGroup(t);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =  options.getOptionGroup(t);	  OptionGroup    group    =    opt.getOptionGroup(t);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
66	[BUG]  [BUGGY]  OptionGroup  group  =  t.getOptionGroup(opt);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =  t.getOptionGroup(opt);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =  t.getOptionGroup(opt);	  OptionGroup    group    =    opt.getOptionGroup(t);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
67	[BUG]  [BUGGY]  OptionGroup  group  =  opt.getGroup(null);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =  opt.getGroup(null);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =  opt.getGroup(null);	  OptionGroup    group    =    opt.getOptionGroup(t);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
68	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)options.get(0);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =(OptionGroup)options.get(0);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =(OptionGroup)options.get(0);	  OptionGroup    group    =(OptionGroup)options.next();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
69	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)options.get(opt);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =(OptionGroup)options.get(opt);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =(OptionGroup)options.get(opt);	  OptionGroup    group    =(OptionGroup)options.next();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
70	[BUG]  [BUGGY]  Option[]  options  =  options.opts();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option[]  options  =  options.opts();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option[]  options  =  options.opts();	  Option[]    options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
71	[BUG]  [BUGGY]  ListIterator  it  =  options.getRequiredOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  ListIterator  it  =  options.getRequiredOptions().iterator();  it.hasNext();)  {  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	ListIterator  it  =  options.getRequiredOptions().iterator();  it.hasNext();)  {	  ListIterator    it    =    options.getOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
72	[BUG]  [BUGGY]  Option  option  =(Option)opt.getOptionGroups();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =(Option)opt.getOptionGroups();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =(Option)opt.getOptionGroups();	  Option    option    =(Option)opt.getOptions();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
73	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  opt);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =  options.getOption(t,  opt);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =  options.getOption(t,  opt);	  Option    option    =    options.getOption(opt,    t);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
74	[BUG]  [BUGGY]  Option  option  =  options.getOption(str,  opt);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =  options.getOption(str,  opt);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =  options.getOption(str,  opt);	  Option    option    =    options.getOption(opt,    t);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
75	[BUG]  [BUGGY]  Option  option  =  options.getOption(str,  opt,  t);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =  options.getOption(str,  opt,  t);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =  options.getOption(str,  opt,  t);	  Option    option    =    options.getOption(opt,    t);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
76	[BUG]  [BUGGY]  Option  option  =  options.getOption(str,  t);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =  options.getOption(str,  t);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =  options.getOption(str,  t);	  Option    option    =    options.getOption(opt,    t);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
77	[BUG]  [BUGGY]  ListIterator  it  =  option.getOptionGroups().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  ListIterator  it  =  option.getOptionGroups().iterator();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	ListIterator  it  =  option.getOptionGroups().iterator();	  ListIterator    it    =    opt.getOptionGroups().iterator();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
78	[BUG]  [BUGGY]  for(Iterator  it  =  opt.optionsRequireOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  opt.optionsRequireOptions().iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  opt.optionsRequireOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.optionsRequireOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
79	[BUG]  [BUGGY]  for(Iterator  it  =  option.optionsRequireOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  option.optionsRequireOptions().iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  option.optionsRequireOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.optionsRequireOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
80	[BUG]  [BUGGY]  for(Iterator  it  =  opt.getRequiredOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  opt.getRequiredOptions().iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  opt.getRequiredOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    option.getRequiredOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
81	[BUG]  [BUGGY]  Iterator  it  =  options.requiresOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Iterator  it  =  options.requiresOptions().iterator();  it.hasNext();)  {  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Iterator  it  =  options.requiresOptions().iterator();  it.hasNext();)  {	  ListIterator    it    =    options.requiresOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
82	[BUG]  [BUGGY]  ListIterator  it  =  options.getRequiresOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  ListIterator  it  =  options.getRequiresOptions().iterator();  it.hasNext();)  {  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	ListIterator  it  =  options.getRequiresOptions().iterator();  it.hasNext();)  {	  ListIterator    it    =    options.requiresOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
83	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getOptionGroups().next();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getOptionGroups().next();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =(OptionGroup)opt.getOptionGroups().next();	  OptionGroup    group    =(OptionGroup)options.getOptionGroups().next();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
84	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)options.getOptionGroups().get(0);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =(OptionGroup)options.getOptionGroups().get(0);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =(OptionGroup)options.getOptionGroups().get(0);	  OptionGroup    group    =(OptionGroup)options.getOptionGroups().next();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
85	[BUG]  [BUGGY]  for(Iterator  it  =  option.optionsRequired().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  option.optionsRequired().iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  option.optionsRequired().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.optionsRequired().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
86	[BUG]  [BUGGY]  for(Iterator  it  =  opt.optionsRequired().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  opt.optionsRequired().iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  opt.optionsRequired().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.optionsRequired().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
87	[BUG]  [BUGGY]  for(Iterator  it  =  options.opts.getOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  options.opts.getOptions().iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  options.opts.getOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.options.getOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
88	[BUG]  [BUGGY]  for(Iterator  it  =  opt.options.getOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  opt.options.getOptions().iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  opt.options.getOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.options.getOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
89	[BUG]  [BUGGY]  Option  option  =  options.getOption(str);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =  options.getOption(str);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =  options.getOption(str);	  Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
90	[BUG]  [BUGGY]  Option  option  =  options.getOptions(t);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =  options.getOptions(t);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =  options.getOptions(t);	  Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
91	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup(options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =  option.getOptionGroup(options);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =  option.getOptionGroup(options);	  OptionGroup    group    =    opt.getOptionGroup(options);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
92	[BUG]  [BUGGY]  Option  option  =(Option)option.get();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =(Option)option.get();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =(Option)option.get();	  Option    option    =(Option)opt.get();    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
93	[BUG]  [BUGGY]  Option  option  =(Option)opt.get(0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =(Option)opt.get(0);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =(Option)opt.get(0);	  Option    option    =(Option)opt.get();    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
94	[BUG]  [BUGGY]  Option[]  options  =  option.options();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option[]  options  =  option.options();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option[]  options  =  option.options();	  Option[]    options    =    opt.options();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
95	[BUG]  [BUGGY]  Option[]  options  =  opt.opts();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option[]  options  =  opt.opts();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option[]  options  =  opt.opts();	  Option[]    options    =    opt.options();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
96	[BUG]  [BUGGY]  Option[]  options  =  options.options();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option[]  options  =  options.options();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option[]  options  =  options.options();	  Option[]    options    =    opt.options();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
97	[BUG]  [BUGGY]  Option  option  =  opt.getOption(str);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =  opt.getOption(str);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =  opt.getOption(str);	  Option    option    =    opt.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
98	[BUG]  [BUGGY]  Option  option  =  opt.getOption(t,  str);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =  opt.getOption(t,  str);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =  opt.getOption(t,  str);	  Option    option    =    opt.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
99	[BUG]  [BUGGY]  Option  option  =  t.getOption(opt);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =  t.getOption(opt);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =  t.getOption(opt);	  Option    option    =    opt.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
100	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroups();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =  options.getGroups();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =  options.getGroups();	  OptionGroup    group    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
101	[BUG]  [BUGGY]  OptionGroup  group  =  opt.getOptionGroups();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =  opt.getOptionGroups();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =  opt.getOptionGroups();	  OptionGroup    group    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
102	[BUG]  [BUGGY]  options  =(Option)opt.clone();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  options  =(Option)opt.clone();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	options  =(Option)opt.clone();	  Option    option    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
103	[BUG]  [BUGGY]  for(Iterator  it  =  option.getOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  option.getOptions().iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  option.getOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    opt.getOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
104	[BUG]  [BUGGY]  Option[]  options  =  opt.clone();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option[]  options  =  opt.clone();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option[]  options  =  opt.clone();	  Option[]    options    =    opt.cloneOptions();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
105	[BUG]  [BUGGY]  Option[]  options  =  opt.cloneAllOptions();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option[]  options  =  opt.cloneAllOptions();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option[]  options  =  opt.cloneAllOptions();	  Option[]    options    =    opt.cloneOptions();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
106	[BUG]  [BUGGY]  OptionGroup  group  =  opt.getOptionGroup(false);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =  opt.getOptionGroup(false);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =  opt.getOptionGroup(false);	  OptionGroup    group    =    opt.getOptionGroup(true);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
107	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(true);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =  options.getOptionGroup(true);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =  options.getOptionGroup(true);	  OptionGroup    group    =    opt.getOptionGroup(true);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
108	[BUG]  [BUGGY]  Option  option  =  opt.getOptions();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =  opt.getOptions();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =  opt.getOptions();	  Option    option    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
109	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroups();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =  options.getOptionGroups();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =  options.getOptionGroups();	  Option    option    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
110	[BUG]  [BUGGY]  Option  option  =  options.getOptionValues();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =  options.getOptionValues();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =  options.getOptionValues();	  Option    option    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
111	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getOptionGroups().iterator();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getOptionGroups().iterator();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =(OptionGroup)opt.getOptionGroups().iterator();	  OptionGroup    group    =(OptionGroup)options.getOptionGroups().iterator();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
112	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)options.getGroups().iterator();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =(OptionGroup)options.getGroups().iterator();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =(OptionGroup)options.getGroups().iterator();	  OptionGroup    group    =(OptionGroup)options.getOptionGroups().iterator();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
113	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)options.getSelectedOptions().iterator();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =(OptionGroup)options.getSelectedOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =(OptionGroup)options.getSelectedOptions().iterator();	  OptionGroup    group    =(OptionGroup)options.getOptionGroups().iterator();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
114	[BUG]  [BUGGY]  Option  option  =(Option)opt.getAssignedValue();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =(Option)opt.getAssignedValue();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =(Option)opt.getAssignedValue();	  Option    option    =(Option)opt.getKey();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
115	[BUG]  [BUGGY]  Option  option  =(Option)opt.getOptionGroups().iterator();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =(Option)opt.getOptionGroups().iterator();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =(Option)opt.getOptionGroups().iterator();	  Option    option    =(Option)options.getOptionGroups().iterator();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
116	[BUG]  [BUGGY]  Option  option  =(Option)options.getOptionValues().iterator();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =(Option)options.getOptionValues().iterator();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =(Option)options.getOptionValues().iterator();	  Option    option    =(Option)options.getOptionGroups().iterator();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
117	[BUG]  [BUGGY]  Option  option  =(Option)options.getOptionStructures().iterator();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =(Option)options.getOptionStructures().iterator();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =(Option)options.getOptionStructures().iterator();	  Option    option    =(Option)options.getOptionGroups().iterator();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
118	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)options.getValue();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =(OptionGroup)options.getValue();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =(OptionGroup)options.getValue();	  OptionGroup    group    =(OptionGroup)options.getSelected();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
119	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)options.getSelectedValue();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =(OptionGroup)options.getSelectedValue();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =(OptionGroup)options.getSelectedValue();	  OptionGroup    group    =(OptionGroup)options.getSelected();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
120	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroups(opt);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =  options.getOptionGroups(opt);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =  options.getOptionGroups(opt);	  OptionGroup    group    =    options.getOptionGroup(null);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
121	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup(null);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =  option.getOptionGroup(null);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =  option.getOptionGroup(null);	  OptionGroup    group    =    options.getOptionGroup(null);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
122	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  null,  t);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =  options.getOption(opt,  null,  t);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =  options.getOption(opt,  null,  t);	  Option    option    =    options.getOption(opt,    null);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
123	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  null,  false);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =  options.getOption(opt,  null,  false);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =  options.getOption(opt,  null,  false);	  Option    option    =    options.getOption(opt,    null);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
124	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  this);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =  options.getOption(opt,  this);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =  options.getOption(opt,  this);	  Option    option    =    options.getOption(opt,    null);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
125	[BUG]  [BUGGY]  Option  option  =  opt.getOption(options);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =  opt.getOption(options);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =  opt.getOption(options);	  Option    option    =    options.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
126	[BUG]  [BUGGY]  Option  option  =  options.getOption(opts);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =  options.getOption(opts);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =  options.getOption(opts);	  Option    option    =    options.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
127	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getStructure();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getStructure();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =(OptionGroup)opt.getStructure();	  OptionGroup    group    =(OptionGroup)opt.getImplicitStructure();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
128	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)option.getImplicitStructure();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =(OptionGroup)option.getImplicitStructure();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =(OptionGroup)option.getImplicitStructure();	  OptionGroup    group    =(OptionGroup)opt.getImplicitStructure();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
129	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)option.get();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =(OptionGroup)option.get();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =(OptionGroup)option.get();	  OptionGroup    group    =(OptionGroup)opt.get();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
130	[BUG]  [BUGGY]  Option  group  =(OptionGroup)opt.get();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  group  =(OptionGroup)opt.get();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  group  =(OptionGroup)opt.get();	  OptionGroup    group    =(OptionGroup)opt.get();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
131	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)options.get();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =(OptionGroup)options.get();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =(OptionGroup)options.get();	  OptionGroup    group    =(OptionGroup)opt.get();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
132	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  null,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =  options.getOption(opt,  null,  requiredOptions);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =  options.getOption(opt,  null,  requiredOptions);	  Option    option    =    options.getOption(opt,    null);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
133	[BUG]  [BUGGY]  for(Iterator  it  =  options.addArguments().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  options.addArguments().iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  options.addArguments().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.addOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
134	[BUG]  [BUGGY]  for(Iterator  it  =  options.requiredOptionsRequired().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  options.requiredOptionsRequired().iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  options.requiredOptionsRequired().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.optionsRequired().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
135	[BUG]  [BUGGY]  Option  option  =(Option)opt.getOptionValue();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =(Option)opt.getOptionValue();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =(Option)opt.getOptionValue();	  Option    option    =(Option)opt.getKey();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
136	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)opt.get(0);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =(OptionGroup)opt.get(0);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =(OptionGroup)opt.get(0);	  OptionGroup    group    =(OptionGroup)opt.get();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
137	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)options.getValueGroup();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =(OptionGroup)options.getValueGroup();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =(OptionGroup)options.getValueGroup();	  OptionGroup    group    =(OptionGroup)options.next();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
138	[BUG]  [BUGGY]  Option  group  =(OptionGroup)options.getRequiredOptions().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  group  =(OptionGroup)options.getRequiredOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  group  =(OptionGroup)options.getRequiredOptions().iterator();	  Option    group    =(OptionGroup)options.getOptionGroups().iterator();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
139	[BUG]  [BUGGY]  Option  group  =(OptionGroup)options.getArguments().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  group  =(OptionGroup)options.getArguments().iterator();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  group  =(OptionGroup)options.getArguments().iterator();	  Option    group    =(OptionGroup)options.getOptionGroups().iterator();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
140	[BUG]  [BUGGY]  for(Iterator  it  =  neededOptions.iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  neededOptions.iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  neededOptions.iterator();  it.hasNext();)  {	  for(Iterator    it    =    opt.requireOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
141	[BUG]  [BUGGY]  Iterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Iterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Iterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {	  Iterator    it    =    options.getOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
142	[BUG]  [BUGGY]  OptionsGroup  group  =(OptionGroup)option.clone();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionsGroup  group  =(OptionGroup)option.clone();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionsGroup  group  =(OptionGroup)option.clone();	  OptionsGroup    group    =(OptionGroup)opt.clone();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
143	[BUG]  [BUGGY]  Option  option  =(Option)options.getOptionOptions().iterator();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =(Option)options.getOptionOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =(Option)options.getOptionOptions().iterator();	  Option    option    =(Option)options.getOptionGroups().iterator();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
144	[BUG]  [BUGGY]  Option  option  =(Option)options.getOptionTools().iterator();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =(Option)options.getOptionTools().iterator();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =(Option)options.getOptionTools().iterator();	  Option    option    =(Option)options.getOptionGroups().iterator();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
145	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)options.getOptionGroups().clone();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =(OptionGroup)options.getOptionGroups().clone();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =(OptionGroup)options.getOptionGroups().clone();	  OptionGroup    group    =(OptionGroup)options.clone();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
146	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =  options.getOptionGroup(options);	  OptionGroup    group    =    options.getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
147	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =(OptionGroup)it.next();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Iterator  <  Option>  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =(OptionGroup)it.next();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Iterator  <  Option>  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =(OptionGroup)it.next();	  Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    group    =(OptionGroup)it.next();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
148	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  group  =(OptionGroup)it.next();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Iterator  <  Option>  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  group  =(OptionGroup)it.next();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Iterator  <  Option>  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  group  =(OptionGroup)it.next();	  Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    group    =(OptionGroup)it.next();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
149	[BUG]  [BUGGY]  Option  group  =(OptionGroup)options.getOptionGroups();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  group  =(OptionGroup)options.getOptionGroups();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  group  =(OptionGroup)options.getOptionGroups();	  Option    group    =(OptionGroup)options.getSelected();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
150	[BUG]  [BUGGY]  for(Iterator  it  =  options.requiredOptions.getRequiredOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  options.requiredOptions.getRequiredOptions().iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  options.requiredOptions.getRequiredOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.options.getRequiredOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
151	[BUG]  [BUGGY]  Option  group  =(OptionGroup)opt.getImplicitStructure();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  group  =(OptionGroup)opt.getImplicitStructure();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  group  =(OptionGroup)opt.getImplicitStructure();	  OptionGroup    group    =(OptionGroup)opt.getImplicitStructure();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
152	[BUG]  [BUGGY]  option  =(Option)opt.clone();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  option  =(Option)opt.clone();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	option  =(Option)opt.clone();	  Option    option    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
153	[BUG]  [BUGGY]  Option[]  options  =  options.cloneOptions();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option[]  options  =  options.cloneOptions();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option[]  options  =  options.cloneOptions();	  Option[]    options    =    opt.cloneOptions();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
154	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)options.getOptionGroups().get(opt);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =(OptionGroup)options.getOptionGroups().get(opt);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =(OptionGroup)options.getOptionGroups().get(opt);	  OptionGroup    group    =(OptionGroup)options.getOptionGroups().next();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
155	[BUG]  [BUGGY]  Option  group  =(OptionGroup)options.getValueList();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  group  =(OptionGroup)options.getValueList();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  group  =(OptionGroup)options.getValueList();	  Option    group    =(OptionGroup)options.getValue();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
156	[BUG]  [BUGGY]  ListIterator  it  =  options.requiredOptions().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  ListIterator  it  =  options.requiredOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	ListIterator  it  =  options.requiredOptions().iterator();	  ListIterator    it    =    options.getRequiredOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
157	[BUG]  [BUGGY]  Option  group  =(OptionGroup)options.getOptionGroups().get(opt);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  group  =(OptionGroup)options.getOptionGroups().get(opt);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  group  =(OptionGroup)options.getOptionGroups().get(opt);	  Option    group    =(OptionGroup)options.getOptionGroups().next();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
158	[BUG]  [BUGGY]  Option[]  options  =  options.optOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option[]  options  =  options.optOptions();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option[]  options  =  options.optOptions();	  Option[]    options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
159	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroup(opt);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =  options.getOptionGroup(opt);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =  options.getOptionGroup(opt);	  Option    option    =    options.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
160	[BUG]  [BUGGY]  Option  option  =  options.getOptions(opt);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =  options.getOptions(opt);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =  options.getOptions(opt);	  Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
161	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)options.getOptionGroups();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =(OptionGroup)options.getOptionGroups();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =(OptionGroup)options.getOptionGroups();	  OptionGroup    group    =(OptionGroup)options.getSelected();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
162	[BUG]  [BUGGY]  for(Iterator  it  =  optionOptions.optionsRequireOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  optionOptions.optionsRequireOptions().iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  optionOptions.optionsRequireOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.optionsRequireOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
163	[BUG]  [BUGGY]  OptionGroup  group  =  opt.getOptionGroup(true,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =  opt.getOptionGroup(true,  stopAtNonOption);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =  opt.getOptionGroup(true,  stopAtNonOption);	  OptionGroup    group    =    opt.getOptionGroup(true);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
164	[BUG]  [BUGGY]  for(Iterator  it  =  options.optOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  options.optOptions().iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  options.optOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    opt.getOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
165	[BUG]  [BUGGY]  Option  option  =  opt.getOption(null);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =  opt.getOption(null);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =  opt.getOption(null);	  Option    option    =    opt.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
166	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)options.getRequiredOptions().iterator();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =(OptionGroup)options.getRequiredOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =(OptionGroup)options.getRequiredOptions().iterator();	  OptionGroup    group    =(OptionGroup)options.getOptionGroups().iterator();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
167	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)options.getOptionGroups().remove(opt);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =(OptionGroup)options.getOptionGroups().remove(opt);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =(OptionGroup)options.getOptionGroups().remove(opt);	  OptionGroup    group    =(OptionGroup)options.getOptionGroups().iterator();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
168	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroups().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =  option.getOptionGroups().iterator();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =  option.getOptionGroups().iterator();	  OptionGroup    group    =    options.getOptionGroups().iterator();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
169	[BUG]  [BUGGY]  for(Iterator  it  =  options.optsRequiredOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  options.optsRequiredOptions().iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  options.optsRequiredOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.optionsRequiredOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
170	[BUG]  [BUGGY]  Option  group  =(Option)options.getRequiredOptions().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  group  =(Option)options.getRequiredOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  group  =(Option)options.getRequiredOptions().iterator();	  Option    group    =(Option)options.getGroups().iterator();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
171	[BUG]  [BUGGY]  for(Iterator  it  =  options.options.getOptionGroups().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  options.options.getOptionGroups().iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  options.options.getOptionGroups().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.options.getOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
172	[BUG]  [BUGGY]  for(Iterator  it  =  option.options.getOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  option.options.getOptions().iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  option.options.getOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.options.getOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
173	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getAssignmentGroup();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getAssignmentGroup();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =(OptionGroup)opt.getAssignmentGroup();	  OptionGroup    group    =(OptionGroup)opt.getGroup();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
174	[BUG]  [BUGGY]  Option  option  =(Option)options.clone();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =(Option)options.clone();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =(Option)options.clone();	  Option    option    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
175	[BUG]  [BUGGY]  Option  group  =(OptionGroup)this.options.getSelected();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  group  =(OptionGroup)this.options.getSelected();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  group  =(OptionGroup)this.options.getSelected();	  Option    group    =(OptionGroup)options.getSelected();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
176	[BUG]  [BUGGY]  Option  group  =(OptionGroup)options.getOptionGroup();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  group  =(OptionGroup)options.getOptionGroup();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  group  =(OptionGroup)options.getOptionGroup();	  Option    group    =(OptionGroup)options.getSelected();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
177	[BUG]  [BUGGY]  Option  group  =(OptionGroup)options.getOptionGroups().remove(0);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  group  =(OptionGroup)options.getOptionGroups().remove(0);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  group  =(OptionGroup)options.getOptionGroups().remove(0);	  Option    group    =(OptionGroup)options.getOptionGroups().next();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
178	[BUG]  [BUGGY]  for(Iterator  it  =  options.allRequiredOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  options.allRequiredOptions().iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  options.allRequiredOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.addRequiredOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
179	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getOptionGroup().iterator();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getOptionGroup().iterator();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =(OptionGroup)opt.getOptionGroup().iterator();	  OptionGroup    group    =(OptionGroup)options.getOptionGroups().iterator();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
180	[BUG]  [BUGGY]  for(Iterator  it  =  options.opts.requireOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  options.opts.requireOptions().iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  options.opts.requireOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.options.requireOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
181	[BUG]  [BUGGY]  for(Iterator  it  =  options.options.clearOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  options.options.clearOptions().iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  options.options.clearOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.options.requireOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
182	[BUG]  [BUGGY]  Option  group  =(OptionGroup)this.options.getValue();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  group  =(OptionGroup)this.options.getValue();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  group  =(OptionGroup)this.options.getValue();	  Option    group    =(OptionGroup)options.getValue();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
183	[BUG]  [BUGGY]  Iterator  <  OptionGroup>  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =(OptionGroup)it.next();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Iterator  <  OptionGroup>  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =(OptionGroup)it.next();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Iterator  <  OptionGroup>  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =(OptionGroup)it.next();	  Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    group    =(OptionGroup)it.next();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
184	[BUG]  [BUGGY]  for(Iterator  it  =  options.options.getRequiresOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  options.options.getRequiresOptions().iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  options.options.getRequiresOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.options.requiresOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
185	[BUG]  [BUGGY]  for(Iterator  it  =  options.options.allOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  options.options.allOptions().iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  options.options.allOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.options.requiresOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
186	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  str);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =  options.getOption(opt,  str);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =  options.getOption(opt,  str);	  Option    option    =    options.getOption(opt,    t);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
187	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)options.getOptionGroups().remove(0);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =(OptionGroup)options.getOptionGroups().remove(0);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =(OptionGroup)options.getOptionGroups().remove(0);	  OptionGroup    group    =(OptionGroup)options.getOptionGroups().next();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
188	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getSelectedReturn();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getSelectedReturn();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =(OptionGroup)opt.getSelectedReturn();	  OptionGroup    group    =(OptionGroup)opt.getImplicitReturn();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
189	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)this.options.getSelected();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =(OptionGroup)this.options.getSelected();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =(OptionGroup)this.options.getSelected();	  OptionGroup    group    =(OptionGroup)options.getSelected();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
190	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)options.getOptionGroup();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =(OptionGroup)options.getOptionGroup();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =(OptionGroup)options.getOptionGroup();	  OptionGroup    group    =(OptionGroup)options.getSelected();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
191	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Iterator  <  Option>  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Iterator  <  Option>  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {	  Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
192	[BUG]  [BUGGY]  ListIterator  it  =  options.getAllRequiredOptions().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  ListIterator  it  =  options.getAllRequiredOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	ListIterator  it  =  options.getAllRequiredOptions().iterator();	  ListIterator    it    =    options.getRequiredOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
193	[BUG]  [BUGGY]  ListIterator  it  =  options.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  ListIterator  it  =  options.getRequiredOptions();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	ListIterator  it  =  options.getRequiredOptions();	  ListIterator    it    =    options.getRequiredOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
194	[BUG]  [BUGGY]  OptionGroup  group  =  opt.getGroup(t);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =  opt.getGroup(t);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =  opt.getGroup(t);	  OptionGroup    group    =    opt.getOptionGroup(t);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
195	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup(t);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =  option.getOptionGroup(t);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =  option.getOptionGroup(t);	  OptionGroup    group    =    opt.getOptionGroup(t);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
196	[BUG]  [BUGGY]  for(Iterator  it  =  options.options.addOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  options.options.addOptions().iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  options.options.addOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.addOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
197	[BUG]  [BUGGY]  Option  group  =(OptionGroup)options.get();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  group  =(OptionGroup)options.get();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  group  =(OptionGroup)options.get();	  Option    group    =(OptionGroup)options.next();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
198	[BUG]  [BUGGY]  for(Iterator  it  =  options.allRequireOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  options.allRequireOptions().iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  options.allRequireOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.optionsRequireOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
199	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.getOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Iterator  <  Option>  it  =  options.getOptions().iterator();  it.hasNext();)  {  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Iterator  <  Option>  it  =  options.getOptions().iterator();  it.hasNext();)  {	  Iterator    it    =    options.getOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
200	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt.getKey());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt.getKey());  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =  options.getOptionGroup(opt.getKey());	  OptionGroup    group    =    options.getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
201	[BUG]  [BUGGY]  for(Iterator  it  =  neededOptions.requireOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  neededOptions.requireOptions().iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  neededOptions.requireOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    opt.requireOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
202	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  str);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =  options.getOption(t,  str);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =  options.getOption(t,  str);	  Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
203	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroup(t);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =  options.getOptionGroup(t);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =  options.getOptionGroup(t);	  Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
204	[BUG]  [BUGGY]  for(Iterator  it  =  option.requiredOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  for(Iterator  it  =  option.requiredOptions().iterator();  it.hasNext();)  {  [BUGGY]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	for(Iterator  it  =  option.requiredOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    option.getRequiredOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
205	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  null);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  Option  option  =  options.getOption(options,  null);  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	Option  option  =  options.getOption(options,  null);	  Option    option    =    options.getOption(opt,    null);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
206	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)this.options.clone();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }        [BUGGY]  OptionGroup  group  =(OptionGroup)this.options.clone();  [BUGGY]      for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	154	155	1	replace	OptionGroup  group  =(OptionGroup)this.options.clone();	  OptionGroup    group    =(OptionGroup)options.clone();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
