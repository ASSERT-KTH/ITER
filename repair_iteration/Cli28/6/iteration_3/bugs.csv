bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  value  =  getOptions().getOption(option);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  value  =  getOptions().getOption(option);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  value  =  getOptions().getOption(option);	  Option    opt    =    getOptions().getOption(value);    String    value    =    properties.getProperty(option);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
2	[BUG]  [BUGGY]  String  value  =  properties.getProperty(opt.getValue());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  String  value  =  properties.getProperty(opt.getValue());  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	String  value  =  properties.getProperty(opt.getValue());	  String    value    =    properties.getProperty(opt);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
3	[BUG]  [BUGGY]  String  value  =  properties.getProperty(opt.getArg());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  String  value  =  properties.getProperty(opt.getArg());  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	String  value  =  properties.getProperty(opt.getArg());	  String    value    =    properties.getProperty(opt);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
4	[BUG]  [BUGGY]  String  value  =  properties.getValue(opt);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  String  value  =  properties.getValue(opt);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	String  value  =  properties.getValue(opt);	  String    value    =    properties.getProperty(opt);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
5	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(value);  if(opt.hasValue())  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  opt  =  getOptions().getOption(value);  if(opt.hasValue())  {  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  opt  =  getOptions().getOption(value);  if(opt.hasValue())  {	  Option    opt    =    getOptions().getOption(option);    if(opt.hasValue())    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
6	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(opt);  if(opt.hasArg())  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  opt  =  getOptions().getOption(opt);  if(opt.hasArg())  {  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  opt  =  getOptions().getOption(opt);  if(opt.hasArg())  {	  Option    opt    =    getOptions().getOption(option);    if(opt.hasValue())    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
7	[BUG]  [BUGGY]  if(opt.getValues()!=  null  &&  opt.getValues().length  >  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  if(opt.getValues()!=  null  &&  opt.getValues().length  >  0)  {  [BUGGY]      {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	if(opt.getValues()!=  null  &&  opt.getValues().length  >  0)  {	  if(opt.getValues()    ==    null    &&    opt.getValues().length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
8	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(opt);  String  value  =  properties.getProperty(option);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  option  =  getOptions().getOption(opt);  String  value  =  properties.getProperty(option);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  option  =  getOptions().getOption(opt);  String  value  =  properties.getProperty(option);	  Option    option    =    getOptions().getOption(option);    String    value    =    properties.getProperty(option);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
9	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option,  value);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  option  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option,  value);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  option  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option,  value);	  Option    option    =    getOptions().getOption(option);    String    value    =    properties.getProperty(option);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
10	[BUG]  [BUGGY]  Option  option  =  getOption(opt);  String  value  =  properties.getProperty(option);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  option  =  getOption(opt);  String  value  =  properties.getProperty(option);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  option  =  getOption(opt);  String  value  =  properties.getProperty(option);	  Option    option    =    getOptions().getOption(option);    String    value    =    properties.getProperty(option);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
11	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(opt,  value);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  option  =  getOptions().getOption(opt,  value);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  option  =  getOptions().getOption(opt,  value);	  Option    option    =    getOptions().getOption(value);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
12	[BUG]  [BUGGY]  if(opt.getValues()!=  null  &&  opt.getValues().length!=  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  if(opt.getValues()!=  null  &&  opt.getValues().length!=  0)  {  [BUGGY]      {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	if(opt.getValues()!=  null  &&  opt.getValues().length!=  0)  {	  if(opt.getValues()    ==    null    ||    opt.getValues().length!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
13	[BUG]  [BUGGY]  Option  cmd  =  getOptions().getOption(opt,  value);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  cmd  =  getOptions().getOption(opt,  value);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  cmd  =  getOptions().getOption(opt,  value);	  Option    cmd    =    getOptions().getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
14	[BUG]  [BUGGY]  Option  opt  =  cmd.getOption(value);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  opt  =  cmd.getOption(value);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  opt  =  cmd.getOption(value);	  Option    opt    =    cmd.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
15	[BUG]  [BUGGY]  String  value  =  properties.getStringValue(opt);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  String  value  =  properties.getStringValue(opt);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	String  value  =  properties.getStringValue(opt);	  String    value    =    properties.getStringValue(option);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
16	[BUG]  [BUGGY]  String  value  =  properties.getStringValue(option,  value);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  String  value  =  properties.getStringValue(option,  value);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	String  value  =  properties.getStringValue(option,  value);	  String    value    =    properties.getStringValue(option);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
17	[BUG]  [BUGGY]  String  value  =  properties.getStringValue(option  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  String  value  =  properties.getStringValue(option  +  1);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	String  value  =  properties.getStringValue(option  +  1);	  String    value    =    properties.getStringValue(option);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
18	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(value);  if(opt.hasValue())  {  return;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  opt  =  getOptions().getOption(value);  if(opt.hasValue())  {  return;  }  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  opt  =  getOptions().getOption(value);  if(opt.hasValue())  {  return;  }	  Option    opt    =    getOptions().getOption(option);    if(opt.hasValue())    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
19	[BUG]  [BUGGY]  if(opt.hasValues()  &&  opt.getValues().length  ==  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  if(opt.hasValues()  &&  opt.getValues().length  ==  0)  {  [BUGGY]      {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	if(opt.hasValues()  &&  opt.getValues().length  ==  0)  {	  if(opt.hasValues()    ||    opt.getValues().length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
20	[BUG]  [BUGGY]  if(option.hasValues()  ||  opt.getValues().length  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  if(option.hasValues()  ||  opt.getValues().length  ==  0)  {  [BUGGY]      {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	if(option.hasValues()  ||  opt.getValues().length  ==  0)  {	  if(opt.hasValues()    ||    opt.getValues().length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
21	[BUG]  [BUGGY]  if(opt.hasArg()  ||  opt.getValues().length  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  if(opt.hasArg()  ||  opt.getValues().length  ==  0)  {  [BUGGY]      {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	if(opt.hasArg()  ||  opt.getValues().length  ==  0)  {	  if(opt.hasValues()    ||    opt.getValues().length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
22	[BUG]  [BUGGY]  Option  opt  =  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  opt  =  options.getOption(opt);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  opt  =  options.getOption(opt);	  Option    opt    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
23	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(opt,  value);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  opt  =  getOptions().getOption(opt,  value);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  opt  =  getOptions().getOption(opt,  value);	  Option    opt    =    getOptions().getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
24	[BUG]  [BUGGY]  Option  opt  =  properties.getOption(value);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  opt  =  properties.getOption(value);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  opt  =  properties.getOption(value);	  Option    opt    =    properties.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
25	[BUG]  [BUGGY]  Option  opt  =  cmd.getOption(opt);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  opt  =  cmd.getOption(opt);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  opt  =  cmd.getOption(opt);	  Option    opt    =    properties.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
26	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(value);  if(opt.hasValues())  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  opt  =  getOptions().getOption(value);  if(opt.hasValues())  {  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  opt  =  getOptions().getOption(value);  if(opt.hasValues())  {	  Option    opt    =    getOptions().getOption(option);    if(opt.hasValues())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
27	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(option);  if(opt.hasValues()  ||  opt.hasArg())  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  opt  =  getOptions().getOption(option);  if(opt.hasValues()  ||  opt.hasArg())  {  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  opt  =  getOptions().getOption(option);  if(opt.hasValues()  ||  opt.hasArg())  {	  Option    opt    =    getOptions().getOption(option);    if(opt.hasValues())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
28	[BUG]  [BUGGY]  String  value  =  properties.getProperty(opt,  value);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  String  value  =  properties.getProperty(opt,  value);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	String  value  =  properties.getProperty(opt,  value);	  String    value    =    properties.getProperty(option,    value);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
29	[BUG]  [BUGGY]  String  value  =  properties.getProperty(option,  value)+  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  String  value  =  properties.getProperty(option,  value)+  1;  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	String  value  =  properties.getProperty(option,  value)+  1;	  String    value    =    properties.getProperty(option,    value);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
30	[BUG]  [BUGGY]  String  value  =  properties.getProperty(option,  opt.args);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  String  value  =  properties.getProperty(option,  opt.args);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	String  value  =  properties.getProperty(option,  opt.args);	  String    value    =    properties.getProperty(option,    value);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
31	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(option,  value,  cmd);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  opt  =  getOptions().getOption(option,  value,  cmd);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  opt  =  getOptions().getOption(option,  value,  cmd);	  Option    opt    =    getOptions().getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
32	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(value,  option);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  opt  =  getOptions().getOption(value,  option);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  opt  =  getOptions().getOption(value,  option);	  Option    opt    =    getOptions().getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
33	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(option,  value,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  opt  =  getOptions().getOption(option,  value,  requiredOptions);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  opt  =  getOptions().getOption(option,  value,  requiredOptions);	  Option    opt    =    getOptions().getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
34	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(option,  value,  values);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  opt  =  getOptions().getOption(option,  value,  values);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  opt  =  getOptions().getOption(option,  value,  values);	  Option    opt    =    getOptions().getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
35	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(option,  value,  cmd);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  option  =  getOptions().getOption(option,  value,  cmd);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  option  =  getOptions().getOption(option,  value,  cmd);	  Option    option    =    getOptions().getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
36	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(value,  opt);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  option  =  getOptions().getOption(value,  opt);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  option  =  getOptions().getOption(value,  opt);	  Option    option    =    getOptions().getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
37	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(value,  option);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  option  =  getOptions().getOption(value,  option);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  option  =  getOptions().getOption(value,  option);	  Option    option    =    getOptions().getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
38	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(option,  value);  String  value  =  properties.getProperty(option);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  option  =  getOptions().getOption(option,  value);  String  value  =  properties.getProperty(option);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  option  =  getOptions().getOption(option,  value);  String  value  =  properties.getProperty(option);	  Option    opt    =    getOptions().getOption(option,    value);    String    value    =    properties.getProperty(option);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
39	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(opt);  String  value  =  properties.getProperty(option,  value);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  opt  =  getOptions().getOption(opt);  String  value  =  properties.getProperty(option,  value);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  opt  =  getOptions().getOption(opt);  String  value  =  properties.getProperty(option,  value);	  Option    opt    =    getOptions().getOption(option);    String    value    =    properties.getProperty(option,    value);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
40	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(opt,  value);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(opt,  value);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(opt,  value);	  Option    opt    =    getOptions().getOption(option);    String    value    =    properties.getProperty(option,    value);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
41	[BUG]  [BUGGY]  String  value  =  properties.getValue(option,  value);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  String  value  =  properties.getValue(option,  value);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	String  value  =  properties.getValue(option,  value);	  String    value    =    properties.getValue(option);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
42	[BUG]  [BUGGY]  String  value  =  properties.getValue(option  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  String  value  =  properties.getValue(option  +  1);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	String  value  =  properties.getValue(option  +  1);	  String    value    =    properties.getValue(option);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
43	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(value);  if(opt.hasCmd())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  opt  =  getOptions().getOption(value);  if(opt.hasCmd())  {  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  opt  =  getOptions().getOption(value);  if(opt.hasCmd())  {	  Option    opt    =    getOptions().getOption(option);    if(opt.hasCmd())    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
44	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(value);  if(opt.hasArg())  {  return;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  option  =  getOptions().getOption(value);  if(opt.hasArg())  {  return;  }  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  option  =  getOptions().getOption(value);  if(opt.hasArg())  {  return;  }	  Option    option    =    getOptions().getOption(option);    if(opt.hasArg())    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
45	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(option);  if(opt.hasValue())  {  return;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  option  =  getOptions().getOption(option);  if(opt.hasValue())  {  return;  }  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  option  =  getOptions().getOption(option);  if(opt.hasValue())  {  return;  }	  Option    option    =    getOptions().getOption(option);    if(opt.hasArg())    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
46	[BUG]  [BUGGY]  Option  cmd  =  getOptions().getOption(value,  option);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  cmd  =  getOptions().getOption(value,  option);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  cmd  =  getOptions().getOption(value,  option);	  Option    cmd    =    getOptions().getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
47	[BUG]  [BUGGY]  Option  cmd  =  getOptions().getOption(value,  opt);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  cmd  =  getOptions().getOption(value,  opt);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  cmd  =  getOptions().getOption(value,  opt);	  Option    cmd    =    getOptions().getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
48	[BUG]  [BUGGY]  Option  cmd  =  getOptions().getOption(option,  value,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  cmd  =  getOptions().getOption(option,  value,  requiredOptions);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  cmd  =  getOptions().getOption(option,  value,  requiredOptions);	  Option    cmd    =    getOptions().getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
49	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(option);  if(opt.hasArgument())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  opt  =  getOptions().getOption(option);  if(opt.hasArgument())  {  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  opt  =  getOptions().getOption(option);  if(opt.hasArgument())  {	  Option    opt    =    getOptions().getOption(value);    if(opt.hasArg())    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
50	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(option);  if(opt.hasArg())  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  option  =  getOptions().getOption(option);  if(opt.hasArg())  {  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  option  =  getOptions().getOption(option);  if(opt.hasArg())  {	  Option    opt    =    getOptions().getOption(value);    if(opt.hasArg())    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
51	[BUG]  [BUGGY]  String  value  =  properties.getProperty(option,  value  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  String  value  =  properties.getProperty(option,  value  +  1);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	String  value  =  properties.getProperty(option,  value  +  1);	  String    value    =    properties.getProperty(option,    value);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
52	[BUG]  [BUGGY]  if(option.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  if(option.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [BUGGY]      {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	if(option.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {	  if(opt.getValues()    ==    null    &&    opt.getValues().length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
53	[BUG]  [BUGGY]  String  value  =  properties.getStringValue(value);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  String  value  =  properties.getStringValue(value);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	String  value  =  properties.getStringValue(value);	  String    value    =    properties.getStringValue(option);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
54	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(value,  option);  String  value  =  properties.getProperty(option);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  opt  =  getOptions().getOption(value,  option);  String  value  =  properties.getProperty(option);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  opt  =  getOptions().getOption(value,  option);  String  value  =  properties.getProperty(option);	  Option    opt    =    getOptions().getOption(option,    value);    String    value    =    properties.getProperty(option);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
55	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(option,  value);  if(opt.hasValues())  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  opt  =  getOptions().getOption(option,  value);  if(opt.hasValues())  {  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  opt  =  getOptions().getOption(option,  value);  if(opt.hasValues())  {	  Option    opt    =    getOptions().getOption(option);    if(opt.hasValues())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
56	[BUG]  [BUGGY]  if(opt.hasValues()  ||  opt.getValues().length!=  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  if(opt.hasValues()  ||  opt.getValues().length!=  0)  {  [BUGGY]      {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	if(opt.hasValues()  ||  opt.getValues().length!=  0)  {	  if(opt.hasValues()    ||    opt.getValues().length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
57	[BUG]  [BUGGY]  if(opt.hasValues()  ||  opt.getValues().length  ==  1)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  if(opt.hasValues()  ||  opt.getValues().length  ==  1)  {  [BUGGY]      {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	if(opt.hasValues()  ||  opt.getValues().length  ==  1)  {	  if(opt.hasValues()    ||    opt.getValues().length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
58	[BUG]  [BUGGY]  String  value  =  properties.getProperty(value);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  String  value  =  properties.getProperty(value);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	String  value  =  properties.getProperty(value);	  String    value    =    properties.getProperty(opt);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
59	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(value);  String  value  =  properties.getProperty(option,  value);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  opt  =  getOptions().getOption(value);  String  value  =  properties.getProperty(option,  value);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  opt  =  getOptions().getOption(value);  String  value  =  properties.getProperty(option,  value);	  Option    opt    =    getOptions().getOption(option);    String    value    =    properties.getProperty(option,    value);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
60	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(option,  value);  if(opt.hasValue())  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  opt  =  getOptions().getOption(option,  value);  if(opt.hasValue())  {  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  opt  =  getOptions().getOption(option,  value);  if(opt.hasValue())  {	  Option    opt    =    getOptions().getOption(option);    if(opt.hasValue())    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
61	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(value);  String  value  =  properties.getProperty(option);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  option  =  getOptions().getOption(value);  String  value  =  properties.getProperty(option);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  option  =  getOptions().getOption(value);  String  value  =  properties.getProperty(option);	  Option    option    =    getOptions().getOption(option);    String    value    =    properties.getProperty(option);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
62	[BUG]  [BUGGY]  String  value  =  properties.getStringValue(option)+  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  String  value  =  properties.getStringValue(option)+  1;  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	String  value  =  properties.getStringValue(option)+  1;	  String    value    =    properties.getStringValue(option);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
63	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(option,  value,  options);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  option  =  getOptions().getOption(option,  value,  options);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  option  =  getOptions().getOption(option,  value,  options);	  Option    option    =    getOptions().getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
64	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(option,  value,  opt.hasArg());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  option  =  getOptions().getOption(option,  value,  opt.hasArg());  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  option  =  getOptions().getOption(option,  value,  opt.hasArg());	  Option    option    =    getOptions().getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
65	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(option);  if(opt.hasArg()  ||  opt.hasArg())  {  return;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  option  =  getOptions().getOption(option);  if(opt.hasArg()  ||  opt.hasArg())  {  return;  }  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  option  =  getOptions().getOption(option);  if(opt.hasArg()  ||  opt.hasArg())  {  return;  }	  Option    option    =    getOptions().getOption(option);    if(opt.hasArg())    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
66	[BUG]  [BUGGY]  Option  option  =  options.getOption(value);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  option  =  options.getOption(value);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  option  =  options.getOption(value);	  Option    opt    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
67	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(option);  if(opt.hasNullValues())  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  opt  =  getOptions().getOption(option);  if(opt.hasNullValues())  {  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  opt  =  getOptions().getOption(option);  if(opt.hasNullValues())  {	  Option    opt    =    getOptions().getOption(option);    if(opt.hasValues())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
68	[BUG]  [BUGGY]  Option  cmd  =  getOptions().getOption(option,  value,  properties);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  cmd  =  getOptions().getOption(option,  value,  properties);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  cmd  =  getOptions().getOption(option,  value,  properties);	  Option    cmd    =    getOptions().getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
69	[BUG]  [BUGGY]  Option  cmd  =  getOptions().getOption(option,  value,  options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  cmd  =  getOptions().getOption(option,  value,  options);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  cmd  =  getOptions().getOption(option,  value,  options);	  Option    cmd    =    getOptions().getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
70	[BUG]  [BUGGY]  Option  cmd  =  getOptions().getOption(option,  value,  cmd);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  cmd  =  getOptions().getOption(option,  value,  cmd);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  cmd  =  getOptions().getOption(option,  value,  cmd);	  Option    cmd    =    getOptions().getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
71	[BUG]  [BUGGY]  String  value  =  properties.getValue(option)+  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  String  value  =  properties.getValue(option)+  1;  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	String  value  =  properties.getValue(option)+  1;	  String    value    =    properties.getValue(option);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
72	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(option,  value,  properties);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  opt  =  getOptions().getOption(option,  value,  properties);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  opt  =  getOptions().getOption(option,  value,  properties);	  Option    opt    =    getOptions().getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
73	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(option,  value,  options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  opt  =  getOptions().getOption(option,  value,  options);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  opt  =  getOptions().getOption(option,  value,  options);	  Option    opt    =    getOptions().getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
74	[BUG]  [BUGGY]  String  value  =  properties.getValueForProcessing(option);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  String  value  =  properties.getValueForProcessing(option);  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	String  value  =  properties.getValueForProcessing(option);	  String    value    =    properties.getProperty(opt);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
75	[BUG]  [BUGGY]  String  value  =  properties.getProperty(opt.getKey());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  String  value  =  properties.getProperty(opt.getKey());  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	String  value  =  properties.getProperty(opt.getKey());	  String    value    =    properties.getProperty(opt);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
76	[BUG]  [BUGGY]  String  value  =  properties.getProperty(option,  opt.getValue());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  String  value  =  properties.getProperty(option,  opt.getValue());  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	String  value  =  properties.getProperty(option,  opt.getValue());	  String    value    =    properties.getProperty(option,    value);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
77	[BUG]  [BUGGY]  String  value  =  properties.getProperty(option,  opt.getValues());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  String  value  =  properties.getProperty(option,  opt.getValues());  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	String  value  =  properties.getProperty(option,  opt.getValues());	  String    value    =    properties.getProperty(option,    value);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
78	[BUG]  [BUGGY]  if(opt.hasValues()  ||  opt.getValues().length  ==  2)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  if(opt.hasValues()  ||  opt.getValues().length  ==  2)  {  [BUGGY]      {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	if(opt.hasValues()  ||  opt.getValues().length  ==  2)  {	  if(opt.hasValues()    ||    opt.getValues().length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
79	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(option);  if(opt.hasValue()  ||  opt.hasArg())  {  return;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  opt  =  getOptions().getOption(option);  if(opt.hasValue()  ||  opt.hasArg())  {  return;  }  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  opt  =  getOptions().getOption(option);  if(opt.hasValue()  ||  opt.hasArg())  {  return;  }	  Option    opt    =    getOptions().getOption(option);    if(opt.hasValue())    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
80	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(option);  if(value!=  null)  {  value  =  properties.getProperty(option);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {      [BUGGY]  Option  opt  =  getOptions().getOption(option);  if(value!=  null)  {  value  =  properties.getProperty(option);  }  [BUGGY]      if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)      {  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	272	273	1	replace	Option  opt  =  getOptions().getOption(option);  if(value!=  null)  {  value  =  properties.getProperty(option);  }	  Option    opt    =    getOptions().getOption(opt);    String    value    =    properties.getProperty(option);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
