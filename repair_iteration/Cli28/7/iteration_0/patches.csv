bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Option  value  =  options.getOption(opt.getValues());  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  [BUGGY]    Option  value  =  options.getOption(opt.getValues());  [BUGGY]  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!( "yes ".equalsIgnoreCase(value)  ||   "true ".equalsIgnoreCase(value)  ||   "1 ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	    Option  value  =  options.getOption(opt.getValues());		non-compiled	[CE]  illegal  start  of  type	15	None	add
2	[BUG]  [BUGGY]    Option  value  =(Option)opt.getValues().get(0);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  [BUGGY]    Option  value  =(Option)opt.getValues().get(0);  [BUGGY]  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!( "yes ".equalsIgnoreCase(value)  ||   "true ".equalsIgnoreCase(value)  ||   "1 ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	    Option  value  =(Option)opt.getValues().get(0);		non-compiled	[CE]  illegal  start  of  type	15	None	add
3	[BUG]  [BUGGY]    Option  option  =  options.getOption(opt.getValues());  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  [BUGGY]    Option  option  =  options.getOption(opt.getValues());  [BUGGY]  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!( "yes ".equalsIgnoreCase(value)  ||   "true ".equalsIgnoreCase(value)  ||   "1 ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	    Option  option  =  options.getOption(opt.getValues());		non-compiled	[CE]  illegal  start  of  type	15	None	add
4	[BUG]  [BUGGY]    Option  value  =  options.get(opt.getValues());  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  [BUGGY]    Option  value  =  options.get(opt.getValues());  [BUGGY]  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!( "yes ".equalsIgnoreCase(value)  ||   "true ".equalsIgnoreCase(value)  ||   "1 ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	    Option  value  =  options.get(opt.getValues());		non-compiled	[CE]  illegal  start  of  type	15	None	add
5	[BUG]  [BUGGY]    Option  value  =  options.getOption(opt.getValue());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  [BUGGY]    Option  value  =  options.getOption(opt.getValue());  [BUGGY]  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!( "yes ".equalsIgnoreCase(value)  ||   "true ".equalsIgnoreCase(value)  ||   "1 ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	    Option  value  =  options.getOption(opt.getValue());		non-compiled	[CE]  illegal  start  of  type	15	None	add
6	[BUG]  [BUGGY]  opt.addValue(value);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  [BUGGY]  opt.addValue(value);  [BUGGY]  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!( "yes ".equalsIgnoreCase(value)  ||   "true ".equalsIgnoreCase(value)  ||   "1 ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.addValue(value);	opt.addValueForProcessing(value);  	non-compiled	[CE]  illegal  start  of  type	14	None	replace
7	[BUG]  [BUGGY]  options.addValueForProcessing(value);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  [BUGGY]  options.addValueForProcessing(value);  [BUGGY]  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!( "yes ".equalsIgnoreCase(value)  ||   "true ".equalsIgnoreCase(value)  ||   "1 ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	options.addValueForProcessing(value);	opt.addValueForProcessing(value);  	non-compiled	[CE]  illegal  start  of  type	14	None	replace
8	[BUG]  [BUGGY]  option.addValueForProcessing(value);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  [BUGGY]  option.addValueForProcessing(value);  [BUGGY]  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!( "yes ".equalsIgnoreCase(value)  ||   "true ".equalsIgnoreCase(value)  ||   "1 ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	option.addValueForProcessing(value);	opt.addValueForProcessing(value);  	non-compiled	[CE]  illegal  start  of  type	14	None	replace
9	[BUG]  [BUGGY]    Option  opt  =  options.getOption(opt.getValues());  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  [BUGGY]    Option  opt  =  options.getOption(opt.getValues());  [BUGGY]  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!( "yes ".equalsIgnoreCase(value)  ||   "true ".equalsIgnoreCase(value)  ||   "1 ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	    Option  opt  =  options.getOption(opt.getValues());		non-compiled	[CE]  illegal  start  of  type	15	None	add
10	[BUG]  [BUGGY]    Option  option  =  options.getOption(opt.getValues(),  value);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  [BUGGY]    Option  option  =  options.getOption(opt.getValues(),  value);  [BUGGY]  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!( "yes ".equalsIgnoreCase(value)  ||   "true ".equalsIgnoreCase(value)  ||   "1 ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	    Option  option  =  options.getOption(opt.getValues(),  value);		non-compiled	[CE]  illegal  start  of  type	15	None	add
11	[BUG]  [BUGGY]  opt.addValueForProcessing(value,  value);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  [BUGGY]  opt.addValueForProcessing(value,  value);  [BUGGY]  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!( "yes ".equalsIgnoreCase(value)  ||   "true ".equalsIgnoreCase(value)  ||   "1 ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.addValueForProcessing(value,  value);	opt.addValueForProcessing(value);  	non-compiled	[CE]  illegal  start  of  type	14	None	replace
12	[BUG]  [BUGGY]  opt.addValueForProcessing(value,  true);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  [BUGGY]  opt.addValueForProcessing(value,  true);  [BUGGY]  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!( "yes ".equalsIgnoreCase(value)  ||   "true ".equalsIgnoreCase(value)  ||   "1 ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.addValueForProcessing(value,  true);	opt.addValueForProcessing(value);  	non-compiled	[CE]  illegal  start  of  type	14	None	replace
13	[BUG]  [BUGGY]    Option  value  =  options.getValue(opt.getKey());  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  [BUGGY]    Option  value  =  options.getValue(opt.getKey());  [BUGGY]  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!( "yes ".equalsIgnoreCase(value)  ||   "true ".equalsIgnoreCase(value)  ||   "1 ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	    Option  value  =  options.getValue(opt.getKey());		non-compiled	[CE]  illegal  start  of  type	15	None	add
14	[BUG]  [BUGGY]    Option  option  =  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  [BUGGY]    Option  option  =  options.getOption(opt);  [BUGGY]  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!( "yes ".equalsIgnoreCase(value)  ||   "true ".equalsIgnoreCase(value)  ||   "1 ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	    Option  option  =  options.getOption(opt);		non-compiled	[CE]  illegal  start  of  type	15	None	add
