bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  value  =  options.getOption(opt.getValue(),  true);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  value  =  options.getOption(opt.getValue(),  true);  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getOption(opt.getValue(),  true);	      Option    value    =    options.getOption(opt.getValue());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
2	[BUG]  [BUGGY]  Option  value  =  opt.getOption(options.getValue());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  value  =  opt.getOption(options.getValue());  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  opt.getOption(options.getValue());	      Option    value    =    options.getOption(opt.getValue());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
3	[BUG]  [BUGGY]  Option  value  =  options.getOption(opt.getKey());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  value  =  options.getOption(opt.getKey());  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getOption(opt.getKey());	      Option    value    =    options.getOption(opt.getValue());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
4	[BUG]  [BUGGY]  Option  value  =  options.getOption(opt.getValues(),  true);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  value  =  options.getOption(opt.getValues(),  true);  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getOption(opt.getValues(),  true);	      Option    value    =    options.getOption(opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
5	[BUG]  [BUGGY]  Option  value  =  options.getOption(opt.getValues(),  false);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  value  =  options.getOption(opt.getValues(),  false);  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getOption(opt.getValues(),  false);	      Option    value    =    options.getOption(opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
6	[BUG]  [BUGGY]  Option  value  =  opt.getOption(options.getValues());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  value  =  opt.getOption(options.getValues());  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  opt.getOption(options.getValues());	      Option    value    =    options.getOption(opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
7	[BUG]  [BUGGY]  Option  option  =  opt.getOption(option);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  option  =  opt.getOption(option);  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  opt.getOption(option);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
8	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  value);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  option  =  options.getOption(opt,  value);  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt,  value);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
9	[BUG]  [BUGGY]  Option  option  =  opt.getOption(options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  option  =  opt.getOption(options);  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  opt.getOption(options);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
10	[BUG]  [BUGGY]  opt.addValueForProcessing(value,  values);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  opt.addValueForProcessing(value,  values);  [BUGGY]    }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.addValueForProcessing(value,  values);	  opt.addValueForProcessing(value,    value);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
11	[BUG]  [BUGGY]  option.addValueForProcessing(value,  value);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  option.addValueForProcessing(value,  value);  [BUGGY]    }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	option.addValueForProcessing(value,  value);	  opt.addValueForProcessing(value,    value);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
12	[BUG]  [BUGGY]  opt.addValueForProcessing(value,  expression);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  opt.addValueForProcessing(value,  expression);  [BUGGY]    }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.addValueForProcessing(value,  expression);	  opt.addValueForProcessing(value,    value);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
13	[BUG]  [BUGGY]  Option  value  =  options.get(opt.getValues(),  true);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  value  =  options.get(opt.getValues(),  true);  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.get(opt.getValues(),  true);	      Option    value    =    options.get(opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
14	[BUG]  [BUGGY]  Option  value  =  options.get(opt.getValues(),  false);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  value  =  options.get(opt.getValues(),  false);  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.get(opt.getValues(),  false);	      Option    value    =    options.get(opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
15	[BUG]  [BUGGY]  Option  value  =  options.get(opt.getValues(),  null);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  value  =  options.get(opt.getValues(),  null);  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.get(opt.getValues(),  null);	      Option    value    =    options.get(opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
16	[BUG]  [BUGGY]  option.addValueForProcessing(opt);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  option.addValueForProcessing(opt);  [BUGGY]    }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	option.addValueForProcessing(opt);	  option.addValueForProcessing(value);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
17	[BUG]  [BUGGY]  option.addValueForProcessing(opt,  value);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  option.addValueForProcessing(opt,  value);  [BUGGY]    }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	option.addValueForProcessing(opt,  value);	  option.addValueForProcessing(value);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
18	[BUG]  [BUGGY]  opt.addValue(value,  value);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  opt.addValue(value,  value);  [BUGGY]    }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.addValue(value,  value);	  opt.addValue(value);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
19	[BUG]  [BUGGY]  opt.setValue(value);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  opt.setValue(value);  [BUGGY]    }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.setValue(value);	  opt.addValue(value);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
20	[BUG]  [BUGGY]  option.addValue(value);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  option.addValue(value);  [BUGGY]    }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	option.addValue(value);	  opt.addValue(value);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
21	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  values);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  values);  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getValues(),  values);	      Option    option    =    options.getOption(opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
22	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  true);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  true);  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getValues(),  true);	      Option    option    =    options.getOption(opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
23	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  value,  requiredOptions);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  value,  requiredOptions);  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getValues(),  value,  requiredOptions);	      Option    option    =    options.getOption(opt.getValues(),    value);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
24	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  value,  exp);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  value,  exp);  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getValues(),  value,  exp);	      Option    option    =    options.getOption(opt.getValues(),    value);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
25	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  value,  null);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  value,  null);  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getValues(),  value,  null);	      Option    option    =    options.getOption(opt.getValues(),    value);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
26	[BUG]  [BUGGY]  Option  opt  =  options.getOption(opt.getValues(),  value);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  opt  =  options.getOption(opt.getValues(),  value);  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  opt  =  options.getOption(opt.getValues(),  value);	      Option    opt    =    options.getOption(opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
27	[BUG]  [BUGGY]  Option  opt  =  options.getOption(opt.getValues(),  values);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  opt  =  options.getOption(opt.getValues(),  values);  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  opt  =  options.getOption(opt.getValues(),  values);	      Option    opt    =    options.getOption(opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
28	[BUG]  [BUGGY]  Option  opt  =  options.getOption(opt.getValues()  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  opt  =  options.getOption(opt.getValues()  +  1);  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  opt  =  options.getOption(opt.getValues()  +  1);	      Option    opt    =    options.getOption(opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
29	[BUG]  [BUGGY]  Option  value  =  opt.getValue(option.getKey());  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  value  =  opt.getValue(option.getKey());  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  opt.getValue(option.getKey());	      Option    value    =    options.getValue(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
30	[BUG]  [BUGGY]  Option  value  =  options.getValue(opt.getValue());  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  value  =  options.getValue(opt.getValue());  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getValue(opt.getValue());	      Option    value    =    options.getValue(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
31	[BUG]  [BUGGY]  Option  value  =  options.getValue(opt.getKey(),  true);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  value  =  options.getValue(opt.getKey(),  true);  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getValue(opt.getKey(),  true);	      Option    value    =    options.getValue(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
32	[BUG]  [BUGGY]  options.addValueForProcessing(opt);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  options.addValueForProcessing(opt);  [BUGGY]    }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	options.addValueForProcessing(opt);	  options.addValueForProcessing(value);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
33	[BUG]  [BUGGY]  options.addValueForProcessing(opt,  value);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  options.addValueForProcessing(opt,  value);  [BUGGY]    }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	options.addValueForProcessing(opt,  value);	  options.addValueForProcessing(value);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
34	[BUG]  [BUGGY]  options.addValue(opt.getValues());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  options.addValue(opt.getValues());  [BUGGY]    }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	options.addValue(opt.getValues());	  options.addValueForProcessing(value);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
35	[BUG]  [BUGGY]  opt.addValueForProcessing(value,  false);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  opt.addValueForProcessing(value,  false);  [BUGGY]    }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.addValueForProcessing(value,  false);	  opt.addValueForProcessing(value,    true);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
36	[BUG]  [BUGGY]  opt.addValueForProcessing(option,  true);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  opt.addValueForProcessing(option,  true);  [BUGGY]    }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.addValueForProcessing(option,  true);	  opt.addValueForProcessing(value,    true);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
37	[BUG]  [BUGGY]  option.addValueForProcessing(value,  true);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  option.addValueForProcessing(value,  true);  [BUGGY]    }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	option.addValueForProcessing(value,  true);	  opt.addValueForProcessing(value,    true);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
38	[BUG]  [BUGGY]  Option  value  =(Option)opt.getValues().get(1);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  value  =(Option)opt.getValues().get(1);  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =(Option)opt.getValues().get(1);	      Option    value    =(Option)opt.getValues().get(0);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
39	[BUG]  [BUGGY]  Option  value  =(Option)opt.getValues().iterator().next();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  value  =(Option)opt.getValues().iterator().next();  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =(Option)opt.getValues().iterator().next();	      Option    value    =(Option)opt.getValues().get(0);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
40	[BUG]  [BUGGY]  Option  value  =(Option)opt.getValues().get(2);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  value  =(Option)opt.getValues().get(2);  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =(Option)opt.getValues().get(2);	      Option    value    =(Option)opt.getValues().get(0);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
41	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  value,  false);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  value,  false);  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getValues(),  value,  false);	      Option    option    =    options.getOption(opt.getValues(),    value);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
42	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  opt.getValues());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  opt.getValues());  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getValues(),  opt.getValues());	      Option    option    =    options.getOption(opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
43	[BUG]  [BUGGY]  Option  value  =  options.getOption(opt.getValue(),  opt.getValues());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  value  =  options.getOption(opt.getValue(),  opt.getValues());  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getOption(opt.getValue(),  opt.getValues());	      Option    value    =    options.getOption(opt.getValue());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
44	[BUG]  [BUGGY]  Option  value  =  options.getOption(opt.getValue(),  opt.hasArg());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  value  =  options.getOption(opt.getValue(),  opt.hasArg());  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getOption(opt.getValue(),  opt.hasArg());	      Option    value    =    options.getOption(opt.getValue());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
45	[BUG]  [BUGGY]  option.addValueForProcessing(value,  opt.getValues());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  option.addValueForProcessing(value,  opt.getValues());  [BUGGY]    }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	option.addValueForProcessing(value,  opt.getValues());	  option.addValueForProcessing(value);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
46	[BUG]  [BUGGY]  opt.addValueForProcessing(value,  properties);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  opt.addValueForProcessing(value,  properties);  [BUGGY]    }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.addValueForProcessing(value,  properties);	  opt.addValueForProcessing(value,    value);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
47	[BUG]  [BUGGY]  opt.addValueForProcessing(value,  option);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  opt.addValueForProcessing(value,  option);  [BUGGY]    }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.addValueForProcessing(value,  option);	  opt.addValueForProcessing(value,    value);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
48	[BUG]  [BUGGY]  Option  value  =  options.getValue(opt.getKey(),  opt.getValues());  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  value  =  options.getValue(opt.getKey(),  opt.getValues());  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getValue(opt.getKey(),  opt.getValues());	      Option    value    =    options.getValue(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
49	[BUG]  [BUGGY]  Option  value  =  options.getValue(opt.getValue(),  opt.getValues());  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  value  =  options.getValue(opt.getValue(),  opt.getValues());  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getValue(opt.getValue(),  opt.getValues());	      Option    value    =    options.getValue(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
50	[BUG]  [BUGGY]  Option  value  =  options.getOption(opt.getValues(),  opt.getValues());  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  value  =  options.getOption(opt.getValues(),  opt.getValues());  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getOption(opt.getValues(),  opt.getValues());	      Option    value    =    options.getOption(opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
51	[BUG]  [BUGGY]  Option  value  =  options.getOption(opt.getValues(),  null);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  value  =  options.getOption(opt.getValues(),  null);  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getOption(opt.getValues(),  null);	      Option    value    =    options.getOption(opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
52	[BUG]  [BUGGY]  opt.getValues().add(value);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  opt.getValues().add(value);  [BUGGY]    }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.getValues().add(value);	  opt.addValue(value);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
53	[BUG]  [BUGGY]  opt.addValueForProcessing(value,  null);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  opt.addValueForProcessing(value,  null);  [BUGGY]    }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.addValueForProcessing(value,  null);	  opt.addValueForProcessing(value,    true);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
54	[BUG]  [BUGGY]  Option  value  =  options.get(opt.getValues(),  opt.getValues());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  value  =  options.get(opt.getValues(),  opt.getValues());  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.get(opt.getValues(),  opt.getValues());	      Option    value    =    options.get(opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
55	[BUG]  [BUGGY]  Option  value  =  options.get(opt.getValues()  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  value  =  options.get(opt.getValues()  -  1);  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.get(opt.getValues()  -  1);	      Option    value    =    options.get(opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
56	[BUG]  [BUGGY]  Option  option  =  options.getOption(value);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  option  =  options.getOption(value);  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(value);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
57	[BUG]  [BUGGY]  Option  opt  =  options.getOption(opt.getKey());  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  opt  =  options.getOption(opt.getKey());  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  opt  =  options.getOption(opt.getKey());	      Option    opt    =    options.getOption(opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
58	[BUG]  [BUGGY]  options.addValueForProcessing(opt.getValues());  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  options.addValueForProcessing(opt.getValues());  [BUGGY]    }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	options.addValueForProcessing(opt.getValues());	  options.addValueForProcessing(value);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
59	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  null);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  null);  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getValues(),  null);	      Option    option    =    options.getOption(opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
60	[BUG]  [BUGGY]  Option  value  =(Option)option.getValues().get(0);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  value  =(Option)option.getValues().get(0);  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =(Option)option.getValues().get(0);	      Option    value    =(Option)opt.getValues().get(0);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
61	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getKey());  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  option  =  options.getOption(opt.getKey());  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getKey());	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
62	[BUG]  [BUGGY]  opt.addValueForProcessing(value,  true,  value);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  opt.addValueForProcessing(value,  true,  value);  [BUGGY]    }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.addValueForProcessing(value,  true,  value);	  opt.addValueForProcessing(value,    true);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
63	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  opt.getValues().length);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {    [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  opt.getValues().length);  [BUGGY]    opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getValues(),  opt.getValues().length);	      Option    option    =    options.getOption(opt.getValues(),    value);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
