bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  value  =  options.getOption(opt.getValue(),  opt.getValues(),  requiredOptions);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getOption(opt.getValue(),  opt.getValues(),  requiredOptions);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getOption(opt.getValue(),  opt.getValues(),  requiredOptions);	  Option    value    =    options.getOption(opt.getValue(),    opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
2	[BUG]  [BUGGY]  Option  value  =  options.getOption(opt.getValue(),  opt.getValues(),  null);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getOption(opt.getValue(),  opt.getValues(),  null);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getOption(opt.getValue(),  opt.getValues(),  null);	  Option    value    =    options.getOption(opt.getValue(),    opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
3	[BUG]  [BUGGY]  Option  value  =  options.getOption(opt.getValue(),  opt.getValues(),  false);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getOption(opt.getValue(),  opt.getValues(),  false);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getOption(opt.getValue(),  opt.getValues(),  false);	  Option    value    =    options.getOption(opt.getValue(),    opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
4	[BUG]  [BUGGY]  Option  value  =  opt.getOption(options.getValues(),  false);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  opt.getOption(options.getValues(),  false);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  opt.getOption(options.getValues(),  false);	  Option    value    =    options.getOption(opt.getValues(),    false);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
5	[BUG]  [BUGGY]  Option  value  =  option.getOption(opt.getValues(),  true);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  option.getOption(opt.getValues(),  true);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  option.getOption(opt.getValues(),  true);	  Option    value    =    options.getOption(opt.getValues(),    false);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
6	[BUG]  [BUGGY]  Option  value  =  options.getOption(options.getValues(),  true);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getOption(options.getValues(),  true);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getOption(options.getValues(),  true);	  Option    value    =    options.getOption(opt.getValues(),    false);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
7	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  opt.getValues().length  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  opt.getValues().length  -  1);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getValues(),  opt.getValues().length  -  1);	  Option    option    =    options.getOption(opt.getValues(),    opt.getValues().length);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
8	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  opt.getValues().length  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  opt.getValues().length  +  1);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getValues(),  opt.getValues().length  +  1);	  Option    option    =    options.getOption(opt.getValues(),    opt.getValues().length);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
9	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  opt.getValues().length  -  2);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  opt.getValues().length  -  2);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getValues(),  opt.getValues().length  -  2);	  Option    option    =    options.getOption(opt.getValues(),    opt.getValues().length);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
10	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  false);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  false);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getValues(),  false);	  Option    option    =    options.getOption(opt.getValues(),    true);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
11	[BUG]  [BUGGY]  Option  option  =  opt.getOption(options.getValues(),  true);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  opt.getOption(options.getValues(),  true);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  opt.getOption(options.getValues(),  true);	  Option    option    =    options.getOption(opt.getValues(),    true);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
12	[BUG]  [BUGGY]  Option  option  =  options.getOption(options.getValues(),  false);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(options.getValues(),  false);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(options.getValues(),  false);	  Option    option    =    options.getOption(opt.getValues(),    true);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
13	[BUG]  [BUGGY]  opt.getValues().add(value,  value);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  opt.getValues().add(value,  value);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.getValues().add(value,  value);	  opt.getValues().add(value);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
14	[BUG]  [BUGGY]  opt.getValues().remove(value);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  opt.getValues().remove(value);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.getValues().remove(value);	  opt.getValues().add(value);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
15	[BUG]  [BUGGY]  opt.getValues().add(option);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  opt.getValues().add(option);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.getValues().add(option);	  opt.getValues().add(value);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
16	[BUG]  [BUGGY]  option.addValueForProcessing(value,  opt);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  option.addValueForProcessing(value,  opt);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	option.addValueForProcessing(value,  opt);	  option.addValueForProcessing(opt,    value);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
17	[BUG]  [BUGGY]  option.addValueForProcessing(opt,  value,  value);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  option.addValueForProcessing(opt,  value,  value);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	option.addValueForProcessing(opt,  value,  value);	  option.addValueForProcessing(opt,    value);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
18	[BUG]  [BUGGY]  option.addValueForProcessing(opt,  value,  exp);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  option.addValueForProcessing(opt,  value,  exp);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	option.addValueForProcessing(opt,  value,  exp);	  option.addValueForProcessing(opt,    value);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
19	[BUG]  [BUGGY]  option.addValueForProcessing(opt,  value,  values);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  option.addValueForProcessing(opt,  value,  values);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	option.addValueForProcessing(opt,  value,  values);	  option.addValueForProcessing(opt,    value);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
20	[BUG]  [BUGGY]  options.addValueForProcessing(option);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  options.addValueForProcessing(option);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	options.addValueForProcessing(option);	  options.addValueForProcessing(opt);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
21	[BUG]  [BUGGY]  Option  option  =  opt.getOption(value);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  opt.getOption(value);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  opt.getOption(value);	  Option    option    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
22	[BUG]  [BUGGY]  Option  opt  =  options.getOption(opt.getValues(),  values,  value);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  opt  =  options.getOption(opt.getValues(),  values,  value);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  opt  =  options.getOption(opt.getValues(),  values,  value);	  Option    opt    =    options.getOption(opt.getValues(),    values);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
23	[BUG]  [BUGGY]  Option  opt  =  options.getOption(opt.getValues(),  values,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  opt  =  options.getOption(opt.getValues(),  values,  requiredOptions);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  opt  =  options.getOption(opt.getValues(),  values,  requiredOptions);	  Option    opt    =    options.getOption(opt.getValues(),    values);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
24	[BUG]  [BUGGY]  Option  value  =  options.getOption(opt.getKey(),  opt.getValues());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getOption(opt.getKey(),  opt.getValues());  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getOption(opt.getKey(),  opt.getValues());	  Option    value    =    options.getOption(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
25	[BUG]  [BUGGY]  Option  value  =  opt.getOption(options.getKey());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  opt.getOption(options.getKey());  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  opt.getOption(options.getKey());	  Option    value    =    options.getOption(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
26	[BUG]  [BUGGY]  Option  opt  =  options.getOption(opt.getValue());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  opt  =  options.getOption(opt.getValue());  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  opt  =  options.getOption(opt.getValue());	  Option    opt    =    options.getOption(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
27	[BUG]  [BUGGY]  Option  opt  =  options.getOption(opt.getKey(),  value);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  opt  =  options.getOption(opt.getKey(),  value);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  opt  =  options.getOption(opt.getKey(),  value);	  Option    opt    =    options.getOption(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
28	[BUG]  [BUGGY]  Option  opt  =  options.getOption(opt.getArg());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  opt  =  options.getOption(opt.getArg());  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  opt  =  options.getOption(opt.getArg());	  Option    opt    =    options.getOption(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
29	[BUG]  [BUGGY]  Option  option  =  opt.getOption(options,  value);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  opt.getOption(options,  value);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  opt.getOption(options,  value);	  Option    option    =    opt.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
30	[BUG]  [BUGGY]  opt.addValueForProcessing(value,  expression,  value);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  opt.addValueForProcessing(value,  expression,  value);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.addValueForProcessing(value,  expression,  value);	  opt.addValueForProcessing(value,    expression);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
31	[BUG]  [BUGGY]  opt.addValueForProcessing(expression,  value);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  opt.addValueForProcessing(expression,  value);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.addValueForProcessing(expression,  value);	  opt.addValueForProcessing(value,    expression);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
32	[BUG]  [BUGGY]  opt.addValueForProcessing(value,  false,  value);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  opt.addValueForProcessing(value,  false,  value);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.addValueForProcessing(value,  false,  value);	  opt.addValueForProcessing(value,    true,    value);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
33	[BUG]  [BUGGY]  opt.addValueForProcessing(value,  true,  false);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  opt.addValueForProcessing(value,  true,  false);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.addValueForProcessing(value,  true,  false);	  opt.addValueForProcessing(value,    true,    value);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
34	[BUG]  [BUGGY]  opt.addValueForProcessing(value,  false,  true);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  opt.addValueForProcessing(value,  false,  true);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.addValueForProcessing(value,  false,  true);	  opt.addValueForProcessing(value,    true,    value);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
35	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getValue());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(opt.getValue());  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getValue());	  Option    option    =    options.getOption(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
36	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getKey(),  value);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(opt.getKey(),  value);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getKey(),  value);	  Option    option    =    options.getOption(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
37	[BUG]  [BUGGY]  Option  option  =  opt.getOption(options.getKey());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  opt.getOption(options.getKey());  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  opt.getOption(options.getKey());	  Option    option    =    options.getOption(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
38	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  value,  exp,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  value,  exp,  requiredOptions);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getValues(),  value,  exp,  requiredOptions);	  Option    option    =    options.getOption(opt.getValues(),    value,    exp);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
39	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  value,  opt.getArguments());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  value,  opt.getArguments());  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getValues(),  value,  opt.getArguments());	  Option    option    =    options.getOption(opt.getValues(),    value,    exp);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
40	[BUG]  [BUGGY]  opt.addValueForProcessing(properties,  value);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  opt.addValueForProcessing(properties,  value);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.addValueForProcessing(properties,  value);	  opt.addValueForProcessing(value,    properties);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
41	[BUG]  [BUGGY]  option.addValueForProcessing(value,  properties);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  option.addValueForProcessing(value,  properties);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	option.addValueForProcessing(value,  properties);	  opt.addValueForProcessing(value,    properties);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
42	[BUG]  [BUGGY]  opt.addValueForProcessing(value,  properties,  exp);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  opt.addValueForProcessing(value,  properties,  exp);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.addValueForProcessing(value,  properties,  exp);	  opt.addValueForProcessing(value,    properties);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
43	[BUG]  [BUGGY]  Option  value  =  options.getValue(opt.getValue(),  opt.getValues(),  null);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getValue(opt.getValue(),  opt.getValues(),  null);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getValue(opt.getValue(),  opt.getValues(),  null);	  Option    value    =    options.getValue(opt.getValue(),    opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
44	[BUG]  [BUGGY]  Option  value  =  options.getValue(opt.getValue(),  opt.getValues(),  requiredOptions);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getValue(opt.getValue(),  opt.getValues(),  requiredOptions);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getValue(opt.getValue(),  opt.getValues(),  requiredOptions);	  Option    value    =    options.getValue(opt.getValue(),    opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
45	[BUG]  [BUGGY]  Option  value  =  options.get(opt.getValues(),  opt.getValues(),  null);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.get(opt.getValues(),  opt.getValues(),  null);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.get(opt.getValues(),  opt.getValues(),  null);	  Option    value    =    options.get(opt.getValues(),    opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
46	[BUG]  [BUGGY]  Option  value  =  options.get(opt.getValues(),  opt.getValues()  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.get(opt.getValues(),  opt.getValues()  +  1);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.get(opt.getValues(),  opt.getValues()  +  1);	  Option    value    =    options.get(opt.getValues(),    opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
47	[BUG]  [BUGGY]  Option  value  =  options.get(opt.getValues(),  opt.getValues(),  requiredOptions);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.get(opt.getValues(),  opt.getValues(),  requiredOptions);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.get(opt.getValues(),  opt.getValues(),  requiredOptions);	  Option    value    =    options.get(opt.getValues(),    opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
48	[BUG]  [BUGGY]  Option  value  =  options.get(opt.getValues().length  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.get(opt.getValues().length  -  1);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.get(opt.getValues().length  -  1);	  Option    value    =    options.get(opt.getValues()    -    1);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
49	[BUG]  [BUGGY]  Option  value  =  options.get(opt.getValues()  *  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.get(opt.getValues()  *  1);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.get(opt.getValues()  *  1);	  Option    value    =    options.get(opt.getValues()    -    1);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
50	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  values,  value);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  values,  value);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getValues(),  values,  value);	  Option    option    =    options.getOption(opt.getValues(),    values);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
51	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  values,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  values,  requiredOptions);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getValues(),  values,  requiredOptions);	  Option    option    =    options.getOption(opt.getValues(),    values);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
52	[BUG]  [BUGGY]  option.addValue(opt.getValues());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  option.addValue(opt.getValues());  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	option.addValue(opt.getValues());	  option.addValue(value);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
53	[BUG]  [BUGGY]  option.addValue(value,  opt.getValues());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  option.addValue(value,  opt.getValues());  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	option.addValue(value,  opt.getValues());	  option.addValue(value);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
54	[BUG]  [BUGGY]  option.addValue(opt.getValues(),  value);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  option.addValue(opt.getValues(),  value);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	option.addValue(opt.getValues(),  value);	  option.addValue(value);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
55	[BUG]  [BUGGY]  opt.addValueForProcessing(value,  null,  exp);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  opt.addValueForProcessing(value,  null,  exp);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.addValueForProcessing(value,  null,  exp);	  opt.addValueForProcessing(value,    null);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
56	[BUG]  [BUGGY]  opt.addValueForProcessing(value,  null,  value);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  opt.addValueForProcessing(value,  null,  value);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.addValueForProcessing(value,  null,  value);	  opt.addValueForProcessing(value,    null);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
57	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  value,  null,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  value,  null,  requiredOptions);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getValues(),  value,  null,  requiredOptions);	  Option    option    =    options.getOption(opt.getValues(),    value,    null);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
58	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  value,  this);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  value,  this);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getValues(),  value,  this);	  Option    option    =    options.getOption(opt.getValues(),    value,    null);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
59	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  value,  opt.null);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  value,  opt.null);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getValues(),  value,  opt.null);	  Option    option    =    options.getOption(opt.getValues(),    value,    null);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
60	[BUG]  [BUGGY]  opt.addValueForProcessing(option,  false);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  opt.addValueForProcessing(option,  false);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.addValueForProcessing(option,  false);	  opt.addValueForProcessing(option,    true);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
61	[BUG]  [BUGGY]  opt.addValueForProcessing(opt,  true);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  opt.addValueForProcessing(opt,  true);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.addValueForProcessing(opt,  true);	  opt.addValueForProcessing(option,    true);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
62	[BUG]  [BUGGY]  opt.addValueForProcessing(option,  true,  value);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  opt.addValueForProcessing(option,  true,  value);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.addValueForProcessing(option,  true,  value);	  opt.addValueForProcessing(option,    true);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
63	[BUG]  [BUGGY]  Option  value  =  options.getValue(opt.getKey(),  false);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getValue(opt.getKey(),  false);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getValue(opt.getKey(),  false);	  Option    value    =    options.getValue(opt.getKey(),    true);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
64	[BUG]  [BUGGY]  Option  value  =  opt.getValue(opt.getKey(),  true);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  opt.getValue(opt.getKey(),  true);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  opt.getValue(opt.getKey(),  true);	  Option    value    =    options.getValue(opt.getKey(),    true);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
65	[BUG]  [BUGGY]  Option  value  =  opt.getValue(option.getKey(),  true);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  opt.getValue(option.getKey(),  true);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  opt.getValue(option.getKey(),  true);	  Option    value    =    options.getValue(opt.getKey(),    true);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
66	[BUG]  [BUGGY]  Option  value  =  opt.getValue(options.getKey(),  true);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  opt.getValue(options.getKey(),  true);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  opt.getValue(options.getKey(),  true);	  Option    value    =    options.getValue(opt.getKey(),    true);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
67	[BUG]  [BUGGY]  Option  value  =  options.getOption(opt.getValues(),  null,  requiredOptions);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getOption(opt.getValues(),  null,  requiredOptions);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getOption(opt.getValues(),  null,  requiredOptions);	  Option    value    =    options.getOption(opt.getValues(),    null);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
68	[BUG]  [BUGGY]  Option  value  =  null.getOption(opt.getValues(),  null);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  null.getOption(opt.getValues(),  null);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  null.getOption(opt.getValues(),  null);	  Option    value    =    options.getOption(opt.getValues(),    null);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
69	[BUG]  [BUGGY]  Option  value  =  options.getOption(opt.getValue(),  false);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getOption(opt.getValue(),  false);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getOption(opt.getValue(),  false);	  Option    value    =    options.getOption(opt.getValue(),    true);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
70	[BUG]  [BUGGY]  Option  value  =  opt.getOption(options.getValue(),  true);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  opt.getOption(options.getValue(),  true);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  opt.getOption(options.getValue(),  true);	  Option    value    =    options.getOption(opt.getValue(),    true);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
71	[BUG]  [BUGGY]  Option  value  =  option.getOption(opt.getValue(),  false);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  option.getOption(opt.getValue(),  false);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  option.getOption(opt.getValue(),  false);	  Option    value    =    options.getOption(opt.getValue(),    true);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
72	[BUG]  [BUGGY]  Option  value  =  opt.getOption(opt.getValue(),  true);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  opt.getOption(opt.getValue(),  true);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  opt.getOption(opt.getValue(),  true);	  Option    value    =    options.getOption(opt.getValue(),    true);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
73	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  opt.getValues(),  value);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  opt.getValues(),  value);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getValues(),  opt.getValues(),  value);	  Option    option    =    options.getOption(opt.getValues(),    opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
74	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  opt.getValues()  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  opt.getValues()  +  1);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getValues(),  opt.getValues()  +  1);	  Option    option    =    options.getOption(opt.getValues(),    opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
75	[BUG]  [BUGGY]  opt.addValueForProcessing(option,  value);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  opt.addValueForProcessing(option,  value);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.addValueForProcessing(option,  value);	  opt.addValueForProcessing(value,    option);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
76	[BUG]  [BUGGY]  opt.addValueForProcessing(value,  options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  opt.addValueForProcessing(value,  options);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.addValueForProcessing(value,  options);	  opt.addValueForProcessing(value,    option);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
77	[BUG]  [BUGGY]  Option  value  =  options.getValue(opt.getKey(),  opt.getValues(),  null);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getValue(opt.getKey(),  opt.getValues(),  null);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getValue(opt.getKey(),  opt.getValues(),  null);	  Option    value    =    options.getValue(opt.getKey(),    opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
78	[BUG]  [BUGGY]  Option  value  =  options.getValue(opt.getKey(),  opt.getValues(),  requiredOptions);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getValue(opt.getKey(),  opt.getValues(),  requiredOptions);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getValue(opt.getKey(),  opt.getValues(),  requiredOptions);	  Option    value    =    options.getValue(opt.getKey(),    opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
79	[BUG]  [BUGGY]  Option  value  =  opt.getValue(opt.getKey(),  options.getValues());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  opt.getValue(opt.getKey(),  options.getValues());  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  opt.getValue(opt.getKey(),  options.getValues());	  Option    value    =    options.getValue(opt.getKey(),    opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
80	[BUG]  [BUGGY]  options.addValueForProcessing(value,  opt);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  options.addValueForProcessing(value,  opt);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	options.addValueForProcessing(value,  opt);	  options.addValueForProcessing(opt,    value);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
81	[BUG]  [BUGGY]  options.addValueForProcessing(opt,  value,  exp);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  options.addValueForProcessing(opt,  value,  exp);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	options.addValueForProcessing(opt,  value,  exp);	  options.addValueForProcessing(opt,    value);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
82	[BUG]  [BUGGY]  options.addValueForProcessing(opt,  value,  value);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  options.addValueForProcessing(opt,  value,  value);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	options.addValueForProcessing(opt,  value,  value);	  options.addValueForProcessing(opt,    value);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
83	[BUG]  [BUGGY]  options.addValueForProcessing(opt,  value,  values);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  options.addValueForProcessing(opt,  value,  values);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	options.addValueForProcessing(opt,  value,  values);	  options.addValueForProcessing(opt,    value);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
84	[BUG]  [BUGGY]  options.addValueForProcessing(opt.getValues(),  value);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  options.addValueForProcessing(opt.getValues(),  value);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	options.addValueForProcessing(opt.getValues(),  value);	  options.addValueForProcessing(opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
85	[BUG]  [BUGGY]  options.addValueForProcessing(opt,  opt.getValues());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  options.addValueForProcessing(opt,  opt.getValues());  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	options.addValueForProcessing(opt,  opt.getValues());	  options.addValueForProcessing(opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
86	[BUG]  [BUGGY]  opt.setValue(value,  value);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  opt.setValue(value,  value);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.setValue(value,  value);	  opt.setValue(value);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
87	[BUG]  [BUGGY]  option.setValue(value);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  option.setValue(value);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	option.setValue(value);	  opt.setValue(value);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
88	[BUG]  [BUGGY]  options.setValue(value);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  options.setValue(value);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	options.setValue(value);	  opt.setValue(value);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
89	[BUG]  [BUGGY]  options.addValue(opt.getValues(),  value);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  options.addValue(opt.getValues(),  value);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	options.addValue(opt.getValues(),  value);	  options.addValue(opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
90	[BUG]  [BUGGY]  options.addValue(opt.getValues()  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  options.addValue(opt.getValues()  +  1);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	options.addValue(opt.getValues()  +  1);	  options.addValue(opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
91	[BUG]  [BUGGY]  option.addValueForProcessing(value,  false);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  option.addValueForProcessing(value,  false);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	option.addValueForProcessing(value,  false);	  opt.addValueForProcessing(value,    false);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
92	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  value,  true);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  value,  true);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getValues(),  value,  true);	  Option    option    =    options.getOption(opt.getValues(),    value,    false);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
93	[BUG]  [BUGGY]  Option  option  =  opt.getOption(options.getValues(),  value,  true);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  opt.getOption(options.getValues(),  value,  true);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  opt.getOption(options.getValues(),  value,  true);	  Option    option    =    options.getOption(opt.getValues(),    value,    false);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
94	[BUG]  [BUGGY]  Option  value  =  opt.getOption(opt.getValues());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  opt.getOption(opt.getValues());  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  opt.getOption(opt.getValues());	  Option    value    =    opt.getOption(options.getValues());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
95	[BUG]  [BUGGY]  Option  value  =  opt.getOption(options,  opt.getValues());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  opt.getOption(options,  opt.getValues());  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  opt.getOption(options,  opt.getValues());	  Option    value    =    opt.getOption(options.getValues());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
96	[BUG]  [BUGGY]  option.addValueForProcessing(value,  values);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  option.addValueForProcessing(value,  values);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	option.addValueForProcessing(value,  values);	  opt.addValueForProcessing(value,    values);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
97	[BUG]  [BUGGY]  Option  value  =  options.getOption(opt.getValues(),  opt.getValues(),  requiredOptions);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getOption(opt.getValues(),  opt.getValues(),  requiredOptions);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getOption(opt.getValues(),  opt.getValues(),  requiredOptions);	  Option    value    =    options.getOption(opt.getValues(),    opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
98	[BUG]  [BUGGY]  Option  value  =  options.getOption(opt.getValues(),  opt.getValues(),  null);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getOption(opt.getValues(),  opt.getValues(),  null);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getOption(opt.getValues(),  opt.getValues(),  null);	  Option    value    =    options.getOption(opt.getValues(),    opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
99	[BUG]  [BUGGY]  Option  value  =  options.getOption(opt.getValues(),  opt.getValues()  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getOption(opt.getValues(),  opt.getValues()  +  1);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getOption(opt.getValues(),  opt.getValues()  +  1);	  Option    value    =    options.getOption(opt.getValues(),    opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
100	[BUG]  [BUGGY]  option.addValueForProcessing(opt,  value.getValues());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  option.addValueForProcessing(opt,  value.getValues());  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	option.addValueForProcessing(opt,  value.getValues());	  option.addValueForProcessing(value,    opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
101	[BUG]  [BUGGY]  option.addValueForProcessing(value,  opt.getValues(),  value);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  option.addValueForProcessing(value,  opt.getValues(),  value);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	option.addValueForProcessing(value,  opt.getValues(),  value);	  option.addValueForProcessing(value,    opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
102	[BUG]  [BUGGY]  option.addValueForProcessing(value,  opt.getValues(),  exp);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  option.addValueForProcessing(value,  opt.getValues(),  exp);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	option.addValueForProcessing(value,  opt.getValues(),  exp);	  option.addValueForProcessing(value,    opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
103	[BUG]  [BUGGY]  Option  opt  =  options.getOption(opt.getValues(),  value,  requiredOptions);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  opt  =  options.getOption(opt.getValues(),  value,  requiredOptions);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  opt  =  options.getOption(opt.getValues(),  value,  requiredOptions);	  Option    opt    =    options.getOption(opt.getValues(),    value);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
104	[BUG]  [BUGGY]  Option  opt  =  options.getOption(opt.getValues(),  value,  values);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  opt  =  options.getOption(opt.getValues(),  value,  values);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  opt  =  options.getOption(opt.getValues(),  value,  values);	  Option    opt    =    options.getOption(opt.getValues(),    value);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
105	[BUG]  [BUGGY]  Option  opt  =  options.getOption(value.getValues(),  opt);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  opt  =  options.getOption(value.getValues(),  opt);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  opt  =  options.getOption(value.getValues(),  opt);	  Option    opt    =    options.getOption(opt.getValues(),    value);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
106	[BUG]  [BUGGY]  option.addValueForProcessing(opt,  true);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  option.addValueForProcessing(opt,  true);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	option.addValueForProcessing(opt,  true);	  option.addValueForProcessing(value,    true);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
107	[BUG]  [BUGGY]  Option  value  =  opt.getValue(options.getValue());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  opt.getValue(options.getValue());  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  opt.getValue(options.getValue());	  Option    value    =    options.getValue(opt.getValue());    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
108	[BUG]  [BUGGY]  Option  value  =  opt.getValue(option.getValue());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  opt.getValue(option.getValue());  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  opt.getValue(option.getValue());	  Option    value    =    options.getValue(opt.getValue());    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
109	[BUG]  [BUGGY]  Option  value  =  options.getValue(opt.getValue(),  true);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getValue(opt.getValue(),  true);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getValue(opt.getValue(),  true);	  Option    value    =    options.getValue(opt.getValue());    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
110	[BUG]  [BUGGY]  Option  value  =  opt.getOption(options.getValues(),  true);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  opt.getOption(options.getValues(),  true);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  opt.getOption(options.getValues(),  true);	  Option    value    =    options.getOption(opt.getValues(),    true);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
111	[BUG]  [BUGGY]  Option  value  =  option.getOption(opt.getValues(),  false);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  option.getOption(opt.getValues(),  false);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  option.getOption(opt.getValues(),  false);	  Option    value    =    options.getOption(opt.getValues(),    true);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
112	[BUG]  [BUGGY]  Option  value  =  options.getOption(opt.getValue(),  opt.getValues().length);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getOption(opt.getValue(),  opt.getValues().length);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getOption(opt.getValue(),  opt.getValues().length);	  Option    value    =    options.getOption(opt.getValue(),    opt.hasArg());    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
113	[BUG]  [BUGGY]  Option  value  =  opt.getOption(opt.getValue(),  options.hasArg());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  opt.getOption(opt.getValue(),  options.hasArg());  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  opt.getOption(opt.getValue(),  options.hasArg());	  Option    value    =    options.getOption(opt.getValue(),    opt.hasArg());    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
114	[BUG]  [BUGGY]  Option  value  =  options.getOption(opt.getValue(),  opt.getType());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getOption(opt.getValue(),  opt.getType());  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getOption(opt.getValue(),  opt.getType());	  Option    value    =    options.getOption(opt.getValue(),    opt.hasArg());    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
115	[BUG]  [BUGGY]  option.addValue(value,  value);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  option.addValue(value,  value);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	option.addValue(value,  value);	  opt.addValue(value,    value);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
116	[BUG]  [BUGGY]  options.addValue(value,  value);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  options.addValue(value,  value);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	options.addValue(value,  value);	  opt.addValue(value,    value);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
117	[BUG]  [BUGGY]  opt.addValue(value,  0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  opt.addValue(value,  0);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.addValue(value,  0);	  opt.addValue(value,    value);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
118	[BUG]  [BUGGY]  Option  option  =  opt.getOption(option,  value);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  opt.getOption(option,  value);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  opt.getOption(option,  value);	  Option    option    =    opt.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
119	[BUG]  [BUGGY]  Option  option  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(option);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(option);	  Option    option    =    opt.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
120	[BUG]  [BUGGY]  Option  value  =  opt.getValues().get(opt.getValues(),  false);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  opt.getValues().get(opt.getValues(),  false);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  opt.getValues().get(opt.getValues(),  false);	  Option    value    =    options.get(opt.getValues(),    true);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
121	[BUG]  [BUGGY]  Option  value  =  opt.getValues().get(opt.getValues(),  true);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  opt.getValues().get(opt.getValues(),  true);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  opt.getValues().get(opt.getValues(),  true);	  Option    value    =    options.get(opt.getValues(),    true);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
122	[BUG]  [BUGGY]  Option  value  =  option.get(opt.getValues(),  false);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  option.get(opt.getValues(),  false);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  option.get(opt.getValues(),  false);	  Option    value    =    options.get(opt.getValues(),    true);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
123	[BUG]  [BUGGY]  Option  value  =  opt.getOption(opt.getValue());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  opt.getOption(opt.getValue());  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  opt.getOption(opt.getValue());	  Option    value    =    opt.getOption(options.getValue());    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
124	[BUG]  [BUGGY]  Option  value  =  option.getOption(opt.getValue());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  option.getOption(opt.getValue());  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  option.getOption(opt.getValue());	  Option    value    =    opt.getOption(options.getValue());    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
125	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  value,  values);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  value,  values);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getValues(),  value,  values);	  Option    option    =    options.getOption(opt.getValues(),    value,    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
126	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  value,  opt.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  value,  opt.getRequiredOptions());  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getValues(),  value,  opt.getRequiredOptions());	  Option    option    =    options.getOption(opt.getValues(),    value,    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
127	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  value,  properties);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  value,  properties);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getValues(),  value,  properties);	  Option    option    =    options.getOption(opt.getValues(),    value,    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
128	[BUG]  [BUGGY]  Option  value  =  options.get(opt.getValues(),  opt);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.get(opt.getValues(),  opt);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.get(opt.getValues(),  opt);	  Option    value    =    options.get(opt.getValues(),    null);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
129	[BUG]  [BUGGY]  Option  value  =  options.get(opt.getValues(),  opt.null);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.get(opt.getValues(),  opt.null);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.get(opt.getValues(),  opt.null);	  Option    value    =    options.get(opt.getValues(),    null);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
130	[BUG]  [BUGGY]  Option  opt  =  options.getOption(opt.getValues()  /  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  opt  =  options.getOption(opt.getValues()  /  1);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  opt  =  options.getOption(opt.getValues()  /  1);	  Option    opt    =    options.getOption(opt.getValues()    +    1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
131	[BUG]  [BUGGY]  Option  value  =  opt.getValue(opt.getKey());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  opt.getValue(opt.getKey());  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  opt.getValue(opt.getKey());	  Option    value    =    opt.getValue(option.getKey());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
132	[BUG]  [BUGGY]  Option  value  =  opt.getValue(opt.getValue());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  opt.getValue(opt.getValue());  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  opt.getValue(opt.getValue());	  Option    value    =    opt.getValue(option.getKey());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
133	[BUG]  [BUGGY]  Option  value  =  opt.getValue(opt.getValues());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  opt.getValue(opt.getValues());  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  opt.getValue(opt.getValues());	  Option    value    =    opt.getValue(option.getKey());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
134	[BUG]  [BUGGY]  Option  value  =  option.get(opt.getValues(),  true);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  option.get(opt.getValues(),  true);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  option.get(opt.getValues(),  true);	  Option    value    =    options.get(opt.getValues(),    false);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
135	[BUG]  [BUGGY]  Option  value  =  opt.get(options.getValues(),  false);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  opt.get(options.getValues(),  false);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  opt.get(options.getValues(),  false);	  Option    value    =    options.get(opt.getValues(),    false);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
136	[BUG]  [BUGGY]  Option  value  =  opt.getValues().get(false);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  opt.getValues().get(false);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  opt.getValues().get(false);	  Option    value    =    options.get(opt.getValues(),    false);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
137	[BUG]  [BUGGY]  Option  value  =(Option)opt.getValues().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =(Option)opt.getValues().iterator();  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =(Option)opt.getValues().iterator();	  Option    value    =(Option)opt.getValues().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
138	[BUG]  [BUGGY]  Option  value  =(Option)option.getValues().iterator().next();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =(Option)option.getValues().iterator().next();  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =(Option)option.getValues().iterator().next();	  Option    value    =(Option)opt.getValues().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
139	[BUG]  [BUGGY]  Option  value  =(Option)option.getValues().get(1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =(Option)option.getValues().get(1);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =(Option)option.getValues().get(1);	  Option    value    =(Option)option.getValues().get(0);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
140	[BUG]  [BUGGY]  Option  option  =  options.getOption(value,  opt);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(value,  opt);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(value,  opt);	  Option    option    =    options.getOption(opt,    value);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
141	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  value,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(opt,  value,  requiredOptions);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt,  value,  requiredOptions);	  Option    option    =    options.getOption(opt,    value);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
142	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  value,  exp);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(opt,  value,  exp);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt,  value,  exp);	  Option    option    =    options.getOption(opt,    value);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
143	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  value);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(options,  value);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(options,  value);	  Option    option    =    options.getOption(opt,    value);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
144	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  null,  value);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  null,  value);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getValues(),  null,  value);	  Option    option    =    options.getOption(opt.getValues(),    null);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
145	[BUG]  [BUGGY]  Option  option  =  null.getOption(opt.getValues(),  null);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  null.getOption(opt.getValues(),  null);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  null.getOption(opt.getValues(),  null);	  Option    option    =    options.getOption(opt.getValues(),    null);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
146	[BUG]  [BUGGY]  opt.addValue(value,  values);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  opt.addValue(value,  values);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.addValue(value,  values);	  opt.addValue(value,    value);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
147	[BUG]  [BUGGY]  Option  value  =  options.getOption(opt.getValue(),  opt.getArgs());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getOption(opt.getValue(),  opt.getArgs());  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getOption(opt.getValue(),  opt.getArgs());	  Option    value    =    options.getOption(opt.getValue(),    opt.hasArg());    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
148	[BUG]  [BUGGY]  Option  value  =  options.getOption(opt.getValue(),  opt.getName());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getOption(opt.getValue(),  opt.getName());  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getOption(opt.getValue(),  opt.getName());	  Option    value    =    options.getOption(opt.getValue(),    opt.hasArg());    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
149	[BUG]  [BUGGY]  Option  value  =  options.getOption(option.getValues(),  false);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getOption(option.getValues(),  false);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getOption(option.getValues(),  false);	  Option    value    =    options.getOption(opt.getValues(),    true);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
150	[BUG]  [BUGGY]  Option  value  =  options.get(opt.getValues(),  opt.getValues().length);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.get(opt.getValues(),  opt.getValues().length);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.get(opt.getValues(),  opt.getValues().length);	  Option    value    =    options.get(opt.getValues(),    null);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
151	[BUG]  [BUGGY]  Option  value  =  options.getOption(opt.getValue(),  null);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getOption(opt.getValue(),  null);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getOption(opt.getValue(),  null);	  Option    value    =    options.getOption(opt.getValue(),    true);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
152	[BUG]  [BUGGY]  Option  value  =  options.getOption(option.getValue(),  false);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getOption(option.getValue(),  false);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getOption(option.getValue(),  false);	  Option    value    =    options.getOption(opt.getValue(),    true);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
153	[BUG]  [BUGGY]  Option  option  =  options.get(opt.getValues(),  true);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.get(opt.getValues(),  true);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.get(opt.getValues(),  true);	  Option    value    =    options.get(opt.getValues(),    false);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
154	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  value,  opt.getValues().length);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  value,  opt.getValues().length);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getValues(),  value,  opt.getValues().length);	  Option    option    =    options.getOption(opt.getValues(),    value,    exp);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
155	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  opt,  exp);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  opt,  exp);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getValues(),  opt,  exp);	  Option    option    =    options.getOption(opt.getValues(),    value,    exp);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
156	[BUG]  [BUGGY]  Option  opt  =  options.getOption(opt.getValues(),  null);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  opt  =  options.getOption(opt.getValues(),  null);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  opt  =  options.getOption(opt.getValues(),  null);	  Option    opt    =    options.getOption(opt.getValues(),    values);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
157	[BUG]  [BUGGY]  Option  option  =  options.getOption(option.getValues(),  false);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(option.getValues(),  false);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(option.getValues(),  false);	  Option    option    =    options.getOption(opt.getValues(),    true);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
158	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getKey(),  true);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(opt.getKey(),  true);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getKey(),  true);	  Option    option    =    options.getOption(opt.getValues(),    true);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
159	[BUG]  [BUGGY]  Option  value  =  options.getOption(opt.getValue(),  opt.getValues()  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getOption(opt.getValue(),  opt.getValues()  +  1);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getOption(opt.getValue(),  opt.getValues()  +  1);	  Option    value    =    options.getOption(opt.getValue(),    opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
160	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  opt,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  opt,  null);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getValues(),  opt,  null);	  Option    option    =    options.getOption(opt.getValues(),    value,    null);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
161	[BUG]  [BUGGY]  option.addValue(opt);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  option.addValue(opt);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	option.addValue(opt);	  option.addValue(value);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
162	[BUG]  [BUGGY]  Option  value  =  options.getOption(opt.getValues(),  opt);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getOption(opt.getValues(),  opt);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getOption(opt.getValues(),  opt);	  Option    value    =    options.getOption(opt.getValues(),    null);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
163	[BUG]  [BUGGY]  Option  value  =  options.getOption(opt.getValues(),  opt,  null);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getOption(opt.getValues(),  opt,  null);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getOption(opt.getValues(),  opt,  null);	  Option    value    =    options.getOption(opt.getValues(),    null);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
164	[BUG]  [BUGGY]  Option  value  =  options.getOption(opt.getValues(),  this);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getOption(opt.getValues(),  this);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getOption(opt.getValues(),  this);	  Option    value    =    options.getOption(opt.getValues(),    null);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
165	[BUG]  [BUGGY]  option.addValueForProcessing(opt,  opt.getValues());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  option.addValueForProcessing(opt,  opt.getValues());  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	option.addValueForProcessing(opt,  opt.getValues());	  option.addValueForProcessing(value,    opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
166	[BUG]  [BUGGY]  opt.setValues(values);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  opt.setValues(values);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.setValues(values);	  opt.setValue(value);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
167	[BUG]  [BUGGY]  Option  value  =  options.getOption(option.getValues(),  true);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getOption(option.getValues(),  true);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getOption(option.getValues(),  true);	  Option    value    =    options.getOption(opt.getValues(),    false);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
168	[BUG]  [BUGGY]  Option  value  =  options.getValue(opt.getKey(),  opt.getValues()  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getValue(opt.getKey(),  opt.getValues()  +  1);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getValue(opt.getKey(),  opt.getValues()  +  1);	  Option    value    =    options.getValue(opt.getKey(),    opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
169	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getKey(),  opt.getValues());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(opt.getKey(),  opt.getValues());  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getKey(),  opt.getValues());	  Option    option    =    options.getOption(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
170	[BUG]  [BUGGY]  Option  value  =  options.getValue(opt.getKey(),  null);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getValue(opt.getKey(),  null);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getValue(opt.getKey(),  null);	  Option    value    =    options.getValue(opt.getKey(),    true);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
171	[BUG]  [BUGGY]  Option  option  =  options.get(opt.getValues(),  false);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.get(opt.getValues(),  false);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.get(opt.getValues(),  false);	  Option    value    =    options.get(opt.getValues(),    true);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
172	[BUG]  [BUGGY]  Option  value  =  option.getOption(options.getValues());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  option.getOption(options.getValues());  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  option.getOption(options.getValues());	  Option    value    =    opt.getOption(options.getValues());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
173	[BUG]  [BUGGY]  Option  value  =  option.getOption(opt.getValues());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  option.getOption(opt.getValues());  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  option.getOption(opt.getValues());	  Option    value    =    opt.getOption(options.getValues());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
174	[BUG]  [BUGGY]  Option  value  =  option.getOption(options.getValue());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  option.getOption(options.getValue());  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  option.getOption(options.getValue());	  Option    value    =    opt.getOption(options.getValue());    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
175	[BUG]  [BUGGY]  Option  value  =  options.getValue(opt.getValue(),  opt.getOptions());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getValue(opt.getValue(),  opt.getOptions());  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getValue(opt.getValue(),  opt.getOptions());	  Option    value    =    options.getValue(opt.getValue(),    opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
176	[BUG]  [BUGGY]  options.addValue(value,  opt.getValues());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  options.addValue(value,  opt.getValues());  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	options.addValue(value,  opt.getValues());	  options.addValue(opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
177	[BUG]  [BUGGY]  Option  value  =  options.getValue(opt.getOption());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getValue(opt.getOption());  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getValue(opt.getOption());	  Option    value    =    options.getValue(opt.getValue());    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
178	[BUG]  [BUGGY]  Option  value  =  option.getValue(opt.getKey());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  option.getValue(opt.getKey());  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  option.getValue(opt.getKey());	  Option    value    =    opt.getValue(option.getKey());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
179	[BUG]  [BUGGY]  Option  opt  =  options.getOption(opt.getValues(),  value,  null);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  opt  =  options.getOption(opt.getValues(),  value,  null);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  opt  =  options.getOption(opt.getValues(),  value,  null);	  Option    opt    =    options.getOption(opt.getValues(),    value);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
180	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  value,  opt.getValues());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  value,  opt.getValues());  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getValues(),  value,  opt.getValues());	  Option    option    =    options.getOption(opt.getValues(),    value,    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
181	[BUG]  [BUGGY]  Option  value  =  options.get(opt.getValues(),  opt.getOptions());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.get(opt.getValues(),  opt.getOptions());  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.get(opt.getValues(),  opt.getOptions());	  Option    value    =    options.get(opt.getValues(),    opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
182	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  opt);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  opt);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getValues(),  opt);	  Option    option    =    options.getOption(opt.getValues(),    null);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
183	[BUG]  [BUGGY]  Option  option  =  options.getOption(option.getValues(),  value,  true);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(option.getValues(),  value,  true);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(option.getValues(),  value,  true);	  Option    option    =    options.getOption(opt.getValues(),    value,    false);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
184	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  null,  false);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  null,  false);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getValues(),  null,  false);	  Option    option    =    options.getOption(opt.getValues(),    value,    false);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
185	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  opt,  true);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  opt,  true);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getValues(),  opt,  true);	  Option    option    =    options.getOption(opt.getValues(),    value,    false);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
186	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  value,  opt.getValues());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(opt,  value,  opt.getValues());  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt,  value,  opt.getValues());	  Option    option    =    options.getOption(opt,    value);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
187	[BUG]  [BUGGY]  Option  value  =(Option)opt.getValues().entrySet().iterator().next();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =(Option)opt.getValues().entrySet().iterator().next();  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =(Option)opt.getValues().entrySet().iterator().next();	  Option    value    =(Option)opt.getValues().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
188	[BUG]  [BUGGY]  options.addValueForProcessing(opt,  value,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  options.addValueForProcessing(opt,  value,  requiredOptions);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	options.addValueForProcessing(opt,  value,  requiredOptions);	  options.addValueForProcessing(opt,    value);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
189	[BUG]  [BUGGY]  opt.addValueForProcessing(option,  null);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  opt.addValueForProcessing(option,  null);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.addValueForProcessing(option,  null);	  opt.addValueForProcessing(option,    true);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
190	[BUG]  [BUGGY]  opt.getValues().put(value,  value);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  opt.getValues().put(value,  value);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.getValues().put(value,  value);	  opt.getValues().add(value);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
191	[BUG]  [BUGGY]  options.addValue(opt.getKey());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  options.addValue(opt.getKey());  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	options.addValue(opt.getKey());	  options.addValue(opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
192	[BUG]  [BUGGY]  Option  value  =  options.getOption(opt.getValues(),  opt.getValues(),  true);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getOption(opt.getValues(),  opt.getValues(),  true);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getOption(opt.getValues(),  opt.getValues(),  true);	  Option    value    =    options.getOption(opt.getValues(),    opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
193	[BUG]  [BUGGY]  opt.addValueForProcessing(value,  option,  value);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  opt.addValueForProcessing(value,  option,  value);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.addValueForProcessing(value,  option,  value);	  opt.addValueForProcessing(value,    option);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
194	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  opt.getValues(),  null);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(opt.getValues(),  opt.getValues(),  null);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt.getValues(),  opt.getValues(),  null);	  Option    option    =    options.getOption(opt.getValues(),    opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
195	[BUG]  [BUGGY]  Option  value  =  options.getOption(opt.getValues(),  opt.getValues().length);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getOption(opt.getValues(),  opt.getValues().length);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getOption(opt.getValues(),  opt.getValues().length);	  Option    value    =    options.getOption(opt.getValues(),    null);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
196	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  value,  null);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  option  =  options.getOption(opt,  value,  null);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  option  =  options.getOption(opt,  value,  null);	  Option    option    =    options.getOption(opt,    value);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
197	[BUG]  [BUGGY]  Option  value  =  options.get(opt.getValues(),  opt.getValues();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.get(opt.getValues(),  opt.getValues();  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.get(opt.getValues(),  opt.getValues();	  Option    value    =    options.get(opt.getValues(),    opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
198	[BUG]  [BUGGY]  Option  value  =  options.getValue(opt.getKey(),  opt.getValues(),  true);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getValue(opt.getKey(),  opt.getValues(),  true);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getValue(opt.getKey(),  opt.getValues(),  true);	  Option    value    =    options.getValue(opt.getKey(),    opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
199	[BUG]  [BUGGY]  Option  value  =  options.getOption(opt.getValue(),  opt.getKey());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getOption(opt.getValue(),  opt.getKey());  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getOption(opt.getValue(),  opt.getKey());	  Option    value    =    options.getOption(opt.getValue(),    opt.hasArg());    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
200	[BUG]  [BUGGY]  Option  value  =  options.getOption(opt.getValue(),  opt.getValues();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getOption(opt.getValue(),  opt.getValues();  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getOption(opt.getValue(),  opt.getValues();	  Option    value    =    options.getOption(opt.getValue(),    opt.hasArg());    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
201	[BUG]  [BUGGY]  opt.addValueForProcessing(value,  properties,  option);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  opt.addValueForProcessing(value,  properties,  option);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.addValueForProcessing(value,  properties,  option);	  opt.addValueForProcessing(value,    properties);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
202	[BUG]  [BUGGY]  Option  value  =(Option)opt.getValues().iterator(),  opt.getValues().next();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =(Option)opt.getValues().iterator(),  opt.getValues().next();  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =(Option)opt.getValues().iterator(),  opt.getValues().next();	  Option    value    =(Option)opt.getValues().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
203	[BUG]  [BUGGY]  opt.addValueForProcessing(value,  null,  option);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  opt.addValueForProcessing(value,  null,  option);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.addValueForProcessing(value,  null,  option);	  opt.addValueForProcessing(value,    null);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
204	[BUG]  [BUGGY]  opt.addValueForProcessing(value,  expression,  values);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  opt.addValueForProcessing(value,  expression,  values);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.addValueForProcessing(value,  expression,  values);	  opt.addValueForProcessing(value,    expression);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
205	[BUG]  [BUGGY]  option.addValueForProcessing(value,  opt.getValues(),  true);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  option.addValueForProcessing(value,  opt.getValues(),  true);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	option.addValueForProcessing(value,  opt.getValues(),  true);	  option.addValueForProcessing(value,    opt.getValues());    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
206	[BUG]  [BUGGY]  Option  value  =  options.getValue(opt.getValue(),  false);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getValue(opt.getValue(),  false);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getValue(opt.getValue(),  false);	  Option    value    =    options.getValue(opt.getKey(),    true);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
207	[BUG]  [BUGGY]  Option  value  =  options.getValueForProcessing(opt.getValue());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getValueForProcessing(opt.getValue());  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getValueForProcessing(opt.getValue());	  Option    value    =    options.getValue(opt.getValue());    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
208	[BUG]  [BUGGY]  Option  value  =  options.getOption(opt.getKey(),  true);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  Option  value  =  options.getOption(opt.getKey(),  true);  [BUGGY]      opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	Option  value  =  options.getOption(opt.getKey(),  true);	  Option    value    =    options.getOption(opt.getValue(),    true);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
209	[BUG]  [BUGGY]  opt.addValue(value,  null);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  opt.addValue(value,  null);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.addValue(value,  null);	  opt.addValue(value,    value);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
210	[BUG]  [BUGGY]  opt.addValue(value,  true);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {      [BUGGY]  opt.addValue(value,  true);  [BUGGY]      }  catch  (RuntimeException  exp)  {  }  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	276	276	1	replace	opt.addValue(value,  true);	  opt.addValue(value,    value);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
