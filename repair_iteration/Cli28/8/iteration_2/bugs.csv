bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  opt  =  _options.getOption(opt);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  Option  opt  =  _options.getOption(opt);  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  _options.getOption(opt);	      Option    opt    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
2	[BUG]  [BUGGY]  Option  opt  =  option.getOption(opt);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  Option  opt  =  option.getOption(opt);  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  option.getOption(opt);	      Option    opt    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
3	[BUG]  [BUGGY]  Option  opt  =  getOption(options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  Option  opt  =  getOption(options);  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  getOption(options);	      Option    opt    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
4	[BUG]  [BUGGY]  Option  option  =  opts.getOption(option);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  Option  option  =  opts.getOption(option);  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  option  =  opts.getOption(option);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
5	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  value);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  Option  option  =  options.getOption(opt,  value);  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  option  =  options.getOption(opt,  value);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
6	[BUG]  [BUGGY]  Option  option  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  Option  option  =  options.getOption(option);  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  option  =  options.getOption(option);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
7	[BUG]  [BUGGY]  cmd.addOption(option,  value);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  cmd.addOption(option,  value);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addOption(option,  value);	  cmd.addOption(value);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
8	[BUG]  [BUGGY]  if(opt.getOptions().contains(option))  {  for(AssertionFailedError  e  :  opt.getOptions())  {  break;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  if(opt.getOptions().contains(option))  {  for(AssertionFailedError  e  :  opt.getOptions())  {  break;  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	if(opt.getOptions().contains(option))  {  for(AssertionFailedError  e  :  opt.getOptions())  {  break;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
9	[BUG]  [BUGGY]  if(opt.getOptions().isEmpty())  {  for(AssertionFailedError  e  :  opt.getOptions())  {  break;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  if(opt.getOptions().isEmpty())  {  for(AssertionFailedError  e  :  opt.getOptions())  {  break;  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	if(opt.getOptions().isEmpty())  {  for(AssertionFailedError  e  :  opt.getOptions())  {  break;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
10	[BUG]  [BUGGY]  if(opt.getOptions().contains(option))  {  for(AssertionFailedError  e  :  opt.getOptions())  {  break;  }  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  if(opt.getOptions().contains(option))  {  for(AssertionFailedError  e  :  opt.getOptions())  {  break;  }  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	if(opt.getOptions().contains(option))  {  for(AssertionFailedError  e  :  opt.getOptions())  {  break;  }  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
11	[BUG]  [BUGGY]  cmd.addOption(value,  opt);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  cmd.addOption(value,  opt);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addOption(value,  opt);	  cmd.addOption(opt,    value);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
12	[BUG]  [BUGGY]  cmd.addOption(opt,  value,  requiredOptions);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  cmd.addOption(opt,  value,  requiredOptions);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addOption(opt,  value,  requiredOptions);	  cmd.addOption(opt,    value);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
13	[BUG]  [BUGGY]  cmd.addOption(property,  value);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  cmd.addOption(property,  value);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addOption(property,  value);	  cmd.addOption(opt,    value);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
14	[BUG]  [BUGGY]  Option  opt  =  getOption(option);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  Option  opt  =  getOption(option);  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  getOption(option);	      Option    opt    =    getOption(value);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
15	[BUG]  [BUGGY]  Option  opt  =  getOption(properties);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  Option  opt  =  getOption(properties);  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  getOption(properties);	      Option    opt    =    getOption(value);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
16	[BUG]  [BUGGY]  e.printStackTrace(System.err);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  e.printStackTrace(System.err);  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	e.printStackTrace(System.err);	      e.printStackTrace();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
17	[BUG]  [BUGGY]  e.printStackTrace(exp);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  e.printStackTrace(exp);  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	e.printStackTrace(exp);	      e.printStackTrace();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
18	[BUG]  [BUGGY]  e.printStackTrace(System.out);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  e.printStackTrace(System.out);  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	e.printStackTrace(System.out);	      e.printStackTrace();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
19	[BUG]  [BUGGY]  Option  opt  =  options.getOption(value,  value);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  Option  opt  =  options.getOption(value,  value);  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  options.getOption(value,  value);	      Option    opt    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
20	[BUG]  [BUGGY]  Option  opt  =  options.getOption(value)+  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  Option  opt  =  options.getOption(value)+  1;  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  options.getOption(value)+  1;	      Option    opt    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
21	[BUG]  [BUGGY]  Option  opt  =  options.getOption(properties);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  Option  opt  =  options.getOption(properties);  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  options.getOption(properties);	      Option    opt    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
22	[BUG]  [BUGGY]  cmd.addOption(option,  property);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  cmd.addOption(option,  property);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addOption(option,  property);	  cmd.addOption(property);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
23	[BUG]  [BUGGY]  cmd.addValue(option);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  cmd.addValue(option);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addValue(option);	  cmd.addValue(value);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
24	[BUG]  [BUGGY]  cmd.addValue(value,  value);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  cmd.addValue(value,  value);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addValue(value,  value);	  cmd.addValue(value);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
25	[BUG]  [BUGGY]  cmd.addValue(property);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  cmd.addValue(property);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addValue(property);	  cmd.addValue(value);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
26	[BUG]  [BUGGY]  Option  opt  =(Option)this.options.get(value);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  Option  opt  =(Option)this.options.get(value);  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(Option)this.options.get(value);	      Option    opt    =(Option)options.get(value);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
27	[BUG]  [BUGGY]  Option  opt  =(Option)properties.get(value);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  Option  opt  =(Option)properties.get(value);  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(Option)properties.get(value);	      Option    opt    =(Option)options.get(value);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
28	[BUG]  [BUGGY]  Option  opt  =(Option)requiredOptions.get(value);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  Option  opt  =(Option)requiredOptions.get(value);  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(Option)requiredOptions.get(value);	      Option    opt    =(Option)options.get(value);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
29	[BUG]  [BUGGY]  Option  option  =  options.getOption(options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  Option  option  =  options.getOption(options);  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  option  =  options.getOption(options);	      Option    option    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
30	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  value);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  Option  option  =  options.getOption(options,  value);  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  option  =  options.getOption(options,  value);	      Option    option    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
31	[BUG]  [BUGGY]  Option  opt  =(Option)this.options.clone();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  Option  opt  =(Option)this.options.clone();  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(Option)this.options.clone();	      Option    opt    =(Option)options.clone();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
32	[BUG]  [BUGGY]  Option  opt  =(Option)properties.clone();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  Option  opt  =(Option)properties.clone();  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(Option)properties.clone();	      Option    opt    =(Option)options.clone();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
33	[BUG]  [BUGGY]  Option  opt  =(Option)requiredOptions.clone();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  Option  opt  =(Option)requiredOptions.clone();  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(Option)requiredOptions.clone();	      Option    opt    =(Option)options.clone();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
34	[BUG]  [BUGGY]  Option  opt  =(Option)opts.clone();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  Option  opt  =(Option)opts.clone();  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(Option)opts.clone();	      Option    opt    =(Option)options.clone();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
35	[BUG]  [BUGGY]  Option  opt  =  getOption(value)+  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  Option  opt  =  getOption(value)+  1;  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  getOption(value)+  1;	      Option    opt    =    getOption(value);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
36	[BUG]  [BUGGY]  Option  opt  =  getOption(value,  requiredOptions);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  Option  opt  =  getOption(value,  requiredOptions);  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  getOption(value,  requiredOptions);	      Option    opt    =    getOption(value);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
37	[BUG]  [BUGGY]  Option  opt  =  getOption(value,  value);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  Option  opt  =  getOption(value,  value);  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  getOption(value,  value);	      Option    opt    =    getOption(value);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
38	[BUG]  [BUGGY]  Option  opt  =(Option)options.get(value  -  1);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  Option  opt  =(Option)options.get(value  -  1);  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(Option)options.get(value  -  1);	      Option    opt    =(Option)options.get(value);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
39	[BUG]  [BUGGY]  if(opt!=  null)  {  e.printStackTrace();  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  if(opt!=  null)  {  e.printStackTrace();  }  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	if(opt!=  null)  {  e.printStackTrace();  }	      e.printStackTrace();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
40	[BUG]  [BUGGY]  if(opt!=  null)  {  e.printStackTrace();  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  if(opt!=  null)  {  e.printStackTrace();  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	if(opt!=  null)  {  e.printStackTrace();  }  else  {  throw  new  RuntimeException( " ");  }	      e.printStackTrace();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
41	[BUG]  [BUGGY]  Option  opt  =(options!=  null)?  null  :  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  Option  opt  =(options!=  null)?  null  :  options.getOption(opt);  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(options!=  null)?  null  :  options.getOption(opt);	      Option    opt    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
42	[BUG]  [BUGGY]  Option  opt  =(options!=  null)?  options.getOption(opt):  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  Option  opt  =(options!=  null)?  options.getOption(opt):  options.getOption(opt);  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(options!=  null)?  options.getOption(opt):  options.getOption(opt);	      Option    opt    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
43	[BUG]  [BUGGY]  Option  opt  =(options!=  null)?  options.getOption(opt):  options.getOption(value);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  Option  opt  =(options!=  null)?  options.getOption(opt):  options.getOption(value);  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(options!=  null)?  options.getOption(opt):  options.getOption(value);	      Option    opt    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
44	[BUG]  [BUGGY]  Option  opt  =  options.getOption(value,  requiredOptions);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  Option  opt  =  options.getOption(value,  requiredOptions);  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  options.getOption(value,  requiredOptions);	      Option    opt    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
45	[BUG]  [BUGGY]  cmd.addValue(value,  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  cmd.addValue(value,  1);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addValue(value,  1);	  cmd.addValue(value);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
46	[BUG]  [BUGGY]  for(Option  option  :  options.values())  {  if(!(option.equalsIgnoreCase(value)||   "true ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value)))  {  break;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  for(Option  option  :  options.values())  {  if(!(option.equalsIgnoreCase(value)||   "true ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value)))  {  break;  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	for(Option  option  :  options.values())  {  if(!(option.equalsIgnoreCase(value)||   "true ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value)))  {  break;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
47	[BUG]  [BUGGY]  for(Option  option  :  options.values())  {  if(!(option.equalsIgnoreCase(value)||   "false ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value)))  {  break;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  for(Option  option  :  options.values())  {  if(!(option.equalsIgnoreCase(value)||   "false ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value)))  {  break;  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	for(Option  option  :  options.values())  {  if(!(option.equalsIgnoreCase(value)||   "false ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value)))  {  break;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
48	[BUG]  [BUGGY]  for(Option  option  :  options.values())  {  if(!( "yes ".equalsIgnoreCase(value)||   "true ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value)))  {  break;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  for(Option  option  :  options.values())  {  if(!( "yes ".equalsIgnoreCase(value)||   "true ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value)))  {  break;  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	for(Option  option  :  options.values())  {  if(!( "yes ".equalsIgnoreCase(value)||   "true ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value)))  {  break;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
49	[BUG]  [BUGGY]  Option  option  =  options.getOption(key);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  Option  option  =  options.getOption(key);  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  option  =  options.getOption(key);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
50	[BUG]  [BUGGY]  Option  opt  =  getOption(value.toLowerCase());  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  Option  opt  =  getOption(value.toLowerCase());  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  getOption(value.toLowerCase());	      Option    opt    =    getOption(value);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
51	[BUG]  [BUGGY]  Option  opt  =  getOption(value.toString());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  Option  opt  =  getOption(value.toString());  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  getOption(value.toString());	      Option    opt    =    getOption(value);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
52	[BUG]  [BUGGY]  Option  option  =  options.getOption(value,  opt);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  Option  option  =  options.getOption(value,  opt);  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  option  =  options.getOption(value,  opt);	      Option    option    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
53	[BUG]  [BUGGY]  cmd.addValue(value,  option);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  cmd.addValue(value,  option);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addValue(value,  option);	  cmd.addValue(value);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
54	[BUG]  [BUGGY]  e.printStackTrace(processProperties(properties));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  e.printStackTrace(processProperties(properties));  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	e.printStackTrace(processProperties(properties));	      e.printStackTrace();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
55	[BUG]  [BUGGY]  cmd.addOption(opt,  value,  null);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  cmd.addOption(opt,  value,  null);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addOption(opt,  value,  null);	  cmd.addOption(opt,    value);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
56	[BUG]  [BUGGY]  Option  opt  =(options  ==  null)?  options.getOption(opt):  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  Option  opt  =(options  ==  null)?  options.getOption(opt):  options.getOption(opt);  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(options  ==  null)?  options.getOption(opt):  options.getOption(opt);	      Option    opt    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
57	[BUG]  [BUGGY]  Option  opt  =(options  ==  null)?  null  :  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    break;  }    [BUGGY]  Option  opt  =(options  ==  null)?  null  :  options.getOption(opt);  [BUGGY]    cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(options  ==  null)?  null  :  options.getOption(opt);	      Option    opt    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
