bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(AssertionFailedError  e  :  opt.getOptions())  {  break;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  for(AssertionFailedError  e  :  opt.getOptions())  {  break;  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	for(AssertionFailedError  e  :  opt.getOptions())  {  break;  }	  if(opt.getOptions().contains(option))    {    for(AssertionFailedError    e    :    opt.getOptions())    {    break;    }    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
2	[BUG]  [BUGGY]  AssertionFailedError  e  =  opt.getOptions();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  AssertionFailedError  e  =  opt.getOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	AssertionFailedError  e  =  opt.getOptions();	  if(opt.getOptions().contains(option))    {    for(AssertionFailedError    e    :    opt.getOptions())    {    break;    }    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
3	[BUG]  [BUGGY]  For(AssertionFailedError  e  :  opt.getOptions())  {  break;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  For(AssertionFailedError  e  :  opt.getOptions())  {  break;  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	For(AssertionFailedError  e  :  opt.getOptions())  {  break;  }	  if(opt.getOptions().contains(option))    {    for(AssertionFailedError    e    :    opt.getOptions())    {    break;    }    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
4	[BUG]  [BUGGY]  Option  opt  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =  options.getOption(option);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  options.getOption(option);	  if(opt.getOptions().contains(option))    {    for(AssertionFailedError    e    :    opt.getOptions())    {    break;    }    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
5	[BUG]  [BUGGY]  Option  opt  =  getOption(value.toLowerCase(),  value);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =  getOption(value.toLowerCase(),  value);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  getOption(value.toLowerCase(),  value);	  Option    opt    =    getOption(value.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
6	[BUG]  [BUGGY]  Option  opt  =  getOption(value,  value.toLowerCase());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =  getOption(value,  value.toLowerCase());  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  getOption(value,  value.toLowerCase());	  Option    opt    =    getOption(value.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
7	[BUG]  [BUGGY]  Option  opt  =  getOption(value.toUpperCase());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =  getOption(value.toUpperCase());  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  getOption(value.toUpperCase());	  Option    opt    =    getOption(value.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
8	[BUG]  [BUGGY]  cmd.addOption(option,  value,  requiredOptions);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  cmd.addOption(option,  value,  requiredOptions);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addOption(option,  value,  requiredOptions);	  cmd.addOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
9	[BUG]  [BUGGY]  cmd.addOption(value,  option);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  cmd.addOption(value,  option);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addOption(value,  option);	  cmd.addOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
10	[BUG]  [BUGGY]  cmd.addOption(option,  value,  values);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  cmd.addOption(option,  value,  values);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addOption(option,  value,  values);	  cmd.addOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
11	[BUG]  [BUGGY]  cmd.addOption(option,  value,  e);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  cmd.addOption(option,  value,  e);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addOption(option,  value,  e);	  cmd.addOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
12	[BUG]  [BUGGY]  cmd.addOption(property,  opt);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  cmd.addOption(property,  opt);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addOption(property,  opt);	  cmd.addOption(value,    opt);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
13	[BUG]  [BUGGY]  Option  opt  =(Option)properties.get(option);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(Option)properties.get(option);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(Option)properties.get(option);	  Option    opt    =(Option)properties.clone();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
14	[BUG]  [BUGGY]  Option  opt  =(options!=  null)?  options.getOption(value):  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(options!=  null)?  options.getOption(value):  options.getOption(opt);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(options!=  null)?  options.getOption(value):  options.getOption(opt);	  Option    opt    =(options!=    null)?    options.getOption(opt):    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
15	[BUG]  [BUGGY]  Option  opt  =(options  ==  null)?  options.getOption(value):  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(options  ==  null)?  options.getOption(value):  options.getOption(opt);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(options  ==  null)?  options.getOption(value):  options.getOption(opt);	  Option    opt    =(options!=    null)?    options.getOption(opt):    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
16	[BUG]  [BUGGY]  Option  option  =(options!=  null)?  options.getOption(value):  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  option  =(options!=  null)?  options.getOption(value):  options.getOption(opt);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  option  =(options!=  null)?  options.getOption(value):  options.getOption(opt);	  Option    opt    =(options!=    null)?    options.getOption(opt):    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
17	[BUG]  [BUGGY]  Option  option  =(Option)this.options.clone();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  option  =(Option)this.options.clone();  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  option  =(Option)this.options.clone();	  Option    opt    =(Option)this.options.clone();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
18	[BUG]  [BUGGY]  Option  opt  =(Option)properties.get(property);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(Option)properties.get(property);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(Option)properties.get(property);	  Option    opt    =(Option)properties.get(value);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
19	[BUG]  [BUGGY]  Option  opt  =(Option)this.properties.get(value);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(Option)this.properties.get(value);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(Option)this.properties.get(value);	  Option    opt    =(Option)properties.get(value);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
20	[BUG]  [BUGGY]  Option  opt  =(options  ==  null)?  options.getOption(opt):  options.getOption(value);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(options  ==  null)?  options.getOption(opt):  options.getOption(value);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(options  ==  null)?  options.getOption(opt):  options.getOption(value);	  Option    opt    =(options    ==    null)?    options.getOption(opt):    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
21	[BUG]  [BUGGY]  Option  opt  =(opt  ==  null)?  options.getOption(opt):  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(opt  ==  null)?  options.getOption(opt):  options.getOption(opt);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(opt  ==  null)?  options.getOption(opt):  options.getOption(opt);	  Option    opt    =(options    ==    null)?    options.getOption(opt):    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
22	[BUG]  [BUGGY]  e.printStackTrace(processProperties(properties,  opt));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  e.printStackTrace(processProperties(properties,  opt));  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	e.printStackTrace(processProperties(properties,  opt));	  e.printStackTrace(processProperties(properties));    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
23	[BUG]  [BUGGY]  e.printStackTrace(processProperties(properties),  exp);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  e.printStackTrace(processProperties(properties),  exp);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	e.printStackTrace(processProperties(properties),  exp);	  e.printStackTrace(processProperties(properties));    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
24	[BUG]  [BUGGY]  e.printStackTrace(processProperties(options));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  e.printStackTrace(processProperties(options));  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	e.printStackTrace(processProperties(options));	  e.printStackTrace(processProperties(properties));    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
25	[BUG]  [BUGGY]  Option  option  =  options.getOption(value,  value);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  option  =  options.getOption(value,  value);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  option  =  options.getOption(value,  value);	  Option    option    =    options.getOption(value,    opt);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
26	[BUG]  [BUGGY]  Option  option  =  options.getOption(option,  value);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  option  =  options.getOption(option,  value);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  option  =  options.getOption(option,  value);	  Option    option    =    options.getOption(value,    opt);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
27	[BUG]  [BUGGY]  Option  opt  =(Option)requiredOptions.get(option);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(Option)requiredOptions.get(option);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(Option)requiredOptions.get(option);	  Option    opt    =(Option)requiredOptions.clone();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
28	[BUG]  [BUGGY]  cmd.addOption(property,  option);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  cmd.addOption(property,  option);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addOption(property,  option);	  cmd.addOption(option,    property);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
29	[BUG]  [BUGGY]  cmd.addOption(option,  property,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  cmd.addOption(option,  property,  requiredOptions);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addOption(option,  property,  requiredOptions);	  cmd.addOption(option,    property);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
30	[BUG]  [BUGGY]  Option  opt  =(Option)this.requiredOptions.get(value);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(Option)this.requiredOptions.get(value);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(Option)this.requiredOptions.get(value);	  Option    opt    =(Option)requiredOptions.get(value);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
31	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  value,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  option  =  options.getOption(opt,  value,  requiredOptions);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  option  =  options.getOption(opt,  value,  requiredOptions);	  Option    option    =    options.getOption(opt,    value);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
32	[BUG]  [BUGGY]  Option  opt  =(Option)this.options.get(value  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(Option)this.options.get(value  -  1);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(Option)this.options.get(value  -  1);	  Option    opt    =(Option)this.options.get(value);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
33	[BUG]  [BUGGY]  Option  opt  =(Option)this.options.get(value  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(Option)this.options.get(value  +  1);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(Option)this.options.get(value  +  1);	  Option    opt    =(Option)this.options.get(value);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
34	[BUG]  [BUGGY]  Option  opt  =(Option)this.options.get(0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(Option)this.options.get(0);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(Option)this.options.get(0);	  Option    opt    =(Option)this.options.get(value);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
35	[BUG]  [BUGGY]  Option  opt  =(options  ==  null)?  null  :  options.getOption(value);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(options  ==  null)?  null  :  options.getOption(value);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(options  ==  null)?  null  :  options.getOption(value);	  Option    opt    =(options!=    null)?    null    :    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
36	[BUG]  [BUGGY]  Option  opt  =(options!=  null)?  null  :  options.getOption(value);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(options!=  null)?  null  :  options.getOption(value);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(options!=  null)?  null  :  options.getOption(value);	  Option    opt    =(options!=    null)?    null    :    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
37	[BUG]  [BUGGY]  Option  opt  =  getOption(options,  value);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =  getOption(options,  value);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  getOption(options,  value);	  Option    opt    =    getOption(options);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
38	[BUG]  [BUGGY]  Option  opt  =  getOption(value)/  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =  getOption(value)/  1;  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  getOption(value)/  1;	  Option    opt    =    getOption(value)+    1;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
39	[BUG]  [BUGGY]  Option  opt  =  getOption(value)+  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =  getOption(value)+  2;  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  getOption(value)+  2;	  Option    opt    =    getOption(value)+    1;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
40	[BUG]  [BUGGY]  Option  opt  =  getOption(value)-  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =  getOption(value)-  1;  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  getOption(value)-  1;	  Option    opt    =    getOption(value)+    1;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
41	[BUG]  [BUGGY]  Option  opt  =  options.getOption(value,  values);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =  options.getOption(value,  values);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  options.getOption(value,  values);	  Option    opt    =    options.getOption(value,    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
42	[BUG]  [BUGGY]  Option  opt  =  options.getOption(value,  properties);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =  options.getOption(value,  properties);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  options.getOption(value,  properties);	  Option    opt    =    options.getOption(value,    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
43	[BUG]  [BUGGY]  Option  opt  =  options.getOption(value,  requiredOptions,  value);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =  options.getOption(value,  requiredOptions,  value);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  options.getOption(value,  requiredOptions,  value);	  Option    opt    =    options.getOption(value,    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
44	[BUG]  [BUGGY]  cmd.addOption(opt,  value,  requiredOptions,  exp);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  cmd.addOption(opt,  value,  requiredOptions,  exp);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addOption(opt,  value,  requiredOptions,  exp);	  cmd.addOption(opt,    value,    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
45	[BUG]  [BUGGY]  cmd.addOption(value,  opt,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  cmd.addOption(value,  opt,  requiredOptions);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addOption(value,  opt,  requiredOptions);	  cmd.addOption(opt,    value,    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
46	[BUG]  [BUGGY]  cmd.addOption(opt,  value,  properties);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  cmd.addOption(opt,  value,  properties);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addOption(opt,  value,  properties);	  cmd.addOption(opt,    value,    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
47	[BUG]  [BUGGY]  Option  opt  =  getOption(option,  value);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =  getOption(option,  value);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  getOption(option,  value);	  Option    opt    =    getOption(option);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
48	[BUG]  [BUGGY]  Option  opt  =  getOption(properties,  value);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =  getOption(properties,  value);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  getOption(properties,  value);	  Option    opt    =    getOption(properties);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
49	[BUG]  [BUGGY]  ||(option.equalsIgnoreCase(value)||   "true ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value)))  {  break;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  ||(option.equalsIgnoreCase(value)||   "true ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value)))  {  break;  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	||(option.equalsIgnoreCase(value)||   "true ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value)))  {  break;  }	  for(Option    option    :    options.values())    {    if(!(option.equalsIgnoreCase(value)||       "true   ".equalsIgnoreCase(value)||       "1   ".equalsIgnoreCase(value)))    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
50	[BUG]  [BUGGY]  for(Option  option  :  options.values())  {  if(!option.equalsIgnoreCase(value)||   "true ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value))  {  break;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  for(Option  option  :  options.values())  {  if(!option.equalsIgnoreCase(value)||   "true ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value))  {  break;  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	for(Option  option  :  options.values())  {  if(!option.equalsIgnoreCase(value)||   "true ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value))  {  break;  }	  for(Option    option    :    options.values())    {    if(!(option.equalsIgnoreCase(value)||       "true   ".equalsIgnoreCase(value)||       "1   ".equalsIgnoreCase(value)))    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
51	[BUG]  [BUGGY]  for(Option  option  :  options.values())  {  if(!option.equalsIgnoreCase(value)||   "true ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value)))  {  break;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  for(Option  option  :  options.values())  {  if(!option.equalsIgnoreCase(value)||   "true ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value)))  {  break;  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	for(Option  option  :  options.values())  {  if(!option.equalsIgnoreCase(value)||   "true ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value)))  {  break;  }	  for(Option    option    :    options.values())    {    if(!(option.equalsIgnoreCase(value)||       "true   ".equalsIgnoreCase(value)||       "1   ".equalsIgnoreCase(value)))    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
52	[BUG]  [BUGGY]  Error.printStackTrace(System.err);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Error.printStackTrace(System.err);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Error.printStackTrace(System.err);	  e.printStackTrace(System.err);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
53	[BUG]  [BUGGY]  e.printStackTrace(System.out,  value);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  e.printStackTrace(System.out,  value);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	e.printStackTrace(System.out,  value);	  e.printStackTrace(System.out);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
54	[BUG]  [BUGGY]  e.printStackTrace(System.out,  options);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  e.printStackTrace(System.out,  options);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	e.printStackTrace(System.out,  options);	  e.printStackTrace(System.out);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
55	[BUG]  [BUGGY]  Option  opt  =(Option)this.opts.clone();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(Option)this.opts.clone();  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(Option)this.opts.clone();	  Option    opt    =(Option)opts.clone();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
56	[BUG]  [BUGGY]  Option  opt  =  getOption(value,  values);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =  getOption(value,  values);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  getOption(value,  values);	  Option    opt    =    getOption(value,    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
57	[BUG]  [BUGGY]  Option  opt  =  getOption(value,  properties);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =  getOption(value,  properties);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  getOption(value,  properties);	  Option    opt    =    getOption(value,    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
58	[BUG]  [BUGGY]  Option  opt  =  getOption(value,  options);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =  getOption(value,  options);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  getOption(value,  options);	  Option    opt    =    getOption(value,    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
59	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  value,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  option  =  options.getOption(options,  value,  requiredOptions);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  option  =  options.getOption(options,  value,  requiredOptions);	  Option    option    =    options.getOption(options,    value);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
60	[BUG]  [BUGGY]  Option  option  =  options.getOption(value,  options);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  option  =  options.getOption(value,  options);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  option  =  options.getOption(value,  options);	  Option    option    =    options.getOption(options,    value);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
61	[BUG]  [BUGGY]  Option  option  =  options.getOption(properties,  value);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  option  =  options.getOption(properties,  value);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  option  =  options.getOption(properties,  value);	  Option    option    =    options.getOption(options,    value);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
62	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  value,  exp);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  option  =  options.getOption(options,  value,  exp);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  option  =  options.getOption(options,  value,  exp);	  Option    option    =    options.getOption(options,    value);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
63	[BUG]  [BUGGY]  for(Option  option  :  options.values())  {  if(!( "yes   ".equalsIgnoreCase(value)||   "true ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  for(Option  option  :  options.values())  {  if(!( "yes   ".equalsIgnoreCase(value)||   "true ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	for(Option  option  :  options.values())  {  if(!( "yes   ".equalsIgnoreCase(value)||   "true ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase	  for(Option    option    :    options.values())    {    if(!(   "yes   ".equalsIgnoreCase(value)||       "true   ".equalsIgnoreCase(value)||       "1   ".equalsIgnoreCase(value)))    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
64	[BUG]  [BUGGY]  for(Option  option  :  options.values())  {  if(!( "yes   ".equalsIgnoreCase(value)||   "true ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value)  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  for(Option  option  :  options.values())  {  if(!( "yes   ".equalsIgnoreCase(value)||   "true ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value)  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	for(Option  option  :  options.values())  {  if(!( "yes   ".equalsIgnoreCase(value)||   "true ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value)	  for(Option    option    :    options.values())    {    if(!(   "yes   ".equalsIgnoreCase(value)||       "true   ".equalsIgnoreCase(value)||       "1   ".equalsIgnoreCase(value)))    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
65	[BUG]  [BUGGY]  cmd.addValue(property,  value);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  cmd.addValue(property,  value);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addValue(property,  value);	  cmd.addValue(value,    value);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
66	[BUG]  [BUGGY]  cmd.addValue(option,  value);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  cmd.addValue(option,  value);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addValue(option,  value);	  cmd.addValue(value,    value);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
67	[BUG]  [BUGGY]  Option  opt  =  _options.getOption(value);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =  _options.getOption(value);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  _options.getOption(value);	  Option    opt    =    _options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
68	[BUG]  [BUGGY]  Option  opt  =  _options.getOption(property);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =  _options.getOption(property);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  _options.getOption(property);	  Option    opt    =    _options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
69	[BUG]  [BUGGY]  Option  opt  =  _options.getOption(key);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =  _options.getOption(key);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  _options.getOption(key);	  Option    opt    =    _options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
70	[BUG]  [BUGGY]  Option  opt  =  options.getOption(value,  value  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =  options.getOption(value,  value  +  1);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  options.getOption(value,  value  +  1);	  Option    opt    =    options.getOption(value,    value);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
71	[BUG]  [BUGGY]  Option  opt  =  options.getOption(value,  value)+  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =  options.getOption(value,  value)+  1;  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  options.getOption(value,  value)+  1;	  Option    opt    =    options.getOption(value,    value);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
72	[BUG]  [BUGGY]  if(opt!=  null)  {  opt.printStackTrace();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  if(opt!=  null)  {  opt.printStackTrace();  }  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	if(opt!=  null)  {  opt.printStackTrace();  }	  if(opt!=    null)    {    e.printStackTrace();    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
73	[BUG]  [BUGGY]  if(opt!=  null)  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  if(opt!=  null)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	if(opt!=  null)  {  throw  new  RuntimeException( " ");  }	  if(opt!=    null)    {    e.printStackTrace();    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
74	[BUG]  [BUGGY]  Option  opt  =(opt!=  null)?  options.getOption(opt):  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(opt!=  null)?  options.getOption(opt):  options.getOption(opt);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(opt!=  null)?  options.getOption(opt):  options.getOption(opt);	  Option    opt    =(options!=    null)?    options.getOption(opt):    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
75	[BUG]  [BUGGY]  cmd.addValue(property,  option);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  cmd.addValue(property,  option);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addValue(property,  option);	  cmd.addValue(value,    option);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
76	[BUG]  [BUGGY]  cmd.addValue(this.property);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  cmd.addValue(this.property);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addValue(this.property);	  cmd.addValue(property);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
77	[BUG]  [BUGGY]  Option  opt  =(Option)properties.get(value  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(Option)properties.get(value  -  1);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(Option)properties.get(value  -  1);	  Option    opt    =(Option)options.get(value    -    1);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
78	[BUG]  [BUGGY]  Option  opt  =(Option)options.get(value  *  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(Option)options.get(value  *  1);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(Option)options.get(value  *  1);	  Option    opt    =(Option)options.get(value    -    1);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
79	[BUG]  [BUGGY]  e.printStackTrace(requiredOptions);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  e.printStackTrace(requiredOptions);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	e.printStackTrace(requiredOptions);	  e.printStackTrace(exp);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
80	[BUG]  [BUGGY]  e.printStackTrace(error);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  e.printStackTrace(error);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	e.printStackTrace(error);	  e.printStackTrace(exp);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
81	[BUG]  [BUGGY]  e.printStackTrace(options);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  e.printStackTrace(options);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	e.printStackTrace(options);	  e.printStackTrace(exp);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
82	[BUG]  [BUGGY]  Option  opt  =  getOption(value.toString(),  value);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =  getOption(value.toString(),  value);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  getOption(value.toString(),  value);	  Option    opt    =    getOption(value.toString());    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
83	[BUG]  [BUGGY]  Option  opt  =  getOption(value,  value.toString());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =  getOption(value,  value.toString());  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  getOption(value,  value.toString());	  Option    opt    =    getOption(value.toString());    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
84	[BUG]  [BUGGY]  Option  opt  =  getOption(value.toString(),  true);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =  getOption(value.toString(),  true);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  getOption(value.toString(),  true);	  Option    opt    =    getOption(value.toString());    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
85	[BUG]  [BUGGY]  cmd.addValue(value,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  cmd.addValue(value,  0);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addValue(value,  0);	  cmd.addValue(value,    1);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
86	[BUG]  [BUGGY]  cmd.addValue(value,  2);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  cmd.addValue(value,  2);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addValue(value,  2);	  cmd.addValue(value,    1);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
87	[BUG]  [BUGGY]  cmd.addValue(value,  null);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  cmd.addValue(value,  null);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addValue(value,  null);	  cmd.addValue(value,    1);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
88	[BUG]  [BUGGY]  Option  option  =  opts.getOption(value);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  option  =  opts.getOption(value);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  option  =  opts.getOption(value);	  Option    option    =    opts.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
89	[BUG]  [BUGGY]  Option  opt  =(options  ==  null)?  null  :  options.getOption(option);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(options  ==  null)?  null  :  options.getOption(option);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(options  ==  null)?  null  :  options.getOption(option);	  Option    opt    =(options    ==    null)?    null    :    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
90	[BUG]  [BUGGY]  Option  opt  =  options.getOption(value)/  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =  options.getOption(value)/  1;  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  options.getOption(value)/  1;	  Option    opt    =    options.getOption(value)+    1;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
91	[BUG]  [BUGGY]  Option  opt  =  options.getOption(value)+  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =  options.getOption(value)+  2;  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  options.getOption(value)+  2;	  Option    opt    =    options.getOption(value)+    1;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
92	[BUG]  [BUGGY]  Option  opt  =  options.getOption(value)-  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =  options.getOption(value)-  1;  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  options.getOption(value)-  1;	  Option    opt    =    options.getOption(value)+    1;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
93	[BUG]  [BUGGY]  Option  opt  =  properties.getOption(options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =  properties.getOption(options);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  properties.getOption(options);	  Option    opt    =    options.getOption(properties);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
94	[BUG]  [BUGGY]  Option  opt  =  options.getOption(properties,  value);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =  options.getOption(properties,  value);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  options.getOption(properties,  value);	  Option    opt    =    options.getOption(properties);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
95	[BUG]  [BUGGY]  Option  option  =  options.getOption(key,  value);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  option  =  options.getOption(key,  value);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  option  =  options.getOption(key,  value);	  Option    option    =    options.getOption(key);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
96	[BUG]  [BUGGY]  Option  opt  =  option.getOption(value);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =  option.getOption(value);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  option.getOption(value);	  Option    opt    =    option.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
97	[BUG]  [BUGGY]  ||(option.equalsIgnoreCase(value)||   "false ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value)))  {  break;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  ||(option.equalsIgnoreCase(value)||   "false ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value)))  {  break;  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	||(option.equalsIgnoreCase(value)||   "false ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value)))  {  break;  }	  for(Option    option    :    options.values())    {    if(!(option.equalsIgnoreCase(value)||       "false   ".equalsIgnoreCase(value)||       "1   ".equalsIgnoreCase(value)))    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
98	[BUG]  [BUGGY]  for(Option  option  :  options.values())  {  if(!option.equalsIgnoreCase(value)||   "false ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value))  {  break;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  for(Option  option  :  options.values())  {  if(!option.equalsIgnoreCase(value)||   "false ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value))  {  break;  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	for(Option  option  :  options.values())  {  if(!option.equalsIgnoreCase(value)||   "false ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value))  {  break;  }	  for(Option    option    :    options.values())    {    if(!(option.equalsIgnoreCase(value)||       "false   ".equalsIgnoreCase(value)||       "1   ".equalsIgnoreCase(value)))    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
99	[BUG]  [BUGGY]  for(Option  option  :  options.values())  {  if(!option.equalsIgnoreCase(value)||   "false ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value)))  {  break;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  for(Option  option  :  options.values())  {  if(!option.equalsIgnoreCase(value)||   "false ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value)))  {  break;  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	for(Option  option  :  options.values())  {  if(!option.equalsIgnoreCase(value)||   "false ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value)))  {  break;  }	  for(Option    option    :    options.values())    {    if(!(option.equalsIgnoreCase(value)||       "false   ".equalsIgnoreCase(value)||       "1   ".equalsIgnoreCase(value)))    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
100	[BUG]  [BUGGY]  Error.printStackTrace();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Error.printStackTrace();  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Error.printStackTrace();	  if(opt!=    null)    {    e.printStackTrace();    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
101	[BUG]  [BUGGY]  Context.reportError(e,  value);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Context.reportError(e,  value);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Context.reportError(e,  value);	  if(opt!=    null)    {    e.printStackTrace();    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
102	[BUG]  [BUGGY]  cmd.addOption(value,  opt,  null);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  cmd.addOption(value,  opt,  null);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addOption(value,  opt,  null);	  cmd.addOption(opt,    value,    null);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
103	[BUG]  [BUGGY]  cmd.addOption(option,  value,  null);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  cmd.addOption(option,  value,  null);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addOption(option,  value,  null);	  cmd.addOption(opt,    value,    null);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
104	[BUG]  [BUGGY]  cmd.addOption(opt,  value,  null,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  cmd.addOption(opt,  value,  null,  requiredOptions);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addOption(opt,  value,  null,  requiredOptions);	  cmd.addOption(opt,    value,    null);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
105	[BUG]  [BUGGY]  cmd.addOption(opt,  value,  properties,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  cmd.addOption(opt,  value,  properties,  null);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addOption(opt,  value,  properties,  null);	  cmd.addOption(opt,    value,    null);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
106	[BUG]  [BUGGY]  cmd.addOption(property,  value,  null);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  cmd.addOption(property,  value,  null);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addOption(property,  value,  null);	  cmd.addOption(property,    value);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
107	[BUG]  [BUGGY]  for(Option  option  :  options.values())  {  if(!( "yes   ".equalsIgnoreCase(value)||   "false ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  for(Option  option  :  options.values())  {  if(!( "yes   ".equalsIgnoreCase(value)||   "false ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	for(Option  option  :  options.values())  {  if(!( "yes   ".equalsIgnoreCase(value)||   "false ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase	  for(Option    option    :    options.values())    {    if(!(   "yes   ".equalsIgnoreCase(value)||       "true   ".equalsIgnoreCase(value)||       "1   ".equalsIgnoreCase(value)))    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
108	[BUG]  [BUGGY]  For(Option  option  :  options.values())  {  if(!( "yes   ".equalsIgnoreCase(value)||   "true ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  For(Option  option  :  options.values())  {  if(!( "yes   ".equalsIgnoreCase(value)||   "true ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	For(Option  option  :  options.values())  {  if(!( "yes   ".equalsIgnoreCase(value)||   "true ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase	  for(Option    option    :    options.values())    {    if(!(   "yes   ".equalsIgnoreCase(value)||       "true   ".equalsIgnoreCase(value)||       "1   ".equalsIgnoreCase(value)))    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
109	[BUG]  [BUGGY]  Option  option  =(options  ==  null)?  null  :  options.getOption(value);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  option  =(options  ==  null)?  null  :  options.getOption(value);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  option  =(options  ==  null)?  null  :  options.getOption(value);	  Option    opt    =(options!=    null)?    null    :    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
110	[BUG]  [BUGGY]  Option  opt  =(Option)properties.get(opt);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(Option)properties.get(opt);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(Option)properties.get(opt);	  Option    opt    =(Option)properties.clone();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
111	[BUG]  [BUGGY]  cmd.addValue(value,  options);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  cmd.addValue(value,  options);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addValue(value,  options);	  cmd.addValue(value,    option);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
112	[BUG]  [BUGGY]  Option  opt  =(Option)options.get(opt);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(Option)options.get(opt);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(Option)options.get(opt);	  if(opt!=    null)    {    e.printStackTrace();    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
113	[BUG]  [BUGGY]  AssertionFailedError  e  :  opt.getOptions())  {  break;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  AssertionFailedError  e  :  opt.getOptions())  {  break;  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	AssertionFailedError  e  :  opt.getOptions())  {  break;  }	  if(opt.getOptions().isEmpty())    {    for(AssertionFailedError    e    :    opt.getOptions())    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
114	[BUG]  [BUGGY]  Option  opt  =  options.getOption(options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =  options.getOption(options);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  options.getOption(options);	  Option    opt    =    options.getOption(properties);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
115	[BUG]  [BUGGY]  e.printStackTrace(processProperties(opt));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  e.printStackTrace(processProperties(opt));  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	e.printStackTrace(processProperties(opt));	  e.printStackTrace(processProperties(properties));    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
116	[BUG]  [BUGGY]  e.printStackTrace(processProperties(properties),  opt);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  e.printStackTrace(processProperties(properties),  opt);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	e.printStackTrace(processProperties(properties),  opt);	  e.printStackTrace(processProperties(properties));    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
117	[BUG]  [BUGGY]  e.printStackTrace(processProperties(opts));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  e.printStackTrace(processProperties(opts));  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	e.printStackTrace(processProperties(opts));	  e.printStackTrace(processProperties(properties));    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
118	[BUG]  [BUGGY]  e.printStackTrace(System.out,  System.err);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  e.printStackTrace(System.out,  System.err);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	e.printStackTrace(System.out,  System.err);	  e.printStackTrace(System.out);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
119	[BUG]  [BUGGY]  cmd.addValue(value,  opt);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  cmd.addValue(value,  opt);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addValue(value,  opt);	  cmd.addValue(value,    value);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
120	[BUG]  [BUGGY]  cmd.addOption(value,  property);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  cmd.addOption(value,  property);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addOption(value,  property);	  cmd.addOption(property,    value);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
121	[BUG]  [BUGGY]  cmd.addOption(value,  value);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  cmd.addOption(value,  value);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addOption(value,  value);	  cmd.addOption(value,    opt);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
122	[BUG]  [BUGGY]  cmd.addValue(value,  3);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  cmd.addValue(value,  3);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addValue(value,  3);	  cmd.addValue(value,    1);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
123	[BUG]  [BUGGY]  Error.println(System.err);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Error.println(System.err);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Error.println(System.err);	  e.printStackTrace(System.err);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
124	[BUG]  [BUGGY]  if(opt  ==  null)  {  e.printStackTrace();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  if(opt  ==  null)  {  e.printStackTrace();  }  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	if(opt  ==  null)  {  e.printStackTrace();  }	  if(opt!=    null)    {    e.printStackTrace();    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
125	[BUG]  [BUGGY]  Option  opt  =(option  ==  null)?  getOption(option):  option;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(option  ==  null)?  getOption(option):  option;  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(option  ==  null)?  getOption(option):  option;	  Option    opt    =    getOption(option);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
126	[BUG]  [BUGGY]  Option  option  =(options  ==  null)?  options.getOption(value):  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  option  =(options  ==  null)?  options.getOption(value):  options.getOption(opt);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  option  =(options  ==  null)?  options.getOption(value):  options.getOption(opt);	  Option    opt    =(options    ==    null)?    options.getOption(opt):    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
127	[BUG]  [BUGGY]  Option  opt  =(opt  ==  null)?  options.getOption(value):  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(opt  ==  null)?  options.getOption(value):  options.getOption(opt);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(opt  ==  null)?  options.getOption(value):  options.getOption(opt);	  Option    opt    =(options    ==    null)?    options.getOption(opt):    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
128	[BUG]  [BUGGY]  Option  opt  =(Option)this.options.get(opt);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(Option)this.options.get(opt);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(Option)this.options.get(opt);	  Option    opt    =(Option)this.options.get(value);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
129	[BUG]  [BUGGY]  Option  opt  =(Option)this.options.get(value).opt;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(Option)this.options.get(value).opt;  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(Option)this.options.get(value).opt;	  Option    opt    =(Option)this.options.get(value);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
130	[BUG]  [BUGGY]  Option  opt  =(options  ==  null)?  options.getOption(value):  options.getOption(value);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(options  ==  null)?  options.getOption(value):  options.getOption(value);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(options  ==  null)?  options.getOption(value):  options.getOption(value);	  Option    opt    =(options!=    null)?    options.getOption(opt):    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
131	[BUG]  [BUGGY]  Option  opt  =(options!=  null)?  options.getOption(value):  options.getOption(option);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(options!=  null)?  options.getOption(value):  options.getOption(option);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(options!=  null)?  options.getOption(value):  options.getOption(option);	  Option    opt    =(options!=    null)?    options.getOption(opt):    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
132	[BUG]  [BUGGY]  e.printStackTrace(value);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  e.printStackTrace(value);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	e.printStackTrace(value);	  e.printStackTrace(exp);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
133	[BUG]  [BUGGY]  e.printStackTrace(errors);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  e.printStackTrace(errors);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	e.printStackTrace(errors);	  e.printStackTrace(exp);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
134	[BUG]  [BUGGY]  Option  opt  =(Option)options.get(value  -  1  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(Option)options.get(value  -  1  +  1);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(Option)options.get(value  -  1  +  1);	  Option    opt    =(Option)options.get(value    -    1);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
135	[BUG]  [BUGGY]  Option  opt  =(Option)options.get(value  -  2);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(Option)options.get(value  -  2);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(Option)options.get(value  -  2);	  Option    opt    =(Option)options.get(value    -    1);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
136	[BUG]  [BUGGY]  Option  opt  =(Option)options.get(value  /  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(Option)options.get(value  /  1);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(Option)options.get(value  /  1);	  Option    opt    =(Option)options.get(value    -    1);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
137	[BUG]  [BUGGY]  Option  opt  =(_options!=  null)?  null  :  _options.getOption(opt);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(_options!=  null)?  null  :  _options.getOption(opt);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(_options!=  null)?  null  :  _options.getOption(opt);	  Option    opt    =    _options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
138	[BUG]  [BUGGY]  Option  opt  =  _options.getOption(opt,  value);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =  _options.getOption(opt,  value);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  _options.getOption(opt,  value);	  Option    opt    =    _options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
139	[BUG]  [BUGGY]  Option  opt  =(Option)opts.get(value);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(Option)opts.get(value);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(Option)opts.get(value);	  Option    opt    =(Option)opts.clone();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
140	[BUG]  [BUGGY]  Option  opt  =(Option)this.requiredOptions.clone();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(Option)this.requiredOptions.clone();  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(Option)this.requiredOptions.clone();	  Option    opt    =(Option)requiredOptions.clone();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
141	[BUG]  [BUGGY]  Option  opt  =(opt!=  null)?  options.getOption(value):  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(opt!=  null)?  options.getOption(value):  options.getOption(opt);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(opt!=  null)?  options.getOption(value):  options.getOption(opt);	  Option    opt    =(options!=    null)?    options.getOption(opt):    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
142	[BUG]  [BUGGY]  Option  opt  =  options.getOption(value,  null);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =  options.getOption(value,  null);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  options.getOption(value,  null);	  Option    opt    =    options.getOption(value,    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
143	[BUG]  [BUGGY]  cmd.addOption(opt,  value,  values);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  cmd.addOption(opt,  value,  values);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addOption(opt,  value,  values);	  cmd.addOption(opt,    value,    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
144	[BUG]  [BUGGY]  Option  opt  =  options.getOption(value,  property);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =  options.getOption(value,  property);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  options.getOption(value,  property);	  Option    opt    =    options.getOption(value,    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
145	[BUG]  [BUGGY]  System.err.println( "Unable  to  add  option: "  +  value);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  System.err.println( "Unable  to  add  option: "  +  value);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	System.err.println( "Unable  to  add  option: "  +  value);	  e.printStackTrace(System.out);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
146	[BUG]  [BUGGY]  cmd.addOption(option,  property,  value);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  cmd.addOption(option,  property,  value);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addOption(option,  property,  value);	  cmd.addOption(option,    property);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
147	[BUG]  [BUGGY]  For(Option  option  :  options.values())  {  if(!( "yes   ".equalsIgnoreCase(value)||   "false ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  For(Option  option  :  options.values())  {  if(!( "yes   ".equalsIgnoreCase(value)||   "false ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	For(Option  option  :  options.values())  {  if(!( "yes   ".equalsIgnoreCase(value)||   "false ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase	  for(Option    option    :    options.values())    {    if(!(   "yes   ".equalsIgnoreCase(value)||       "true   ".equalsIgnoreCase(value)||       "1   ".equalsIgnoreCase(value)))    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
148	[BUG]  [BUGGY]  Option  opt  =(_options!=  null)?  _options.getOption(opt):  null;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(_options!=  null)?  _options.getOption(opt):  null;  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(_options!=  null)?  _options.getOption(opt):  null;	  Option    opt    =    _options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
149	[BUG]  [BUGGY]  Option  opt  =(_options!=  null)?  _options.getOption(opt):  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(_options!=  null)?  _options.getOption(opt):  options.getOption(opt);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(_options!=  null)?  _options.getOption(opt):  options.getOption(opt);	  Option    opt    =    _options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
150	[BUG]  [BUGGY]  e.printStackTrace(processProperties(properties,  options));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  e.printStackTrace(processProperties(properties,  options));  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	e.printStackTrace(processProperties(properties,  options));	  e.printStackTrace(processProperties(properties));    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
151	[BUG]  [BUGGY]  Option  opt  =(options!=  null)?  options.getOption(value):  options.getOption(value);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(options!=  null)?  options.getOption(value):  options.getOption(value);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(options!=  null)?  options.getOption(value):  options.getOption(value);	  Option    opt    =(options!=    null)?    options.getOption(opt):    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
152	[BUG]  [BUGGY]  Option  opt  =(Option)this.properties.clone();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(Option)this.properties.clone();  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(Option)this.properties.clone();	  Option    opt    =(Option)properties.clone();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
153	[BUG]  [BUGGY]  Option  opt  =(Option)properties.get(properties.size()  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(Option)properties.get(properties.size()  -  1);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(Option)properties.get(properties.size()  -  1);	  Option    opt    =(Option)properties.clone();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
154	[BUG]  [BUGGY]  for(AssertionFailedError  e  :  options.getOptions())  {  break;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  for(AssertionFailedError  e  :  options.getOptions())  {  break;  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	for(AssertionFailedError  e  :  options.getOptions())  {  break;  }	  if(opt.getOptions().contains(option))    {    for(AssertionFailedError    e    :    opt.getOptions())    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
155	[BUG]  [BUGGY]  Option  opt  =  getOption(value,  option);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =  getOption(value,  option);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  getOption(value,  option);	  Option    opt    =    getOption(value,    value);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
156	[BUG]  [BUGGY]  e.printStackTrace(opt);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  e.printStackTrace(opt);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	e.printStackTrace(opt);	  e.printStackTrace(exp);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
157	[BUG]  [BUGGY]  Option  opt  =(option  ==  null)?  getOption(option):  null;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(option  ==  null)?  getOption(option):  null;  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(option  ==  null)?  getOption(option):  null;	  Option    opt    =    getOption(option);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
158	[BUG]  [BUGGY]  Option  option  =  getOption(value);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  option  =  getOption(value);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  option  =  getOption(value);	  Option    opt    =    getOption(option);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
159	[BUG]  [BUGGY]  Option  opt  =(Option)super.requiredOptions.get(value);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(Option)super.requiredOptions.get(value);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(Option)super.requiredOptions.get(value);	  Option    opt    =(Option)requiredOptions.get(value);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
160	[BUG]  [BUGGY]  Option  opt  =(Option)requiredOptions.get(value  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =(Option)requiredOptions.get(value  -  1);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =(Option)requiredOptions.get(value  -  1);	  Option    opt    =(Option)requiredOptions.get(value);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
161	[BUG]  [BUGGY]  Option  opt  =  getOption(properties)+  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =  getOption(properties)+  1;  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  getOption(properties)+  1;	  Option    opt    =    getOption(properties);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
162	[BUG]  [BUGGY]  Option  opt  =  properties.getOption(option);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  opt  =  properties.getOption(option);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  opt  =  properties.getOption(option);	  Option    opt    =    options.getOption(properties);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
163	[BUG]  [BUGGY]  Option  option  =(options  ==  null)?  null  :  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  option  =(options  ==  null)?  null  :  options.getOption(opt);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  option  =(options  ==  null)?  null  :  options.getOption(opt);	  Option    opt    =(options!=    null)?    null    :    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
164	[BUG]  [BUGGY]  Option  option  =  options.getOption(value,  null);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  option  =  options.getOption(value,  null);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  option  =  options.getOption(value,  null);	  Option    option    =    options.getOption(value,    opt);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
165	[BUG]  [BUGGY]  Option  option  =  options.getOption(value,  opts);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  Option  option  =  options.getOption(value,  opts);  [BUGGY]      cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	Option  option  =  options.getOption(value,  opts);	  Option    option    =    options.getOption(value,    opt);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
166	[BUG]  [BUGGY]  cmd.addOption(option,  value,  properties);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    break;  }      [BUGGY]  cmd.addOption(option,  value,  properties);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	293	293	1	replace	cmd.addOption(option,  value,  properties);	  cmd.addOption(opt,    value,    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
