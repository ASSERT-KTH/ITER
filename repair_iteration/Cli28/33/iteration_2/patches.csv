bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  str  =(String)iterator.next()  +  t;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  String  str  =(String)iterator.next()  +  t;  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	String  str  =(String)iterator.next()  +  t;	  String    str    =(String)iterator.next()    +    arguments;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
2	[BUG]  [BUGGY]  String  str  =(String)iterator.next()  /  arguments;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  String  str  =(String)iterator.next()  /  arguments;  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	String  str  =(String)iterator.next()  /  arguments;	  String    str    =(String)iterator.next()    +    arguments;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
3	[BUG]  [BUGGY]  String  str  =(String)iterator.next()  +  arguments[0];  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  String  str  =(String)iterator.next()  +  arguments[0];  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	String  str  =(String)iterator.next()  +  arguments[0];	  String    str    =(String)iterator.next()    +    arguments;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
4	[BUG]  [BUGGY]  if(t.length()  ==  0  ||  t.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t.length()  ==  0  ||  t.length()  ==  0)  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t.length()  ==  0  ||  t.length()  ==  0)  {	  if(t.length()    ==    0    ||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
5	[BUG]  [BUGGY]  if(str.length()  ==  0  ||  str.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(str.length()  ==  0  ||  str.length()  ==  0)  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(str.length()  ==  0  ||  str.length()  ==  0)  {	  if(t.length()    ==    0    ||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
6	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  opts.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  <  String>  iterator  =  opts.keySet().iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =  opts.keySet().iterator();	  Iterator    <    String>    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
7	[BUG]  [BUGGY]  if(t  ==  null  ||  stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t  ==  null  ||  stopAtNonOption)  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t  ==  null  ||  stopAtNonOption)  {	  if(t    ==    null    ||!stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
8	[BUG]  [BUGGY]  if(t!=  null  ||  stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t!=  null  ||  stopAtNonOption)  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t!=  null  ||  stopAtNonOption)  {	  if(t    ==    null    ||!stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
9	[BUG]  [BUGGY]  if(t  ==  null  ||!stopAtNonOption  &&  iterator.hasNext())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t  ==  null  ||!stopAtNonOption  &&  iterator.hasNext())  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t  ==  null  ||!stopAtNonOption  &&  iterator.hasNext())  {	  if(!stopAtNonOption    &&    iterator.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
10	[BUG]  [BUGGY]  if(t!=  null  ||!stopAtNonOption  &&  iterator.hasNext())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t!=  null  ||!stopAtNonOption  &&  iterator.hasNext())  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t!=  null  ||!stopAtNonOption  &&  iterator.hasNext())  {	  if(!stopAtNonOption    &&    iterator.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
11	[BUG]  [BUGGY]  if(stopAtNonOption  &&  iterator.hasNext())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(stopAtNonOption  &&  iterator.hasNext())  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(stopAtNonOption  &&  iterator.hasNext())  {	  if(!stopAtNonOption    &&    iterator.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
12	[BUG]  [BUGGY]  optionGroup  =(OptionGroup)iterator.next();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  optionGroup  =(OptionGroup)iterator.next();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	optionGroup  =(OptionGroup)iterator.next();	  optionGroup    group    =(OptionGroup)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
13	[BUG]  [BUGGY]  if(t!=  null  ||  t.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t!=  null  ||  t.length()  >  0)  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t!=  null  ||  t.length()  >  0)  {	  if(t!=    null    &&    t.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
14	[BUG]  [BUGGY]  if(t!=  null  &&  t.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t!=  null  &&  t.length()  ==  0)  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t!=  null  &&  t.length()  ==  0)  {	  if(t!=    null    &&    t.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
15	[BUG]  [BUGGY]  if(t  ==  null  ||  t.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t  ==  null  ||  t.length()  >  0)  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t  ==  null  ||  t.length()  >  0)  {	  if(t!=    null    &&    t.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
16	[BUG]  [BUGGY]  if(t  ==  null  ||!t.equals( "- "))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t  ==  null  ||!t.equals( "- "))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t  ==  null  ||!t.equals( "- "))  {	  if(t    ==    null    ||!t.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
17	[BUG]  [BUGGY]  if(t!=  null  ||!t.equals( "- "))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t!=  null  ||!t.equals( "- "))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t!=  null  ||!t.equals( "- "))  {	  if(t    ==    null    ||!t.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
18	[BUG]  [BUGGY]  String  str  =(String)iterator.next(),  t  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  String  str  =(String)iterator.next(),  t  +  1);  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	String  str  =(String)iterator.next(),  t  +  1);	  String    str    =(String)iterator.next(),    t);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
19	[BUG]  [BUGGY]  String  str  =(String)iterator.next(),  argument);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  String  str  =(String)iterator.next(),  argument);  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	String  str  =(String)iterator.next(),  argument);	  String    str    =(String)iterator.next(),    t);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
20	[BUG]  [BUGGY]  String  str  =(String)iterator.next(),  t  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  String  str  =(String)iterator.next(),  t  +  1;  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	String  str  =(String)iterator.next(),  t  +  1;	  String    str    =(String)iterator.next(),    t);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
21	[BUG]  [BUGGY]  if(t.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t.length()!=  0)  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t.length()!=  0)  {	  if(t.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
22	[BUG]  [BUGGY]  Iterator  iterator  =  t.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  iterator  =  t.iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  iterator  =  t.iterator();	  Iterator    iterator    =    this.arguments.iterator();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
23	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  opts.values().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  <  String>  iterator  =  opts.values().iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =  opts.values().iterator();	  Iterator    <    String>    iterator    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
24	[BUG]  [BUGGY]  if(t.length()  ==  0  ||  t.endsWith( "- "))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t.length()  ==  0  ||  t.endsWith( "- "))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t.length()  ==  0  ||  t.endsWith( "- "))  {	  if(str.length()    ==    0    ||    t.endsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
25	[BUG]  [BUGGY]  if(t.length()  ==  0  ||  str.endsWith( "- "))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t.length()  ==  0  ||  str.endsWith( "- "))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t.length()  ==  0  ||  str.endsWith( "- "))  {	  if(str.length()    ==    0    ||    t.endsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
26	[BUG]  [BUGGY]  if(t.length()  ==  0  ||  t.endsWith( "-- "))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t.length()  ==  0  ||  t.endsWith( "-- "))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t.length()  ==  0  ||  t.endsWith( "-- "))  {	  if(str.length()    ==    0    ||    t.endsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
27	[BUG]  [BUGGY]  if(str.length()  ==  0  ||  t.endsWith( "-- "))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(str.length()  ==  0  ||  t.endsWith( "-- "))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(str.length()  ==  0  ||  t.endsWith( "-- "))  {	  if(str.length()    ==    0    ||    t.endsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
28	[BUG]  [BUGGY]  ListIterator  iterator  =  this.neededOptions.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  ListIterator  iterator  =  this.neededOptions.iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	ListIterator  iterator  =  this.neededOptions.iterator();	  ListIterator    iterator    =    neededOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
29	[BUG]  [BUGGY]  Iterator  iterator  =  opts.values().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  iterator  =  opts.values().iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  iterator  =  opts.values().iterator();	  Iterator    iterator    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
30	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =(this.arguments!=  null)?  this.arguments.iterator()  :  arguments.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  <  String>  iterator  =(this.arguments!=  null)?  this.arguments.iterator()  :  arguments.iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =(this.arguments!=  null)?  this.arguments.iterator()  :  arguments.iterator();	  Iterator    <    String>    iterator    =    this.arguments.iterator();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
31	[BUG]  [BUGGY]  String  str  =(String)iterator.getValue()  :  null;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  String  str  =(String)iterator.getValue()  :  null;  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	String  str  =(String)iterator.getValue()  :  null;	  String    str    =(String)iterator.next()    :    null;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
32	[BUG]  [BUGGY]  String  str  =(String)iterator.next()  :  t;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  String  str  =(String)iterator.next()  :  t;  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	String  str  =(String)iterator.next()  :  t;	  String    str    =(String)iterator.next()    :    null;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
33	[BUG]  [BUGGY]  if(t  ==  null  ||  str.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t  ==  null  ||  str.length()  ==  0)  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t  ==  null  ||  str.length()  ==  0)  {	  if(str    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
34	[BUG]  [BUGGY]  if(str  ==  null  ||  t.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(str  ==  null  ||  t.length()  ==  0)  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(str  ==  null  ||  t.length()  ==  0)  {	  if(str    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
35	[BUG]  [BUGGY]  if(t!=  null  ||  str.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t!=  null  ||  str.length()  ==  0)  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t!=  null  ||  str.length()  ==  0)  {	  if(str    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
36	[BUG]  [BUGGY]  if(t.equals( "-- ")&&  t.equals( "--))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t.equals( "-- ")&&  t.equals( "--))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t.equals( "-- ")&&  t.equals( "--))  {	  if(t.equals(   "--   ")||    t.equals(   "--))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
37	[BUG]  [BUGGY]  if(str.equals( "-- ")||  str.equals( "--))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(str.equals( "-- ")||  str.equals( "--))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(str.equals( "-- ")||  str.equals( "--))  {	  if(t.equals(   "--   ")||    t.equals(   "--))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
38	[BUG]  [BUGGY]  if(t.equals( "-- ")||  stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t.equals( "-- ")||  stopAtNonOption)  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t.equals( "-- ")||  stopAtNonOption)  {	  if(t.equals(   "--   ")&&!stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
39	[BUG]  [BUGGY]  if(t.equals( "-- ")&&  stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t.equals( "-- ")&&  stopAtNonOption)  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t.equals( "-- ")&&  stopAtNonOption)  {	  if(t.equals(   "--   ")&&!stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
40	[BUG]  [BUGGY]  if(t  ==  null  ||  t.equals( "- "))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t  ==  null  ||  t.equals( "- "))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t  ==  null  ||  t.equals( "- "))  {	  if(t    ==    null    ||    t.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
41	[BUG]  [BUGGY]  if(t  ==  null  ||  t.equals( "null "))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t  ==  null  ||  t.equals( "null "))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t  ==  null  ||  t.equals( "null "))  {	  if(t    ==    null    ||    t.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
42	[BUG]  [BUGGY]  if(t!=  null  ||  t.equals( "- "))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t!=  null  ||  t.equals( "- "))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t!=  null  ||  t.equals( "- "))  {	  if(t    ==    null    ||    t.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
43	[BUG]  [BUGGY]  if(str.equals(t))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(str.equals(t))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(str.equals(t))  {	  if(str.equals(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
44	[BUG]  [BUGGY]  if(t.equals( ".- "))  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t.equals( ".- "))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t.equals( ".- "))  {	  if(str.equals(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
45	[BUG]  [BUGGY]  if(t.equals( "- ")&&  t.equals( "-- "))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t.equals( "- ")&&  t.equals( "-- "))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t.equals( "- ")&&  t.equals( "-- "))  {	  if(t.equals(   "-   ")||    t.equals(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
46	[BUG]  [BUGGY]  if(t.equals( "- ")||  t.equals( "- "))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t.equals( "- ")||  t.equals( "- "))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t.equals( "- ")||  t.equals( "- "))  {	  if(t.equals(   "-   ")||    t.equals(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
47	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  t.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  <  Option>  iterator  =  t.iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  Option>  iterator  =  t.iterator();	  Iterator    <    Option>    iterator    =    this.options.iterator();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
48	[BUG]  [BUGGY]  if(t  ==  null  ||  t.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t  ==  null  ||  t.length()!=  0)  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t  ==  null  ||  t.length()!=  0)  {	  if(t!=    null    ||    t.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
49	[BUG]  [BUGGY]  if(t!=  null  &&! "-   ".equals(t))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t!=  null  &&! "-   ".equals(t))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t!=  null  &&! "-   ".equals(t))  {	  if(t!=    null    ||!   "-   ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
50	[BUG]  [BUGGY]  ListIterator  iterator  =(this.opts!=  null)?  this.opts.iterator()  :  null;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  ListIterator  iterator  =(this.opts!=  null)?  this.opts.iterator()  :  null;  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	ListIterator  iterator  =(this.opts!=  null)?  this.opts.iterator()  :  null;	  ListIterator    iterator    =    this.opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
51	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  this.opts.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  <  Option>  iterator  =  this.opts.iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  Option>  iterator  =  this.opts.iterator();	  Iterator    <    Option>    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
52	[BUG]  [BUGGY]  if(t.length()  ==  0  ||  str.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t.length()  ==  0  ||  str.length()!=  0)  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t.length()  ==  0  ||  str.length()!=  0)  {	  if(str.length()    ==    0    ||    t.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
53	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  option.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  <  String>  iterator  =  option.iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =  option.iterator();	  Iterator    <    String>    iterator    =    opt.iterator();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
54	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  opts.values().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  <  Option>  iterator  =  opts.values().iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  Option>  iterator  =  opts.values().iterator();	  Iterator    <    Option>    iterator    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
55	[BUG]  [BUGGY]  String  str  =(t!=  null)iterator.next();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  String  str  =(t!=  null)iterator.next();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	String  str  =(t!=  null)iterator.next();	  String    str    =(t    ==    null)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
56	[BUG]  [BUGGY]  String  str  =(t  ==  null)iterator.next()  :  t;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  String  str  =(t  ==  null)iterator.next()  :  t;  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	String  str  =(t  ==  null)iterator.next()  :  t;	  String    str    =(t    ==    null)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
57	[BUG]  [BUGGY]  if(!stopAtNonOption  &&  t.equals( "-   "))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(!stopAtNonOption  &&  t.equals( "-   "))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(!stopAtNonOption  &&  t.equals( "-   "))  {	  if(!stopAtNonOption    ||    t.equals(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
58	[BUG]  [BUGGY]  if(!stopAtNonOption  ||  t.equals( "-- "))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(!stopAtNonOption  ||  t.equals( "-- "))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(!stopAtNonOption  ||  t.equals( "-- "))  {	  if(!stopAtNonOption    ||    t.equals(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
59	[BUG]  [BUGGY]  if(!stopAtNonOption  ||  str.equals( "-   "))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(!stopAtNonOption  ||  str.equals( "-   "))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(!stopAtNonOption  ||  str.equals( "-   "))  {	  if(!stopAtNonOption    ||    t.equals(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
60	[BUG]  [BUGGY]  Iterator  iterator  =  opts.keySet().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  iterator  =  opts.keySet().iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  iterator  =  opts.keySet().iterator();	  Iterator    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
61	[BUG]  [BUGGY]  Iterator  iterator  =  optionList.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  iterator  =  optionList.keySet().iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  iterator  =  optionList.keySet().iterator();	  Iterator    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
62	[BUG]  [BUGGY]  if(t!=  null  &&  stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t!=  null  &&  stopAtNonOption)  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t!=  null  &&  stopAtNonOption)  {	  if(t!=    null    &&!stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
63	[BUG]  [BUGGY]  Option  option  =(Option)iterator.next();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Option  option  =(Option)iterator.next();  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Option  option  =(Option)iterator.next();	  Option    opt    =(Option)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
64	[BUG]  [BUGGY]  Option  opt  =(Option)iterator.next(),  str);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Option  opt  =(Option)iterator.next(),  str);  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Option  opt  =(Option)iterator.next(),  str);	  Option    opt    =(Option)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
65	[BUG]  [BUGGY]  ListIterator  iterator  =  options.keyList().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  ListIterator  iterator  =  options.keyList().iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	ListIterator  iterator  =  options.keyList().iterator();	  ListIterator    iterator    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
66	[BUG]  [BUGGY]  ListIterator  iterator  =  this.requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  ListIterator  iterator  =  this.requiredOptions.iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	ListIterator  iterator  =  this.requiredOptions.iterator();	  ListIterator    iterator    =    requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
67	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =(this.requiredOptions  ==  null)?  this.requiredOptions.iterator()  :  t;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  <  String>  iterator  =(this.requiredOptions  ==  null)?  this.requiredOptions.iterator()  :  t;  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =(this.requiredOptions  ==  null)?  this.requiredOptions.iterator()  :  t;	  Iterator    <    String>    iterator    =(this.requiredOptions!=    null)?    this.requiredOptions.iterator()    :    t;    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
68	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =(t  ==  null)?  this.requiredOptions.iterator()  :  t;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  <  String>  iterator  =(t  ==  null)?  this.requiredOptions.iterator()  :  t;  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =(t  ==  null)?  this.requiredOptions.iterator()  :  t;	  Iterator    <    String>    iterator    =(this.requiredOptions!=    null)?    this.requiredOptions.iterator()    :    t;    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
69	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =(this.requiredOptions!=  null)?  this.requiredOptions.iterator()  :  str;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  <  String>  iterator  =(this.requiredOptions!=  null)?  this.requiredOptions.iterator()  :  str;  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =(this.requiredOptions!=  null)?  this.requiredOptions.iterator()  :  str;	  Iterator    <    String>    iterator    =(this.requiredOptions!=    null)?    this.requiredOptions.iterator()    :    t;    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
70	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =(iterator.hasNext())?  str.next()  :  null;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  <  String>  iterator  =(iterator.hasNext())?  str.next()  :  null;  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =(iterator.hasNext())?  str.next()  :  null;	  Iterator    <    String>    iterator    =(iterator.hasNext())?    iterator.next()    :    str;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
71	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =(iterator.hasNext())?  str.next()  :  arguments;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  <  String>  iterator  =(iterator.hasNext())?  str.next()  :  arguments;  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =(iterator.hasNext())?  str.next()  :  arguments;	  Iterator    <    String>    iterator    =(iterator.hasNext())?    iterator.next()    :    str;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
72	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =(iterator.hasNext())?  str.next()  :  argument;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  <  String>  iterator  =(iterator.hasNext())?  str.next()  :  argument;  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =(iterator.hasNext())?  str.next()  :  argument;	  Iterator    <    String>    iterator    =(iterator.hasNext())?    iterator.next()    :    str;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
73	[BUG]  [BUGGY]  if(t.equals( "-- ")&&  t.equals( "-- "))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t.equals( "-- ")&&  t.equals( "-- "))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t.equals( "-- ")&&  t.equals( "-- "))  {	  if(t.equals(   "--   ")||    t.equals(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
74	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  this.requiredOptions.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  <  String>  iterator  =  this.requiredOptions.keySet().iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =  this.requiredOptions.keySet().iterator();	  Iterator    <    String>    iterator    =    this.requiredOptions.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
75	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  requiredOptions.values().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  <  String>  iterator  =  requiredOptions.values().iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =  requiredOptions.values().iterator();	  Iterator    <    String>    iterator    =    this.requiredOptions.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
76	[BUG]  [BUGGY]  if(t!=  null  ||!StringUtils.isEmpty(t))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t!=  null  ||!StringUtils.isEmpty(t))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t!=  null  ||!StringUtils.isEmpty(t))  {	  if(t    ==    null    ||!StringUtils.isEmpty(t))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
77	[BUG]  [BUGGY]  if(t  ==  null  ||!StringUtils.isEmpty(str))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t  ==  null  ||!StringUtils.isEmpty(str))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t  ==  null  ||!StringUtils.isEmpty(str))  {	  if(t    ==    null    ||!StringUtils.isEmpty(t))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
78	[BUG]  [BUGGY]  if(t!=  null  ||!StringUtils.isEmpty(str))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t!=  null  ||!StringUtils.isEmpty(str))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t!=  null  ||!StringUtils.isEmpty(str))  {	  if(t    ==    null    ||!StringUtils.isEmpty(t))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
79	[BUG]  [BUGGY]  if(!stopAtNonOption  &&  str.equals(t))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(!stopAtNonOption  &&  str.equals(t))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(!stopAtNonOption  &&  str.equals(t))  {	  if(!stopAtNonOption    &&    cmd.equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
80	[BUG]  [BUGGY]  if(!stopAtNonOption  &&  t.equals(cmd))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(!stopAtNonOption  &&  t.equals(cmd))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(!stopAtNonOption  &&  t.equals(cmd))  {	  if(!stopAtNonOption    &&    cmd.equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
81	[BUG]  [BUGGY]  if(stopAtNonOption  &&  cmd.equals(t))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(stopAtNonOption  &&  cmd.equals(t))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(stopAtNonOption  &&  cmd.equals(t))  {	  if(!stopAtNonOption    &&    cmd.equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
82	[BUG]  [BUGGY]  if(t  ==  null  ||!stopAtNonOption  &&  it.hasNext())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t  ==  null  ||!stopAtNonOption  &&  it.hasNext())  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t  ==  null  ||!stopAtNonOption  &&  it.hasNext())  {	  if(!stopAtNonOption    &&    it.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
83	[BUG]  [BUGGY]  if(t!=  null  ||!stopAtNonOption  &&  it.hasNext())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t!=  null  ||!stopAtNonOption  &&  it.hasNext())  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t!=  null  ||!stopAtNonOption  &&  it.hasNext())  {	  if(!stopAtNonOption    &&    it.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
84	[BUG]  [BUGGY]  if(stopAtNonOption  &&  it.hasNext())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(stopAtNonOption  &&  it.hasNext())  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(stopAtNonOption  &&  it.hasNext())  {	  if(!stopAtNonOption    &&    it.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
85	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :  string;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :  string;  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :  string;	  Iterator    <    String>    iterator    =(iterator.hasNext())?    iterator.next()    :    null;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
86	[BUG]  [BUGGY]  String  str  =(STRING)iterator.next();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  String  str  =(STRING)iterator.next();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	String  str  =(STRING)iterator.next();	  char    str    =(char)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
87	[BUG]  [BUGGY]  Iterator  iterator  =  this.neededOptions.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  iterator  =  this.neededOptions.iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  iterator  =  this.neededOptions.iterator();	  Iterator    iterator    =    neededOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
88	[BUG]  [BUGGY]  Iterator  iterator  =  this.requiredOptions.keySet().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  iterator  =  this.requiredOptions.keySet().iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  iterator  =  this.requiredOptions.keySet().iterator();	  Iterator    iterator    =    this.requiredOptions.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
89	[BUG]  [BUGGY]  Iterator  iterator  =  requiredOptions.values().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  iterator  =  requiredOptions.values().iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  iterator  =  requiredOptions.values().iterator();	  Iterator    iterator    =    this.requiredOptions.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
90	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  this.opts.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  <  String>  iterator  =  this.opts.iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =  this.opts.iterator();	  Iterator    <    String>    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
91	[BUG]  [BUGGY]  if(t  ==  null  ||  t.length()  >=  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t  ==  null  ||  t.length()  >=  0)  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t  ==  null  ||  t.length()  >=  0)  {	  if(t    ==    null    ||    t.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
92	[BUG]  [BUGGY]  if(t.equals( "--))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t.equals( "--))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t.equals( "--))  {	  if(str.equals(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
93	[BUG]  [BUGGY]  if(t.length()  ==  0  ||  str.equals( "- "))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t.length()  ==  0  ||  str.equals( "- "))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t.length()  ==  0  ||  str.equals( "- "))  {	  if(str.length()    ==    0    ||    t.equals(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
94	[BUG]  [BUGGY]  if(t.length()  ==  0  ||  t.equals( "- "))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t.length()  ==  0  ||  t.equals( "- "))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t.length()  ==  0  ||  t.equals( "- "))  {	  if(str.length()    ==    0    ||    t.equals(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
95	[BUG]  [BUGGY]  if(t.length()  ==  0  ||  str.equals( "-))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t.length()  ==  0  ||  str.equals( "-))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t.length()  ==  0  ||  str.equals( "-))  {	  if(str.length()    ==    0    ||    t.equals(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
96	[BUG]  [BUGGY]  ListIterator  iterator  =  optionList.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  ListIterator  iterator  =  optionList.keySet().iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	ListIterator  iterator  =  optionList.keySet().iterator();	  ListIterator    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
97	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  str.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  <  String>  iterator  =  str.iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =  str.iterator();	  Iterator    <    String>    iterator    =    t.iterator();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
98	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  neededOptions.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  <  String>  iterator  =  neededOptions.iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =  neededOptions.iterator();	  Iterator    <    String>    iterator    =    t.requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
99	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  opts.keySet().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  <  Option>  iterator  =  opts.keySet().iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  Option>  iterator  =  opts.keySet().iterator();	  Iterator    <    Option>    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
100	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  optionList.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  <  Option>  iterator  =  optionList.keySet().iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  Option>  iterator  =  optionList.keySet().iterator();	  Iterator    <    Option>    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
101	[BUG]  [BUGGY]  if(t.equals( "- ")||  t.equals( "--))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t.equals( "- ")||  t.equals( "--))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t.equals( "- ")||  t.equals( "--))  {	  if(t.equals(   "--   ")||    t.equals(   "--))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
102	[BUG]  [BUGGY]  Iterator  iterator  =  options.options().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  iterator  =  options.options().iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  iterator  =  options.options().iterator();	  Iterator    iterator    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
103	[BUG]  [BUGGY]  if(t  ==  null  &&!stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t  ==  null  &&!stopAtNonOption)  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t  ==  null  &&!stopAtNonOption)  {	  if(t!=    null    &&!stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
104	[BUG]  [BUGGY]  if(t  ==  null  &&  stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t  ==  null  &&  stopAtNonOption)  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t  ==  null  &&  stopAtNonOption)  {	  if(t!=    null    &&!stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
105	[BUG]  [BUGGY]  if(t!=  null  ||! "-- ".equals(t))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t!=  null  ||! "-- ".equals(t))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t!=  null  ||! "-- ".equals(t))  {	  if(t!=    null    ||!   "-   ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
106	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :  arguments;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :  arguments;  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :  arguments;	  Iterator    <    String>    iterator    =(iterator.hasNext())?    iterator.next()    :    null;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
107	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :  this;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :  this;  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :  this;	  Iterator    <    String>    iterator    =(iterator.hasNext())?    iterator.next()    :    null;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
108	[BUG]  [BUGGY]  Iterator  iterator  =  opt.arguments.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  iterator  =  opt.arguments.iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  iterator  =  opt.arguments.iterator();	  Iterator    iterator    =    this.arguments.iterator();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
109	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  opt.arguments.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  <  String>  iterator  =  opt.arguments.iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =  opt.arguments.iterator();	  Iterator    <    String>    iterator    =    this.arguments.iterator();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
110	[BUG]  [BUGGY]  Iterator  iterator  =  options.options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  iterator  =  options.options.keySet().iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  iterator  =  options.options.keySet().iterator();	  Iterator    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
111	[BUG]  [BUGGY]  ListIterator  iterator  =  options.options().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  ListIterator  iterator  =  options.options().iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	ListIterator  iterator  =  options.options().iterator();	  ListIterator    iterator    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
112	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  opt.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  <  Option>  iterator  =  opt.iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  Option>  iterator  =  opt.iterator();	  Iterator    <    Option>    iterator    =    this.options.iterator();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
113	[BUG]  [BUGGY]  String  str  =(t)iterator.next(),  iterator);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  String  str  =(t)iterator.next(),  iterator);  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	String  str  =(t)iterator.next(),  iterator);	  String    str    =(String)iterator.next(),    t);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
114	[BUG]  [BUGGY]  Options  group  =(Option)iterator.next();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Options  group  =(Option)iterator.next();  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Options  group  =(Option)iterator.next();	  Option    group    =(Option)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
115	[BUG]  [BUGGY]  Iterator  iterator  =  opt.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  iterator  =  opt.iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  iterator  =  opt.iterator();	  Iterator    iterator    =    requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
116	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  preferredOptions.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  <  String>  iterator  =  preferredOptions.iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =  preferredOptions.iterator();	  Iterator    <    String>    iterator    =    opt.iterator();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
117	[BUG]  [BUGGY]  if(t.equals( "-- ")||!stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t.equals( "-- ")||!stopAtNonOption)  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t.equals( "-- ")||!stopAtNonOption)  {	  if(t.equals(   "--   ")&&!stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
118	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  optionList.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  <  String>  iterator  =  optionList.keySet().iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =  optionList.keySet().iterator();	  Iterator    <    String>    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
119	[BUG]  [BUGGY]  Iterator  iterator  =  this.options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  iterator  =  this.options.keySet().iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  iterator  =  this.options.keySet().iterator();	  Iterator    iterator    =    this.options.iterator();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
120	[BUG]  [BUGGY]  ListIterator  iterator  =  opt.iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  ListIterator  iterator  =  opt.iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	ListIterator  iterator  =  opt.iterator();	  ListIterator    iterator    =    t.iterator();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
121	[BUG]  [BUGGY]  if(t  ==  null  &&  t.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t  ==  null  &&  t.length()  >  0)  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t  ==  null  &&  t.length()  >  0)  {	  if(t!=    null    &&    t.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
122	[BUG]  [BUGGY]  if(str.length()  ==  0  ||  t.equals( "-- "))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(str.length()  ==  0  ||  t.equals( "-- "))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(str.length()  ==  0  ||  t.equals( "-- "))  {	  if(str.length()    ==    0    ||    t.equals(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
123	[BUG]  [BUGGY]  if(t  ==  null  ||!StringUtils.isEmpty(t)||!StringUtils.isEmpty(t))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t  ==  null  ||!StringUtils.isEmpty(t)||!StringUtils.isEmpty(t))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t  ==  null  ||!StringUtils.isEmpty(t)||!StringUtils.isEmpty(t))  {	  if(t    ==    null    ||!StringUtils.isEmpty(t))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
124	[BUG]  [BUGGY]  ListIterator  iterator  =  options.options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  ListIterator  iterator  =  options.options.keySet().iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	ListIterator  iterator  =  options.options.keySet().iterator();	  ListIterator    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
125	[BUG]  [BUGGY]  if(stopAtNonOption  ||  iterator.hasNext())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(stopAtNonOption  ||  iterator.hasNext())  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(stopAtNonOption  ||  iterator.hasNext())  {	  if(!stopAtNonOption    &&    iterator.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
126	[BUG]  [BUGGY]  if(t.length()  ==  0  ||  str.endsWith( "-- "))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t.length()  ==  0  ||  str.endsWith( "-- "))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t.length()  ==  0  ||  str.endsWith( "-- "))  {	  if(str.length()    ==    0    ||    t.endsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
127	[BUG]  [BUGGY]  if(t!=  null  ||  t.equals( " "))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t!=  null  ||  t.equals( " "))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t!=  null  ||  t.equals( " "))  {	  if(t    ==    null    ||    t.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
128	[BUG]  [BUGGY]  if(t.equals(str))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t.equals(str))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t.equals(str))  {	  if(str.equals(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
129	[BUG]  [BUGGY]  if(t.equals( ".-- "))  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t.equals( ".-- "))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t.equals( ".-- "))  {	  if(str.equals(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
130	[BUG]  [BUGGY]  if(t!=  null  ||!stopAtNonOption  &&  t.equals( "-   "))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t!=  null  ||!stopAtNonOption  &&  t.equals( "-   "))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t!=  null  ||!stopAtNonOption  &&  t.equals( "-   "))  {	  if(!stopAtNonOption    ||    t.equals(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
131	[BUG]  [BUGGY]  if(t  ==  null  ||!stopAtNonOption  &&  t.equals( "-   "))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t  ==  null  ||!stopAtNonOption  &&  t.equals( "-   "))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t  ==  null  ||!stopAtNonOption  &&  t.equals( "-   "))  {	  if(!stopAtNonOption    ||    t.equals(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
132	[BUG]  [BUGGY]  if(cmd  ==  null  ||!stopAtNonOption  &&  cmd.equals(t))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(cmd  ==  null  ||!stopAtNonOption  &&  cmd.equals(t))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(cmd  ==  null  ||!stopAtNonOption  &&  cmd.equals(t))  {	  if(!stopAtNonOption    &&    cmd.equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
133	[BUG]  [BUGGY]  if(!stopAtNonOption  ||  cmd.equals(t))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(!stopAtNonOption  ||  cmd.equals(t))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(!stopAtNonOption  ||  cmd.equals(t))  {	  if(!stopAtNonOption    &&    cmd.equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
134	[BUG]  [BUGGY]  String  str  =(String)iterator.next()  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  String  str  =(String)iterator.next()  +  1;  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	String  str  =(String)iterator.next()  +  1;	  String    str    =(String)iterator.next()    +    arguments;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
135	[BUG]  [BUGGY]  if(t!=  null  ||!t.equals( " "))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t!=  null  ||!t.equals( " "))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t!=  null  ||!t.equals( " "))  {	  if(t    ==    null    ||!t.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
136	[BUG]  [BUGGY]  if(t  ==  null  ||  str.length()  ==  0  ||  t.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t  ==  null  ||  str.length()  ==  0  ||  t.length()  ==  0)  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t  ==  null  ||  str.length()  ==  0  ||  t.length()  ==  0)  {	  if(str.length()    ==    0    ||    t.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
137	[BUG]  [BUGGY]  Iterator  iterator  =  options.requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  iterator  =  options.requiredOptions.iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  iterator  =  options.requiredOptions.iterator();	  Iterator    iterator    =    t.requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
138	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :  t;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :  t;  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :  t;	  Iterator    <    String>    iterator    =(iterator.hasNext())?    iterator.next()    :    str;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
139	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :  argument;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :  argument;  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :  argument;	  Iterator    <    String>    iterator    =(iterator.hasNext())?    iterator.next()    :    str;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
140	[BUG]  [BUGGY]  Option  opt  =(Option)iterator.getNext();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Option  opt  =(Option)iterator.getNext();  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Option  opt  =(Option)iterator.getNext();	  Option    opt    =(Option)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
141	[BUG]  [BUGGY]  String  str  =(t)iterator.next()  :  null;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  String  str  =(t)iterator.next()  :  null;  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	String  str  =(t)iterator.next()  :  null;	  String    str    =(String)iterator.next()    :    null;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
142	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  <  Option>  iterator  =  requiredOptions.iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  Option>  iterator  =  requiredOptions.iterator();	  Iterator    <    Option>    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
143	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  options.requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  <  String>  iterator  =  options.requiredOptions.iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =  options.requiredOptions.iterator();	  Iterator    <    String>    iterator    =    t.requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
144	[BUG]  [BUGGY]  if(t.length()  ==  0  ||  t.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t.length()  ==  0  ||  t.length()!=  0)  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t.length()  ==  0  ||  t.length()!=  0)  {	  if(t.length()    ==    0    ||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
145	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =(t!=  null)?  this.requiredOptions.iterator()  :  t;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  <  String>  iterator  =(t!=  null)?  this.requiredOptions.iterator()  :  t;  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =(t!=  null)?  this.requiredOptions.iterator()  :  t;	  Iterator    <    String>    iterator    =(this.requiredOptions!=    null)?    this.requiredOptions.iterator()    :    t;    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
146	[BUG]  [BUGGY]  if(t.equals(str)||  t.equals( "- "))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t.equals(str)||  t.equals( "- "))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t.equals(str)||  t.equals( "- "))  {	  if(str.length()    ==    0    ||    t.equals(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
147	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  opt.keySet().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  <  Option>  iterator  =  opt.keySet().iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  Option>  iterator  =  opt.keySet().iterator();	  Iterator    <    Option>    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
148	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  this.options.values().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  <  Option>  iterator  =  this.options.values().iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  Option>  iterator  =  this.options.values().iterator();	  Iterator    <    Option>    iterator    =    this.options.iterator();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
149	[BUG]  [BUGGY]  if(t.length()  ==  0  ||!stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t.length()  ==  0  ||!stopAtNonOption)  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t.length()  ==  0  ||!stopAtNonOption)  {	  if(t.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
150	[BUG]  [BUGGY]  ListIterator  iterator  =  arguments.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  ListIterator  iterator  =  arguments.iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	ListIterator  iterator  =  arguments.iterator();	  ListIterator    iterator    =    this.options.iterator();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
151	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =(this.requiredOptions!=  null)?  this.requiredOptions.values().iterator()  :  t;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  Iterator  <  String>  iterator  =(this.requiredOptions!=  null)?  this.requiredOptions.values().iterator()  :  t;  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =(this.requiredOptions!=  null)?  this.requiredOptions.values().iterator()  :  t;	  Iterator    <    String>    iterator    =    this.requiredOptions.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
152	[BUG]  [BUGGY]  if(!stopAtNonOption  &&  arguments.equals(t))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(!stopAtNonOption  &&  arguments.equals(t))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(!stopAtNonOption  &&  arguments.equals(t))  {	  if(!stopAtNonOption    &&    cmd.equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
153	[BUG]  [BUGGY]  if(! "-- ".equals(t))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(! "-- ".equals(t))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(! "-- ".equals(t))  {	  if(!stopAtNonOption    &&    cmd.equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
154	[BUG]  [BUGGY]  if(t  ==  null  ||!StringUtils.isEmpty(t)&&!stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t  ==  null  ||!StringUtils.isEmpty(t)&&!stopAtNonOption)  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t  ==  null  ||!StringUtils.isEmpty(t)&&!stopAtNonOption)  {	  if(t    ==    null    ||!StringUtils.isEmpty(t))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
155	[BUG]  [BUGGY]  String  str  =(t  ==  null)iterator.next(),  t);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  String  str  =(t  ==  null)iterator.next(),  t);  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	String  str  =(t  ==  null)iterator.next(),  t);	  String    str    =(t    ==    null)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
156	[BUG]  [BUGGY]  if(t.length()  ==  0  ||  t.endsWith( ". "))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t.length()  ==  0  ||  t.endsWith( ". "))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t.length()  ==  0  ||  t.endsWith( ". "))  {	  if(str.length()    ==    0    ||    t.endsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
157	[BUG]  [BUGGY]  if(t  ==  null  ||!stopAtNonOption  ||  t.equals( "- "))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t  ==  null  ||!stopAtNonOption  ||  t.equals( "- "))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t  ==  null  ||!stopAtNonOption  ||  t.equals( "- "))  {	  if(!stopAtNonOption    ||    t.equals(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
158	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)iterator.getIterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  OptionGroup  group  =(OptionGroup)iterator.getIterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	OptionGroup  group  =(OptionGroup)iterator.getIterator();	  OptionGroup    group    =(OptionGroup)iterator.getValue();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
159	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)iterator.getImplicitReturn();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  OptionGroup  group  =(OptionGroup)iterator.getImplicitReturn();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	OptionGroup  group  =(OptionGroup)iterator.getImplicitReturn();	  OptionGroup    group    =(OptionGroup)iterator.getValue();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
160	[BUG]  [BUGGY]  if(t.length()  ==  0  ||  arguments.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t.length()  ==  0  ||  arguments.length()  ==  0)  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t.length()  ==  0  ||  arguments.length()  ==  0)  {	  if(t.length()    ==    0    ||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
161	[BUG]  [BUGGY]  ListIterator  iterator  =  options.opts.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  ListIterator  iterator  =  options.opts.keySet().iterator();  [BUGGY]      if  (     "--     ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	ListIterator  iterator  =  options.opts.keySet().iterator();	  ListIterator    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
162	[BUG]  [BUGGY]  if(t!=  null  &&!stopAtNonOption  &&  it.hasNext())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t!=  null  &&!stopAtNonOption  &&  it.hasNext())  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t!=  null  &&!stopAtNonOption  &&  it.hasNext())  {	  if(!stopAtNonOption    &&    it.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
163	[BUG]  [BUGGY]  if(t.equals(str)||  t.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t.equals(str)||  t.length()  ==  0)  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t.equals(str)||  t.length()  ==  0)  {	  if(str.length()    ==    0    ||    t.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
164	[BUG]  [BUGGY]  if(t  ==  null  ||  str.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t  ==  null  ||  str.length()!=  0)  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t  ==  null  ||  str.length()!=  0)  {	  if(str    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
165	[BUG]  [BUGGY]  if(t  ==  null  ||  t.equals( "_ "))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();        [BUGGY]  if(t  ==  null  ||  t.equals( "_ "))  {  [BUGGY]      {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t  ==  null  ||  t.equals( "_ "))  {	  if(t    ==    null    ||    t.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
