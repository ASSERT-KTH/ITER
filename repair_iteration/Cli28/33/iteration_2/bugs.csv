bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(t.equals( "-- ")||  t.equals( "-- "))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  if(t.equals( "-- ")||  t.equals( "-- "))  {  [BUGGY]    {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t.equals( "-- ")||  t.equals( "-- "))  {	  if(t.equals(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  if(t.equals( "-- ")||  t.equals( "--))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  if(t.equals( "-- ")||  t.equals( "--))  {  [BUGGY]    {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t.equals( "-- ")||  t.equals( "--))  {	  if(t.equals(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  if(str.equals( "-- "))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  if(str.equals( "-- "))  {  [BUGGY]    {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(str.equals( "-- "))  {	  if(t.equals(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  if(t  ==  null  ||!stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  if(t  ==  null  ||!stopAtNonOption)  {  [BUGGY]    {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t  ==  null  ||!stopAtNonOption)  {	  if(t!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
5	[BUG]  [BUGGY]  if(t  ==  null  ||  t.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  if(t  ==  null  ||  t.length()  ==  0)  {  [BUGGY]    {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t  ==  null  ||  t.length()  ==  0)  {	  if(t!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
6	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  this.arguments.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  Iterator  <  String>  iterator  =  this.arguments.iterator();  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =  this.arguments.iterator();	      Iterator    <    String>    iterator    =    arguments.iterator();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
7	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  t.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  Iterator  <  String>  iterator  =  t.iterator();  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =  t.iterator();	      Iterator    <    String>    iterator    =    arguments.iterator();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
8	[BUG]  [BUGGY]  if(t  ==  null  ||!StringUtils.isEmpty(t))  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  if(t  ==  null  ||!StringUtils.isEmpty(t))  {  [BUGGY]    {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t  ==  null  ||!StringUtils.isEmpty(t))  {	  if(t    ==    null    ||!   "-   ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
9	[BUG]  [BUGGY]  ListIterator  iterator  =  this.opts.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  ListIterator  iterator  =  this.opts.iterator();  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	ListIterator  iterator  =  this.opts.iterator();	      ListIterator    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
10	[BUG]  [BUGGY]  ListIterator  iterator  =  requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  ListIterator  iterator  =  requiredOptions.iterator();  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	ListIterator  iterator  =  requiredOptions.iterator();	      ListIterator    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
11	[BUG]  [BUGGY]  ListIterator  iterator  =  t.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  ListIterator  iterator  =  t.iterator();  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	ListIterator  iterator  =  t.iterator();	      ListIterator    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
12	[BUG]  [BUGGY]  if(!stopAtNonOption  &&  iterator.hasNext())  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  if(!stopAtNonOption  &&  iterator.hasNext())  {  [BUGGY]    {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(!stopAtNonOption  &&  iterator.hasNext())  {	  if(!stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
13	[BUG]  [BUGGY]  if(!stopAtNonOption  &&  cmd.equals(t))  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  if(!stopAtNonOption  &&  cmd.equals(t))  {  [BUGGY]    {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(!stopAtNonOption  &&  cmd.equals(t))  {	  if(!stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
14	[BUG]  [BUGGY]  if(!stopAtNonOption  &&  it.hasNext())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  if(!stopAtNonOption  &&  it.hasNext())  {  [BUGGY]    {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(!stopAtNonOption  &&  it.hasNext())  {	  if(!stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
15	[BUG]  [BUGGY]  if(t.equals( "- ")||  t.equals( "-- "))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  if(t.equals( "- ")||  t.equals( "-- "))  {  [BUGGY]    {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t.equals( "- ")||  t.equals( "-- "))  {	  if(t.equals(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
16	[BUG]  [BUGGY]  if(str.equals( "- "))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  if(str.equals( "- "))  {  [BUGGY]    {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(str.equals( "- "))  {	  if(t.equals(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
17	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  this.options.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  Iterator  <  String>  iterator  =  this.options.iterator();  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =  this.options.iterator();	      Iterator    <    String>    iterator    =    this.requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
18	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  Iterator  <  String>  iterator  =  requiredOptions.iterator();  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =  requiredOptions.iterator();	      Iterator    <    String>    iterator    =    this.requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
19	[BUG]  [BUGGY]  Iterator  iterator  =  this.options.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  Iterator  iterator  =  this.options.iterator();  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  iterator  =  this.options.iterator();	      Iterator    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
20	[BUG]  [BUGGY]  Iterator  iterator  =  opts.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  Iterator  iterator  =  opts.iterator();  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  iterator  =  opts.iterator();	      Iterator    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
21	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  opts.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  Iterator  <  String>  iterator  =  opts.iterator();  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =  opts.iterator();	      Iterator    <    String>    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
22	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  options.values().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  Iterator  <  String>  iterator  =  options.values().iterator();  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =  options.values().iterator();	      Iterator    <    String>    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
23	[BUG]  [BUGGY]  if(t.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  if(t.length()  ==  0)  {  [BUGGY]    {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t.length()  ==  0)  {	  if(str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
24	[BUG]  [BUGGY]  if(str.length()  ==  0  ||  t.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  if(str.length()  ==  0  ||  t.length()  ==  0)  {  [BUGGY]    {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(str.length()  ==  0  ||  t.length()  ==  0)  {	  if(str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
25	[BUG]  [BUGGY]  if(t.length()  ==  0  ||  str.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  if(t.length()  ==  0  ||  str.length()  ==  0)  {  [BUGGY]    {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t.length()  ==  0  ||  str.length()  ==  0)  {	  if(str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
26	[BUG]  [BUGGY]  ListIterator  iterator  =  this.options.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  ListIterator  iterator  =  this.options.iterator();  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	ListIterator  iterator  =  this.options.iterator();	      ListIterator    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
27	[BUG]  [BUGGY]  Iterator  iterator  =  this.arguments.iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  Iterator  iterator  =  this.arguments.iterator();  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  iterator  =  this.arguments.iterator();	      Iterator    iterator    =    arguments.iterator();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
28	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  this.options.iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  Iterator  <  Option>  iterator  =  this.options.iterator();  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  Option>  iterator  =  this.options.iterator();	      Iterator    <    Option>    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
29	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  opts.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  Iterator  <  Option>  iterator  =  opts.iterator();  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  Option>  iterator  =  opts.iterator();	      Iterator    <    Option>    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
30	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  options.values().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  Iterator  <  Option>  iterator  =  options.values().iterator();  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  Option>  iterator  =  options.values().iterator();	      Iterator    <    Option>    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
31	[BUG]  [BUGGY]  Option  group  =(OptionGroup)iterator.next();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  Option  group  =(OptionGroup)iterator.next();  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Option  group  =(OptionGroup)iterator.next();	      OptionGroup    group    =(OptionGroup)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
32	[BUG]  [BUGGY]  optionGroup  group  =(OptionGroup)iterator.next();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  optionGroup  group  =(OptionGroup)iterator.next();  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	optionGroup  group  =(OptionGroup)iterator.next();	      OptionGroup    group    =(OptionGroup)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
33	[BUG]  [BUGGY]  String  str  =(String)iterator.next()  :  null;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  String  str  =(String)iterator.next()  :  null;  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	String  str  =(String)iterator.next()  :  null;	      String    str    =(String)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
34	[BUG]  [BUGGY]  String  str  =(String)iterator.next(),  t);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  String  str  =(String)iterator.next(),  t);  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	String  str  =(String)iterator.next(),  t);	      String    str    =(String)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
35	[BUG]  [BUGGY]  Iterator  iterator  =  requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  Iterator  iterator  =  requiredOptions.iterator();  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  iterator  =  requiredOptions.iterator();	      Iterator    iterator    =    this.requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
36	[BUG]  [BUGGY]  ListIterator  iterator  =  options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  ListIterator  iterator  =  options.keySet().iterator();  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	ListIterator  iterator  =  options.keySet().iterator();	      ListIterator    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
37	[BUG]  [BUGGY]  Iterator  iterator  =  options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  Iterator  iterator  =  options.keySet().iterator();  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  iterator  =  options.keySet().iterator();	      Iterator    iterator    =    arguments.iterator();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
38	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :  null;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :  null;  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :  null;	      Iterator    <    String>    it    =    iterator.next();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
39	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  Iterator  <  String>  iterator  =  options.keySet().iterator();  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =  options.keySet().iterator();	      Iterator    <    String>    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
40	[BUG]  [BUGGY]  Iterator  iterator  =  options.values().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  Iterator  iterator  =  options.values().iterator();  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  iterator  =  options.values().iterator();	      Iterator    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
41	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  opt.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  Iterator  <  String>  iterator  =  opt.iterator();  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =  opt.iterator();	      Iterator    <    String>    iterator    =    arguments.iterator();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
42	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  [BUGGY]    {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(str  ==  null  ||  str.length()  ==  0)  {	  if(str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
43	[BUG]  [BUGGY]  if(str!=  null  ||  str.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  if(str!=  null  ||  str.length()  ==  0)  {  [BUGGY]    {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(str!=  null  ||  str.length()  ==  0)  {	  if(str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
44	[BUG]  [BUGGY]  Option  opt  =(Option)iterator.next();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  Option  opt  =(Option)iterator.next();  [BUGGY]    {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Option  opt  =(Option)iterator.next();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
45	[BUG]  [BUGGY]  Option  group  =(Option)iterator.next();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  Option  group  =(Option)iterator.next();  [BUGGY]    {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Option  group  =(Option)iterator.next();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
46	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  this.requiredOptions.values().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  Iterator  <  String>  iterator  =  this.requiredOptions.values().iterator();  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =  this.requiredOptions.values().iterator();	      Iterator    <    String>    iterator    =    this.requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
47	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  Iterator  <  Option>  iterator  =  options.keySet().iterator();  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  Option>  iterator  =  options.keySet().iterator();	      Iterator    <    Option>    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
48	[BUG]  [BUGGY]  Iterator  iterator  =  this.requiredOptions.values().iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  Iterator  iterator  =  this.requiredOptions.values().iterator();  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  iterator  =  this.requiredOptions.values().iterator();	      Iterator    iterator    =    this.requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
49	[BUG]  [BUGGY]  String  str  =(t  ==  null)iterator.next();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  String  str  =(t  ==  null)iterator.next();  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	String  str  =(t  ==  null)iterator.next();	      String    str    =(String)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
50	[BUG]  [BUGGY]  String  str  =(String)iterator.next()  +  arguments;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  String  str  =(String)iterator.next()  +  arguments;  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	String  str  =(String)iterator.next()  +  arguments;	      String    str    =(String)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
51	[BUG]  [BUGGY]  if(t  ==  null  ||! "-- ".equals(t))  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  if(t  ==  null  ||! "-- ".equals(t))  {  [BUGGY]    {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t  ==  null  ||! "-- ".equals(t))  {	  if(t    ==    null    ||!   "-   ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
52	[BUG]  [BUGGY]  if(t.equals( "-- ")&&!stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  if(t.equals( "-- ")&&!stopAtNonOption)  {  [BUGGY]    {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t.equals( "-- ")&&!stopAtNonOption)  {	  if(t.equals(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
53	[BUG]  [BUGGY]  ListIterator  iterator  =  options.values().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  ListIterator  iterator  =  options.values().iterator();  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	ListIterator  iterator  =  options.values().iterator();	      ListIterator    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
54	[BUG]  [BUGGY]  if(t!=  null  ||  t.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  if(t!=  null  ||  t.length()  ==  0)  {  [BUGGY]    {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t!=  null  ||  t.length()  ==  0)  {	  if(t!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
55	[BUG]  [BUGGY]  if(t!=  null  ||!stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  if(t!=  null  ||!stopAtNonOption)  {  [BUGGY]    {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t!=  null  ||!stopAtNonOption)  {	  if(t!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
56	[BUG]  [BUGGY]  if(t  ==  null  ||!t.equals( " "))  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  if(t  ==  null  ||!t.equals( " "))  {  [BUGGY]    {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t  ==  null  ||!t.equals( " "))  {	  if(t    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
57	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :  str;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :  str;  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :  str;	      Iterator    <    String>    iterator    =    iterator.next();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
58	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)iterator.getValue();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  OptionGroup  group  =(OptionGroup)iterator.getValue();  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	OptionGroup  group  =(OptionGroup)iterator.getValue();	      OptionGroup    group    =(OptionGroup)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
59	[BUG]  [BUGGY]  ListIterator  iterator  =  neededOptions.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  ListIterator  iterator  =  neededOptions.iterator();  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	ListIterator  iterator  =  neededOptions.iterator();	      ListIterator    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
60	[BUG]  [BUGGY]  if(str.length()  ==  0  ||  t.endsWith( "- "))  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  if(str.length()  ==  0  ||  t.endsWith( "- "))  {  [BUGGY]    {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(str.length()  ==  0  ||  t.endsWith( "- "))  {	  if(str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
61	[BUG]  [BUGGY]  if(str.length()  ==  0  ||  t.equals( "- "))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  if(str.length()  ==  0  ||  t.equals( "- "))  {  [BUGGY]    {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(str.length()  ==  0  ||  t.equals( "- "))  {	  if(str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
62	[BUG]  [BUGGY]  char  str  =(char)iterator.next();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  char  str  =(char)iterator.next();  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	char  str  =(char)iterator.next();	      String    str    =(String)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
63	[BUG]  [BUGGY]  if(t!=  null  &&  t.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  if(t!=  null  &&  t.length()  >  0)  {  [BUGGY]    {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t!=  null  &&  t.length()  >  0)  {	  if(t!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
64	[BUG]  [BUGGY]  if(t!=  null  &&!stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  if(t!=  null  &&!stopAtNonOption)  {  [BUGGY]    {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t!=  null  &&!stopAtNonOption)  {	  if(t!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
65	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =(this.requiredOptions!=  null)?  this.requiredOptions.iterator()  :  t;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  Iterator  <  String>  iterator  =(this.requiredOptions!=  null)?  this.requiredOptions.iterator()  :  t;  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =(this.requiredOptions!=  null)?  this.requiredOptions.iterator()  :  t;	      Iterator    <    String>    iterator    =    this.requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
66	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  t.requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  Iterator  <  String>  iterator  =  t.requiredOptions.iterator();  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  <  String>  iterator  =  t.requiredOptions.iterator();	      Iterator    <    String>    iterator    =    this.requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
67	[BUG]  [BUGGY]  if(t  ==  null  ||  t.equals( " "))  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  if(t  ==  null  ||  t.equals( " "))  {  [BUGGY]    {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t  ==  null  ||  t.equals( " "))  {	  if(t    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
68	[BUG]  [BUGGY]  if(t!=  null  ||! "- ".equals(t))  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  if(t!=  null  ||! "- ".equals(t))  {  [BUGGY]    {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(t!=  null  ||! "- ".equals(t))  {	  if(t    ==    null    ||!   "-   ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
69	[BUG]  [BUGGY]  if(!stopAtNonOption  ||  t.equals( "- "))  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  if(!stopAtNonOption  ||  t.equals( "- "))  {  [BUGGY]    {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	if(!stopAtNonOption  ||  t.equals( "- "))  {	  if(!stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
70	[BUG]  [BUGGY]  Iterator  iterator  =  this.opts.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  Iterator  iterator  =  this.opts.iterator();  [BUGGY]    {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  iterator  =  this.opts.iterator();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
71	[BUG]  [BUGGY]  Iterator  iterator  =  t.requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  Iterator  iterator  =  t.requiredOptions.iterator();  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  iterator  =  t.requiredOptions.iterator();	      Iterator    iterator    =    this.requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
72	[BUG]  [BUGGY]  Iterator  iterator  =  neededOptions.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();      [BUGGY]  Iterator  iterator  =  neededOptions.iterator();  [BUGGY]    if  (   "--   ".equals(t))    {  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	182	183	1	replace	Iterator  iterator  =  neededOptions.iterator();	      Iterator    iterator    =    this.requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
