bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Enumeration  <  Object>  cmd  =  properties.getCmd();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  Object>  cmd  =  properties.getCmd();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  Object>  cmd  =  properties.getCmd();	  Enumeration    <    Object>    cmd    =    properties.getPropertyNames();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
2	[BUG]  [BUGGY]  Enumeration  <  Object>  cmd  =  properties.getArguments();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  Object>  cmd  =  properties.getArguments();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  Object>  cmd  =  properties.getArguments();	  Enumeration    <    Object>    cmd    =    properties.getPropertyNames();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
3	[BUG]  [BUGGY]  Enumeration  <  Object>  cmd  =  properties.getArgumentElements();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  Object>  cmd  =  properties.getArgumentElements();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  Object>  cmd  =  properties.getArgumentElements();	  Enumeration    <    Object>    cmd    =    properties.getPropertyNames();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
4	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(properties.size()  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(properties.size()  -  1);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(properties.size()  -  1);	  List    <    String>    requiredOptions    =    Lists.newArrayListWithCapacity(properties.size());    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
5	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties.size()  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties.size()  -  1);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(properties.size()  -  1);	  List    <    String>    requiredOptions    =    Lists.newArrayListWithCapacity(properties.size());    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
6	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(properties.size()  -  2);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(properties.size()  -  2);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(properties.size()  -  2);	  List    <    String>    requiredOptions    =    Lists.newArrayListWithCapacity(properties.size());    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
7	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyCmds();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyCmds();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  cmd  =  properties.propertyCmds();	  Enumeration    <    String>    cmd    =    properties.propertyValues();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
8	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyTypes();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyTypes();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  cmd  =  properties.propertyTypes();	  Enumeration    <    String>    cmd    =    properties.propertyValues();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
9	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties.size());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties.size());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(properties.size());	  List    <    String>    requiredOptions    =    Lists.newArrayList(requiredOptions.size());    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
10	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(propertyNames.size());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(propertyNames.size());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(propertyNames.size());	  List    <    String>    requiredOptions    =    Lists.newArrayList(requiredOptions.size());    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
11	[BUG]  [BUGGY]  for(Enumeration  e  =  this.properties.keySet();  e.hasNext();)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  for(Enumeration  e  =  this.properties.keySet();  e.hasNext();)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	for(Enumeration  e  =  this.properties.keySet();  e.hasNext();)  {	  for(Enumeration    e    =    this.properties.keySet();    e.hasMoreElements();)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
12	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyElements();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyElements();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  cmd  =  properties.propertyElements();	  Enumeration    <    String>    cmd    =    properties.getArgumentElements();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
13	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyArguments();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyArguments();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  cmd  =  properties.propertyArguments();	  Enumeration    <    String>    cmd    =    properties.getArgumentElements();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
14	[BUG]  [BUGGY]  for(Enumeration  e  =  properties.properties();  e.hasNext();)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  for(Enumeration  e  =  properties.properties();  e.hasNext();)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	for(Enumeration  e  =  properties.properties();  e.hasNext();)  {	  for(Enumeration    e    =    properties.keySet();    e.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
15	[BUG]  [BUGGY]  Enumeration  cmd  =  properties.propertyChildren();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  cmd  =  properties.propertyChildren();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  cmd  =  properties.propertyChildren();	  Enumeration    cmd    =    properties.propertyCmd();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
16	[BUG]  [BUGGY]  Enumeration  cmd  =  properties.propertyCmd(null);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  cmd  =  properties.propertyCmd(null);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  cmd  =  properties.propertyCmd(null);	  Enumeration    cmd    =    properties.propertyCmd();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
17	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyChanges();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyChanges();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  cmd  =  properties.propertyChanges();	  Enumeration    <    String>    cmd    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
18	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  options.properties();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  options.properties();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  properties  =  options.properties();	  Enumeration    <    String>    properties    =    options.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
19	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  this.options.propertyNames();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  this.options.propertyNames();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  properties  =  this.options.propertyNames();	  Enumeration    <    String>    properties    =    options.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
20	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  options.propertyProperties();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  options.propertyProperties();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  properties  =  options.propertyProperties();	  Enumeration    <    String>    properties    =    options.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
21	[BUG]  [BUGGY]  Enumeration  <  Object>  cmd  =  properties.propertyCmds();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  Object>  cmd  =  properties.propertyCmds();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  Object>  cmd  =  properties.propertyCmds();	  Enumeration    <    Object>    cmd    =    properties.propertyElements();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
22	[BUG]  [BUGGY]  Enumeration  <  Object>  cmd  =  properties.propertyCmd();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  Object>  cmd  =  properties.propertyCmd();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  Object>  cmd  =  properties.propertyCmd();	  Enumeration    <    Object>    cmd    =    properties.propertyElements();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
23	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(key);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(key);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  cmd  =  properties.getProperty(key);	  Enumeration    <    String>    cmd    =    properties.getProperty(value);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
24	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getCmd(value);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getCmd(value);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  cmd  =  properties.getCmd(value);	  Enumeration    <    String>    cmd    =    properties.getProperty(value);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
25	[BUG]  [BUGGY]  for(Enumeration  e  =  properties.values().iterator();  e.hasNext();)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  for(Enumeration  e  =  properties.values().iterator();  e.hasNext();)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	for(Enumeration  e  =  properties.values().iterator();  e.hasNext();)  {	  for(Enumeration    e    =    properties.values();    e.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
26	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  _properties.values();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  _properties.values();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  properties  =  _properties.values();	  Enumeration    <    String>    properties    =    _properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
27	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  _properties.keySet();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  _properties.keySet();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  properties  =  _properties.keySet();	  Enumeration    <    String>    properties    =    _properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
28	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  _properties.getPropertyNames();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  _properties.getPropertyNames();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  properties  =  _properties.getPropertyNames();	  Enumeration    <    String>    properties    =    _properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
29	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  props.requires();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  requiredOptions  =  props.requires();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  requiredOptions  =  props.requires();	  Enumeration    <    String>    requiredOptions    =    properties.requires();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
30	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.propertyRequires();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.propertyRequires();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  requiredOptions  =  properties.propertyRequires();	  Enumeration    <    String>    requiredOptions    =    properties.requires();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
31	[BUG]  [BUGGY]  Enumeration  <  Object>  cmd  =  properties.elements();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  Object>  cmd  =  properties.elements();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  Object>  cmd  =  properties.elements();	  Enumeration    <    Object>    cmd    =    properties.values();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
32	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties.propertyNames(),  values);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties.propertyNames(),  values);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(properties.propertyNames(),  values);	  List    <    String>    requiredOptions    =    Lists.newArrayList(properties.propertyNames());    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
33	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties.propertyNames()  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties.propertyNames()  +  1);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(properties.propertyNames()  +  1);	  List    <    String>    requiredOptions    =    Lists.newArrayList(properties.propertyNames());    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
34	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyNames().getCmd();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyNames().getCmd();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  cmd  =  properties.propertyNames().getCmd();	  Enumeration    <    String>    cmd    =    properties.properties.getCmd();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
35	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.getArgumentElements();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.getArgumentElements();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  cmd  =  properties.properties.getArgumentElements();	  Enumeration    <    String>    cmd    =    properties.properties.getCmd();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
36	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.getPropertyNames();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.getPropertyNames();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  cmd  =  properties.properties.getPropertyNames();	  Enumeration    <    String>    cmd    =    properties.properties.getCmd();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
37	[BUG]  [BUGGY]  Enumeration  cmd  =  properties.properties();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  cmd  =  properties.properties();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  cmd  =  properties.properties();	  Enumeration    cmd    =    properties.keySet();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
38	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.propertyRequiredOptions();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.propertyRequiredOptions();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  requiredOptions  =  properties.propertyRequiredOptions();	  Enumeration    <    String>    requiredOptions    =    properties.requiredOptions();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
39	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  props.requiredOptions();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  requiredOptions  =  props.requiredOptions();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  requiredOptions  =  props.requiredOptions();	  Enumeration    <    String>    requiredOptions    =    properties.requiredOptions();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
40	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  super.properties.propertyNames();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  super.properties.propertyNames();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  properties  =  super.properties.propertyNames();	  Enumeration    <    String>    properties    =    this.properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
41	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  this.properties.values();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  this.properties.values();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  properties  =  this.properties.values();	  Enumeration    <    String>    properties    =    this.properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
42	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getCmd(option,  value);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getCmd(option,  value);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  cmd  =  properties.getCmd(option,  value);	  Enumeration    <    String>    cmd    =    properties.getCmd(option);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
43	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getCmd(option  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getCmd(option  +  1);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  cmd  =  properties.getCmd(option  +  1);	  Enumeration    <    String>    cmd    =    properties.getCmd(option);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
44	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getCmd(option,  values);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getCmd(option,  values);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  cmd  =  properties.getCmd(option,  values);	  Enumeration    <    String>    cmd    =    properties.getCmd(option);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
45	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.keySet();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.keySet();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  requiredOptions  =  properties.keySet();	  Enumeration    <    String>    requiredOptions    =    properties.values();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
46	[BUG]  [BUGGY]  Enumeration  <  Object>  cmd  =  properties.getPropertyChildren();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  Object>  cmd  =  properties.getPropertyChildren();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  Object>  cmd  =  properties.getPropertyChildren();	  Enumeration    <    Object>    cmd    =    properties.propertyChildren();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
47	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(value,  option);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(value,  option);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  cmd  =  properties.getProperty(value,  option);	  Enumeration    <    String>    cmd    =    properties.getProperty(option,    value);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
48	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(option,  value,  cmd);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(option,  value,  cmd);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  cmd  =  properties.getProperty(option,  value,  cmd);	  Enumeration    <    String>    cmd    =    properties.getProperty(option,    value);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
49	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(option,  value,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(option,  value,  requiredOptions);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  cmd  =  properties.getProperty(option,  value,  requiredOptions);	  Enumeration    <    String>    cmd    =    properties.getProperty(option,    value);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
50	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(option,  value,  null);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(option,  value,  null);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  cmd  =  properties.getProperty(option,  value,  null);	  Enumeration    <    String>    cmd    =    properties.getProperty(option,    value);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
51	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(properties);	  List    <    String>    requiredOptions    =    Lists.newArrayList(requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
52	[BUG]  [BUGGY]  ArrayList  <  String>  requiredOptions  =  Lists.newArrayList(requiredOptions);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  ArrayList  <  String>  requiredOptions  =  Lists.newArrayList(requiredOptions);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	ArrayList  <  String>  requiredOptions  =  Lists.newArrayList(requiredOptions);	  List    <    String>    requiredOptions    =    Lists.newArrayList(requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
53	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(propertyNames);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(propertyNames);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(propertyNames);	  List    <    String>    requiredOptions    =    Lists.newArrayList(requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
54	[BUG]  [BUGGY]  for(Enumeration  e  =  this.properties.properties();  e.hasMoreElements();)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  for(Enumeration  e  =  this.properties.properties();  e.hasMoreElements();)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	for(Enumeration  e  =  this.properties.properties();  e.hasMoreElements();)  {	  for(Enumeration    e    =    properties.properties();    e.hasMoreElements();)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
55	[BUG]  [BUGGY]  Enumeration  cmd  =  properties.getCmd();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  cmd  =  properties.getCmd();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  cmd  =  properties.getCmd();	  Enumeration    cmd    =    properties.getPropertyNames();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
56	[BUG]  [BUGGY]  Enumeration  cmd  =  properties.getArgumentElements();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  cmd  =  properties.getArgumentElements();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  cmd  =  properties.getArgumentElements();	  Enumeration    cmd    =    properties.getPropertyNames();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
57	[BUG]  [BUGGY]  for(Enumeration  e  =  properties.get(0);  e.hasNext();)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  for(Enumeration  e  =  properties.get(0);  e.hasNext();)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	for(Enumeration  e  =  properties.get(0);  e.hasNext();)  {	  for(Enumeration    e    =    properties.get(0);    e.hasMoreElements();)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
58	[BUG]  [BUGGY]  for(Enumeration  e  =  properties.get(0);  e.hasMoreElements()  &&!cmd.hasOption(option))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  for(Enumeration  e  =  properties.get(0);  e.hasMoreElements()  &&!cmd.hasOption(option))  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	for(Enumeration  e  =  properties.get(0);  e.hasMoreElements()  &&!cmd.hasOption(option))  {	  for(Enumeration    e    =    properties.get(0);    e.hasMoreElements();)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
59	[BUG]  [BUGGY]  For(Enumeration  e  =  properties.get(0);  e.hasMoreElements();)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  For(Enumeration  e  =  properties.get(0);  e.hasMoreElements();)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	For(Enumeration  e  =  properties.get(0);  e.hasMoreElements();)  {	  for(Enumeration    e    =    properties.get(0);    e.hasMoreElements();)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
60	[BUG]  [BUGGY]  Enumeration  cmd  =  properties.propertyParameters();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  cmd  =  properties.propertyParameters();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  cmd  =  properties.propertyParameters();	  Enumeration    cmd    =    properties.propertyCmds();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
61	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties.values(),  properties.propertyNames());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties.values(),  properties.propertyNames());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(properties.values(),  properties.propertyNames());	  List    <    String>    requiredOptions    =    Lists.newArrayList(properties.values());    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
62	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties.keySet());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties.keySet());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(properties.keySet());	  List    <    String>    requiredOptions    =    Lists.newArrayList(properties.values());    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
63	[BUG]  [BUGGY]  Enumeration  cmd  =  properties.propertyTypes();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  cmd  =  properties.propertyTypes();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  cmd  =  properties.propertyTypes();	  Enumeration    cmd    =    properties.elements();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
64	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  this.cmd.propertyNames();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  this.cmd.propertyNames();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  properties  =  this.cmd.propertyNames();	  Enumeration    <    String>    properties    =    cmd.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
65	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  cmd.propertyProperties();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  cmd.propertyProperties();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  properties  =  cmd.propertyProperties();	  Enumeration    <    String>    properties    =    cmd.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
66	[BUG]  [BUGGY]  For(Enumeration  e  =  this.properties.values();  e.hasNext();)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  For(Enumeration  e  =  this.properties.values();  e.hasNext();)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	For(Enumeration  e  =  this.properties.values();  e.hasNext();)  {	  for(Enumeration    e    =    this.properties.values();    e.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
67	[BUG]  [BUGGY]  for(Enumeration  e  =  this.properties.getPropertyNames();  e.hasNext();)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  for(Enumeration  e  =  this.properties.getPropertyNames();  e.hasNext();)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	for(Enumeration  e  =  this.properties.getPropertyNames();  e.hasNext();)  {	  for(Enumeration    e    =    properties.getPropertyNames();    e.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
68	[BUG]  [BUGGY]  For(Enumeration  e  =  properties.getPropertyNames();  e.hasNext();)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  For(Enumeration  e  =  properties.getPropertyNames();  e.hasNext();)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	For(Enumeration  e  =  properties.getPropertyNames();  e.hasNext();)  {	  for(Enumeration    e    =    properties.getPropertyNames();    e.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
69	[BUG]  [BUGGY]  for(Enumeration  e  =  properties.getEnumerationNames();  e.hasNext();)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  for(Enumeration  e  =  properties.getEnumerationNames();  e.hasNext();)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	for(Enumeration  e  =  properties.getEnumerationNames();  e.hasNext();)  {	  for(Enumeration    e    =    properties.getPropertyNames();    e.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
70	[BUG]  [BUGGY]  Enumeration  <  Object>  cmd  =  properties.properties();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  Object>  cmd  =  properties.properties();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  Object>  cmd  =  properties.properties();	  Enumeration    <    Object>    cmd    =    properties.keySet();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
71	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getArgumentNames()  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getArgumentNames()  +  1;  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  cmd  =  properties.getArgumentNames()  +  1;	  Enumeration    <    String>    cmd    =    properties.getArgumentNames();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
72	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  options.values();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  options.values();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  properties  =  options.values();	  Enumeration    <    String>    properties    =    options.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
73	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  option.propertyNames();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  option.propertyNames();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  properties  =  option.propertyNames();	  Enumeration    <    String>    properties    =    options.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
74	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(properties.values());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(properties.values());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(properties.values());	  List    <    String>    requiredOptions    =    Lists.newArrayListWithCapacity(properties.size());    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
75	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(properties.size()  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(properties.size()  +  1);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(properties.size()  +  1);	  List    <    String>    requiredOptions    =    Lists.newArrayListWithCapacity(properties.size());    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
76	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  this.properties.keySet();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  this.properties.keySet();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  properties  =  this.properties.keySet();	  Enumeration    <    String>    properties    =    this.properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
77	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  this.properties.getPropertyNames();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  this.properties.getPropertyNames();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  properties  =  this.properties.getPropertyNames();	  Enumeration    <    String>    properties    =    this.properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
78	[BUG]  [BUGGY]  for(Enumeration  e  =  properties.properties.keySet();  e.hasNext();)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  for(Enumeration  e  =  properties.properties.keySet();  e.hasNext();)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	for(Enumeration  e  =  properties.properties.keySet();  e.hasNext();)  {	  for(Enumeration    e    =    properties.keySet();    e.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
79	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.keySet();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.keySet();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  cmd  =  properties.properties.keySet();	  Enumeration    <    String>    cmd    =    properties.properties.getCmd();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
80	[BUG]  [BUGGY]  Set  <  String>  requiredOptions  =  Lists.newArrayList(requiredOptions);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Set  <  String>  requiredOptions  =  Lists.newArrayList(requiredOptions);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Set  <  String>  requiredOptions  =  Lists.newArrayList(requiredOptions);	  List    <    String>    requiredOptions    =    Lists.newArrayList(requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
81	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.getRequires();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.getRequires();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  requiredOptions  =  properties.getRequires();	  Enumeration    <    String>    requiredOptions    =    properties.requires();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
82	[BUG]  [BUGGY]  for(Enumeration  e  =  properties.getOptions();  e.hasNext();)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  for(Enumeration  e  =  properties.getOptions();  e.hasNext();)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	for(Enumeration  e  =  properties.getOptions();  e.hasNext();)  {	  for(Enumeration    e    =    properties.getPropertyNames();    e.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
83	[BUG]  [BUGGY]  for(Enumeration  e  =  properties.getObject();  e.hasNext();)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  for(Enumeration  e  =  properties.getObject();  e.hasNext();)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	for(Enumeration  e  =  properties.getObject();  e.hasNext();)  {	  for(Enumeration    e    =    properties.getPropertyNames();    e.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
84	[BUG]  [BUGGY]  Enumeration  <  Object>  cmd  =  properties.getParent();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  Object>  cmd  =  properties.getParent();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  Object>  cmd  =  properties.getParent();	  Enumeration    <    Object>    cmd    =    properties.getPropertyNames();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
85	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(key,  value);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(key,  value);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  cmd  =  properties.getProperty(key,  value);	  Enumeration    <    String>    cmd    =    properties.getProperty(option,    value);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
86	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  cmd.properties();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  cmd.properties();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  properties  =  cmd.properties();	  Enumeration    <    String>    properties    =    cmd.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
87	[BUG]  [BUGGY]  Set  <  String>  requiredOptions  =  Lists.newArrayList(properties.size());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Set  <  String>  requiredOptions  =  Lists.newArrayList(properties.size());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Set  <  String>  requiredOptions  =  Lists.newArrayList(properties.size());	  List    <    String>    requiredOptions    =    Lists.newArrayList(requiredOptions.size());    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
88	[BUG]  [BUGGY]  Enumeration  cmd  =  properties.properties.getPropertyNames();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  cmd  =  properties.properties.getPropertyNames();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  cmd  =  properties.properties.getPropertyNames();	  Enumeration    cmd    =    properties.getPropertyNames();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
89	[BUG]  [BUGGY]  Enumeration  cmd  =  properties.values().propertyCmd();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  cmd  =  properties.values().propertyCmd();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  cmd  =  properties.values().propertyCmd();	  Enumeration    cmd    =    properties.propertyCmd();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
90	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.propertiesRequired();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.propertiesRequired();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  requiredOptions  =  properties.propertiesRequired();	  Enumeration    <    String>    requiredOptions    =    properties.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
91	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.getArguments();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.getArguments();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  cmd  =  properties.properties.getArguments();	  Enumeration    <    String>    cmd    =    properties.properties.getCmd();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
92	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.getCmd(option);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.getCmd(option);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  cmd  =  properties.properties.getCmd(option);	  Enumeration    <    String>    cmd    =    properties.getCmd(option);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
93	[BUG]  [BUGGY]  Enumeration  cmd  =  properties.properties.keySet();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  cmd  =  properties.properties.keySet();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  cmd  =  properties.properties.keySet();	  Enumeration    cmd    =    properties.keySet();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
94	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  this.properties.requires();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  requiredOptions  =  this.properties.requires();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  requiredOptions  =  this.properties.requires();	  Enumeration    <    String>    requiredOptions    =    properties.requires();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
95	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyChildren();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyChildren();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  cmd  =  properties.propertyChildren();	  Enumeration    <    String>    cmd    =    properties.propertyValues();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
96	[BUG]  [BUGGY]  Enumeration  <?>  cmd  =  properties.propertyElements();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <?>  cmd  =  properties.propertyElements();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <?>  cmd  =  properties.propertyElements();	  Enumeration    cmd    =    properties.propertyElements();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
97	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.getArgumentNames();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.getArgumentNames();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  cmd  =  properties.properties.getArgumentNames();	  Enumeration    <    String>    cmd    =    properties.getArgumentNames();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
98	[BUG]  [BUGGY]  for(Enumeration  e  =  properties.getPropertyNames();  e!=  null;)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  for(Enumeration  e  =  properties.getPropertyNames();  e!=  null;)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	for(Enumeration  e  =  properties.getPropertyNames();  e!=  null;)  {	  for(Enumeration    e    =    properties.getPropertyNames();    e.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
99	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(properties.keySet());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(properties.keySet());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  cmd  =  properties.getProperty(properties.keySet());	  Enumeration    <    String>    cmd    =    properties.getProperty(value);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
100	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(properties.values());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(properties.values());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  cmd  =  properties.getProperty(properties.values());	  Enumeration    <    String>    cmd    =    properties.getProperty(value);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
101	[BUG]  [BUGGY]  Enumeration  <?>  cmd  =  properties.propertyCmds();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <?>  cmd  =  properties.propertyCmds();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <?>  cmd  =  properties.propertyCmds();	  Enumeration    cmd    =    properties.propertyCmds();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
102	[BUG]  [BUGGY]  Enumeration  <?>  cmd  =  properties.values();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <?>  cmd  =  properties.values();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <?>  cmd  =  properties.values();	  Enumeration    cmd    =    properties.values();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
103	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  options.getPropertyNames();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  options.getPropertyNames();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Enumeration  <  String>  properties  =  options.getPropertyNames();	  Enumeration    <    String>    properties    =    options.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
104	[BUG]  [BUGGY]  Set  <  String>  requiredOptions  =  Lists.newArrayList(properties.propertyNames());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Set  <  String>  requiredOptions  =  Lists.newArrayList(properties.propertyNames());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	259	260	1	replace	Set  <  String>  requiredOptions  =  Lists.newArrayList(properties.propertyNames());	  List    <    String>    requiredOptions    =    Lists.newArrayList(properties.propertyNames());    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
