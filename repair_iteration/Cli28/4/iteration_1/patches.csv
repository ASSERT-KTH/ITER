bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  cmd  =  getOptions().get(opt);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  Option  cmd  =  getOptions().get(opt);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	Option  cmd  =  getOptions().get(opt);	      Option    cmd    =    getOptions().getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
2	[BUG]  [BUGGY]  String  value  =  cmd.getValue(opt);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  String  value  =  cmd.getValue(opt);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	String  value  =  cmd.getValue(opt);	  String    value    =    cmd.getProperty(option);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
3	[BUG]  [BUGGY]  String  value  =  opt.getValue(option);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  String  value  =  opt.getValue(option);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	String  value  =  opt.getValue(option);	  String    value    =    cmd.getValue(option);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
4	[BUG]  [BUGGY]  String  value  =  option.getValue(cmd);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  String  value  =  option.getValue(cmd);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	String  value  =  option.getValue(cmd);	  String    value    =    cmd.getValue(option);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
5	[BUG]  [BUGGY]  Option  option  =  cmd.getOption(opt);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  Option  option  =  cmd.getOption(opt);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	Option  option  =  cmd.getOption(opt);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
6	[BUG]  [BUGGY]  Option  option  =  opt.getOption(option);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  Option  option  =  opt.getOption(option);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	Option  option  =  opt.getOption(option);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
7	[BUG]  [BUGGY]  Option  option  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  Option  option  =  options.getOption(option);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	Option  option  =  options.getOption(option);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
8	[BUG]  [BUGGY]  Option  cmd  =  getOption(option);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  Option  cmd  =  getOption(option);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	Option  cmd  =  getOption(option);	      Option    cmd    =    getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
9	[BUG]  [BUGGY]  Option  cmd  =  getOption(opt,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  Option  cmd  =  getOption(opt,  requiredOptions);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	Option  cmd  =  getOption(opt,  requiredOptions);	      Option    cmd    =    getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
10	[BUG]  [BUGGY]  Option  cmd  =  getOption(opt.getModule());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  Option  cmd  =  getOption(opt.getModule());  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	Option  cmd  =  getOption(opt.getModule());	      Option    cmd    =    getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
11	[BUG]  [BUGGY]  String  value  =  opt.getValue();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  String  value  =  opt.getValue();  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	String  value  =  opt.getValue();	  String    value    =    opt.getProperty(option);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
12	[BUG]  [BUGGY]  String  value  =  opt.getProperty(value);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  String  value  =  opt.getProperty(value);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	String  value  =  opt.getProperty(value);	  String    value    =    opt.getProperty(option);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
13	[BUG]  [BUGGY]  Option  cmd  =  opt.getOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  Option  cmd  =  opt.getOptions();  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	Option  cmd  =  opt.getOptions();	      Option    cmd    =    getOptions();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
14	[BUG]  [BUGGY]  String  value  =  options.getValue(option);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  String  value  =  options.getValue(option);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	String  value  =  options.getValue(option);	  String    value    =    options.getProperty(option);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
15	[BUG]  [BUGGY]  String  value  =  options.getProperty(property);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  String  value  =  options.getProperty(property);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	String  value  =  options.getProperty(property);	  String    value    =    options.getProperty(value);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
16	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(cmd);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  Option  option  =  getOptions().getOption(cmd);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	Option  option  =  getOptions().getOption(cmd);	      Option    option    =    getOptions().getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
17	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(opt,  cmd);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  Option  option  =  getOptions().getOption(opt,  cmd);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	Option  option  =  getOptions().getOption(opt,  cmd);	      Option    option    =    getOptions().getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
18	[BUG]  [BUGGY]  Option  option  =  getOption(option);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  Option  option  =  getOption(option);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	Option  option  =  getOption(option);	      Option    option    =    getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
19	[BUG]  [BUGGY]  Option  option  =  getOption(cmd);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  Option  option  =  getOption(cmd);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	Option  option  =  getOption(cmd);	      Option    option    =    getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
20	[BUG]  [BUGGY]  Option  option  =  getOption(opt,  requiredOptions);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  Option  option  =  getOption(opt,  requiredOptions);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	Option  option  =  getOption(opt,  requiredOptions);	      Option    option    =    getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
21	[BUG]  [BUGGY]  Option  cmd  =  getOptions().get(option);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  Option  cmd  =  getOptions().get(option);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	Option  cmd  =  getOptions().get(option);	      Option    cmd    =    getOptions().getOption(option);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
22	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(option,  cmd);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  Option  option  =  getOptions().getOption(option,  cmd);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	Option  option  =  getOptions().getOption(option,  cmd);	      Option    option    =    getOptions().getOption(option);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
23	[BUG]  [BUGGY]  String  value  =  cmd.getProperty(opt);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  String  value  =  cmd.getProperty(opt);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	String  value  =  cmd.getProperty(opt);	  String    value    =    opt.getProperty(properties);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
24	[BUG]  [BUGGY]  String  value  =  opt.getValue(properties);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  String  value  =  opt.getValue(properties);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	String  value  =  opt.getValue(properties);	  String    value    =    opt.getProperty(properties);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
25	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(cmd);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  Option  opt  =  getOptions().getOption(cmd);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	Option  opt  =  getOptions().getOption(cmd);	      Option    opt    =    getOptions().getOption(option);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
26	[BUG]  [BUGGY]  Option  opt  =  getOption(cmd.getOption(option));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  Option  opt  =  getOption(cmd.getOption(option));  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	Option  opt  =  getOption(cmd.getOption(option));	      Option    opt    =    getOptions().getOption(option);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
27	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(option,  cmd);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  Option  opt  =  getOptions().getOption(option,  cmd);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	Option  opt  =  getOptions().getOption(option,  cmd);	      Option    opt    =    getOptions().getOption(option);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
28	[BUG]  [BUGGY]  Option  cmd  =  getOptions().getOption(option,  cmd);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  Option  cmd  =  getOptions().getOption(option,  cmd);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	Option  cmd  =  getOptions().getOption(option,  cmd);	      Option    cmd    =    getOptions().getOption(option);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
29	[BUG]  [BUGGY]  Option  cmd  =  getOptions().getOption(option,  requiredOptions);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  Option  cmd  =  getOptions().getOption(option,  requiredOptions);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	Option  cmd  =  getOptions().getOption(option,  requiredOptions);	      Option    cmd    =    getOptions().getOption(option);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
30	[BUG]  [BUGGY]  Option  cmd  =  getOption(opt,  cmd);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  Option  cmd  =  getOption(opt,  cmd);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	Option  cmd  =  getOption(opt,  cmd);	      Option    cmd    =    getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
31	[BUG]  [BUGGY]  Option  cmd  =  getOptions().getOption(opt,  requiredOptions);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  Option  cmd  =  getOptions().getOption(opt,  requiredOptions);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	Option  cmd  =  getOptions().getOption(opt,  requiredOptions);	      Option    cmd    =    getOptions().getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
32	[BUG]  [BUGGY]  Option  cmd  =  getOptions().getOption(opt,  options);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  Option  cmd  =  getOptions().getOption(opt,  options);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	Option  cmd  =  getOptions().getOption(opt,  options);	      Option    cmd    =    getOptions().getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
33	[BUG]  [BUGGY]  String  value  =  option.getProperty(value);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  String  value  =  option.getProperty(value);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	String  value  =  option.getProperty(value);	  String    value    =    opt.getProperty(option);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
34	[BUG]  [BUGGY]  String  value  =  cmd.getValue(option,  value);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  String  value  =  cmd.getValue(option,  value);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	String  value  =  cmd.getValue(option,  value);	  String    value    =    cmd.getValue(option);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
35	[BUG]  [BUGGY]  String  value  =  options.getPropertyValue(option);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  String  value  =  options.getPropertyValue(option);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	String  value  =  options.getPropertyValue(option);	  String    value    =    options.getProperty(value);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
36	[BUG]  [BUGGY]  String  value  =  options.getProperty(opt);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  String  value  =  options.getProperty(opt);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	String  value  =  options.getProperty(opt);	  String    value    =    options.getProperty(value);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
37	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(option,  requiredOptions);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  Option  opt  =  getOptions().getOption(option,  requiredOptions);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	Option  opt  =  getOptions().getOption(option,  requiredOptions);	      Option    opt    =    getOptions().getOption(option);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
38	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(option,  options);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  Option  opt  =  getOptions().getOption(option,  options);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	Option  opt  =  getOptions().getOption(option,  options);	      Option    opt    =    getOptions().getOption(option);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
39	[BUG]  [BUGGY]  String  value  =  properties.getProperty(opt);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  String  value  =  properties.getProperty(opt);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	String  value  =  properties.getProperty(opt);	  String    value    =    opt.getProperty(properties);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
40	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(option,  opt);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  Option  option  =  getOptions().getOption(option,  opt);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	Option  option  =  getOptions().getOption(option,  opt);	      Option    option    =    getOptions().getOption(option);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
41	[BUG]  [BUGGY]  String  value  =  option.getProperty(cmd);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  String  value  =  option.getProperty(cmd);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	String  value  =  option.getProperty(cmd);	  String    value    =    cmd.getProperty(option);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
42	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(opt,  options);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  Option  option  =  getOptions().getOption(opt,  options);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	Option  option  =  getOptions().getOption(opt,  options);	      Option    option    =    getOptions().getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
43	[BUG]  [BUGGY]  String  value  =  options.getProperty(option,  value);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  String  value  =  options.getProperty(option,  value);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	String  value  =  options.getProperty(option,  value);	  String    value    =    options.getProperty(option);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
44	[BUG]  [BUGGY]  Option  option  =  getOption(opt.getKey());  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  Option  option  =  getOption(opt.getKey());  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	Option  option  =  getOption(opt.getKey());	      Option    option    =    getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
45	[BUG]  [BUGGY]  String  value  =  opt.getProperty(properties,  value);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  String  value  =  opt.getProperty(properties,  value);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	String  value  =  opt.getProperty(properties,  value);	  String    value    =    opt.getProperty(properties);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
46	[BUG]  [BUGGY]  String  value  =  options.getProperty(properties);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  String  value  =  options.getProperty(properties);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	String  value  =  options.getProperty(properties);	  String    value    =    options.getProperty(value);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
47	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(option)+  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  Option  option  =  getOptions().getOption(option)+  1;  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	Option  option  =  getOptions().getOption(option)+  1;	      Option    option    =    getOptions().getOption(option);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
48	[BUG]  [BUGGY]  Option  cmd  =  getOption(opt.getKey());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  Option  cmd  =  getOption(opt.getKey());  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	Option  cmd  =  getOption(opt.getKey());	      Option    cmd    =    getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
49	[BUG]  [BUGGY]  Option  opt  =  getOption(opt);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  Option  opt  =  getOption(opt);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	Option  opt  =  getOption(opt);	      Option    cmd    =    getOption(opt);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	5	None	replace
50	[BUG]  [BUGGY]  Option  cmd  =  getOptions().getOption(option)+  1;  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);      [BUGGY]  Option  cmd  =  getOptions().getOption(option)+  1;  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	268	268	1	replace	Option  cmd  =  getOptions().getOption(option)+  1;	      Option    cmd    =    getOptions().getOption(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	2	None	replace
