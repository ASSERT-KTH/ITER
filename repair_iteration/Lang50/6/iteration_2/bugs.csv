bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(style  <  MEDIUM  ||  style  ==  LONG)  {  return  getDateInstance(style,  null,  null);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(style  <  MEDIUM  ||  style  ==  LONG)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(style  <  MEDIUM  ||  style  ==  LONG)  {  return  getDateInstance(style,  null,  null);  }	      if(style    <    MEDIUM    ||    style    >    LONG)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
2	[BUG]  [BUGGY]  Integer  style  =  getDateInstance(style,  null,  null);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  Integer  style  =  getDateInstance(style,  null,  null);  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	Integer  style  =  getDateInstance(style,  null,  null);	      if(style    <    MEDIUM    ||    style    >    LONG)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
3	[BUG]  [BUGGY]  Integer  style  =  mRules.get(style);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  Integer  style  =  mRules.get(style);  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	Integer  style  =  mRules.get(style);	      if(style    <    MEDIUM)    {    if(mRules    ==    null)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
4	[BUG]  [BUGGY]  Integer  style  =  getDateInstance(style);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  Integer  style  =  getDateInstance(style);  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	Integer  style  =  getDateInstance(style);	      if(style    <    MEDIUM)    {    if(mRules    ==    null)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
5	[BUG]  [BUGGY]  Integer  style  =  getDateInstance(style,  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  Integer  style  =  getDateInstance(style,  0);  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	Integer  style  =  getDateInstance(style,  0);	      if(style    <    MEDIUM)    {    if(mRules    ==    null)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
6	[BUG]  [BUGGY]  if(style  ==  INSTANCE_NO_COLON)  {  if(mStyle  ==  INSTANCE_YEAR)  {  return  getDateInstance(style,  null,  null);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(style  ==  INSTANCE_NO_COLON)  {  if(mStyle  ==  INSTANCE_YEAR)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(style  ==  INSTANCE_NO_COLON)  {  if(mStyle  ==  INSTANCE_YEAR)  {  return  getDateInstance(style,  null,  null);  }	      if(style    ==    INSTANCE_YEAR)    {    if(mStyle    ==    INSTANCE_YEAR)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
7	[BUG]  [BUGGY]  if(style  ==  INSTANCE_NO_COLON)  {  if(mStyle  ==  INSTANCE_TYPE)  {  return  getDateInstance(style,  null,  null);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(style  ==  INSTANCE_NO_COLON)  {  if(mStyle  ==  INSTANCE_TYPE)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(style  ==  INSTANCE_NO_COLON)  {  if(mStyle  ==  INSTANCE_TYPE)  {  return  getDateInstance(style,  null,  null);  }	      if(style    ==    INSTANCE_YEAR)    {    if(mStyle    ==    INSTANCE_YEAR)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
8	[BUG]  [BUGGY]  if(style  ==  INSTANCE_NO_COLON)  {  if(mStyle!=  INSTANCE_YEAR)  {  return  getDateInstance(style,  null,  null);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(style  ==  INSTANCE_NO_COLON)  {  if(mStyle!=  INSTANCE_YEAR)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(style  ==  INSTANCE_NO_COLON)  {  if(mStyle!=  INSTANCE_YEAR)  {  return  getDateInstance(style,  null,  null);  }	      if(style    ==    INSTANCE_YEAR)    {    if(mStyle    ==    INSTANCE_YEAR)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
9	[BUG]  [BUGGY]  if(style  ==  INSTANCE_NO_COLON)  {  if(mStyle  ==  INSTANCE_DATE)  {  return  getDateInstance(style,  null,  null);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(style  ==  INSTANCE_NO_COLON)  {  if(mStyle  ==  INSTANCE_DATE)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(style  ==  INSTANCE_NO_COLON)  {  if(mStyle  ==  INSTANCE_DATE)  {  return  getDateInstance(style,  null,  null);  }	      if(style    ==    INSTANCE_YEAR)    {    if(mStyle    ==    INSTANCE_YEAR)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
10	[BUG]  [BUGGY]  return  getDateInstance(style,  null,  null,  4);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  return  getDateInstance(style,  null,  null,  4);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	return  getDateInstance(style,  null,  null,  4);	  return    getDateInstance(style,    null,    null,    3);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
11	[BUG]  [BUGGY]  return  getDateInstance(style,  null,  null,  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  return  getDateInstance(style,  null,  null,  2);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	return  getDateInstance(style,  null,  null,  2);	  return    getDateInstance(style,    null,    null,    3);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
12	[BUG]  [BUGGY]  return  getDateInstance(style,  null,  null,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  return  getDateInstance(style,  null,  null,  1);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	return  getDateInstance(style,  null,  null,  1);	  return    getDateInstance(style,    null,    null,    0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
13	[BUG]  [BUGGY]  int  style  =  getDateInstance(style,  null,  null,  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  int  style  =  getDateInstance(style,  null,  null,  0);  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	int  style  =  getDateInstance(style,  null,  null,  0);	      int    style    =    getDateInstance(style,    null,    null);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
14	[BUG]  [BUGGY]  int  style  =  getDateInstance(style,  null,  null,  -1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  int  style  =  getDateInstance(style,  null,  null,  -1);  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	int  style  =  getDateInstance(style,  null,  null,  -1);	      int    style    =    getDateInstance(style,    null,    null);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
15	[BUG]  [BUGGY]  int  style  =  getDateInstance(style,  null,  null,  null);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  int  style  =  getDateInstance(style,  null,  null,  null);  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	int  style  =  getDateInstance(style,  null,  null,  null);	      int    style    =    getDateInstance(style,    null,    null);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
16	[BUG]  [BUGGY]  if(style  <  MEDIUM  ||  style  ==  LONG)  {  if(mRules  ==  null)  {  return  getDateInstance(style,  null,  null);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(style  <  MEDIUM  ||  style  ==  LONG)  {  if(mRules  ==  null)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(style  <  MEDIUM  ||  style  ==  LONG)  {  if(mRules  ==  null)  {  return  getDateInstance(style,  null,  null);  }	      if(style    <    MEDIUM    ||    style    >    LONG)    {    if(mRules    ==    null)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
17	[BUG]  [BUGGY]  if(style  <  MEDIUM  ||  style  >=  LONG)  {  if(mRules  ==  null)  {  return  getDateInstance(style,  null,  null);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(style  <  MEDIUM  ||  style  >=  LONG)  {  if(mRules  ==  null)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(style  <  MEDIUM  ||  style  >=  LONG)  {  if(mRules  ==  null)  {  return  getDateInstance(style,  null,  null);  }	      if(style    <    MEDIUM    ||    style    >    LONG)    {    if(mRules    ==    null)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
18	[BUG]  [BUGGY]  if(style  <  MEDIUM  ||  style  >  SHORT)  {  if(mRules  ==  null)  {  return  getDateInstance(style,  null,  null);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(style  <  MEDIUM  ||  style  >  SHORT)  {  if(mRules  ==  null)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(style  <  MEDIUM  ||  style  >  SHORT)  {  if(mRules  ==  null)  {  return  getDateInstance(style,  null,  null);  }	      if(style    <    MEDIUM    ||    style    >    LONG)    {    if(mRules    ==    null)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
19	[BUG]  [BUGGY]  int  style  =  getDateInstance(mStyle,  null,  null,  null);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  int  style  =  getDateInstance(mStyle,  null,  null,  null);  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	int  style  =  getDateInstance(mStyle,  null,  null,  null);	      int    style    =    getDateInstance(mStyle,    null,    null);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
20	[BUG]  [BUGGY]  int  style  =  getDateInstance(mStyle,  null,  null,  0);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  int  style  =  getDateInstance(mStyle,  null,  null,  0);  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	int  style  =  getDateInstance(mStyle,  null,  null,  0);	      int    style    =    getDateInstance(mStyle,    null,    null);    	non-compiled	[CE]  ';'  expected	2	None	replace
21	[BUG]  [BUGGY]  int  style  =  getDateInstance(style,  null,  0);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  int  style  =  getDateInstance(style,  null,  0);  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	int  style  =  getDateInstance(style,  null,  0);	      int    style    =    getDateInstance(style,    null);    	non-compiled	[CE]  ';'  expected	3	None	replace
22	[BUG]  [BUGGY]  Integer  style  =  getDateInstance(style,  null);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  Integer  style  =  getDateInstance(style,  null);  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	Integer  style  =  getDateInstance(style,  null);	      int    style    =    getDateInstance(style,    null);    	non-compiled	[CE]  ';'  expected	3	None	replace
23	[BUG]  [BUGGY]  return  getDateInstance(style,  null,  null,  false);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  return  getDateInstance(style,  null,  null,  false);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	return  getDateInstance(style,  null,  null,  false);	  return    getDateInstance(style,    null,    null,    true);    	non-compiled	[CE]  ';'  expected	9	None	replace
24	[BUG]  [BUGGY]  return  getDateInstance(style,  null,  null,  ';');  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  return  getDateInstance(style,  null,  null,  ';');  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	return  getDateInstance(style,  null,  null,  ';');	  return    getDateInstance(style,    null,    null,    true);    	non-compiled	[CE]  ';'  expected	9	None	replace
25	[BUG]  [BUGGY]  Class  <?>  style  =  getStyle();  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  Class  <?>  style  =  getStyle();  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	Class  <?>  style  =  getStyle();	      if(style    ==    INSTANCE_YEAR)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  ';'  expected	10	None	replace
26	[BUG]  [BUGGY]  Class  <?>  style  =  getStyle(style);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  Class  <?>  style  =  getStyle(style);  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	Class  <?>  style  =  getStyle(style);	      if(style    ==    INSTANCE_YEAR)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  ';'  expected	10	None	replace
27	[BUG]  [BUGGY]  Integer  mStyle  =  getDateInstance(style,  null,  null,  0);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  Integer  mStyle  =  getDateInstance(style,  null,  null,  0);  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	Integer  mStyle  =  getDateInstance(style,  null,  null,  0);	      Integer    mStyle    =    getDateInstance(style,    null,    null);    	non-compiled	[CE]  ';'  expected	4	None	replace
28	[BUG]  [BUGGY]  Integer  mStyle  =  getDateInstance(style,  null,  null,  null);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  Integer  mStyle  =  getDateInstance(style,  null,  null,  null);  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	Integer  mStyle  =  getDateInstance(style,  null,  null,  null);	      Integer    mStyle    =    getDateInstance(style,    null,    null);    	non-compiled	[CE]  ';'  expected	4	None	replace
29	[BUG]  [BUGGY]  Integer  mStyle  =  getDateInstance(style,  null,  null,  1);  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  Integer  mStyle  =  getDateInstance(style,  null,  null,  1);  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	Integer  mStyle  =  getDateInstance(style,  null,  null,  1);	      Integer    mStyle    =    getDateInstance(style,    null,    null);    	non-compiled	[CE]  ';'  expected	4	None	replace
30	[BUG]  [BUGGY]  return  getDateInstance(style,  null,  1);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  return  getDateInstance(style,  null,  1);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	return  getDateInstance(style,  null,  1);	  return    getDateInstance(style,    null,    0);    	non-compiled	[CE]  ';'  expected	13	None	replace
31	[BUG]  [BUGGY]  return  getDateInstance(style,  null,  3);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  return  getDateInstance(style,  null,  3);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	return  getDateInstance(style,  null,  3);	  return    getDateInstance(style,    null,    0);    	non-compiled	[CE]  ';'  expected	13	None	replace
32	[BUG]  [BUGGY]  return  getDateInstance(style,  null,  2);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  return  getDateInstance(style,  null,  2);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	return  getDateInstance(style,  null,  2);	  return    getDateInstance(style,    null,    0);    	non-compiled	[CE]  ';'  expected	13	None	replace
33	[BUG]  [BUGGY]  if(style  ==  INSTANCE_NO_COLON  ||  style  ==  INSTANCE_FIRST)  {  return  getDateInstance(style,  null,  null);  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(style  ==  INSTANCE_NO_COLON  ||  style  ==  INSTANCE_FIRST)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(style  ==  INSTANCE_NO_COLON  ||  style  ==  INSTANCE_FIRST)  {  return  getDateInstance(style,  null,  null);  }	      if(style    ==    INSTANCE_FIRST    ||    style    ==    INSTANCE_FIRST)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
34	[BUG]  [BUGGY]  if(style  ==  INSTANCE_FIRST  ||  style  ==  INSTANCE_NO_COLON)  {  return  getDateInstance(style,  null,  null);  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(style  ==  INSTANCE_FIRST  ||  style  ==  INSTANCE_NO_COLON)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(style  ==  INSTANCE_FIRST  ||  style  ==  INSTANCE_NO_COLON)  {  return  getDateInstance(style,  null,  null);  }	      if(style    ==    INSTANCE_FIRST    ||    style    ==    INSTANCE_FIRST)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
35	[BUG]  [BUGGY]  ||  style  ==  INSTANCE_FIRST)  {  return  getDateInstance(style,  null,  null);  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  ||  style  ==  INSTANCE_FIRST)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	||  style  ==  INSTANCE_FIRST)  {  return  getDateInstance(style,  null,  null);  }	      if(style    ==    INSTANCE_FIRST    ||    style    ==    INSTANCE_FIRST)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
36	[BUG]  [BUGGY]  vices.add(getDateInstance(style,  null,  null));  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  vices.add(getDateInstance(style,  null,  null));  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	vices.add(getDateInstance(style,  null,  null));	      if(style    <    MEDIUM)    {    if(mStandard)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  ';'  expected	16	None	replace
37	[BUG]  [BUGGY]  vices.put(mField,  getDateInstance(style,  null,  null));  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  vices.put(mField,  getDateInstance(style,  null,  null));  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	vices.put(mField,  getDateInstance(style,  null,  null));	      if(style    <    MEDIUM)    {    if(mStandard)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  ';'  expected	16	None	replace
38	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(mStandard,  style);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  aughtExceptionHandler.handleMatcher(mStandard,  style);  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	aughtExceptionHandler.handleMatcher(mStandard,  style);	      if(style    <    MEDIUM)    {    if(mStandard)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  ';'  expected	16	None	replace
39	[BUG]  [BUGGY]  vices.add(getDateInstance(style,  null));  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  vices.add(getDateInstance(style,  null));  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	vices.add(getDateInstance(style,  null));	      if(style    <    MEDIUM)    {    if(mStandard)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  ';'  expected	16	None	replace
40	[BUG]  [BUGGY]  int  style  =  getDateInstance(mStyle);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  int  style  =  getDateInstance(mStyle);  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	int  style  =  getDateInstance(mStyle);	      int    style    =    getDateInstance(style);    	non-compiled	[CE]  ';'  expected	5	None	replace
41	[BUG]  [BUGGY]  int  style  =  getDateInstance(style,  0);  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  int  style  =  getDateInstance(style,  0);  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	int  style  =  getDateInstance(style,  0);	      int    style    =    getDateInstance(style);    	non-compiled	[CE]  ';'  expected	5	None	replace
42	[BUG]  [BUGGY]  int  style  =  getDateInstance(style,  false);  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  int  style  =  getDateInstance(style,  false);  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	int  style  =  getDateInstance(style,  false);	      int    style    =    getDateInstance(style);    	non-compiled	[CE]  ';'  expected	5	None	replace
43	[BUG]  [BUGGY]  return  getDateInstance(style,  null,  null,  null,  0);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  return  getDateInstance(style,  null,  null,  null,  0);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	return  getDateInstance(style,  null,  null,  null,  0);	  return    getDateInstance(style,    null,    null,    null);    	non-compiled	[CE]  ';'  expected	6	None	replace
44	[BUG]  [BUGGY]  return  getDateInstance(style,  null,  null,  null,  -1);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  return  getDateInstance(style,  null,  null,  null,  -1);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	return  getDateInstance(style,  null,  null,  null,  -1);	  return    getDateInstance(style,    null,    null,    null);    	non-compiled	[CE]  ';'  expected	6	None	replace
45	[BUG]  [BUGGY]  if(style  ==  MEDIUM  ||  style  >  LONG)  {  if(mRules  ==  null)  {  return  getDateInstance(style,  null,  null);  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(style  ==  MEDIUM  ||  style  >  LONG)  {  if(mRules  ==  null)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(style  ==  MEDIUM  ||  style  >  LONG)  {  if(mRules  ==  null)  {  return  getDateInstance(style,  null,  null);  }	      if(style    <    MEDIUM    ||    style    >    LONG)    {    if(mRules    ==    null)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  ';'  expected	17	None	replace
46	[BUG]  [BUGGY]  if(style  >=  MEDIUM  ||  style  >  LONG)  {  if(mRules  ==  null)  {  return  getDateInstance(style,  null,  null);  }  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(style  >=  MEDIUM  ||  style  >  LONG)  {  if(mRules  ==  null)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(style  >=  MEDIUM  ||  style  >  LONG)  {  if(mRules  ==  null)  {  return  getDateInstance(style,  null,  null);  }	      if(style    <    MEDIUM    ||    style    >    LONG)    {    if(mRules    ==    null)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  not  a  statement	17	None	replace
47	[BUG]  [BUGGY]  if(style  ==  MEDIUM)  {  if(mRules  ==  null)  {  return  getDateInstance(style,  null,  null);  }  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(style  ==  MEDIUM)  {  if(mRules  ==  null)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(style  ==  MEDIUM)  {  if(mRules  ==  null)  {  return  getDateInstance(style,  null,  null);  }	      if(style    <    MEDIUM    ||    style    >    LONG)    {    if(mRules    ==    null)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  not  a  statement	17	None	replace
48	[BUG]  [BUGGY]  return  getDateInstance(style,  null,  -1);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  return  getDateInstance(style,  null,  -1);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	return  getDateInstance(style,  null,  -1);	  return    getDateInstance(style,    null,    0);    	non-compiled	[CE]  not  a  statement	13	None	replace
49	[BUG]  [BUGGY]  char  style  =  getDateInstance(mStyle,  null,  null);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  char  style  =  getDateInstance(mStyle,  null,  null);  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	char  style  =  getDateInstance(mStyle,  null,  null);	      int    style    =    getDateInstance(mStyle,    null,    null);    	non-compiled	[CE]  not  a  statement	2	None	replace
50	[BUG]  [BUGGY]  if(style  ==  INSTANCE_NO_COLON)  {  return  getDateInstance(style,  null,  null);  }  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(style  ==  INSTANCE_NO_COLON)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(style  ==  INSTANCE_NO_COLON)  {  return  getDateInstance(style,  null,  null);  }	      if(style    ==    INSTANCE_YEAR)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  not  a  statement	10	None	replace
51	[BUG]  [BUGGY]  if(style  ==  INSTANCE_COLON)  {  return  getDateInstance(style,  null,  null);  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(style  ==  INSTANCE_COLON)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(style  ==  INSTANCE_COLON)  {  return  getDateInstance(style,  null,  null);  }	      if(style    ==    INSTANCE_YEAR)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  not  a  statement	10	None	replace
52	[BUG]  [BUGGY]  int  style  =  getDateInstance(style,  -1);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  int  style  =  getDateInstance(style,  -1);  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	int  style  =  getDateInstance(style,  -1);	      int    style    =    getDateInstance(style);    	non-compiled	[CE]  not  a  statement	5	None	replace
53	[BUG]  [BUGGY]  int  style  =  getDateInstance(style,  null,  -1);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  int  style  =  getDateInstance(style,  null,  -1);  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	int  style  =  getDateInstance(style,  null,  -1);	      int    style    =    getDateInstance(style,    null);    	non-compiled	[CE]  not  a  statement	3	None	replace
54	[BUG]  [BUGGY]  char  style  =  getDateInstance(style,  null);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  char  style  =  getDateInstance(style,  null);  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	char  style  =  getDateInstance(style,  null);	      int    style    =    getDateInstance(style,    null);    	non-compiled	[CE]  not  a  statement	3	None	replace
55	[BUG]  [BUGGY]  if(style  ==  INSTANCE_COLON)  {  if(mStyle  ==  INSTANCE_YEAR)  {  return  getDateInstance(style,  null,  null);  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(style  ==  INSTANCE_COLON)  {  if(mStyle  ==  INSTANCE_YEAR)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(style  ==  INSTANCE_COLON)  {  if(mStyle  ==  INSTANCE_YEAR)  {  return  getDateInstance(style,  null,  null);  }	      if(style    ==    INSTANCE_YEAR)    {    if(mStyle    ==    INSTANCE_YEAR)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  not  a  statement	11	None	replace
56	[BUG]  [BUGGY]  if(mStyle  ==  INSTANCE_COLON)  {  return  getDateInstance(style,  null,  null);  }  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(mStyle  ==  INSTANCE_COLON)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(mStyle  ==  INSTANCE_COLON)  {  return  getDateInstance(style,  null,  null);  }	      if(style    ==    INSTANCE_YEAR)    {    if(mStyle    ==    INSTANCE_YEAR)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  not  a  statement	11	None	replace
57	[BUG]  [BUGGY]  if(mStyle  ==  INSTANCE_NO_COLON)  {  return  getDateInstance(style,  null,  null);  }  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(mStyle  ==  INSTANCE_NO_COLON)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(mStyle  ==  INSTANCE_NO_COLON)  {  return  getDateInstance(style,  null,  null);  }	      if(style    ==    INSTANCE_YEAR)    {    if(mStyle    ==    INSTANCE_YEAR)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  not  a  statement	11	None	replace
58	[BUG]  [BUGGY]  return  getDateInstance(style,  null,  null,  0,  0);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  return  getDateInstance(style,  null,  null,  0,  0);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	return  getDateInstance(style,  null,  null,  0,  0);	  return    getDateInstance(style,    null,    null,    0);    	non-compiled	[CE]  not  a  statement	7	None	replace
59	[BUG]  [BUGGY]  if(style  <  MEDIUM  ||  style  >  MEDIUM)  {  if(mRules  ==  null)  {  return  getDateInstance(style,  null,  null);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(style  <  MEDIUM  ||  style  >  MEDIUM)  {  if(mRules  ==  null)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(style  <  MEDIUM  ||  style  >  MEDIUM)  {  if(mRules  ==  null)  {  return  getDateInstance(style,  null,  null);  }	      if(style    <    MEDIUM)    {    if(mRules    ==    null)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
60	[BUG]  [BUGGY]  Integer  mRules  =  getDateInstance(style,  null,  null);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  Integer  mRules  =  getDateInstance(style,  null,  null);  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	Integer  mRules  =  getDateInstance(style,  null,  null);	      if(style    <    MEDIUM)    {    if(mRules    ==    null)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
61	[BUG]  [BUGGY]  if(style  <  MEDIUM  ||  style  >  MEDIUM)  {  if(mRules!=  null)  {  return  getDateInstance(style,  null,  null);  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(style  <  MEDIUM  ||  style  >  MEDIUM)  {  if(mRules!=  null)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(style  <  MEDIUM  ||  style  >  MEDIUM)  {  if(mRules!=  null)  {  return  getDateInstance(style,  null,  null);  }	      if(style    <    MEDIUM)    {    if(mRules    ==    null)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
62	[BUG]  [BUGGY]  if(style  ==  INSTANCE_COLON  ||  style  ==  INSTANCE_FIRST)  {  return  getDateInstance(style,  null,  null);  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(style  ==  INSTANCE_COLON  ||  style  ==  INSTANCE_FIRST)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(style  ==  INSTANCE_COLON  ||  style  ==  INSTANCE_FIRST)  {  return  getDateInstance(style,  null,  null);  }	      if(style    ==    INSTANCE_FIRST    ||    style    ==    INSTANCE_FIRST)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
63	[BUG]  [BUGGY]  if(style  ==  INSTANCE_NO_COLON  ||  style  ==  INSTANCE_SHORT)  {  return  getDateInstance(style,  null,  null);  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(style  ==  INSTANCE_NO_COLON  ||  style  ==  INSTANCE_SHORT)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(style  ==  INSTANCE_NO_COLON  ||  style  ==  INSTANCE_SHORT)  {  return  getDateInstance(style,  null,  null);  }	      if(style    ==    INSTANCE_FIRST    ||    style    ==    INSTANCE_FIRST)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
64	[BUG]  [BUGGY]  if(style  >=  MEDIUM  ||  style  >  LONG)  {  return  getDateInstance(style,  null,  null);  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(style  >=  MEDIUM  ||  style  >  LONG)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(style  >=  MEDIUM  ||  style  >  LONG)  {  return  getDateInstance(style,  null,  null);  }	      if(style    <    MEDIUM    ||    style    >    LONG)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  ';'  expected	15	None	replace
65	[BUG]  [BUGGY]  if(style  <  MEDIUM  ||  style  >  SHORT)  {  return  getDateInstance(style,  null,  null);  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(style  <  MEDIUM  ||  style  >  SHORT)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(style  <  MEDIUM  ||  style  >  SHORT)  {  return  getDateInstance(style,  null,  null);  }	      if(style    <    MEDIUM    ||    style    >    LONG)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  ';'  expected	15	None	replace
66	[BUG]  [BUGGY]  if(style  ==  MEDIUM)  {  if(mStandard)  {  return  getDateInstance(style,  null,  null);  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(style  ==  MEDIUM)  {  if(mStandard)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(style  ==  MEDIUM)  {  if(mStandard)  {  return  getDateInstance(style,  null,  null);  }	      if(style    <    MEDIUM)    {    if(mStandard)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  ';'  expected	16	None	replace
67	[BUG]  [BUGGY]  if(mStandard)  {  return  getDateInstance(style,  null,  null);  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(mStandard)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(mStandard)  {  return  getDateInstance(style,  null,  null);  }	      if(style    <    MEDIUM)    {    if(mStandard)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  ';'  expected	16	None	replace
68	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(getDateInstance(style,  null,  null));  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  aughtExceptionHandler.handleMatcher(getDateInstance(style,  null,  null));  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	aughtExceptionHandler.handleMatcher(getDateInstance(style,  null,  null));	      if(style    <    MEDIUM)    {    if(mStandard)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  ';'  expected	16	None	replace
69	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(mStandard,  style,  null);  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  aughtExceptionHandler.handleMatcher(mStandard,  style,  null);  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	aughtExceptionHandler.handleMatcher(mStandard,  style,  null);	      if(style    <    MEDIUM)    {    if(mStandard)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  ';'  expected	16	None	replace
70	[BUG]  [BUGGY]  Integer  mStyle  =  getDateInstance(style,  null,  null,  -1);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  Integer  mStyle  =  getDateInstance(style,  null,  null,  -1);  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	Integer  mStyle  =  getDateInstance(style,  null,  null,  -1);	      Integer    mStyle    =    getDateInstance(style,    null,    null);    	non-compiled	[CE]  ';'  expected	4	None	replace
71	[BUG]  [BUGGY]  Integer  mStyle  =  getDateInstance(style,  null,  null,  3);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  Integer  mStyle  =  getDateInstance(style,  null,  null,  3);  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	Integer  mStyle  =  getDateInstance(style,  null,  null,  3);	      Integer    mStyle    =    getDateInstance(style,    null,    null);    	non-compiled	[CE]  not  a  statement	4	None	replace
72	[BUG]  [BUGGY]  if(mRules  ==  null)  {  return  getDateInstance(style,  null,  null);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(mRules  ==  null)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(mRules  ==  null)  {  return  getDateInstance(style,  null,  null);  }	      if(style    <    MEDIUM)    {    if(mRules    ==    null)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
73	[BUG]  [BUGGY]  if(mStyle  ==  null)  {  if(mRules  ==  null)  {  return  getDateInstance(style,  null,  null);  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(mStyle  ==  null)  {  if(mRules  ==  null)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(mStyle  ==  null)  {  if(mRules  ==  null)  {  return  getDateInstance(style,  null,  null);  }	      if(style    <    MEDIUM)    {    if(mRules    ==    null)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
74	[BUG]  [BUGGY]  int  style  =  getDateInstance(style,  mMinLengthEstimate);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  int  style  =  getDateInstance(style,  mMinLengthEstimate);  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	int  style  =  getDateInstance(style,  mMinLengthEstimate);	      int    style    =    getDateInstance(style);    	non-compiled	[CE]  ';'  expected	5	None	replace
75	[BUG]  [BUGGY]  int  style  =  getDateInstance(style,  mMaxLengthEstimate);  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  int  style  =  getDateInstance(style,  mMaxLengthEstimate);  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	int  style  =  getDateInstance(style,  mMaxLengthEstimate);	      int    style    =    getDateInstance(style);    	non-compiled	[CE]  ';'  expected	5	None	replace
76	[BUG]  [BUGGY]  if(style  ==  INSTANCE_YEAR  ||  style  ==  INSTANCE_NO_COLON)  {  return  getDateInstance(style,  null,  null);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(style  ==  INSTANCE_YEAR  ||  style  ==  INSTANCE_NO_COLON)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(style  ==  INSTANCE_YEAR  ||  style  ==  INSTANCE_NO_COLON)  {  return  getDateInstance(style,  null,  null);  }	      if(style    ==    INSTANCE_YEAR)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  ';'  expected	10	None	replace
77	[BUG]  [BUGGY]  if(style  <  INSTANCE_YEAR)  {  return  getDateInstance(style,  null,  null);  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(style  <  INSTANCE_YEAR)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(style  <  INSTANCE_YEAR)  {  return  getDateInstance(style,  null,  null);  }	      if(style    ==    INSTANCE_YEAR)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  ';'  expected	10	None	replace
78	[BUG]  [BUGGY]  if(style  <  INSTANCE_NO_COLON)  {  if(mStyle  ==  INSTANCE_YEAR)  {  return  getDateInstance(style,  null,  null);  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(style  <  INSTANCE_NO_COLON)  {  if(mStyle  ==  INSTANCE_YEAR)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(style  <  INSTANCE_NO_COLON)  {  if(mStyle  ==  INSTANCE_YEAR)  {  return  getDateInstance(style,  null,  null);  }	      if(style    ==    INSTANCE_YEAR)    {    if(mStyle    ==    INSTANCE_YEAR)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  ';'  expected	11	None	replace
79	[BUG]  [BUGGY]  if(mStyle!=  INSTANCE_NO_COLON)  {  return  getDateInstance(style,  null,  null);  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(mStyle!=  INSTANCE_NO_COLON)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(mStyle!=  INSTANCE_NO_COLON)  {  return  getDateInstance(style,  null,  null);  }	      if(style    ==    INSTANCE_YEAR)    {    if(mStyle    ==    INSTANCE_YEAR)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  ';'  expected	11	None	replace
80	[BUG]  [BUGGY]  if(mStyle  ==  INSTANCE_NO_COLON  ||  style  ==  INSTANCE_YEAR)  {  return  getDateInstance(style,  null,  null);  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(mStyle  ==  INSTANCE_NO_COLON  ||  style  ==  INSTANCE_YEAR)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(mStyle  ==  INSTANCE_NO_COLON  ||  style  ==  INSTANCE_YEAR)  {  return  getDateInstance(style,  null,  null);  }	      if(style    ==    INSTANCE_YEAR)    {    if(mStyle    ==    INSTANCE_YEAR)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  ';'  expected	11	None	replace
81	[BUG]  [BUGGY]  if(style  ==  INSTANCE_YEAR  ||  style  ==  INSTANCE_FIRST)  {  return  getDateInstance(style,  null,  null);  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(style  ==  INSTANCE_YEAR  ||  style  ==  INSTANCE_FIRST)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(style  ==  INSTANCE_YEAR  ||  style  ==  INSTANCE_FIRST)  {  return  getDateInstance(style,  null,  null);  }	      if(style    ==    INSTANCE_FIRST    ||    style    ==    INSTANCE_FIRST)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
82	[BUG]  [BUGGY]  if(style  <  MEDIUM  ||  style  >  MEDIUM)  {  if(mStandard)  {  return  getDateInstance(style,  null,  null);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(style  <  MEDIUM  ||  style  >  MEDIUM)  {  if(mStandard)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(style  <  MEDIUM  ||  style  >  MEDIUM)  {  if(mStandard)  {  return  getDateInstance(style,  null,  null);  }	      if(style    <    MEDIUM)    {    if(mStandard)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
83	[BUG]  [BUGGY]  if(style  <  MEDIUM  ||  style  >  SHORT)  {  if(mStandard)  {  return  getDateInstance(style,  null,  null);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(style  <  MEDIUM  ||  style  >  SHORT)  {  if(mStandard)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(style  <  MEDIUM  ||  style  >  SHORT)  {  if(mStandard)  {  return  getDateInstance(style,  null,  null);  }	      if(style    <    MEDIUM)    {    if(mStandard)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
84	[BUG]  [BUGGY]  if(style  <  MEDIUM  ||  style  >  LONG)  {  if(mStandard)  {  return  getDateInstance(style,  null,  null);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(style  <  MEDIUM  ||  style  >  LONG)  {  if(mStandard)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(style  <  MEDIUM  ||  style  >  LONG)  {  if(mStandard)  {  return  getDateInstance(style,  null,  null);  }	      if(style    <    MEDIUM)    {    if(mStandard)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
85	[BUG]  [BUGGY]  return  getDateInstance(style,  null,  null,  -1,  -1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  return  getDateInstance(style,  null,  null,  -1,  -1);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	return  getDateInstance(style,  null,  null,  -1,  -1);	  return    getDateInstance(style,    null,    null,    -1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
86	[BUG]  [BUGGY]  return  getDateInstance(style,  null,  null,  'L');  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  return  getDateInstance(style,  null,  null,  'L');  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	return  getDateInstance(style,  null,  null,  'L');	  return    getDateInstance(style,    null,    null,    true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
87	[BUG]  [BUGGY]  if(mStyle  ==  null  ||  style  >  LONG)  {  if(mRules  ==  null)  {  return  getDateInstance(style,  null,  null);  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(mStyle  ==  null  ||  style  >  LONG)  {  if(mRules  ==  null)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(mStyle  ==  null  ||  style  >  LONG)  {  if(mRules  ==  null)  {  return  getDateInstance(style,  null,  null);  }	      if(style    <    MEDIUM    ||    style    >    LONG)    {    if(mRules    ==    null)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  ';'  expected	17	None	replace
88	[BUG]  [BUGGY]  if(mStyle  ==  null  ||  style  <  MEDIUM  ||  style  >  LONG)  {  if(mRules  ==  null)  {  return  getDateInstance(style,  null,  null);  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateInstance(int  style)  {    [BUGGY]  if(mStyle  ==  null  ||  style  <  MEDIUM  ||  style  >  LONG)  {  if(mRules  ==  null)  {  return  getDateInstance(style,  null,  null);  }  [BUGGY]    return  getDateInstance(style,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	234	234	2	replace	if(mStyle  ==  null  ||  style  <  MEDIUM  ||  style  >  LONG)  {  if(mRules  ==  null)  {  return  getDateInstance(style,  null,  null);  }	      if(style    <    MEDIUM    ||    style    >    LONG)    {    if(mRules    ==    null)    {    return    getDateInstance(style,    null,    null);    }    	non-compiled	[CE]  ';'  expected	17	None	replace
