bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Locale  locale  =(locale!=  null)?  Locale.getDefault()  :  Locale.getDefault();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =(locale!=  null)?  Locale.getDefault()  :  Locale.getDefault();  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	Locale  locale  =(locale!=  null)?  Locale.getDefault()  :  Locale.getDefault();	  Locale    locale    =(locale    ==    null)?    Locale.getDefault()    :    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
2	[BUG]  [BUGGY]  Locale  locale  =(locale  ==  null)?  Locale.getDefault()  :  Locale.getLocale();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =(locale  ==  null)?  Locale.getDefault()  :  Locale.getLocale();  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	Locale  locale  =(locale  ==  null)?  Locale.getDefault()  :  Locale.getLocale();	  Locale    locale    =(locale    ==    null)?    Locale.getDefault()    :    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
3	[BUG]  [BUGGY]  Locale  locale  =(locale  ==  null)?  Locale.getLocale()  :  Locale.getDefault();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =(locale  ==  null)?  Locale.getLocale()  :  Locale.getDefault();  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	Locale  locale  =(locale  ==  null)?  Locale.getLocale()  :  Locale.getDefault();	  Locale    locale    =(locale    ==    null)?    Locale.getDefault()    :    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
4	[BUG]  [BUGGY]  cDateInstanceCache.put(key,  new  Pair(timeZone,  locale));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  cDateInstanceCache.put(key,  new  Pair(timeZone,  locale));  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	cDateInstanceCache.put(key,  new  Pair(timeZone,  locale));	  cDateInstanceCache.put(key,    new    Pair(locale,    locale));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
5	[BUG]  [BUGGY]  cDateInstanceCache.put(key,  new  Pair(key,  locale));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  cDateInstanceCache.put(key,  new  Pair(key,  locale));  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	cDateInstanceCache.put(key,  new  Pair(key,  locale));	  cDateInstanceCache.put(key,    new    Pair(locale,    locale));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
6	[BUG]  [BUGGY]  cDateInstanceCache.put(key,  new  Pair(locale,  locale),  locale);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  cDateInstanceCache.put(key,  new  Pair(locale,  locale),  locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	cDateInstanceCache.put(key,  new  Pair(locale,  locale),  locale);	  cDateInstanceCache.put(key,    new    Pair(locale,    locale));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
7	[BUG]  [BUGGY]  >>  [Delete]  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  >>  [Delete]  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	>>  [Delete]	  if(locale!=    null)    {    key    =    new    Pair(key,    locale.getLocale());    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
8	[BUG]  [BUGGY]  ==  [Delete]  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  ==  [Delete]  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	==  [Delete]	  if(locale!=    null)    {    key    =    new    Pair(key,    locale.getLocale());    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
9	[BUG]  [BUGGY]  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  }  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	}	  if(locale!=    null)    {    key    =    new    Pair(key,    locale.getLocale());    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
10	[BUG]  [BUGGY]  Locale  locale  =  cDateInstanceCache.get(locale,  style);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =  cDateInstanceCache.get(locale,  style);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	Locale  locale  =  cDateInstanceCache.get(locale,  style);	  Locale    locale    =    cDateInstanceCache.get(locale);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
11	[BUG]  [BUGGY]  cDateInstanceCache.put(key,  new  Locale(locale),  locale);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  cDateInstanceCache.put(key,  new  Locale(locale),  locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	cDateInstanceCache.put(key,  new  Locale(locale),  locale);	  cDateInstanceCache.put(key,    new    Locale(locale));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
12	[BUG]  [BUGGY]  electedValues  =  new  LinkedHashMap  <  String,Integer>(locale);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValues  =  new  LinkedHashMap  <  String,Integer>(locale);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	electedValues  =  new  LinkedHashMap  <  String,Integer>(locale);	  electedValues    =    new    LinkedHashMap    <    String,Integer>(style);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
13	[BUG]  [BUGGY]  electedValues  =  new  ArrayList  <  String,Integer>(style);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValues  =  new  ArrayList  <  String,Integer>(style);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	electedValues  =  new  ArrayList  <  String,Integer>(style);	  electedValues    =    new    LinkedHashMap    <    String,Integer>(style);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
14	[BUG]  [BUGGY]  electedValues  =  new  LinkedHashMap  <  String,Integer>(key);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValues  =  new  LinkedHashMap  <  String,Integer>(key);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	electedValues  =  new  LinkedHashMap  <  String,Integer>(key);	  electedValues    =    new    LinkedHashMap    <    String,Integer>(style);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
15	[BUG]  [BUGGY]  electedValues  =  new  LinkedHashMap  <  String,Integer>(values);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValues  =  new  LinkedHashMap  <  String,Integer>(values);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	electedValues  =  new  LinkedHashMap  <  String,Integer>(values);	  electedValues    =    new    LinkedHashMap    <    String,Integer>(style);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
16	[BUG]  [BUGGY]  mutableValues  =  new  ArrayList  <  String,Integer>();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  mutableValues  =  new  ArrayList  <  String,Integer>();  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	mutableValues  =  new  ArrayList  <  String,Integer>();	  mutableValues    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
17	[BUG]  [BUGGY]  mutableValues  =  new  LinkedHashMap  <  String,Integer>(locale);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  mutableValues  =  new  LinkedHashMap  <  String,Integer>(locale);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	mutableValues  =  new  LinkedHashMap  <  String,Integer>(locale);	  mutableValues    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
18	[BUG]  [BUGGY]  mutableValues  =  new  LinkedList  <  String,Integer>();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  mutableValues  =  new  LinkedList  <  String,Integer>();  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	mutableValues  =  new  LinkedList  <  String,Integer>();	  mutableValues    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
19	[BUG]  [BUGGY]  electedField  =  cDateInstanceCache.get(key,  locale);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedField  =  cDateInstanceCache.get(key,  locale);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	electedField  =  cDateInstanceCache.get(key,  locale);	  electedField    =    cDateInstanceCache.get(key);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
20	[BUG]  [BUGGY]  electedField  =  cDateInstanceCache.get(locale);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedField  =  cDateInstanceCache.get(locale);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	electedField  =  cDateInstanceCache.get(locale);	  electedField    =    cDateInstanceCache.get(key);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
21	[BUG]  [BUGGY]  electedValue  =  cDateInstanceCache.get(key,  locale);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValue  =  cDateInstanceCache.get(key,  locale);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	electedValue  =  cDateInstanceCache.get(key,  locale);	  electedValue    =    cDateInstanceCache.get(key);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
22	[BUG]  [BUGGY]  electedValue  =  cDateInstanceCache.get(locale);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValue  =  cDateInstanceCache.get(locale);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	electedValue  =  cDateInstanceCache.get(locale);	  electedValue    =    cDateInstanceCache.get(key);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
23	[BUG]  [BUGGY]  elected  =  new  Pair(locale,  key);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  elected  =  new  Pair(locale,  key);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	elected  =  new  Pair(locale,  key);	  elected    =    new    Pair(key,    locale);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
24	[BUG]  [BUGGY]  elected  =  new  Pair(key,  locale,  cDateInstanceCache);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  elected  =  new  Pair(key,  locale,  cDateInstanceCache);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	elected  =  new  Pair(key,  locale,  cDateInstanceCache);	  elected    =    new    Pair(key,    locale);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
25	[BUG]  [BUGGY]  Locale  locale  =  cDateInstanceCache.get(timeZone,  locale);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =  cDateInstanceCache.get(timeZone,  locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	Locale  locale  =  cDateInstanceCache.get(timeZone,  locale);	  Locale    locale    =    cDateInstanceCache.get(timeZone);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
26	[BUG]  [BUGGY]  cDateInstanceCache.put(key,  new  Pair(timeZone),  locale);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  cDateInstanceCache.put(key,  new  Pair(timeZone),  locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	cDateInstanceCache.put(key,  new  Pair(timeZone),  locale);	  cDateInstanceCache.put(key,    new    Pair(timeZone));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
27	[BUG]  [BUGGY]  Locale  locale  =  locale.getLocale();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =  locale.getLocale();  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	Locale  locale  =  locale.getLocale();	  Locale    locale    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
28	[BUG]  [BUGGY]  mutableValues  =  new  ArrayList  <  Integer,  Integer>();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  mutableValues  =  new  ArrayList  <  Integer,  Integer>();  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	mutableValues  =  new  ArrayList  <  Integer,  Integer>();	  mutableValues    =    new    LinkedHashMap    <    Integer,    Integer>();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
29	[BUG]  [BUGGY]  mutableValues  =  new  LinkedList  <  Integer,  Integer>();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  mutableValues  =  new  LinkedList  <  Integer,  Integer>();  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	mutableValues  =  new  LinkedList  <  Integer,  Integer>();	  mutableValues    =    new    LinkedHashMap    <    Integer,    Integer>();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
30	[BUG]  [BUGGY]  mutableValues  =  new  HashMap  <  Integer,  Integer>();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  mutableValues  =  new  HashMap  <  Integer,  Integer>();  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	mutableValues  =  new  HashMap  <  Integer,  Integer>();	  mutableValues    =    new    LinkedHashMap    <    Integer,    Integer>();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
31	[BUG]  [BUGGY]  Locale  locale  =(locale!=  null?  Locale.getDefault()  :  locale);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =(locale!=  null?  Locale.getDefault()  :  locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	Locale  locale  =(locale!=  null?  Locale.getDefault()  :  locale);	  Locale    locale    =(locale    ==    null?    Locale.getDefault()    :    locale);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
32	[BUG]  [BUGGY]  electedValue  =  Locale.getInstance(style,  locale);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValue  =  Locale.getInstance(style,  locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	electedValue  =  Locale.getInstance(style,  locale);	  electedValue    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
33	[BUG]  [BUGGY]  electedValue  =  locale.getDefault();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValue  =  locale.getDefault();  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	electedValue  =  locale.getDefault();	  electedValue    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
34	[BUG]  [BUGGY]  electedValues  =  new  ArrayList  <  String,Integer>();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValues  =  new  ArrayList  <  String,Integer>();  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	electedValues  =  new  ArrayList  <  String,Integer>();	  electedValues    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
35	[BUG]  [BUGGY]  electedValues  =  new  LinkedList  <  String,Integer>();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValues  =  new  LinkedList  <  String,Integer>();  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	electedValues  =  new  LinkedList  <  String,Integer>();	  electedValues    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
36	[BUG]  [BUGGY]  electedValues  =  new  TreeMap  <  String,Integer>();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValues  =  new  TreeMap  <  String,Integer>();  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	electedValues  =  new  TreeMap  <  String,Integer>();	  electedValues    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
37	[BUG]  [BUGGY]  cDateInstanceCache.put(key,  new  Pair(locale,  style),  locale);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  cDateInstanceCache.put(key,  new  Pair(locale,  style),  locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	cDateInstanceCache.put(key,  new  Pair(locale,  style),  locale);	  cDateInstanceCache.put(key,    new    Pair(locale),    locale);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
38	[BUG]  [BUGGY]  locale  =(Locale)cDateInstanceCache.get(locale);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  locale  =(Locale)cDateInstanceCache.get(locale);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	locale  =(Locale)cDateInstanceCache.get(locale);	  locale    =(Locale)cDateInstanceCache.get(key);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
39	[BUG]  [BUGGY]  locale  =(Locale)cDateInstanceCache.get(key,  locale);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  locale  =(Locale)cDateInstanceCache.get(key,  locale);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	locale  =(Locale)cDateInstanceCache.get(key,  locale);	  locale    =(Locale)cDateInstanceCache.get(key);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
40	[BUG]  [BUGGY]  locale  =(Locale)locale.get(key);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  locale  =(Locale)locale.get(key);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	locale  =(Locale)locale.get(key);	  locale    =(Locale)cDateInstanceCache.get(key);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
41	[BUG]  [BUGGY]  mutableValues  =  new  LinkedHashMap  <  Integer,  Integer>(locale);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  mutableValues  =  new  LinkedHashMap  <  Integer,  Integer>(locale);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	mutableValues  =  new  LinkedHashMap  <  Integer,  Integer>(locale);	  mutableValues    =    new    LinkedHashMap    <    Integer,    Integer>(style);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
42	[BUG]  [BUGGY]  mutableValues  =  new  ArrayList  <  Integer,  Integer>(style);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  mutableValues  =  new  ArrayList  <  Integer,  Integer>(style);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	mutableValues  =  new  ArrayList  <  Integer,  Integer>(style);	  mutableValues    =    new    LinkedHashMap    <    Integer,    Integer>(style);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
43	[BUG]  [BUGGY]  mutableValues  =  new  LinkedHashMap  <  Integer,  Integer>(mValues);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  mutableValues  =  new  LinkedHashMap  <  Integer,  Integer>(mValues);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	mutableValues  =  new  LinkedHashMap  <  Integer,  Integer>(mValues);	  mutableValues    =    new    LinkedHashMap    <    Integer,    Integer>(style);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
44	[BUG]  [BUGGY]  mutableValues  =  new  HashMap  <  Integer,  Integer>(style);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  mutableValues  =  new  HashMap  <  Integer,  Integer>(style);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	mutableValues  =  new  HashMap  <  Integer,  Integer>(style);	  mutableValues    =    new    LinkedHashMap    <    Integer,    Integer>(style);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
45	[BUG]  [BUGGY]  place(locale,  key);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  place(locale,  key);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	place(locale,  key);	  place(key,    locale);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
46	[BUG]  [BUGGY]  ensureLocale(locale);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  ensureLocale(locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	ensureLocale(locale);	  place(key,    locale);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
47	[BUG]  [BUGGY]  gewählt  =  Locale.getDefault();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  gewählt  =  Locale.getDefault();  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	gewählt  =  Locale.getDefault();	  elected    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
48	[BUG]  [BUGGY]  elected  =(Locale)locale.clone();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  elected  =(Locale)locale.clone();  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	elected  =(Locale)locale.clone();	  elected    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
49	[BUG]  [BUGGY]  electedObject  =  cDateInstanceCache.get(key,  locale);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedObject  =  cDateInstanceCache.get(key,  locale);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	electedObject  =  cDateInstanceCache.get(key,  locale);	  electedObject    =    cDateInstanceCache.get(key);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
50	[BUG]  [BUGGY]  electedObject  =  cDateInstanceCache.get(locale);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedObject  =  cDateInstanceCache.get(locale);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	electedObject  =  cDateInstanceCache.get(locale);	  electedObject    =    cDateInstanceCache.get(key);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
51	[BUG]  [BUGGY]  cDateInstanceCache.put(locale,  timeZone);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  cDateInstanceCache.put(locale,  timeZone);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	cDateInstanceCache.put(locale,  timeZone);	  cDateInstanceCache.put(key,    timeZone);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
52	[BUG]  [BUGGY]  Locale  locale  =  cDateInstanceCache.get(locale,  key);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =  cDateInstanceCache.get(locale,  key);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	Locale  locale  =  cDateInstanceCache.get(locale,  key);	  Locale    locale    =    cDateInstanceCache.get(key,    locale);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
53	[BUG]  [BUGGY]  Locale  locale  =  cDateInstanceCache.get(key,  style);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =  cDateInstanceCache.get(key,  style);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	Locale  locale  =  cDateInstanceCache.get(key,  style);	  Locale    locale    =    cDateInstanceCache.get(key,    locale);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
54	[BUG]  [BUGGY]  electedValues  =  cDateInstanceCache.get(key);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValues  =  cDateInstanceCache.get(key);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	electedValues  =  cDateInstanceCache.get(key);	  if(locale!=    null)    {    key    =    new    Pair(key,    locale);    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
55	[BUG]  [BUGGY]  electedValues  =  new  LinkedList  <  Locale>(locale);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValues  =  new  LinkedList  <  Locale>(locale);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	electedValues  =  new  LinkedList  <  Locale>(locale);	  if(locale!=    null)    {    key    =    new    Pair(key,    locale);    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
56	[BUG]  [BUGGY]  electedValues  =  new  ArrayList  <  Locale>(locale);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValues  =  new  ArrayList  <  Locale>(locale);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	electedValues  =  new  ArrayList  <  Locale>(locale);	  if(locale!=    null)    {    key    =    new    Pair(key,    locale);    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
57	[BUG]  [BUGGY]  Locale  locale  =  cDateInstanceCache.get(key  +  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =  cDateInstanceCache.get(key  +  2);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	Locale  locale  =  cDateInstanceCache.get(key  +  2);	  Locale    locale    =    cDateInstanceCache.get(key    +    1);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
58	[BUG]  [BUGGY]  Locale  locale  =  cDateInstanceCache.get(key  +  1,  locale);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =  cDateInstanceCache.get(key  +  1,  locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	Locale  locale  =  cDateInstanceCache.get(key  +  1,  locale);	  Locale    locale    =    cDateInstanceCache.get(key    +    1);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
59	[BUG]  [BUGGY]  Locale  locale  =(Locale)mLocale.clone();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =(Locale)mLocale.clone();  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	Locale  locale  =(Locale)mLocale.clone();	  Locale    locale    =(Locale)locale.clone();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
60	[BUG]  [BUGGY]  Locale  locale  =(Locale)cDateInstanceCache.get(key);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =(Locale)cDateInstanceCache.get(key);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	Locale  locale  =(Locale)cDateInstanceCache.get(key);	  Locale    locale    =(Locale)locale.clone();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
61	[BUG]  [BUGGY]  Locale  locale  =(Locale)locale.getDefault();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =(Locale)locale.getDefault();  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	Locale  locale  =(Locale)locale.getDefault();	  Locale    locale    =(Locale)locale.clone();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
62	[BUG]  [BUGGY]  elected  =  false;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  elected  =  false;  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	elected  =  false;	  elected    =    true;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
63	[BUG]  [BUGGY]  elected  =  null;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  elected  =  null;  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	elected  =  null;	  elected    =    true;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
64	[BUG]  [BUGGY]  gewählt  =  false;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  gewählt  =  false;  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	gewählt  =  false;	  elected    =    true;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
65	[BUG]  [BUGGY]  mutableValues  =  cDateInstanceCache.get(key,  locale);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  mutableValues  =  cDateInstanceCache.get(key,  locale);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	mutableValues  =  cDateInstanceCache.get(key,  locale);	  mutableValues    =    cDateInstanceCache.get(key);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
66	[BUG]  [BUGGY]  mutableValues  =  cDateInstanceCache.get(locale);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  mutableValues  =  cDateInstanceCache.get(locale);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	mutableValues  =  cDateInstanceCache.get(locale);	  mutableValues    =    cDateInstanceCache.get(key);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
67	[BUG]  [BUGGY]  mutableValues  =  cDateInstanceCache.get(key  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  mutableValues  =  cDateInstanceCache.get(key  +  1);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	mutableValues  =  cDateInstanceCache.get(key  +  1);	  mutableValues    =    cDateInstanceCache.get(key);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
68	[BUG]  [BUGGY]  elected.put(key,  Locale.getDefault());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  elected.put(key,  Locale.getDefault());  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	elected.put(key,  Locale.getDefault());	  elected.put(key,    locale);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
69	[BUG]  [BUGGY]  locale  =(locale  ==  null)?  Locale.getLocale()  :  Locale.getDefault();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  locale  =(locale  ==  null)?  Locale.getLocale()  :  Locale.getDefault();  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	locale  =(locale  ==  null)?  Locale.getLocale()  :  Locale.getDefault();	  locale    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
70	[BUG]  [BUGGY]  locale  =(locale  ==  null)?  Locale.getDefault()  :  Locale.getDefault();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  locale  =(locale  ==  null)?  Locale.getDefault()  :  Locale.getDefault();  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	locale  =(locale  ==  null)?  Locale.getDefault()  :  Locale.getDefault();	  locale    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
71	[BUG]  [BUGGY]  locale  =  cDateInstanceCache.get(key);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  locale  =  cDateInstanceCache.get(key);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	locale  =  cDateInstanceCache.get(key);	  locale    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
72	[BUG]  [BUGGY]  cDateInstanceCache.put(key,  locale.getDefault());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  cDateInstanceCache.put(key,  locale.getDefault());  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	cDateInstanceCache.put(key,  locale.getDefault());	  cDateInstanceCache.put(key,    Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	35	None	replace
73	[BUG]  [BUGGY]  locale  =  DateTimeUtils.getLocale(locale);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  locale  =  DateTimeUtils.getLocale(locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	locale  =  DateTimeUtils.getLocale(locale);	  locale    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
74	[BUG]  [BUGGY]  locale  =(Locale)locale.clone();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  locale  =(Locale)locale.clone();  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	locale  =(Locale)locale.clone();	  locale    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
75	[BUG]  [BUGGY]  Locale  locale  =(Locale)locales.clone();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =(Locale)locales.clone();  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	Locale  locale  =(Locale)locales.clone();	  Locale    locale    =(Locale)locale.clone();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
76	[BUG]  [BUGGY]  mutableValues  =  new  java.util.ArrayList  <  String,Integer>();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  mutableValues  =  new  java.util.ArrayList  <  String,Integer>();  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	mutableValues  =  new  java.util.ArrayList  <  String,Integer>();	  mutableValues    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
77	[BUG]  [BUGGY]  mutableValues  =  new  LinkedList  <  Integer,  Integer>(style);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  mutableValues  =  new  LinkedList  <  Integer,  Integer>(style);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	mutableValues  =  new  LinkedList  <  Integer,  Integer>(style);	  mutableValues    =    new    LinkedHashMap    <    Integer,    Integer>(style);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
78	[BUG]  [BUGGY]  mutableValues  =  new  java.util.ArrayList  <  Integer,  Integer>(style);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  mutableValues  =  new  java.util.ArrayList  <  Integer,  Integer>(style);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	mutableValues  =  new  java.util.ArrayList  <  Integer,  Integer>(style);	  mutableValues    =    new    LinkedHashMap    <    Integer,    Integer>(style);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
79	[BUG]  [BUGGY]  electedValues  =  new  LinkedList  <  String,Integer>(style);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValues  =  new  LinkedList  <  String,Integer>(style);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	electedValues  =  new  LinkedList  <  String,Integer>(style);	  electedValues    =    new    LinkedHashMap    <    String,Integer>(style);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
80	[BUG]  [BUGGY]  electedValue  =  locale;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValue  =  locale;  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	electedValue  =  locale;	  electedValue    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
81	[BUG]  [BUGGY]  Locale  locale  =  locale!=  null?  Locale.getDefault()  :  Locale.getDefault();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =  locale!=  null?  Locale.getDefault()  :  Locale.getDefault();  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	Locale  locale  =  locale!=  null?  Locale.getDefault()  :  Locale.getDefault();	  Locale    locale    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
82	[BUG]  [BUGGY]  Beide(locale).put(key,  locale.getLocale());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Beide(locale).put(key,  locale.getLocale());  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	Beide(locale).put(key,  locale.getLocale());	  if(locale    ==    null)    {    key    =    new    Pair(key,    locale.getLocale());    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
83	[BUG]  [BUGGY]  BeidenLocales.put(key,  locale.getLocale());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  BeidenLocales.put(key,  locale.getLocale());  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	BeidenLocales.put(key,  locale.getLocale());	  if(locale    ==    null)    {    key    =    new    Pair(key,    locale.getLocale());    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
84	[BUG]  [BUGGY]  Beide(locale).put(key,  locale);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Beide(locale).put(key,  locale);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	Beide(locale).put(key,  locale);	  if(locale    ==    null)    {    key    =    new    Pair(key,    locale.getLocale());    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
85	[BUG]  [BUGGY]  BeidenLocales.put(key,  locale);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  BeidenLocales.put(key,  locale);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	BeidenLocales.put(key,  locale);	  if(locale    ==    null)    {    key    =    new    Pair(key,    locale.getLocale());    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
86	[BUG]  [BUGGY]  elected  =(locale  ==  null)?  Locale.getDefault()  :  Locale.getDefault();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  elected  =(locale  ==  null)?  Locale.getDefault()  :  Locale.getDefault();  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	elected  =(locale  ==  null)?  Locale.getDefault()  :  Locale.getDefault();	  elected    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
87	[BUG]  [BUGGY]  Locale  locale  =  cDateInstanceCache.get(key  +  3);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =  cDateInstanceCache.get(key  +  3);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	Locale  locale  =  cDateInstanceCache.get(key  +  3);	  Locale    locale    =    cDateInstanceCache.get(key    +    1);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
88	[BUG]  [BUGGY]  electedValues  =  new  java.util.ArrayList  <  String,Integer>();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValues  =  new  java.util.ArrayList  <  String,Integer>();  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	electedValues  =  new  java.util.ArrayList  <  String,Integer>();	  electedValues    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
89	[BUG]  [BUGGY]  electedField  =  cDateInstanceCache.get(key  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedField  =  cDateInstanceCache.get(key  +  1);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	electedField  =  cDateInstanceCache.get(key  +  1);	  electedField    =    cDateInstanceCache.get(key);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
90	[BUG]  [BUGGY]  mutableValues  =  new  java.util.ArrayList  <  Integer,  Integer>();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  mutableValues  =  new  java.util.ArrayList  <  Integer,  Integer>();  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	mutableValues  =  new  java.util.ArrayList  <  Integer,  Integer>();	  mutableValues    =    new    LinkedHashMap    <    Integer,    Integer>();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
91	[BUG]  [BUGGY]  electedValue  =  cDateInstanceCache.get(key  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValue  =  cDateInstanceCache.get(key  +  1);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	electedValue  =  cDateInstanceCache.get(key  +  1);	  electedValue    =    cDateInstanceCache.get(key);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
92	[BUG]  [BUGGY]  Locale  locale  =  cDateInstanceCache.get(key,  locale  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =  cDateInstanceCache.get(key,  locale  +  1);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	Locale  locale  =  cDateInstanceCache.get(key,  locale  +  1);	  Locale    locale    =    cDateInstanceCache.get(key,    locale);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
93	[BUG]  [BUGGY]  cDateInstanceCache.put(key,  new  Pair(locale,  locale),  timeZone);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  cDateInstanceCache.put(key,  new  Pair(locale,  locale),  timeZone);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	cDateInstanceCache.put(key,  new  Pair(locale,  locale),  timeZone);	  cDateInstanceCache.put(key,    new    Pair(locale,    locale));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
94	[BUG]  [BUGGY]  Locale  locale  =  cDateInstanceCache.get(locale,  locale);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =  cDateInstanceCache.get(locale,  locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	Locale  locale  =  cDateInstanceCache.get(locale,  locale);	  Locale    locale    =    cDateInstanceCache.get(locale);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
95	[BUG]  [BUGGY]  Locale  locale  =  cDateInstanceCache.get(locale  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =  cDateInstanceCache.get(locale  +  1);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	Locale  locale  =  cDateInstanceCache.get(locale  +  1);	  Locale    locale    =    cDateInstanceCache.get(locale);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
96	[BUG]  [BUGGY]  locale  =(Locale)cDateInstanceCache.get(timeZone);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  locale  =(Locale)cDateInstanceCache.get(timeZone);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	locale  =(Locale)cDateInstanceCache.get(timeZone);	  locale    =(Locale)cDateInstanceCache.get(key);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
97	[BUG]  [BUGGY]  Locale  locale  =  cDateInstanceCache.get(key  +  1).locale;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =  cDateInstanceCache.get(key  +  1).locale;  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	Locale  locale  =  cDateInstanceCache.get(key  +  1).locale;	  Locale    locale    =    cDateInstanceCache.get(key    +    1);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
98	[BUG]  [BUGGY]  electedValues  =  new  TreeMap  <  String,Integer>(style);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValues  =  new  TreeMap  <  String,Integer>(style);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	electedValues  =  new  TreeMap  <  String,Integer>(style);	  electedValues    =    new    LinkedHashMap    <    String,Integer>(style);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
99	[BUG]  [BUGGY]  mutableValues  =  new  TreeMap  <  String,Integer>();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  mutableValues  =  new  TreeMap  <  String,Integer>();  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	mutableValues  =  new  TreeMap  <  String,Integer>();	  mutableValues    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
100	[BUG]  [BUGGY]  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  {  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	{	  if(locale    ==    null)    {    key    =    new    Pair(key,    locale.getLocale());    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
101	[BUG]  [BUGGY]  electedValue  =  new  Pair(key,  locale.getLocale());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValue  =  new  Pair(key,  locale.getLocale());  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	electedValue  =  new  Pair(key,  locale.getLocale());	  if(locale!=    null)    {    key    =    new    Pair(key,    locale.getLocale());    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
102	[BUG]  [BUGGY]  electedValues  =  new  ArrayList(key,  locale.getLocale());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValues  =  new  ArrayList(key,  locale.getLocale());  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	electedValues  =  new  ArrayList(key,  locale.getLocale());	  if(locale!=    null)    {    key    =    new    Pair(key,    locale.getLocale());    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
103	[BUG]  [BUGGY]  electedValue  =  locale.getLocale();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValue  =  locale.getLocale();  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	electedValue  =  locale.getLocale();	  if(locale!=    null)    {    key    =    new    Pair(key,    locale.getLocale());    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
104	[BUG]  [BUGGY]  mutableValues  =  new  TreeMap  <  Integer,  Integer>(style);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  mutableValues  =  new  TreeMap  <  Integer,  Integer>(style);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	mutableValues  =  new  TreeMap  <  Integer,  Integer>(style);	  mutableValues    =    new    LinkedHashMap    <    Integer,    Integer>(style);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
105	[BUG]  [BUGGY]  cDateInstanceCache.put(key,  null);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  cDateInstanceCache.put(key,  null);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	cDateInstanceCache.put(key,  null);	  cDateInstanceCache.put(key,    Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	35	None	replace
106	[BUG]  [BUGGY]  Locale  locale  =  cDateInstanceCache.get(mLocale);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =  cDateInstanceCache.get(mLocale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	Locale  locale  =  cDateInstanceCache.get(mLocale);	  Locale    locale    =    cDateInstanceCache.get(locale);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
107	[BUG]  [BUGGY]  gewähltValue  =  Locale.getDefault();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  gewähltValue  =  Locale.getDefault();  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	gewähltValue  =  Locale.getDefault();	  electedValue    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
108	[BUG]  [BUGGY]  Locale  locale  =  locale  ==  null?  Locale.getDefault()  :  locale;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =  locale  ==  null?  Locale.getDefault()  :  locale;  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	Locale  locale  =  locale  ==  null?  Locale.getDefault()  :  locale;	  Locale    locale    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
109	[BUG]  [BUGGY]  mutableValues  =  new  TreeMap  <  Integer,  Integer>();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  mutableValues  =  new  TreeMap  <  Integer,  Integer>();  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	mutableValues  =  new  TreeMap  <  Integer,  Integer>();	  mutableValues    =    new    LinkedHashMap    <    Integer,    Integer>();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
110	[BUG]  [BUGGY]  Locale  locale  =(Locale)cDateInstanceCache.get(locale);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =(Locale)cDateInstanceCache.get(locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	Locale  locale  =(Locale)cDateInstanceCache.get(locale);	  Locale    locale    =(Locale)locale.clone();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
111	[BUG]  [BUGGY]  if(cDateInstanceCache!=  null)  {  key  =  new  Pair(key,  locale);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  if(cDateInstanceCache!=  null)  {  key  =  new  Pair(key,  locale);  }  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	if(cDateInstanceCache!=  null)  {  key  =  new  Pair(key,  locale);  }	  if(locale!=    null)    {    key    =    new    Pair(key,    locale);    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
112	[BUG]  [BUGGY]  cDateInstanceCache.put(key,  new  Pair(locale,  locale);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  cDateInstanceCache.put(key,  new  Pair(locale,  locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	cDateInstanceCache.put(key,  new  Pair(locale,  locale);	  cDateInstanceCache.put(key,    new    Pair(locale),    locale);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
113	[BUG]  [BUGGY]  elected  =  new  Pair(locale,  locale);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  elected  =  new  Pair(locale,  locale);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	elected  =  new  Pair(locale,  locale);	  elected    =    new    Pair(key,    locale);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
114	[BUG]  [BUGGY]  locale  =(locale  ==  null)?  Locale.getDefault()  :  locale;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  synchronized  FastDateFormat  getDateInstance(int  style,  TimeZone  timeZone,  Locale  locale)  {  Object  key  =  new  Integer(style);  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  locale  =(locale  ==  null)?  Locale.getDefault()  :  locale;  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateInstance(style,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateInstance  [RETURN_TYPE]  FastDateFormat  int  style  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	286	286	2	replace	locale  =(locale  ==  null)?  Locale.getDefault()  :  locale;	  locale    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
