bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
89	[BUG] [BUGGY] SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateInstance(style, locale); [FE] AssertionFailedError [CONTEXT] key = new Pair(key, locale); }  FastDateFormat format = (FastDateFormat) cDateInstanceCache.get(key); if (format == null) { if (locale == null) { locale = Locale.getDefault(); } try { [BUGGY] SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateInstance(style, locale); [BUGGY] String pattern = formatter.toPattern(); format = getInstance(pattern, timeZone, locale); cDateInstanceCache.put(key, format); } catch (ClassCastException ex) { throw new IllegalArgumentException("No date pattern for locale: " + locale); } } return format; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] getDateInstance [RETURN_TYPE] FastDateFormat  int style TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE FastDateFormat format String cDefaultPattern mDaylight mPattern mStandard mValue pattern value String[] mValues values UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT field mField mMaxLengthEstimate mSize mStyle size style Rule[] mRules TimeZone mTimeZone timeZone boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule ClassCastException ex char mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache SimpleDateFormat formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	296	296	2	replace	
90	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] key = new Pair(key, locale); }  FastDateFormat format = (FastDateFormat) cDateInstanceCache.get(key); if (format == null) { if (locale == null) { locale = Locale.getDefault(); } try { [BUGGY] [BUGGY] SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateInstance(style, locale); String pattern = formatter.toPattern(); format = getInstance(pattern, timeZone, locale); cDateInstanceCache.put(key, format); } catch (ClassCastException ex) { throw new IllegalArgumentException("No date pattern for locale: " + locale); } } return format; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] getDateInstance [RETURN_TYPE] FastDateFormat  int style TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE FastDateFormat format String cDefaultPattern mDaylight mPattern mStandard mValue pattern value String[] mValues values UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT field mField mMaxLengthEstimate mSize mStyle size style Rule[] mRules TimeZone mTimeZone timeZone boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule ClassCastException ex char mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache SimpleDateFormat formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.5	296	296	2	add	
