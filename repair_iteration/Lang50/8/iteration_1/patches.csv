bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  dateStyle  =  getDateTimeInstance(dateStyle,  timeStyle,  null);  [CE]  case,  default,  or  '}'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  int  dateStyle  =  getDateTimeInstance(dateStyle,  timeStyle,  null);  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	int  dateStyle  =  getDateTimeInstance(dateStyle,  timeStyle,  null);	      int    dateStyle    =    getDateTimeInstance(dateStyle,    timeStyle);    	non-compiled	[CE]  case,  default,  or  '}'  expected	5	None	replace
2	[BUG]  [BUGGY]  int  dateStyle  =  getDateTimeInstance(dateStyle,  timeStyle,  mMaxLengthEstimate);  [CE]  case,  default,  or  '}'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  int  dateStyle  =  getDateTimeInstance(dateStyle,  timeStyle,  mMaxLengthEstimate);  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	int  dateStyle  =  getDateTimeInstance(dateStyle,  timeStyle,  mMaxLengthEstimate);	      int    dateStyle    =    getDateTimeInstance(dateStyle,    timeStyle);    	non-compiled	[CE]  case,  default,  or  '}'  expected	5	None	replace
3	[BUG]  [BUGGY]  int  dateStyle  =  getDateTimeInstance(dateStyle,  timeStyle,  false);  [CE]  case,  default,  or  '}'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  int  dateStyle  =  getDateTimeInstance(dateStyle,  timeStyle,  false);  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	int  dateStyle  =  getDateTimeInstance(dateStyle,  timeStyle,  false);	      int    dateStyle    =    getDateTimeInstance(dateStyle,    timeStyle);    	non-compiled	[CE]  case,  default,  or  '}'  expected	5	None	replace
4	[BUG]  [BUGGY]  int  dateStyle  =  getDateTimeInstance(dateStyle,  timeStyle,  true);  [CE]  case,  default,  or  '}'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  int  dateStyle  =  getDateTimeInstance(dateStyle,  timeStyle,  true);  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	int  dateStyle  =  getDateTimeInstance(dateStyle,  timeStyle,  true);	      int    dateStyle    =    getDateTimeInstance(dateStyle,    timeStyle);    	non-compiled	[CE]  case,  default,  or  '}'  expected	5	None	replace
5	[BUG]  [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  mRules,  null,  false);  [CE]  case,  default,  or  '}'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  mRules,  null,  false);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	return  getDateTimeInstance(dateStyle,  timeStyle,  mRules,  null,  false);	  return    getDateTimeInstance(dateStyle,    timeStyle,    mRules,    null,    null);    	non-compiled	[CE]  case,  default,  or  '}'  expected	1	None	replace
6	[BUG]  [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  mRules,  value,  null,  null);  [CE]  case,  default,  or  '}'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  mRules,  value,  null,  null);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	return  getDateTimeInstance(dateStyle,  timeStyle,  mRules,  value,  null,  null);	  return    getDateTimeInstance(dateStyle,    timeStyle,    mRules,    null,    null);    	non-compiled	[CE]  case,  default,  or  '}'  expected	1	None	replace
7	[BUG]  [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  rule,  null,  null);  [CE]  case,  default,  or  '}'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  rule,  null,  null);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	return  getDateTimeInstance(dateStyle,  timeStyle,  rule,  null,  null);	  return    getDateTimeInstance(dateStyle,    timeStyle,    mRules,    null,    null);    	non-compiled	[CE]  case,  default,  or  '}'  expected	1	None	replace
8	[BUG]  [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  mSize,  null,  null);  [CE]  case,  default,  or  '}'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  mSize,  null,  null);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	return  getDateTimeInstance(dateStyle,  timeStyle,  mSize,  null,  null);	  return    getDateTimeInstance(dateStyle,    timeStyle,    mMaxLengthEstimate,    null,    null);    	non-compiled	[CE]  case,  default,  or  '}'  expected	17	None	replace
9	[BUG]  [BUGGY]  Integer  dateStyle  =  getDateTimeInstance(dateStyle,  timeStyle,  null);  [CE]  case,  default,  or  '}'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  Integer  dateStyle  =  getDateTimeInstance(dateStyle,  timeStyle,  null);  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	Integer  dateStyle  =  getDateTimeInstance(dateStyle,  timeStyle,  null);	      Integer    dateStyle    =    getDateTimeInstance(dateStyle,    timeStyle);    	non-compiled	[CE]  case,  default,  or  '}'  expected	6	None	replace
10	[BUG]  [BUGGY]  Integer  dateStyle  =  getDateTimeInstance(dateStyle,  timeStyle,  0);  [CE]  case,  default,  or  '}'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  Integer  dateStyle  =  getDateTimeInstance(dateStyle,  timeStyle,  0);  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	Integer  dateStyle  =  getDateTimeInstance(dateStyle,  timeStyle,  0);	      Integer    dateStyle    =    getDateTimeInstance(dateStyle,    timeStyle);    	non-compiled	[CE]  case,  default,  or  '}'  expected	6	None	replace
11	[BUG]  [BUGGY]  Integer  dateStyle  =  getDateTimeInstance(dateStyle,  timeStyle,  false);  [CE]  case,  default,  or  '}'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  Integer  dateStyle  =  getDateTimeInstance(dateStyle,  timeStyle,  false);  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	Integer  dateStyle  =  getDateTimeInstance(dateStyle,  timeStyle,  false);	      Integer    dateStyle    =    getDateTimeInstance(dateStyle,    timeStyle);    	non-compiled	[CE]  case,  default,  or  '}'  expected	6	None	replace
12	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle);  }  [CE]  case,  default,  or  '}'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  For(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	For(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    i++)    {    mRules[i]    =    getDateTimeInstance(i,    timeStyle);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	8	None	replace
13	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle);  }  [CE]  case,  default,  or  '}'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  for(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	for(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    i++)    {    mRules[i]    =    getDateTimeInstance(i,    timeStyle);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	8	None	replace
14	[BUG]  [BUGGY]  Formatter  ==  null  {  for(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle);  }  [CE]  case,  default,  or  '}'  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  Formatter  ==  null  {  for(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	Formatter  ==  null  {  for(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    i++)    {    mRules[i]    =    getDateTimeInstance(i,    timeStyle);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	8	None	replace
15	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  dateStyle;  i++)  {  Rule[]  mRules  =  getDateTimeInstance(i,  timeStyle);  }  [CE]  case,  default,  or  '}'  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  For(int  i  =  0;  i  <  dateStyle;  i++)  {  Rule[]  mRules  =  getDateTimeInstance(i,  timeStyle);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	For(int  i  =  0;  i  <  dateStyle;  i++)  {  Rule[]  mRules  =  getDateTimeInstance(i,  timeStyle);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    i++)    {    mRules[i]    =    getDateTimeInstance(i,    timeStyle);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	8	None	replace
16	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  dateStyle;  ++i)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle);  }  [CE]  case,  default,  or  '}'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  For(int  i  =  0;  i  <  dateStyle;  ++i)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	For(int  i  =  0;  i  <  dateStyle;  ++i)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    ++i)    {    mRules[i]    =    getDateTimeInstance(i,    timeStyle);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	15	None	replace
17	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dateStyle;  ++i)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle);  }  [CE]  case,  default,  or  '}'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  for(int  i  =  0;  i  <  dateStyle;  ++i)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	for(int  i  =  0;  i  <  dateStyle;  ++i)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    ++i)    {    mRules[i]    =    getDateTimeInstance(i,    timeStyle);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	15	None	replace
18	[BUG]  [BUGGY]  Formatter  ==  null  {  for(int  i  =  0;  i  <  dateStyle;  ++i)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle);  }  [CE]  case,  default,  or  '}'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  Formatter  ==  null  {  for(int  i  =  0;  i  <  dateStyle;  ++i)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	Formatter  ==  null  {  for(int  i  =  0;  i  <  dateStyle;  ++i)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    ++i)    {    mRules[i]    =    getDateTimeInstance(i,    timeStyle);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	15	None	replace
19	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  dateStyle;  ++i)  {  Rule[]  mRules  =  getDateTimeInstance(i,  timeStyle);  }  [CE]  case,  default,  or  '}'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  For(int  i  =  0;  i  <  dateStyle;  ++i)  {  Rule[]  mRules  =  getDateTimeInstance(i,  timeStyle);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	For(int  i  =  0;  i  <  dateStyle;  ++i)  {  Rule[]  mRules  =  getDateTimeInstance(i,  timeStyle);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    ++i)    {    mRules[i]    =    getDateTimeInstance(i,    timeStyle);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	15	None	replace
20	[BUG]  [BUGGY]  Integer  dateStyle  =  getDateTimeInstance(dateStyle,  TimeZoneConstants.MILLIS_PER_HOUR);  [CE]  case,  default,  or  '}'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  Integer  dateStyle  =  getDateTimeInstance(dateStyle,  TimeZoneConstants.MILLIS_PER_HOUR);  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	Integer  dateStyle  =  getDateTimeInstance(dateStyle,  TimeZoneConstants.MILLIS_PER_HOUR);	      Integer    dateStyle    =    getDateTimeInstance(timeStyle,    DateTimeConstants.MILLIS_PER_HOUR);    	non-compiled	[CE]  case,  default,  or  '}'  expected	13	None	replace
21	[BUG]  [BUGGY]  Integer  dateStyle  =  getDateTimeInstance(dateStyle,  DateTimeConstants.MILLIS_PER_HOUR);  [CE]  case,  default,  or  '}'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  Integer  dateStyle  =  getDateTimeInstance(dateStyle,  DateTimeConstants.MILLIS_PER_HOUR);  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	Integer  dateStyle  =  getDateTimeInstance(dateStyle,  DateTimeConstants.MILLIS_PER_HOUR);	      Integer    dateStyle    =    getDateTimeInstance(timeStyle,    DateTimeConstants.MILLIS_PER_HOUR);    	non-compiled	[CE]  case,  default,  or  '}'  expected	13	None	replace
22	[BUG]  [BUGGY]  Integer  dateStyle  =  getDateTimeInstance(dateStyle,  TimeTimeConstants.MILLIS_PER_HOUR);  [CE]  case,  default,  or  '}'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  Integer  dateStyle  =  getDateTimeInstance(dateStyle,  TimeTimeConstants.MILLIS_PER_HOUR);  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	Integer  dateStyle  =  getDateTimeInstance(dateStyle,  TimeTimeConstants.MILLIS_PER_HOUR);	      Integer    dateStyle    =    getDateTimeInstance(timeStyle,    DateTimeConstants.MILLIS_PER_HOUR);    	non-compiled	[CE]  case,  default,  or  '}'  expected	13	None	replace
23	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  dateStyle;  ++i)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle,  null,  null);  }  [CE]  case,  default,  or  '}'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  For(int  i  =  0;  i  <  dateStyle;  ++i)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle,  null,  null);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	For(int  i  =  0;  i  <  dateStyle;  ++i)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle,  null,  null);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    ++i)    {    mRules[i]    =    getDateTimeInstance(i,    timeStyle,    null,    null);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	16	None	replace
24	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dateStyle;  ++i)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle,  null,  null);  }  [CE]  case,  default,  or  '}'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  for(int  i  =  0;  i  <  dateStyle;  ++i)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle,  null,  null);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	for(int  i  =  0;  i  <  dateStyle;  ++i)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle,  null,  null);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    ++i)    {    mRules[i]    =    getDateTimeInstance(i,    timeStyle,    null,    null);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	16	None	replace
25	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  dateStyle;  ++i)  {  Rule[]  mRules  =  getDateTimeInstance(i,  timeStyle,  null,  null);  }  [CE]  case,  default,  or  '}'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  For(int  i  =  0;  i  <  dateStyle;  ++i)  {  Rule[]  mRules  =  getDateTimeInstance(i,  timeStyle,  null,  null);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	For(int  i  =  0;  i  <  dateStyle;  ++i)  {  Rule[]  mRules  =  getDateTimeInstance(i,  timeStyle,  null,  null);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    ++i)    {    mRules[i]    =    getDateTimeInstance(i,    timeStyle,    null,    null);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	16	None	replace
26	[BUG]  [BUGGY]  mRules[i]  =  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  [CE]  case,  default,  or  '}'  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  mRules[i]  =  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	mRules[i]  =  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    ++i)    {    mRules[i]    =    getDateTimeInstance(i,    timeStyle,    null,    null);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	16	None	replace
27	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  dateStyle;  i++)  {  getDateTimeInstance(i,  timeStyle,  null,  null);  }  [CE]  case,  default,  or  '}'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  For(int  i  =  0;  i  <  dateStyle;  i++)  {  getDateTimeInstance(i,  timeStyle,  null,  null);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	For(int  i  =  0;  i  <  dateStyle;  i++)  {  getDateTimeInstance(i,  timeStyle,  null,  null);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    i++)    {    getDateTimeInstance(i,    timeStyle,    null,    null);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	9	None	replace
28	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dateStyle;  i++)  {  getDateTimeInstance(i,  timeStyle,  null,  null);  }  [CE]  case,  default,  or  '}'  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  for(int  i  =  0;  i  <  dateStyle;  i++)  {  getDateTimeInstance(i,  timeStyle,  null,  null);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	for(int  i  =  0;  i  <  dateStyle;  i++)  {  getDateTimeInstance(i,  timeStyle,  null,  null);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    i++)    {    getDateTimeInstance(i,    timeStyle,    null,    null);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	9	None	replace
29	[BUG]  [BUGGY]  Formatter  ==  null  {  for(int  i  =  0;  i  <  dateStyle;  i++)  {  getDateTimeInstance(i,  timeStyle,  null,  null);  }  [CE]  case,  default,  or  '}'  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  Formatter  ==  null  {  for(int  i  =  0;  i  <  dateStyle;  i++)  {  getDateTimeInstance(i,  timeStyle,  null,  null);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	Formatter  ==  null  {  for(int  i  =  0;  i  <  dateStyle;  i++)  {  getDateTimeInstance(i,  timeStyle,  null,  null);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    i++)    {    getDateTimeInstance(i,    timeStyle,    null,    null);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	9	None	replace
30	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  dateStyle,  timeStyle)  {  getDateTimeInstance(i,  timeStyle,  null,  null);  }  [CE]  case,  default,  or  '}'  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  For(int  i  =  0;  i  <  dateStyle,  timeStyle)  {  getDateTimeInstance(i,  timeStyle,  null,  null);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	For(int  i  =  0;  i  <  dateStyle,  timeStyle)  {  getDateTimeInstance(i,  timeStyle,  null,  null);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    i++)    {    getDateTimeInstance(i,    timeStyle,    null,    null);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	9	None	replace
31	[BUG]  [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  null,  1);  [CE]  case,  default,  or  '}'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  null,  1);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	return  getDateTimeInstance(dateStyle,  timeStyle,  null,  1);	  return    getDateTimeInstance(dateStyle,    timeStyle,    null,    -1);    	non-compiled	[CE]  case,  default,  or  '}'  expected	10	None	replace
32	[BUG]  [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  null,  2);  [CE]  case,  default,  or  '}'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  null,  2);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	return  getDateTimeInstance(dateStyle,  timeStyle,  null,  2);	  return    getDateTimeInstance(dateStyle,    timeStyle,    null,    -1);    	non-compiled	[CE]  case,  default,  or  '}'  expected	10	None	replace
33	[BUG]  [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  null,  3);  [CE]  case,  default,  or  '}'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  null,  3);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	return  getDateTimeInstance(dateStyle,  timeStyle,  null,  3);	  return    getDateTimeInstance(dateStyle,    timeStyle,    null,    -1);    	non-compiled	[CE]  case,  default,  or  '}'  expected	10	None	replace
34	[BUG]  [BUGGY]  Integer  dateStyle  =  getDateTimeInstance(dateStyle,  TimeZoneConstants.MILLIS_PER_SHORT);  [CE]  case,  default,  or  '}'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  Integer  dateStyle  =  getDateTimeInstance(dateStyle,  TimeZoneConstants.MILLIS_PER_SHORT);  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	Integer  dateStyle  =  getDateTimeInstance(dateStyle,  TimeZoneConstants.MILLIS_PER_SHORT);	      Integer    dateStyle    =    getDateTimeInstance(timeStyle,    DateTimeConstants.MILLIS_PER_SHORT);    	non-compiled	[CE]  case,  default,  or  '}'  expected	12	None	replace
35	[BUG]  [BUGGY]  Integer  dateStyle  =  getDateTimeInstance(dateStyle,  DateTimeConstants.MILLIS_PER_SHORT);  [CE]  case,  default,  or  '}'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  Integer  dateStyle  =  getDateTimeInstance(dateStyle,  DateTimeConstants.MILLIS_PER_SHORT);  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	Integer  dateStyle  =  getDateTimeInstance(dateStyle,  DateTimeConstants.MILLIS_PER_SHORT);	      Integer    dateStyle    =    getDateTimeInstance(timeStyle,    DateTimeConstants.MILLIS_PER_SHORT);    	non-compiled	[CE]  case,  default,  or  '}'  expected	12	None	replace
36	[BUG]  [BUGGY]  Integer  dateStyle  =  getDateTimeInstance(dateStyle,  TimeTimeConstants.MILLIS_PER_SHORT);  [CE]  case,  default,  or  '}'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  Integer  dateStyle  =  getDateTimeInstance(dateStyle,  TimeTimeConstants.MILLIS_PER_SHORT);  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	Integer  dateStyle  =  getDateTimeInstance(dateStyle,  TimeTimeConstants.MILLIS_PER_SHORT);	      Integer    dateStyle    =    getDateTimeInstance(timeStyle,    DateTimeConstants.MILLIS_PER_SHORT);    	non-compiled	[CE]  case,  default,  or  '}'  expected	12	None	replace
37	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  dateStyle,  timeStyle);  }  [CE]  case,  default,  or  '}'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  For(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  dateStyle,  timeStyle);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	For(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  dateStyle,  timeStyle);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    timeStyle;    i++)    {    mRules[i]    =    getDateTimeInstance(i,    dateStyle,    timeStyle);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	7	None	replace
38	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  timeStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  dateStyle,  timeStyle);  }  [CE]  case,  default,  or  '}'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  For(int  i  =  0;  i  <  timeStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  dateStyle,  timeStyle);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	For(int  i  =  0;  i  <  timeStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  dateStyle,  timeStyle);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    timeStyle;    i++)    {    mRules[i]    =    getDateTimeInstance(i,    dateStyle,    timeStyle);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	7	None	replace
39	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  dateStyle,  timeStyle);  }  [CE]  case,  default,  or  '}'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  for(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  dateStyle,  timeStyle);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	for(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  dateStyle,  timeStyle);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    timeStyle;    i++)    {    mRules[i]    =    getDateTimeInstance(i,    dateStyle,    timeStyle);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	7	None	replace
40	[BUG]  [BUGGY]  Formatter  ==  null  {  for(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  dateStyle,  timeStyle);  }  [CE]  case,  default,  or  '}'  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  Formatter  ==  null  {  for(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  dateStyle,  timeStyle);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	Formatter  ==  null  {  for(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  dateStyle,  timeStyle);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    timeStyle;    i++)    {    mRules[i]    =    getDateTimeInstance(i,    dateStyle,    timeStyle);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	7	None	replace
41	[BUG]  [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle);  [CE]  case,  default,  or  '}'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	return  getDateTimeInstance(dateStyle,  timeStyle);	      	non-compiled	[CE]  case,  default,  or  '}'  expected	4	None	replace
42	[BUG]  [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  null);  [CE]  case,  default,  or  '}'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  null);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	return  getDateTimeInstance(dateStyle,  timeStyle,  null);	      	non-compiled	[CE]  case,  default,  or  '}'  expected	4	None	replace
43	[BUG]  [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  false);  [CE]  case,  default,  or  '}'  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  false);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	return  getDateTimeInstance(dateStyle,  timeStyle,  false);	      	non-compiled	[CE]  case,  default,  or  '}'  expected	4	None	replace
44	[BUG]  [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  true);  [CE]  case,  default,  or  '}'  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  true);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	return  getDateTimeInstance(dateStyle,  timeStyle,  true);	      	non-compiled	[CE]  case,  default,  or  '}'  expected	4	None	replace
45	[BUG]  [BUGGY]  Integer  dateStyle  =  getDateTimeInstance(dateStyle,  TimeZoneConstants.MILLIS_PER_DAY);  [CE]  case,  default,  or  '}'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  Integer  dateStyle  =  getDateTimeInstance(dateStyle,  TimeZoneConstants.MILLIS_PER_DAY);  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	Integer  dateStyle  =  getDateTimeInstance(dateStyle,  TimeZoneConstants.MILLIS_PER_DAY);	      Integer    dateStyle    =    getDateTimeInstance(timeStyle,    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  case,  default,  or  '}'  expected	11	None	replace
46	[BUG]  [BUGGY]  Integer  dateStyle  =  getDateTimeInstance(dateStyle,  DateTimeConstants.MILLIS_PER_DAY);  [CE]  case,  default,  or  '}'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  Integer  dateStyle  =  getDateTimeInstance(dateStyle,  DateTimeConstants.MILLIS_PER_DAY);  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	Integer  dateStyle  =  getDateTimeInstance(dateStyle,  DateTimeConstants.MILLIS_PER_DAY);	      Integer    dateStyle    =    getDateTimeInstance(timeStyle,    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  case,  default,  or  '}'  expected	11	None	replace
47	[BUG]  [BUGGY]  Integer  dateStyle  =  getDateTimeInstance(dateStyle,  TimeTimeConstants.MILLIS_PER_DAY);  [CE]  case,  default,  or  '}'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  Integer  dateStyle  =  getDateTimeInstance(dateStyle,  TimeTimeConstants.MILLIS_PER_DAY);  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	Integer  dateStyle  =  getDateTimeInstance(dateStyle,  TimeTimeConstants.MILLIS_PER_DAY);	      Integer    dateStyle    =    getDateTimeInstance(timeStyle,    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  case,  default,  or  '}'  expected	11	None	replace
48	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle,  null,  null);  }  [CE]  case,  default,  or  '}'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  For(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle,  null,  null);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	For(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle,  null,  null);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    i++)    {    mRules[i]    =    getDateTimeInstance(i,    timeStyle,    null,    null);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	14	None	replace
49	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle,  null,  null);  }  [CE]  case,  default,  or  '}'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  for(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle,  null,  null);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	for(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle,  null,  null);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    i++)    {    mRules[i]    =    getDateTimeInstance(i,    timeStyle,    null,    null);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	14	None	replace
50	[BUG]  [BUGGY]  Formatter  ==  null  {  for(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle,  null,  null);  }  [CE]  case,  default,  or  '}'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  Formatter  ==  null  {  for(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle,  null,  null);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	Formatter  ==  null  {  for(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle,  null,  null);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    i++)    {    mRules[i]    =    getDateTimeInstance(i,    timeStyle,    null,    null);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	14	None	replace
51	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  dateStyle;  i++)  {  Rule[]  mRules  =  getDateTimeInstance(i,  timeStyle,  null,  null);  }  [CE]  case,  default,  or  '}'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  For(int  i  =  0;  i  <  dateStyle;  i++)  {  Rule[]  mRules  =  getDateTimeInstance(i,  timeStyle,  null,  null);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	For(int  i  =  0;  i  <  dateStyle;  i++)  {  Rule[]  mRules  =  getDateTimeInstance(i,  timeStyle,  null,  null);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    i++)    {    mRules[i]    =    getDateTimeInstance(i,    timeStyle,    null,    null);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	14	None	replace
52	[BUG]  [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  null,  0,  0);  [CE]  case,  default,  or  '}'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  null,  0,  0);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	return  getDateTimeInstance(dateStyle,  timeStyle,  null,  0,  0);	  return    getDateTimeInstance(dateStyle,    timeStyle,    null,    0);    	non-compiled	[CE]  case,  default,  or  '}'  expected	2	None	replace
53	[BUG]  [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  1,  null);  [CE]  case,  default,  or  '}'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  1,  null);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	return  getDateTimeInstance(dateStyle,  timeStyle,  1,  null);	  return    getDateTimeInstance(dateStyle,    timeStyle,    0,    null);    	non-compiled	[CE]  case,  default,  or  '}'  expected	3	None	replace
54	[BUG]  [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  0,  mRules);  [CE]  case,  default,  or  '}'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  0,  mRules);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	return  getDateTimeInstance(dateStyle,  timeStyle,  0,  mRules);	  return    getDateTimeInstance(dateStyle,    timeStyle,    0,    null);    	non-compiled	[CE]  case,  default,  or  '}'  expected	3	None	replace
55	[BUG]  [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  0,  this);  [CE]  case,  default,  or  '}'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  0,  this);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	return  getDateTimeInstance(dateStyle,  timeStyle,  0,  this);	  return    getDateTimeInstance(dateStyle,    timeStyle,    0,    null);    	non-compiled	[CE]  case,  default,  or  '}'  expected	3	None	replace
56	[BUG]  [BUGGY]  Integer  dateStyle  =  getDateTimeInstance(dateStyle,  TimeZone.MILLIS_PER_DAY);  [CE]  case,  default,  or  '}'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  Integer  dateStyle  =  getDateTimeInstance(dateStyle,  TimeZone.MILLIS_PER_DAY);  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	Integer  dateStyle  =  getDateTimeInstance(dateStyle,  TimeZone.MILLIS_PER_DAY);	      Integer    dateStyle    =    getDateTimeInstance(timeStyle,    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  case,  default,  or  '}'  expected	11	None	replace
57	[BUG]  [BUGGY]  Formatter  {  For(int  i  =  0;  i  <  dateStyle;  ++i)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle);  }  [CE]  case,  default,  or  '}'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  Formatter  {  For(int  i  =  0;  i  <  dateStyle;  ++i)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	Formatter  {  For(int  i  =  0;  i  <  dateStyle;  ++i)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    ++i)    {    mRules[i]    =    getDateTimeInstance(i,    timeStyle);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	15	None	replace
58	[BUG]  [BUGGY]  Formatter  {  For(int  i  =  0;  i  <  dateStyle;  ++i)  {  Rule  rule  =  getDateTimeInstance(i,  timeStyle);  }  [CE]  case,  default,  or  '}'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  Formatter  {  For(int  i  =  0;  i  <  dateStyle;  ++i)  {  Rule  rule  =  getDateTimeInstance(i,  timeStyle);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	Formatter  {  For(int  i  =  0;  i  <  dateStyle;  ++i)  {  Rule  rule  =  getDateTimeInstance(i,  timeStyle);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    ++i)    {    mRules[i]    =    getDateTimeInstance(i,    timeStyle);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	15	None	replace
59	[BUG]  [BUGGY]  Formatter  {  For(int  i  =  0;  i  <  dateStyle;  ++i)  {  Rule[]  mRules  =  getDateTimeInstance(i,  timeStyle);  }  [CE]  case,  default,  or  '}'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  Formatter  {  For(int  i  =  0;  i  <  dateStyle;  ++i)  {  Rule[]  mRules  =  getDateTimeInstance(i,  timeStyle);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	Formatter  {  For(int  i  =  0;  i  <  dateStyle;  ++i)  {  Rule[]  mRules  =  getDateTimeInstance(i,  timeStyle);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    ++i)    {    mRules[i]    =    getDateTimeInstance(i,    timeStyle);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	15	None	replace
60	[BUG]  [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  0);  [CE]  case,  default,  or  '}'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  0);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	return  getDateTimeInstance(dateStyle,  timeStyle,  0);	  return    getDateTimeInstance(dateStyle,    timeStyle,    0,    null);    	non-compiled	[CE]  case,  default,  or  '}'  expected	3	None	replace
61	[BUG]  [BUGGY]  mRules  =  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  [CE]  case,  default,  or  '}'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  mRules  =  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	mRules  =  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    ++i)    {    mRules[i]    =    getDateTimeInstance(i,    timeStyle,    null,    null);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	16	None	replace
62	[BUG]  [BUGGY]  Format  <  NumberRule>  mRules  =  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  [CE]  case,  default,  or  '}'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  Format  <  NumberRule>  mRules  =  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	Format  <  NumberRule>  mRules  =  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    ++i)    {    mRules[i]    =    getDateTimeInstance(i,    timeStyle,    null,    null);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	16	None	replace
63	[BUG]  [BUGGY]  Format  <  NumberRule>  mRules  =  getDateTimeInstance(dateStyle,  timeStyle);  [CE]  case,  default,  or  '}'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  Format  <  NumberRule>  mRules  =  getDateTimeInstance(dateStyle,  timeStyle);  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	Format  <  NumberRule>  mRules  =  getDateTimeInstance(dateStyle,  timeStyle);	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    ++i)    {    mRules[i]    =    getDateTimeInstance(i,    timeStyle,    null,    null);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	16	None	replace
64	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  timeStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  dateStyle,  timeStyle);  }  [CE]  case,  default,  or  '}'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  for(int  i  =  0;  i  <  timeStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  dateStyle,  timeStyle);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	for(int  i  =  0;  i  <  timeStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  dateStyle,  timeStyle);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    timeStyle;    i++)    {    mRules[i]    =    getDateTimeInstance(i,    dateStyle,    timeStyle);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	7	None	replace
65	[BUG]  [BUGGY]  Formatter  {  For(int  i  =  0;  i  <  timeStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  dateStyle,  timeStyle);  }  [CE]  case,  default,  or  '}'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  Formatter  {  For(int  i  =  0;  i  <  timeStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  dateStyle,  timeStyle);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	Formatter  {  For(int  i  =  0;  i  <  timeStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  dateStyle,  timeStyle);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    timeStyle;    i++)    {    mRules[i]    =    getDateTimeInstance(i,    dateStyle,    timeStyle);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	7	None	replace
66	[BUG]  [BUGGY]  Formatter  {  For(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  dateStyle,  timeStyle);  }  [CE]  case,  default,  or  '}'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  Formatter  {  For(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  dateStyle,  timeStyle);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	Formatter  {  For(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  dateStyle,  timeStyle);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    timeStyle;    i++)    {    mRules[i]    =    getDateTimeInstance(i,    dateStyle,    timeStyle);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	7	None	replace
67	[BUG]  [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  null,  mRules);  [CE]  case,  default,  or  '}'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  null,  mRules);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	return  getDateTimeInstance(dateStyle,  timeStyle,  null,  mRules);	  return    getDateTimeInstance(dateStyle,    timeStyle,    mMaxLengthEstimate,    null,    null);    	non-compiled	[CE]  case,  default,  or  '}'  expected	17	None	replace
68	[BUG]  [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  null,  0,  -1);  [CE]  case,  default,  or  '}'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  null,  0,  -1);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	return  getDateTimeInstance(dateStyle,  timeStyle,  null,  0,  -1);	  return    getDateTimeInstance(dateStyle,    timeStyle,    null,    -1);    	non-compiled	[CE]  case,  default,  or  '}'  expected	10	None	replace
69	[BUG]  [BUGGY]  Formatter  {  For(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle);  }  [CE]  case,  default,  or  '}'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  Formatter  {  For(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	Formatter  {  For(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    i++)    {    mRules[i]    =    getDateTimeInstance(i,    timeStyle);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	8	None	replace
70	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle  +  1);  }  [CE]  case,  default,  or  '}'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  for(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle  +  1);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	for(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle  +  1);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    i++)    {    mRules[i]    =    getDateTimeInstance(i,    timeStyle);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	8	None	replace
71	[BUG]  [BUGGY]  Formatter  {  For(int  i  =  0;  i  <  dateStyle;  i++)  {  Rule[]  mRules  =  getDateTimeInstance(i,  timeStyle);  }  [CE]  case,  default,  or  '}'  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  Formatter  {  For(int  i  =  0;  i  <  dateStyle;  i++)  {  Rule[]  mRules  =  getDateTimeInstance(i,  timeStyle);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	Formatter  {  For(int  i  =  0;  i  <  dateStyle;  i++)  {  Rule[]  mRules  =  getDateTimeInstance(i,  timeStyle);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    i++)    {    mRules[i]    =    getDateTimeInstance(i,    timeStyle);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	8	None	replace
72	[BUG]  [BUGGY]  Formatter  {  For(int  i  =  0;  i  <  dateStyle;  i++)  {  getDateTimeInstance(i,  timeStyle,  null,  null);  }  [CE]  case,  default,  or  '}'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  Formatter  {  For(int  i  =  0;  i  <  dateStyle;  i++)  {  getDateTimeInstance(i,  timeStyle,  null,  null);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	Formatter  {  For(int  i  =  0;  i  <  dateStyle;  i++)  {  getDateTimeInstance(i,  timeStyle,  null,  null);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    i++)    {    getDateTimeInstance(i,    timeStyle,    null,    null);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	9	None	replace
73	[BUG]  [BUGGY]  Integer  mRules  =  getDateTimeInstance(dateStyle,  timeStyle);  [CE]  case,  default,  or  '}'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  Integer  mRules  =  getDateTimeInstance(dateStyle,  timeStyle);  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	Integer  mRules  =  getDateTimeInstance(dateStyle,  timeStyle);	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    i++)    {    mRules[i]    =    getDateTimeInstance(i,    timeStyle,    null,    null);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	14	None	replace
74	[BUG]  [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  mMinLengthEstimate,  null,  null);  [CE]  case,  default,  or  '}'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  mMinLengthEstimate,  null,  null);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	return  getDateTimeInstance(dateStyle,  timeStyle,  mMinLengthEstimate,  null,  null);	  return    getDateTimeInstance(dateStyle,    timeStyle,    mMaxLengthEstimate,    null,    null);    	non-compiled	[CE]  case,  default,  or  '}'  expected	17	None	replace
75	[BUG]  [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  0,  mSize);  [CE]  case,  default,  or  '}'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  0,  mSize);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	return  getDateTimeInstance(dateStyle,  timeStyle,  0,  mSize);	  return    getDateTimeInstance(dateStyle,    timeStyle,    0,    null);    	non-compiled	[CE]  case,  default,  or  '}'  expected	3	None	replace
76	[BUG]  [BUGGY]  if(mRules!=  null)  {  for(int  i  =  0;  i  <  dateStyle;  ++i)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle,  null,  null);  }  [CE]  case,  default,  or  '}'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  if(mRules!=  null)  {  for(int  i  =  0;  i  <  dateStyle;  ++i)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle,  null,  null);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	if(mRules!=  null)  {  for(int  i  =  0;  i  <  dateStyle;  ++i)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle,  null,  null);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    ++i)    {    mRules[i]    =    getDateTimeInstance(i,    timeStyle,    null,    null);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	16	None	replace
77	[BUG]  [BUGGY]  Formatter  {  For(int  i  =  0;  i  <  dateStyle;  ++i)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle,  null,  null);  }  [CE]  case,  default,  or  '}'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  Formatter  {  For(int  i  =  0;  i  <  dateStyle;  ++i)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle,  null,  null);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	Formatter  {  For(int  i  =  0;  i  <  dateStyle;  ++i)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle,  null,  null);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    ++i)    {    mRules[i]    =    getDateTimeInstance(i,    timeStyle,    null,    null);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	16	None	replace
78	[BUG]  [BUGGY]  Formatter  {  For(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle,  null,  null);  }  [CE]  case,  default,  or  '}'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  Formatter  {  For(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle,  null,  null);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	Formatter  {  For(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle,  null,  null);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    i++)    {    mRules[i]    =    getDateTimeInstance(i,    timeStyle,    null,    null);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	14	None	replace
79	[BUG]  [BUGGY]  mRules[i]  =  getDateTimeInstance(i,  timeStyle,  null,  null);  [CE]  case,  default,  or  '}'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  mRules[i]  =  getDateTimeInstance(i,  timeStyle,  null,  null);  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	mRules[i]  =  getDateTimeInstance(i,  timeStyle,  null,  null);	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    i++)    {    mRules[i]    =    getDateTimeInstance(i,    timeStyle,    null,    null);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	14	None	replace
80	[BUG]  [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  mRules,  rule,  null,  null);  [CE]  case,  default,  or  '}'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  mRules,  rule,  null,  null);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	return  getDateTimeInstance(dateStyle,  timeStyle,  mRules,  rule,  null,  null);	  return    getDateTimeInstance(dateStyle,    timeStyle,    mRules,    null,    null);    	non-compiled	[CE]  case,  default,  or  '}'  expected	1	None	replace
81	[BUG]  [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  mRules,  null,  null).withUTC();  [CE]  case,  default,  or  '}'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  return  getDateTimeInstance(dateStyle,  timeStyle,  mRules,  null,  null).withUTC();  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	return  getDateTimeInstance(dateStyle,  timeStyle,  mRules,  null,  null).withUTC();	  return    getDateTimeInstance(dateStyle,    timeStyle,    mRules,    null,    null);    	non-compiled	[CE]  case,  default,  or  '}'  expected	1	None	replace
82	[BUG]  [BUGGY]  Integer  dateStyle  =  getDateTimeInstance(dateStyle,  timeStyle,  mMaxLengthEstimate);  [CE]  case,  default,  or  '}'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  Integer  dateStyle  =  getDateTimeInstance(dateStyle,  timeStyle,  mMaxLengthEstimate);  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	Integer  dateStyle  =  getDateTimeInstance(dateStyle,  timeStyle,  mMaxLengthEstimate);	      Integer    dateStyle    =    getDateTimeInstance(dateStyle,    timeStyle);    	non-compiled	[CE]  case,  default,  or  '}'  expected	6	None	replace
83	[BUG]  [BUGGY]  Integer  dateStyle  =  getDateTimeInstance(dateStyle,  timeStyle,  mMinLengthEstimate);  [CE]  case,  default,  or  '}'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  Integer  dateStyle  =  getDateTimeInstance(dateStyle,  timeStyle,  mMinLengthEstimate);  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	Integer  dateStyle  =  getDateTimeInstance(dateStyle,  timeStyle,  mMinLengthEstimate);	      Integer    dateStyle    =    getDateTimeInstance(dateStyle,    timeStyle);    	non-compiled	[CE]  case,  default,  or  '}'  expected	6	None	replace
84	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dateStyle;  i++)  {  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CE]  case,  default,  or  '}'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  for(int  i  =  0;  i  <  dateStyle;  i++)  {  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	for(int  i  =  0;  i  <  dateStyle;  i++)  {  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    i++)    {    getDateTimeInstance(i,    timeStyle,    null,    null);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	9	None	replace
85	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle,  timeStyle);  }  [CE]  case,  default,  or  '}'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  for(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle,  timeStyle);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	for(int  i  =  0;  i  <  dateStyle;  i++)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle,  timeStyle);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    timeStyle;    i++)    {    mRules[i]    =    getDateTimeInstance(i,    dateStyle,    timeStyle);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	7	None	replace
86	[BUG]  [BUGGY]  Formatter  {  For(int  dateStyle,  timeStyle)  {  mRules[i]  =  getDateTimeInstance(dateStyle,  timeStyle);  }  [CE]  case,  default,  or  '}'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  Formatter  {  For(int  dateStyle,  timeStyle)  {  mRules[i]  =  getDateTimeInstance(dateStyle,  timeStyle);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	Formatter  {  For(int  dateStyle,  timeStyle)  {  mRules[i]  =  getDateTimeInstance(dateStyle,  timeStyle);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    i++)    {    mRules[i]    =    getDateTimeInstance(i,    timeStyle);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	8	None	replace
87	[BUG]  [BUGGY]  mRules[i]  =  getDateTimeInstance(i,  timeStyle);  [CE]  case,  default,  or  '}'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  mRules[i]  =  getDateTimeInstance(i,  timeStyle);  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	mRules[i]  =  getDateTimeInstance(i,  timeStyle);	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    i++)    {    mRules[i]    =    getDateTimeInstance(i,    timeStyle);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	8	None	replace
88	[BUG]  [BUGGY]  int  dateStyle  =  getDateTimeInstance(dateStyle,  timeStyle,  mMinLengthEstimate);  [CE]  case,  default,  or  '}'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  int  dateStyle  =  getDateTimeInstance(dateStyle,  timeStyle,  mMinLengthEstimate);  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	int  dateStyle  =  getDateTimeInstance(dateStyle,  timeStyle,  mMinLengthEstimate);	      int    dateStyle    =    getDateTimeInstance(dateStyle,    timeStyle);    	non-compiled	[CE]  case,  default,  or  '}'  expected	5	None	replace
89	[BUG]  [BUGGY]  if(mRules!=  null)  {  for(int  i  =  0;  i  <  dateStyle;  ++i)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle);  }  [CE]  case,  default,  or  '}'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  FastDateFormat  getDateTimeInstance(  int  dateStyle,  int  timeStyle)  {    [BUGGY]  if(mRules!=  null)  {  for(int  i  =  0;  i  <  dateStyle;  ++i)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle);  }  [BUGGY]    return  getDateTimeInstance(dateStyle,  timeStyle,  null,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	408	408	2	replace	if(mRules!=  null)  {  for(int  i  =  0;  i  <  dateStyle;  ++i)  {  mRules[i]  =  getDateTimeInstance(i,  timeStyle);  }	      if(mRules    ==    null)    {    for(int    i    =    0;    i    <    dateStyle;    ++i)    {    mRules[i]    =    getDateTimeInstance(i,    timeStyle);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	15	None	replace
