bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(32);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  StringBuffer  buf  =  new  StringBuffer(32);  [BUGGY]    inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	StringBuffer  buf  =  new  StringBuffer(32);	      StringBuffer    buf    =    new    StringBuffer();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
2	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(16);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  StringBuffer  buf  =  new  StringBuffer(16);  [BUGGY]    inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	StringBuffer  buf  =  new  StringBuffer(16);	      StringBuffer    buf    =    new    StringBuffer();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
3	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(128);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  StringBuffer  buf  =  new  StringBuffer(128);  [BUGGY]    inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	StringBuffer  buf  =  new  StringBuffer(128);	      StringBuffer    buf    =    new    StringBuffer();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
4	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(100);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  StringBuffer  buf  =  new  StringBuffer(100);  [BUGGY]    inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	StringBuffer  buf  =  new  StringBuffer(100);	      StringBuffer    buf    =    new    StringBuffer();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
5	[BUG]  [BUGGY]  c  =  pattern.charAt(i  +  2);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  c  =  pattern.charAt(i  +  2);  [BUGGY]    inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	c  =  pattern.charAt(i  +  2);	      c    =    pattern.charAt(i);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
6	[BUG]  [BUGGY]  c  =  pattern.charAt(0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  c  =  pattern.charAt(0);  [BUGGY]    inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	c  =  pattern.charAt(0);	      c    =    pattern.charAt(i);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
7	[BUG]  [BUGGY]  c  =  pattern.charAt(i  +  3);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  c  =  pattern.charAt(i  +  3);  [BUGGY]    inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	c  =  pattern.charAt(i  +  3);	      c    =    pattern.charAt(i);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
8	[BUG]  [BUGGY]  i  =!inLiteral  &&  pattern.charAt(i  +  1)  ==  ''';  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  i  =!inLiteral  &&  pattern.charAt(i  +  1)  ==  ''';  [BUGGY]    }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	i  =!inLiteral  &&  pattern.charAt(i  +  1)  ==  ''';	  i    =!inLiteral;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
9	[BUG]  [BUGGY]  i  =!inLiteral  &&  pattern.charAt(i  +  1)!=  ''';  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  i  =!inLiteral  &&  pattern.charAt(i  +  1)!=  ''';  [BUGGY]    }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	i  =!inLiteral  &&  pattern.charAt(i  +  1)!=  ''';	  i    =!inLiteral;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
10	[BUG]  [BUGGY]  i  =!inLiteral  &&  i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  i--;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  i  =!inLiteral  &&  i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  i--;  [BUGGY]    }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	i  =!inLiteral  &&  i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  i--;	  inLiteral    =!inLiteral    &&    i    +    1    <    length    &&    pattern.charAt(i    +    1)    ==    ''')    {    i--;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
11	[BUG]  [BUGGY]  inLiteral  =!inLiteral  &&  i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  i++;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  inLiteral  =!inLiteral  &&  i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  i++;  [BUGGY]    }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	inLiteral  =!inLiteral  &&  i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  i++;	  inLiteral    =!inLiteral    &&    i    +    1    <    length    &&    pattern.charAt(i    +    1)    ==    ''')    {    i--;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
12	[BUG]  [BUGGY]  Literal  =!inLiteral;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  Literal  =!inLiteral;  [BUGGY]    inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	Literal  =!inLiteral;	      inLiteral    =!inLiteral;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
13	[BUG]  [BUGGY]  CharacterLiteral  c  =  pattern.charAt(i  +  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  CharacterLiteral  c  =  pattern.charAt(i  +  2);  [BUGGY]    inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	CharacterLiteral  c  =  pattern.charAt(i  +  2);	      CharacterLiteral    c    =    pattern.charAt(i    +    1);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
14	[BUG]  [BUGGY]  CharacterLiteral  c  =  pattern.charAt(i  +  3);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  CharacterLiteral  c  =  pattern.charAt(i  +  3);  [BUGGY]    inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	CharacterLiteral  c  =  pattern.charAt(i  +  3);	      CharacterLiteral    c    =    pattern.charAt(i    +    1);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
15	[BUG]  [BUGGY]  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  inLiteral  =!inLiteral  &&  i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''';  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  inLiteral  =!inLiteral  &&  i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''';  }  [BUGGY]    }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  inLiteral  =!inLiteral  &&  i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''';  }	  inLiteral    =!inLiteral    &&    i    +    1    <    length    &&    pattern.charAt(i    +    1)    ==    ''';    	non-compiled	[CE]  <identifier>  expected	9	None	replace
16	[BUG]  [BUGGY]  inLiteral  =!inLiteral  &&  i  +  1  >=  length  &&  pattern.charAt(i  +  1)  ==  ''';  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  inLiteral  =!inLiteral  &&  i  +  1  >=  length  &&  pattern.charAt(i  +  1)  ==  ''';  [BUGGY]    }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	inLiteral  =!inLiteral  &&  i  +  1  >=  length  &&  pattern.charAt(i  +  1)  ==  ''';	  inLiteral    =!inLiteral    &&    i    +    1    <    length    &&    pattern.charAt(i    +    1)    ==    ''';    	non-compiled	[CE]  <identifier>  expected	9	None	replace
17	[BUG]  [BUGGY]  i  =!inLiteral  &&  i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  i--;  break;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  i  =!inLiteral  &&  i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  i--;  break;  [BUGGY]    }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	i  =!inLiteral  &&  i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  i--;  break;	  inLiteral    =!inLiteral    &&    i    +    1    <    length    &&    pattern.charAt(i    +    1)    ==    ''')    {    i--;    break;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
18	[BUG]  [BUGGY]  i  =!inLiteral  &&  i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  i--;  break;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  i  =!inLiteral  &&  i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  i--;  break;  }  [BUGGY]    }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	i  =!inLiteral  &&  i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  i--;  break;  }	  inLiteral    =!inLiteral    &&    i    +    1    <    length    &&    pattern.charAt(i    +    1)    ==    ''')    {    i--;    break;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
19	[BUG]  [BUGGY]  inLiteral  =!inLiteral  &&  i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  i--;  break;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  inLiteral  =!inLiteral  &&  i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  i--;  break;  }  [BUGGY]    }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	inLiteral  =!inLiteral  &&  i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  i--;  break;  }	  inLiteral    =!inLiteral    &&    i    +    1    <    length    &&    pattern.charAt(i    +    1)    ==    ''')    {    i--;    break;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
20	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(c.length());  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  StringBuffer  buf  =  new  StringBuffer(c.length());  [BUGGY]    inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	StringBuffer  buf  =  new  StringBuffer(c.length());	      StringBuffer    buf    =    new    StringBuffer(indexRef.length());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
21	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(indexRef.length()  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  StringBuffer  buf  =  new  StringBuffer(indexRef.length()  +  1);  [BUGGY]    inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	StringBuffer  buf  =  new  StringBuffer(indexRef.length()  +  1);	      StringBuffer    buf    =    new    StringBuffer(indexRef.length());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
22	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(i.length());  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  StringBuffer  buf  =  new  StringBuffer(i.length());  [BUGGY]    inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	StringBuffer  buf  =  new  StringBuffer(i.length());	      StringBuffer    buf    =    new    StringBuffer(indexRef.length());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
23	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(indexRef.length()  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  StringBuffer  buf  =  new  StringBuffer(indexRef.length()  -  1);  [BUGGY]    inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	StringBuffer  buf  =  new  StringBuffer(indexRef.length()  -  1);	      StringBuffer    buf    =    new    StringBuffer(indexRef.length());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
24	[BUG]  [BUGGY]  CharacterLiteral  c  =  pattern.charAt(0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  CharacterLiteral  c  =  pattern.charAt(0);  [BUGGY]    inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	CharacterLiteral  c  =  pattern.charAt(0);	      CharacterLiteral    c    =    pattern.charAt(i);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
25	[BUG]  [BUGGY]  inLiteral  =!inLiteral  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  inLiteral  =!inLiteral  +  1;  [BUGGY]    inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	inLiteral  =!inLiteral  +  1;	      inLiteral    =!inLiteral;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
26	[BUG]  [BUGGY]  i--;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  i--;  [BUGGY]    inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	i--;	      inLiteral    =!inLiteral;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
27	[BUG]  [BUGGY]  c  =  pattern.charAt(i  +  1,  length);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  c  =  pattern.charAt(i  +  1,  length);  [BUGGY]    inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	c  =  pattern.charAt(i  +  1,  length);	      c    =    pattern.charAt(i);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
28	[BUG]  [BUGGY]  i  =!inLiteral  &&  c  >=  ''';  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  i  =!inLiteral  &&  c  >=  ''';  [BUGGY]    }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	i  =!inLiteral  &&  c  >=  ''';	  i    =!inLiteral;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
29	[BUG]  [BUGGY]  i  =!inLiteral  &&  pattern.charAt(i  +  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  i  =!inLiteral  &&  pattern.charAt(i  +  1);  [BUGGY]    }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	i  =!inLiteral  &&  pattern.charAt(i  +  1);	  i    =!inLiteral;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
30	[BUG]  [BUGGY]  inLiteral  =!inLiteral  &&  c  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  i--;  break;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  inLiteral  =!inLiteral  &&  c  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  i--;  break;  [BUGGY]    }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	inLiteral  =!inLiteral  &&  c  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  i--;  break;	  inLiteral    =!inLiteral    &&    i    +    1    <    length    &&    pattern.charAt(i    +    1)    ==    ''')    {    i--;    break;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
31	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(indexRef.length()  +  2);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  StringBuffer  buf  =  new  StringBuffer(indexRef.length()  +  2);  [BUGGY]    inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	StringBuffer  buf  =  new  StringBuffer(indexRef.length()  +  2);	      StringBuffer    buf    =    new    StringBuffer(indexRef.length());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
32	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(indexRef.length()  *  2);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  StringBuffer  buf  =  new  StringBuffer(indexRef.length()  *  2);  [BUGGY]    inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	StringBuffer  buf  =  new  StringBuffer(indexRef.length()  *  2);	      StringBuffer    buf    =    new    StringBuffer(indexRef.length());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
33	[BUG]  [BUGGY]  inLiteral  =!inLiteral  &&  c  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  i--;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  inLiteral  =!inLiteral  &&  c  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  i--;  [BUGGY]    }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	inLiteral  =!inLiteral  &&  c  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  i--;	  inLiteral    =!inLiteral    &&    i    +    1    <    length    &&    pattern.charAt(i    +    1)    ==    ''')    {    i--;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
34	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(256);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  StringBuffer  buf  =  new  StringBuffer(256);  [BUGGY]    inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	StringBuffer  buf  =  new  StringBuffer(256);	      StringBuffer    buf    =    new    StringBuffer();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
35	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(40);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  StringBuffer  buf  =  new  StringBuffer(40);  [BUGGY]    inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	StringBuffer  buf  =  new  StringBuffer(40);	      StringBuffer    buf    =    new    StringBuffer();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
36	[BUG]  [BUGGY]  char  c  =  pattern.charAt(i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  char  c  =  pattern.charAt(i);  [BUGGY]    inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	char  c  =  pattern.charAt(i);	      CharacterLiteral    c    =    pattern.charAt(i);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
37	[BUG]  [BUGGY]  i  =!inLiteral  &&  i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''';  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  i  =!inLiteral  &&  i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''';  [BUGGY]    }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	i  =!inLiteral  &&  i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''';	  inLiteral    =!inLiteral    &&    i    +    1    <    length    &&    pattern.charAt(i    +    1)    ==    ''';    	non-compiled	[CE]  <identifier>  expected	9	None	replace
38	[BUG]  [BUGGY]  CharacterLiteral  c  =  pattern.charAt(i  +  1,  length);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  CharacterLiteral  c  =  pattern.charAt(i  +  1,  length);  [BUGGY]    inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	CharacterLiteral  c  =  pattern.charAt(i  +  1,  length);	      CharacterLiteral    c    =    pattern.charAt(i    +    1);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
39	[BUG]  [BUGGY]  i  =!inLiteral  ||  c  ==  ''';  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  i  =!inLiteral  ||  c  ==  ''';  [BUGGY]    }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	i  =!inLiteral  ||  c  ==  ''';	  i    =!inLiteral;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
40	[BUG]  [BUGGY]  i  =!inLiteral  &&  c  <  =  'L';  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  i  =!inLiteral  &&  c  <  =  'L';  [BUGGY]    }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	i  =!inLiteral  &&  c  <  =  'L';	  i    =!inLiteral;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
41	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(pattern.length());  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  StringBuffer  buf  =  new  StringBuffer(pattern.length());  [BUGGY]    inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	StringBuffer  buf  =  new  StringBuffer(pattern.length());	      StringBuffer    buf    =    new    StringBuffer(indexRef.length());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
42	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(buf.length());  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {  if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {    [BUGGY]  StringBuffer  buf  =  new  StringBuffer(buf.length());  [BUGGY]    inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  }  else  {  buf.append(c);  }  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  StringBuffer  buf  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	746	746	2	replace	StringBuffer  buf  =  new  StringBuffer(buf.length());	      StringBuffer    buf    =    new    StringBuffer(indexRef.length());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
