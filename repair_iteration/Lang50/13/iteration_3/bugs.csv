bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  electedObject  =  cDateTimeInstanceCache.get(key,  locale);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedObject  =  cDateTimeInstanceCache.get(key,  locale);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedObject  =  cDateTimeInstanceCache.get(key,  locale);	  electedObject    =    cDateTimeInstanceCache.get(key);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
2	[BUG]  [BUGGY]  electedObject  =  cDateTimeInstanceCache.get(locale);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedObject  =  cDateTimeInstanceCache.get(locale);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedObject  =  cDateTimeInstanceCache.get(locale);	  electedObject    =    cDateTimeInstanceCache.get(key);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
3	[BUG]  [BUGGY]  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  }  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	}	  if(locale    ==    null)    {    key    =    new    Pair(key,    locale.getLocale());    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
4	[BUG]  [BUGGY]  Aleger  <  Locale>  locale  =  cDateTimeInstanceCache.get(key);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Aleger  <  Locale>  locale  =  cDateTimeInstanceCache.get(key);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Aleger  <  Locale>  locale  =  cDateTimeInstanceCache.get(key);	  Aleger    <    Locale>    locale    =    Locale.getDefault();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
5	[BUG]  [BUGGY]  Aleger  <  Locale>  locale  =(Locale)cDateTimeInstanceCache.get(key);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Aleger  <  Locale>  locale  =(Locale)cDateTimeInstanceCache.get(key);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Aleger  <  Locale>  locale  =(Locale)cDateTimeInstanceCache.get(key);	  Aleger    <    Locale>    locale    =    Locale.getDefault();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
6	[BUG]  [BUGGY]  Aleger  <  Locale>  locale  =(Locale)cDateTimeInstanceCache.get(locale);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Aleger  <  Locale>  locale  =(Locale)cDateTimeInstanceCache.get(locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Aleger  <  Locale>  locale  =(Locale)cDateTimeInstanceCache.get(locale);	  Aleger    <    Locale>    locale    =    Locale.getDefault();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
7	[BUG]  [BUGGY]  electedValues  =  new  LinkedList  <  Locale>();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValues  =  new  LinkedList  <  Locale>();  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedValues  =  new  LinkedList  <  Locale>();	  electedValues    =    new    ArrayList    <    Locale>();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
8	[BUG]  [BUGGY]  electedValues  =  new  ArrayList  <  Locale>(mValues);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValues  =  new  ArrayList  <  Locale>(mValues);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedValues  =  new  ArrayList  <  Locale>(mValues);	  electedValues    =    new    ArrayList    <    Locale>();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
9	[BUG]  [BUGGY]  electedValues  =  new  ArrayList  <  Locale>(1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValues  =  new  ArrayList  <  Locale>(1);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedValues  =  new  ArrayList  <  Locale>(1);	  electedValues    =    new    ArrayList    <    Locale>();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
10	[BUG]  [BUGGY]  Locale  locale  =(locale!=  null)?  Locale.getDefault()  :  locale;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =(locale!=  null)?  Locale.getDefault()  :  locale;  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Locale  locale  =(locale!=  null)?  Locale.getDefault()  :  locale;	  Locale    locale    =(locale    ==    null)?    Locale.getDefault()    :    locale;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
11	[BUG]  [BUGGY]  Locale  locale  =(locale  ==  null)?  Locale.getDefault()  :  locale);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =(locale  ==  null)?  Locale.getDefault()  :  locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Locale  locale  =(locale  ==  null)?  Locale.getDefault()  :  locale);	  Locale    locale    =(locale    ==    null)?    Locale.getDefault()    :    locale;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
12	[BUG]  [BUGGY]  Object  key  =  new  Pair(mLocale,  locale);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Object  key  =  new  Pair(mLocale,  locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Object  key  =  new  Pair(mLocale,  locale);	  Object    key    =    new    Pair(locale,    key);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
13	[BUG]  [BUGGY]  Object  key  =  new  Pair(locale,  locale);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Object  key  =  new  Pair(locale,  locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Object  key  =  new  Pair(locale,  locale);	  Object    key    =    new    Pair(locale,    key);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
14	[BUG]  [BUGGY]  electedValue  =  new  Pair(key,  locale.getLocale());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValue  =  new  Pair(key,  locale.getLocale());  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedValue  =  new  Pair(key,  locale.getLocale());	  if(locale!=    null)    {    key    =    new    Pair(key,    locale.getLocale());    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
15	[BUG]  [BUGGY]  electedValues  =  new  ArrayList(key,  locale.getLocale());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValues  =  new  ArrayList(key,  locale.getLocale());  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedValues  =  new  ArrayList(key,  locale.getLocale());	  if(locale!=    null)    {    key    =    new    Pair(key,    locale.getLocale());    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
16	[BUG]  [BUGGY]  electedObject  =  locale.getLocale();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedObject  =  locale.getLocale();  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedObject  =  locale.getLocale();	  if(locale!=    null)    {    key    =    new    Pair(key,    locale.getLocale());    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
17	[BUG]  [BUGGY]  locale  =(Locale)cDateTimeInstanceCache.get(key,  locale);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  locale  =(Locale)cDateTimeInstanceCache.get(key,  locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	locale  =(Locale)cDateTimeInstanceCache.get(key,  locale);	  locale    =(Locale)cDateTimeInstanceCache.get(key);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
18	[BUG]  [BUGGY]  locale  =(Locale)cDateTimeInstanceCache.get(timeStyle);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  locale  =(Locale)cDateTimeInstanceCache.get(timeStyle);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	locale  =(Locale)cDateTimeInstanceCache.get(timeStyle);	  locale    =(Locale)cDateTimeInstanceCache.get(key);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
19	[BUG]  [BUGGY]  electedValues  =  new  ArrayList  <  String,Object>();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValues  =  new  ArrayList  <  String,Object>();  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedValues  =  new  ArrayList  <  String,Object>();	  electedValues    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
20	[BUG]  [BUGGY]  electedValues  =  new  TreeMap  <  String,Object>();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValues  =  new  TreeMap  <  String,Object>();  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedValues  =  new  TreeMap  <  String,Object>();	  electedValues    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
21	[BUG]  [BUGGY]  electedValues  =  new  HashMap  <  String,Object>();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValues  =  new  HashMap  <  String,Object>();  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedValues  =  new  HashMap  <  String,Object>();	  electedValues    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
22	[BUG]  [BUGGY]  Object  key  =  new  Pair(dateStyle,  timeStyle);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Object  key  =  new  Pair(dateStyle,  timeStyle);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Object  key  =  new  Pair(dateStyle,  timeStyle);	  Object    key    =    new    Pair(key,    timeStyle);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
23	[BUG]  [BUGGY]  Object  key  =  new  Pair(key,  dateStyle);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Object  key  =  new  Pair(key,  dateStyle);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Object  key  =  new  Pair(key,  dateStyle);	  Object    key    =    new    Pair(key,    timeStyle);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
24	[BUG]  [BUGGY]  Object  key  =  new  Pair(timeStyle,  key);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Object  key  =  new  Pair(timeStyle,  key);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Object  key  =  new  Pair(timeStyle,  key);	  Object    key    =    new    Pair(key,    timeStyle);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
25	[BUG]  [BUGGY]  Object  locale  =  locale.getValue();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Object  locale  =  locale.getValue();  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Object  locale  =  locale.getValue();	  Object    locale    =    locale.getDefault();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
26	[BUG]  [BUGGY]  locale  =  cDateTimeInstanceCache.get(locale);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  locale  =  cDateTimeInstanceCache.get(locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	locale  =  cDateTimeInstanceCache.get(locale);	  locale    =    cDateTimeInstanceCache.get(key);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
27	[BUG]  [BUGGY]  locale  =  cDateTimeInstanceCache.get(key,  locale);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  locale  =  cDateTimeInstanceCache.get(key,  locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	locale  =  cDateTimeInstanceCache.get(key,  locale);	  locale    =    cDateTimeInstanceCache.get(key);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
28	[BUG]  [BUGGY]  locale  =  cDateTimeInstanceCache.get(timeStyle);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  locale  =  cDateTimeInstanceCache.get(timeStyle);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	locale  =  cDateTimeInstanceCache.get(timeStyle);	  locale    =    cDateTimeInstanceCache.get(key);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
29	[BUG]  [BUGGY]  if(locale  ==  null)  {  key  =  new  Pair(locale,  timeZone);  }  else  {  locale  =  Locale.getDefault();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  if(locale  ==  null)  {  key  =  new  Pair(locale,  timeZone);  }  else  {  locale  =  Locale.getDefault();  }  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	if(locale  ==  null)  {  key  =  new  Pair(locale,  timeZone);  }  else  {  locale  =  Locale.getDefault();  }	  key    =    new    Pair(locale,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
30	[BUG]  [BUGGY]  if(locale!=  null)  {  key  =  new  Pair(locale,  timeZone);  }  else  {  locale  =  Locale.getDefault();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  if(locale!=  null)  {  key  =  new  Pair(locale,  timeZone);  }  else  {  locale  =  Locale.getDefault();  }  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	if(locale!=  null)  {  key  =  new  Pair(locale,  timeZone);  }  else  {  locale  =  Locale.getDefault();  }	  key    =    new    Pair(locale,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
31	[BUG]  [BUGGY]  if(locale  ==  null)  {  key  =  new  Pair(locale,  timeZone);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  if(locale  ==  null)  {  key  =  new  Pair(locale,  timeZone);  }  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	if(locale  ==  null)  {  key  =  new  Pair(locale,  timeZone);  }	  key    =    new    Pair(locale,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
32	[BUG]  [BUGGY]  cDateTimeInstanceCache.put(key,  new  Pair(locale),  locale);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  cDateTimeInstanceCache.put(key,  new  Pair(locale),  locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	cDateTimeInstanceCache.put(key,  new  Pair(locale),  locale);	  cDateTimeInstanceCache.put(key,    new    Pair(locale));    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
33	[BUG]  [BUGGY]  cDateTimeInstanceCache.put(key,  new  Pair(timeStyle,  locale));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  cDateTimeInstanceCache.put(key,  new  Pair(timeStyle,  locale));  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	cDateTimeInstanceCache.put(key,  new  Pair(timeStyle,  locale));	  cDateTimeInstanceCache.put(key,    new    Pair(locale));    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
34	[BUG]  [BUGGY]  cDateTimeInstanceCache.put(key,  new  Pair(locale,  locale));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  cDateTimeInstanceCache.put(key,  new  Pair(locale,  locale));  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	cDateTimeInstanceCache.put(key,  new  Pair(locale,  locale));	  cDateTimeInstanceCache.put(key,    new    Pair(locale));    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
35	[BUG]  [BUGGY]  Locale  locale  =(Locale)cDateTimeInstanceCache.get(key,  timeStyle);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =(Locale)cDateTimeInstanceCache.get(key,  timeStyle);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Locale  locale  =(Locale)cDateTimeInstanceCache.get(key,  timeStyle);	  Locale    locale    =(Locale)cDateTimeInstanceCache.get(locale,    timeStyle);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
36	[BUG]  [BUGGY]  Locale  locale  =(Locale)cDateTimeInstanceCache.get(dateStyle,  timeStyle);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =(Locale)cDateTimeInstanceCache.get(dateStyle,  timeStyle);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Locale  locale  =(Locale)cDateTimeInstanceCache.get(dateStyle,  timeStyle);	  Locale    locale    =(Locale)cDateTimeInstanceCache.get(locale,    timeStyle);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
37	[BUG]  [BUGGY]  Locale  locale  =(Locale)cDateTimeInstanceCache.get(locale,  dateStyle);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =(Locale)cDateTimeInstanceCache.get(locale,  dateStyle);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Locale  locale  =(Locale)cDateTimeInstanceCache.get(locale,  dateStyle);	  Locale    locale    =(Locale)cDateTimeInstanceCache.get(locale,    timeStyle);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
38	[BUG]  [BUGGY]  Locale  locale  =(Locale)cDateTimeInstanceCache.get(locale,  dateStyle,  timeStyle);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =(Locale)cDateTimeInstanceCache.get(locale,  dateStyle,  timeStyle);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Locale  locale  =(Locale)cDateTimeInstanceCache.get(locale,  dateStyle,  timeStyle);	  Locale    locale    =(Locale)cDateTimeInstanceCache.get(locale,    timeStyle);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
39	[BUG]  [BUGGY]  electedValues  =  new  ArrayList  <  Locale>(locale);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValues  =  new  ArrayList  <  Locale>(locale);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedValues  =  new  ArrayList  <  Locale>(locale);	  if(locale!=    null)    {    key    =    new    Pair(key,    locale);    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
40	[BUG]  [BUGGY]  Locale  locale  =(Locale)cDateTimeInstanceCache.get(dateStyle);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =(Locale)cDateTimeInstanceCache.get(dateStyle);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Locale  locale  =(Locale)cDateTimeInstanceCache.get(dateStyle);	  Locale    locale    =(Locale)cDateTimeInstanceCache.get(timeStyle);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
41	[BUG]  [BUGGY]  cDateTimeInstanceCache.put(locale,  timeZone);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  cDateTimeInstanceCache.put(locale,  timeZone);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	cDateTimeInstanceCache.put(locale,  timeZone);	  cDateTimeInstanceCache.put(key,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
42	[BUG]  [BUGGY]  Object  locale  =  cDateTimeInstanceCache.get(locale,  timeStyle);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Object  locale  =  cDateTimeInstanceCache.get(locale,  timeStyle);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Object  locale  =  cDateTimeInstanceCache.get(locale,  timeStyle);	  Object    locale    =    cDateTimeInstanceCache.get(locale);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
43	[BUG]  [BUGGY]  Object  locale  =  this.cDateTimeInstanceCache.get(locale);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Object  locale  =  this.cDateTimeInstanceCache.get(locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Object  locale  =  this.cDateTimeInstanceCache.get(locale);	  Object    locale    =    cDateTimeInstanceCache.get(locale);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
44	[BUG]  [BUGGY]  Object  locale  =(locale!=  null)?  Locale.getDefault()  :  locale;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Object  locale  =(locale!=  null)?  Locale.getDefault()  :  locale;  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Object  locale  =(locale!=  null)?  Locale.getDefault()  :  locale;	  Object    locale    =(locale    ==    null)?    Locale.getDefault()    :    locale;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
45	[BUG]  [BUGGY]  Object  locale  =(locale  ==  null)?  Locale.getDefault()  :  locale);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Object  locale  =(locale  ==  null)?  Locale.getDefault()  :  locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Object  locale  =(locale  ==  null)?  Locale.getDefault()  :  locale);	  Object    locale    =(locale    ==    null)?    Locale.getDefault()    :    locale;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
46	[BUG]  [BUGGY]  BezirksLocale  locale  =  cDateTimeInstanceCache.get(key,  locale);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  BezirksLocale  locale  =  cDateTimeInstanceCache.get(key,  locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	BezirksLocale  locale  =  cDateTimeInstanceCache.get(key,  locale);	  BezirksLocale    locale    =    cDateTimeInstanceCache.get(key);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
47	[BUG]  [BUGGY]  BezirksLocale  locale  =  cDateTimeInstanceCache.get(locale);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  BezirksLocale  locale  =  cDateTimeInstanceCache.get(locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	BezirksLocale  locale  =  cDateTimeInstanceCache.get(locale);	  BezirksLocale    locale    =    cDateTimeInstanceCache.get(key);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
48	[BUG]  [BUGGY]  electedValue  =  cDateTimeInstanceCache.get(key,  locale);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValue  =  cDateTimeInstanceCache.get(key,  locale);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedValue  =  cDateTimeInstanceCache.get(key,  locale);	  electedValue    =    cDateTimeInstanceCache.get(key);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
49	[BUG]  [BUGGY]  electedValue  =  cDateTimeInstanceCache.get(locale);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValue  =  cDateTimeInstanceCache.get(locale);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedValue  =  cDateTimeInstanceCache.get(locale);	  electedValue    =    cDateTimeInstanceCache.get(key);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
50	[BUG]  [BUGGY]  electedValue  =  cDateTimeInstanceCache.get(key,  timeStyle);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValue  =  cDateTimeInstanceCache.get(key,  timeStyle);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedValue  =  cDateTimeInstanceCache.get(key,  timeStyle);	  electedValue    =    cDateTimeInstanceCache.get(key);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
51	[BUG]  [BUGGY]  cDateTimeInstanceCache.put(key,  dateStyle,  timeStyle,  locale);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  cDateTimeInstanceCache.put(key,  dateStyle,  timeStyle,  locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	cDateTimeInstanceCache.put(key,  dateStyle,  timeStyle,  locale);	  cDateTimeInstanceCache.put(key,    timeStyle,    locale);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
52	[BUG]  [BUGGY]  cDateTimeInstanceCache.put(dateStyle,  timeStyle,  locale);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  cDateTimeInstanceCache.put(dateStyle,  timeStyle,  locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	cDateTimeInstanceCache.put(dateStyle,  timeStyle,  locale);	  cDateTimeInstanceCache.put(key,    timeStyle,    locale);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
53	[BUG]  [BUGGY]  locale  =(Locale)cDateTimeInstanceCache.get(locale,  locale);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  locale  =(Locale)cDateTimeInstanceCache.get(locale,  locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	locale  =(Locale)cDateTimeInstanceCache.get(locale,  locale);	  locale    =(Locale)cDateTimeInstanceCache.get(locale);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
54	[BUG]  [BUGGY]  Locale  locale  =  cDateTimeInstanceCache.get(key,  locale);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =  cDateTimeInstanceCache.get(key,  locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Locale  locale  =  cDateTimeInstanceCache.get(key,  locale);	  Locale    locale    =    cDateTimeInstanceCache.get(key);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
55	[BUG]  [BUGGY]  Locale  locale  =  cDateTimeInstanceCache.get(timeStyle);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =  cDateTimeInstanceCache.get(timeStyle);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Locale  locale  =  cDateTimeInstanceCache.get(timeStyle);	  Locale    locale    =    cDateTimeInstanceCache.get(key);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
56	[BUG]  [BUGGY]  locale  =(locale  ==  null)?  Locale.getDefault()  :  locale);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  locale  =(locale  ==  null)?  Locale.getDefault()  :  locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	locale  =(locale  ==  null)?  Locale.getDefault()  :  locale);	  locale    =(locale    ==    null)?    Locale.getDefault()    :    locale;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
57	[BUG]  [BUGGY]  locale  =(locale!=  null)?  Locale.getDefault()  :  locale;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  locale  =(locale!=  null)?  Locale.getDefault()  :  locale;  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	locale  =(locale!=  null)?  Locale.getDefault()  :  locale;	  locale    =(locale    ==    null)?    Locale.getDefault()    :    locale;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
58	[BUG]  [BUGGY]  locale  =(locale!=  null)?  Locale.getDefault()  :  Locale.getDefault();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  locale  =(locale!=  null)?  Locale.getDefault()  :  Locale.getDefault();  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	locale  =(locale!=  null)?  Locale.getDefault()  :  Locale.getDefault();	  locale    =(locale    ==    null)?    Locale.getDefault()    :    Locale.getDefault();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
59	[BUG]  [BUGGY]  locale  =(locale  ==  null)?  Locale.getDefault()  :  Locale.getLocale();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  locale  =(locale  ==  null)?  Locale.getDefault()  :  Locale.getLocale();  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	locale  =(locale  ==  null)?  Locale.getDefault()  :  Locale.getLocale();	  locale    =(locale    ==    null)?    Locale.getDefault()    :    Locale.getDefault();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
60	[BUG]  [BUGGY]  locale  =(locale  ==  null)?  Locale.getLocale()  :  Locale.getDefault();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  locale  =(locale  ==  null)?  Locale.getLocale()  :  Locale.getDefault();  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	locale  =(locale  ==  null)?  Locale.getLocale()  :  Locale.getDefault();	  locale    =(locale    ==    null)?    Locale.getDefault()    :    Locale.getDefault();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
61	[BUG]  [BUGGY]  key  =  new  Pair(key,  timeStyle,  locale);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  key  =  new  Pair(key,  timeStyle,  locale);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	key  =  new  Pair(key,  timeStyle,  locale);	  key    =    new    Pair(key,    timeZone,    locale);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
62	[BUG]  [BUGGY]  if(locale!=  null)  {  key  =  new  Pair(key,  timeZone,  locale);  }  else  {  locale  =  Locale.getDefault();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  if(locale!=  null)  {  key  =  new  Pair(key,  timeZone,  locale);  }  else  {  locale  =  Locale.getDefault();  }  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	if(locale!=  null)  {  key  =  new  Pair(key,  timeZone,  locale);  }  else  {  locale  =  Locale.getDefault();  }	  key    =    new    Pair(key,    timeZone,    locale);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
63	[BUG]  [BUGGY]  if(locale!=  null)  {  key  =  new  Pair(key,  timeZone,  locale);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  if(locale!=  null)  {  key  =  new  Pair(key,  timeZone,  locale);  }  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	if(locale!=  null)  {  key  =  new  Pair(key,  timeZone,  locale);  }	  key    =    new    Pair(key,    timeZone,    locale);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
64	[BUG]  [BUGGY]  Locale  locale  =  cDateTimeInstanceCache.get(locale,  timeStyle);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =  cDateTimeInstanceCache.get(locale,  timeStyle);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Locale  locale  =  cDateTimeInstanceCache.get(locale,  timeStyle);	  Locale    locale    =    cDateTimeInstanceCache.get(locale);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
65	[BUG]  [BUGGY]  Locale  locale  =  cDateTimeInstanceCache.get(mLocale);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =  cDateTimeInstanceCache.get(mLocale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Locale  locale  =  cDateTimeInstanceCache.get(mLocale);	  Locale    locale    =    cDateTimeInstanceCache.get(locale);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
66	[BUG]  [BUGGY]  Object  key  =  new  Pair(locale,  dateStyle,  timeStyle);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Object  key  =  new  Pair(locale,  dateStyle,  timeStyle);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Object  key  =  new  Pair(locale,  dateStyle,  timeStyle);	  Object    key    =    new    Pair(key,    locale,    timeStyle);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
67	[BUG]  [BUGGY]  Object  key  =  new  Pair(key,  dateStyle,  timeStyle);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Object  key  =  new  Pair(key,  dateStyle,  timeStyle);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Object  key  =  new  Pair(key,  dateStyle,  timeStyle);	  Object    key    =    new    Pair(key,    locale,    timeStyle);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
68	[BUG]  [BUGGY]  Locale  locale  =(Locale)cDateTimeInstanceCache.get(key,  locale);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =(Locale)cDateTimeInstanceCache.get(key,  locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Locale  locale  =(Locale)cDateTimeInstanceCache.get(key,  locale);	  Locale    locale    =(Locale)cDateTimeInstanceCache.get(key);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
69	[BUG]  [BUGGY]  Object  locale  =  cDateTimeInstanceCache.get();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Object  locale  =  cDateTimeInstanceCache.get();  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Object  locale  =  cDateTimeInstanceCache.get();	  Object    locale    =    locale.get();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
70	[BUG]  [BUGGY]  Locale  locale  =(locale!=  null)?  Locale.getDefault()  :  Locale.getDefault();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =(locale!=  null)?  Locale.getDefault()  :  Locale.getDefault();  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Locale  locale  =(locale!=  null)?  Locale.getDefault()  :  Locale.getDefault();	  Locale    locale    =(locale    ==    null)?    Locale.getDefault()    :    Locale.getDefault();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
71	[BUG]  [BUGGY]  Locale  locale  =(locale  ==  null)?  Locale.getDefault()  :  Locale.getLocale();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =(locale  ==  null)?  Locale.getDefault()  :  Locale.getLocale();  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Locale  locale  =(locale  ==  null)?  Locale.getDefault()  :  Locale.getLocale();	  Locale    locale    =(locale    ==    null)?    Locale.getDefault()    :    Locale.getDefault();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
72	[BUG]  [BUGGY]  Locale  locale  =(locale  ==  null)?  Locale.getLocale()  :  Locale.getDefault();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =(locale  ==  null)?  Locale.getLocale()  :  Locale.getDefault();  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Locale  locale  =(locale  ==  null)?  Locale.getLocale()  :  Locale.getDefault();	  Locale    locale    =(locale    ==    null)?    Locale.getDefault()    :    Locale.getDefault();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
73	[BUG]  [BUGGY]  mutableValues  =  cDateTimeInstanceCache.get(key,  locale);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  mutableValues  =  cDateTimeInstanceCache.get(key,  locale);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	mutableValues  =  cDateTimeInstanceCache.get(key,  locale);	  mutableValues    =    cDateTimeInstanceCache.get(key);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
74	[BUG]  [BUGGY]  mutableValues  =  cDateTimeInstanceCache.get(locale);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  mutableValues  =  cDateTimeInstanceCache.get(locale);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	mutableValues  =  cDateTimeInstanceCache.get(locale);	  mutableValues    =    cDateTimeInstanceCache.get(key);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
75	[BUG]  [BUGGY]  mutableValues  =  cDateTimeInstanceCache.get(key,  timeStyle);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  mutableValues  =  cDateTimeInstanceCache.get(key,  timeStyle);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	mutableValues  =  cDateTimeInstanceCache.get(key,  timeStyle);	  mutableValues    =    cDateTimeInstanceCache.get(key);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
76	[BUG]  [BUGGY]  cDateTimeInstanceCache.put(key,  locale.getValue());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  cDateTimeInstanceCache.put(key,  locale.getValue());  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	cDateTimeInstanceCache.put(key,  locale.getValue());	  cDateTimeInstanceCache.put(key,    locale.getDefault());    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
77	[BUG]  [BUGGY]  Object  key  =  new  Pair(dateStyle,  timeStyle,  locale);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Object  key  =  new  Pair(dateStyle,  timeStyle,  locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Object  key  =  new  Pair(dateStyle,  timeStyle,  locale);	  Object    key    =    new    Pair(key,    timeStyle,    locale);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
78	[BUG]  [BUGGY]  Object  key  =  new  Pair(locale,  timeStyle,  key);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Object  key  =  new  Pair(locale,  timeStyle,  key);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Object  key  =  new  Pair(locale,  timeStyle,  key);	  Object    key    =    new    Pair(key,    timeStyle,    locale);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
79	[BUG]  [BUGGY]  Object  key  =  new  Pair(timeStyle,  timeStyle,  locale);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Object  key  =  new  Pair(timeStyle,  timeStyle,  locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Object  key  =  new  Pair(timeStyle,  timeStyle,  locale);	  Object    key    =    new    Pair(key,    timeStyle,    locale);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
80	[BUG]  [BUGGY]  electedValues  =  cDateTimeInstanceCache.get(locale);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValues  =  cDateTimeInstanceCache.get(locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedValues  =  cDateTimeInstanceCache.get(locale);	  electedValues    =    cDateTimeInstanceCache.get(key);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
81	[BUG]  [BUGGY]  BezirksLocale  locale  =  locale.getDefault();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  BezirksLocale  locale  =  locale.getDefault();  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	BezirksLocale  locale  =  locale.getDefault();	  BezirksLocale    locale    =    Locale.getDefault();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
82	[BUG]  [BUGGY]  electedValues  =  new  ArrayList  <  String,Integer>();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValues  =  new  ArrayList  <  String,Integer>();  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedValues  =  new  ArrayList  <  String,Integer>();	  electedValues    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
83	[BUG]  [BUGGY]  electedValues  =  new  TreeMap  <  String,Integer>();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValues  =  new  TreeMap  <  String,Integer>();  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedValues  =  new  TreeMap  <  String,Integer>();	  electedValues    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
84	[BUG]  [BUGGY]  electedValues  =  new  HashMap  <  String,Integer>();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValues  =  new  HashMap  <  String,Integer>();  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedValues  =  new  HashMap  <  String,Integer>();	  electedValues    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
85	[BUG]  [BUGGY]  mutableValues  =  new  ArrayList  <  String,Integer>();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  mutableValues  =  new  ArrayList  <  String,Integer>();  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	mutableValues  =  new  ArrayList  <  String,Integer>();	  mutableValues    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
86	[BUG]  [BUGGY]  mutableValues  =  new  HashMap  <  String,Integer>();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  mutableValues  =  new  HashMap  <  String,Integer>();  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	mutableValues  =  new  HashMap  <  String,Integer>();	  mutableValues    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
87	[BUG]  [BUGGY]  mutableValues  =  new  TreeMap  <  String,Integer>();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  mutableValues  =  new  TreeMap  <  String,Integer>();  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	mutableValues  =  new  TreeMap  <  String,Integer>();	  mutableValues    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
88	[BUG]  [BUGGY]  electedValue  =  locale.getDefault();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValue  =  locale.getDefault();  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedValue  =  locale.getDefault();	  electedValue    =    Locale.getDefault();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
89	[BUG]  [BUGGY]  electedValue  =  locale.getLocale();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValue  =  locale.getLocale();  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedValue  =  locale.getLocale();	  electedValue    =    Locale.getDefault();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
90	[BUG]  [BUGGY]  Locale  locale  =(Locale)cDateTimeInstanceCache.get(key,  timeZone);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =(Locale)cDateTimeInstanceCache.get(key,  timeZone);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Locale  locale  =(Locale)cDateTimeInstanceCache.get(key,  timeZone);	  Locale    locale    =(Locale)cDateTimeInstanceCache.get(locale,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
91	[BUG]  [BUGGY]  Locale  locale  =(Locale)cDateTimeInstanceCache.get(timeZone,  locale);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =(Locale)cDateTimeInstanceCache.get(timeZone,  locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Locale  locale  =(Locale)cDateTimeInstanceCache.get(timeZone,  locale);	  Locale    locale    =(Locale)cDateTimeInstanceCache.get(locale,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
92	[BUG]  [BUGGY]  electedValues  =  cDateTimeInstanceCache.get(key,  timeStyle,  locale);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValues  =  cDateTimeInstanceCache.get(key,  timeStyle,  locale);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedValues  =  cDateTimeInstanceCache.get(key,  timeStyle,  locale);	  electedValues    =    cDateTimeInstanceCache.get(key,    locale);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
93	[BUG]  [BUGGY]  electedValues  =  cDateTimeInstanceCache.get(key,  locale,  timeStyle);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValues  =  cDateTimeInstanceCache.get(key,  locale,  timeStyle);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedValues  =  cDateTimeInstanceCache.get(key,  locale,  timeStyle);	  electedValues    =    cDateTimeInstanceCache.get(key,    locale);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
94	[BUG]  [BUGGY]  electedValues  =  cDateTimeInstanceCache.get(key,  timeStyle);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValues  =  cDateTimeInstanceCache.get(key,  timeStyle);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedValues  =  cDateTimeInstanceCache.get(key,  timeStyle);	  electedValues    =    cDateTimeInstanceCache.get(key,    locale);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
95	[BUG]  [BUGGY]  Object  locale  =  cDateTimeInstanceCache.get(key,  locale);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Object  locale  =  cDateTimeInstanceCache.get(key,  locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Object  locale  =  cDateTimeInstanceCache.get(key,  locale);	  Object    locale    =    cDateTimeInstanceCache.get(key);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
96	[BUG]  [BUGGY]  Object  locale  =  cDateTimeInstanceCache.get(key,  timeStyle);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Object  locale  =  cDateTimeInstanceCache.get(key,  timeStyle);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Object  locale  =  cDateTimeInstanceCache.get(key,  timeStyle);	  Object    locale    =    cDateTimeInstanceCache.get(key);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
97	[BUG]  [BUGGY]  Object  key  =  new  Pair(key,  timeZone,  locale);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Object  key  =  new  Pair(key,  timeZone,  locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Object  key  =  new  Pair(key,  timeZone,  locale);	  Object    key    =    new    Pair(key,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
98	[BUG]  [BUGGY]  Object  key  =  new  Pair(dateStyle,  timeZone);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Object  key  =  new  Pair(dateStyle,  timeZone);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Object  key  =  new  Pair(dateStyle,  timeZone);	  Object    key    =    new    Pair(key,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
99	[BUG]  [BUGGY]  electedValue  =  new  Pair(key,  timeStyle,  locale);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValue  =  new  Pair(key,  timeStyle,  locale);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedValue  =  new  Pair(key,  timeStyle,  locale);	  electedValue    =    new    Pair(key,    locale);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
100	[BUG]  [BUGGY]  electedValue  =  new  Pair(locale,  key);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValue  =  new  Pair(locale,  key);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedValue  =  new  Pair(locale,  key);	  electedValue    =    new    Pair(key,    locale);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
101	[BUG]  [BUGGY]  electedValue  =  new  Pair(key,  locale,  timeStyle);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValue  =  new  Pair(key,  locale,  timeStyle);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedValue  =  new  Pair(key,  locale,  timeStyle);	  electedValue    =    new    Pair(key,    locale);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
102	[BUG]  [BUGGY]  Beide(locale).put(key,  locale.getLocale());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Beide(locale).put(key,  locale.getLocale());  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Beide(locale).put(key,  locale.getLocale());	  if(locale    ==    null)    {    key    =    new    Pair(key,    locale.getLocale());    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
103	[BUG]  [BUGGY]  electedValues  =  new  ArrayList(key.size());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValues  =  new  ArrayList(key.size());  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedValues  =  new  ArrayList(key.size());	  if(locale    ==    null)    {    key    =    new    Pair(key,    locale.getLocale());    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
104	[BUG]  [BUGGY]  Object  key  =  new  Pair(key,  locale,  timeStyle,  locale);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Object  key  =  new  Pair(key,  locale,  timeStyle,  locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Object  key  =  new  Pair(key,  locale,  timeStyle,  locale);	  Object    key    =    new    Pair(key,    locale,    timeStyle);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
105	[BUG]  [BUGGY]  electedValues  =  new  LinkedList  <  String,Object>();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValues  =  new  LinkedList  <  String,Object>();  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedValues  =  new  LinkedList  <  String,Object>();	  electedValues    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
106	[BUG]  [BUGGY]  BezirksLocale  locale  =(DateTimeZone)cDateTimeInstanceCache.get(key);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  BezirksLocale  locale  =(DateTimeZone)cDateTimeInstanceCache.get(key);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	BezirksLocale  locale  =(DateTimeZone)cDateTimeInstanceCache.get(key);	  BezirksLocale    locale    =    Locale.getDefault();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
107	[BUG]  [BUGGY]  Locale  locale  =  cDateTimeInstanceCache.get(key  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =  cDateTimeInstanceCache.get(key  +  1);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Locale  locale  =  cDateTimeInstanceCache.get(key  +  1);	  Locale    locale    =    cDateTimeInstanceCache.get(key);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
108	[BUG]  [BUGGY]  key  =  new  Pair(key,  timeStyle  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  key  =  new  Pair(key,  timeStyle  -  1);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	key  =  new  Pair(key,  timeStyle  -  1);	  key    =    new    Pair(key,    timeStyle);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
109	[BUG]  [BUGGY]  if(locale  ==  null)  {  key  =  new  Pair(key,  timeZone);  }  else  {  locale  =  Locale.getDefault();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  if(locale  ==  null)  {  key  =  new  Pair(key,  timeZone);  }  else  {  locale  =  Locale.getDefault();  }  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	if(locale  ==  null)  {  key  =  new  Pair(key,  timeZone);  }  else  {  locale  =  Locale.getDefault();  }	  key    =    new    Pair(locale,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
110	[BUG]  [BUGGY]  Beide(locales,  timeStyle,  locale.getLocale())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Beide(locales,  timeStyle,  locale.getLocale())  {  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Beide(locales,  timeStyle,  locale.getLocale())  {	  if(locale!=    null)    {    key    =    new    Pair(key,    locale.getLocale());    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
111	[BUG]  [BUGGY]  electedValue  =  new  Pair(key,  timeStyle);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValue  =  new  Pair(key,  timeStyle);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedValue  =  new  Pair(key,  timeStyle);	  electedValue    =    new    Pair(key,    locale);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
112	[BUG]  [BUGGY]  electedValue  =  locale;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValue  =  locale;  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedValue  =  locale;	  electedValue    =    Locale.getDefault();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
113	[BUG]  [BUGGY]  key  =  new  Pair(locale,  timeZone,  key);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  key  =  new  Pair(locale,  timeZone,  key);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	key  =  new  Pair(locale,  timeZone,  key);	  key    =    new    Pair(key,    timeZone,    locale);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
114	[BUG]  [BUGGY]  key  =  new  Pair(values,  timeZone,  locale);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  key  =  new  Pair(values,  timeZone,  locale);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	key  =  new  Pair(values,  timeZone,  locale);	  key    =    new    Pair(key,    timeZone,    locale);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
115	[BUG]  [BUGGY]  Object  key  =  new  Pair(timeZone,  key);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Object  key  =  new  Pair(timeZone,  key);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Object  key  =  new  Pair(timeZone,  key);	  Object    key    =    new    Pair(key,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
116	[BUG]  [BUGGY]  Object  key  =  new  Pair(locale,  timeZone);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Object  key  =  new  Pair(locale,  timeZone);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Object  key  =  new  Pair(locale,  timeZone);	  Object    key    =    new    Pair(key,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
117	[BUG]  [BUGGY]  locale  =  cDateTimeInstanceCache.get(key  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  locale  =  cDateTimeInstanceCache.get(key  +  1);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	locale  =  cDateTimeInstanceCache.get(key  +  1);	  locale    =    cDateTimeInstanceCache.get(key);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
118	[BUG]  [BUGGY]  Object  locale  =  cDateTimeInstanceCache.get(key  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Object  locale  =  cDateTimeInstanceCache.get(key  +  1);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Object  locale  =  cDateTimeInstanceCache.get(key  +  1);	  Object    locale    =    cDateTimeInstanceCache.get(key);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
119	[BUG]  [BUGGY]  electedValues  =  new  ArrayList  <  Locale>(2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValues  =  new  ArrayList  <  Locale>(2);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedValues  =  new  ArrayList  <  Locale>(2);	  electedValues    =    new    ArrayList    <    Locale>();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
120	[BUG]  [BUGGY]  cDateTimeInstanceCache.put(key,  locale;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  cDateTimeInstanceCache.put(key,  locale;  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	cDateTimeInstanceCache.put(key,  locale;	  cDateTimeInstanceCache.put(key,    locale.getDefault());    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
121	[BUG]  [BUGGY]  Object  locale  =  cDateTimeInstanceCache.get(locale,  key);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Object  locale  =  cDateTimeInstanceCache.get(locale,  key);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Object  locale  =  cDateTimeInstanceCache.get(locale,  key);	  Object    locale    =    cDateTimeInstanceCache.get(locale);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
122	[BUG]  [BUGGY]  Aleger  <  Locale>  locale  =  cDateTimeInstanceCache.get(locale);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Aleger  <  Locale>  locale  =  cDateTimeInstanceCache.get(locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Aleger  <  Locale>  locale  =  cDateTimeInstanceCache.get(locale);	  Aleger    <    Locale>    locale    =    Locale.getDefault();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
123	[BUG]  [BUGGY]  Locale  locale  =  cDateTimeInstanceCache.get(locale,  locale);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =  cDateTimeInstanceCache.get(locale,  locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Locale  locale  =  cDateTimeInstanceCache.get(locale,  locale);	  Locale    locale    =    cDateTimeInstanceCache.get(locale);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
124	[BUG]  [BUGGY]  BezirksLocale  locale  =  cDateTimeInstanceCache.get(key  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  BezirksLocale  locale  =  cDateTimeInstanceCache.get(key  +  1);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	BezirksLocale  locale  =  cDateTimeInstanceCache.get(key  +  1);	  BezirksLocale    locale    =    cDateTimeInstanceCache.get(key);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
125	[BUG]  [BUGGY]  mutableValues  =  new  LinkedList  <  String,Integer>();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  mutableValues  =  new  LinkedList  <  String,Integer>();  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	mutableValues  =  new  LinkedList  <  String,Integer>();	  mutableValues    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
126	[BUG]  [BUGGY]  mutableValues  =  new  java.util.ArrayList  <  String,Integer>();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  mutableValues  =  new  java.util.ArrayList  <  String,Integer>();  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	mutableValues  =  new  java.util.ArrayList  <  String,Integer>();	  mutableValues    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
127	[BUG]  [BUGGY]  Object  locale  =(locale  ==  null)?  Locale.getDefault()  :  key;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Object  locale  =(locale  ==  null)?  Locale.getDefault()  :  key;  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Object  locale  =(locale  ==  null)?  Locale.getDefault()  :  key;	  Object    locale    =(locale    ==    null)?    Locale.getDefault()    :    locale;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
128	[BUG]  [BUGGY]  electedValues  =  new  LinkedList  <  String,Integer>();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValues  =  new  LinkedList  <  String,Integer>();  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedValues  =  new  LinkedList  <  String,Integer>();	  electedValues    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
129	[BUG]  [BUGGY]  electedValues  =  new  java.util.ArrayList  <  String,Integer>();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValues  =  new  java.util.ArrayList  <  String,Integer>();  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedValues  =  new  java.util.ArrayList  <  String,Integer>();	  electedValues    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
130	[BUG]  [BUGGY]  Object  locale  =  this.mDateTimeInstanceCache.get();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Object  locale  =  this.mDateTimeInstanceCache.get();  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Object  locale  =  this.mDateTimeInstanceCache.get();	  Object    locale    =    locale.get();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
131	[BUG]  [BUGGY]  Locale  locale  =(Locale)cDateTimeInstanceCache.get(locale,  timeZone,  locale);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =(Locale)cDateTimeInstanceCache.get(locale,  timeZone,  locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Locale  locale  =(Locale)cDateTimeInstanceCache.get(locale,  timeZone,  locale);	  Locale    locale    =(Locale)cDateTimeInstanceCache.get(locale,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
132	[BUG]  [BUGGY]  locale  =(Locale)cDateTimeInstanceCache.get(locale,  timeStyle);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  locale  =(Locale)cDateTimeInstanceCache.get(locale,  timeStyle);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	locale  =(Locale)cDateTimeInstanceCache.get(locale,  timeStyle);	  locale    =(Locale)cDateTimeInstanceCache.get(locale);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
133	[BUG]  [BUGGY]  locale  =(Locale)cDateTimeInstanceCache.get(timeZone);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  locale  =(Locale)cDateTimeInstanceCache.get(timeZone);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	locale  =(Locale)cDateTimeInstanceCache.get(timeZone);	  locale    =(Locale)cDateTimeInstanceCache.get(key);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
134	[BUG]  [BUGGY]  Locale  locale  =(Locale)cDateTimeInstanceCache.get(locale,  timeStyle,  locale);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =(Locale)cDateTimeInstanceCache.get(locale,  timeStyle,  locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Locale  locale  =(Locale)cDateTimeInstanceCache.get(locale,  timeStyle,  locale);	  Locale    locale    =(Locale)cDateTimeInstanceCache.get(locale,    timeStyle);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
135	[BUG]  [BUGGY]  electedValue  =  new  Pair(key,  timeZone);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValue  =  new  Pair(key,  timeZone);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedValue  =  new  Pair(key,  timeZone);	  electedValue    =    new    Pair(key,    locale);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
136	[BUG]  [BUGGY]  cDateTimeInstanceCache.put(key,  timeZone.getDefault());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  cDateTimeInstanceCache.put(key,  timeZone.getDefault());  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	cDateTimeInstanceCache.put(key,  timeZone.getDefault());	  cDateTimeInstanceCache.put(key,    locale.getDefault());    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
137	[BUG]  [BUGGY]  gewähltValue  =  Locale.getDefault();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  gewähltValue  =  Locale.getDefault();  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	gewähltValue  =  Locale.getDefault();	  electedValue    =    Locale.getDefault();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
138	[BUG]  [BUGGY]  electedValues  =  cDateTimeInstanceCache.get(key  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValues  =  cDateTimeInstanceCache.get(key  +  1);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedValues  =  cDateTimeInstanceCache.get(key  +  1);	  electedValues    =    cDateTimeInstanceCache.get(key);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
139	[BUG]  [BUGGY]  Aleger  <  Locale>  locale  =(locale  ==  null)?  Locale.getDefault()  :  locale;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Aleger  <  Locale>  locale  =(locale  ==  null)?  Locale.getDefault()  :  locale;  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Aleger  <  Locale>  locale  =(locale  ==  null)?  Locale.getDefault()  :  locale;	  Aleger    <    Locale>    locale    =    Locale.getDefault();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
140	[BUG]  [BUGGY]  electedValues  =  cDateTimeInstanceCache.get(key,  timeZone);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValues  =  cDateTimeInstanceCache.get(key,  timeZone);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedValues  =  cDateTimeInstanceCache.get(key,  timeZone);	  electedValues    =    cDateTimeInstanceCache.get(key,    locale);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
141	[BUG]  [BUGGY]  electedValue  =  Pair.newInstance(key,  locale);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  electedValue  =  Pair.newInstance(key,  locale);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	electedValue  =  Pair.newInstance(key,  locale);	  if(locale!=    null)    {    key    =    new    Pair(key,    locale);    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
142	[BUG]  [BUGGY]  key  =  new  Pair(key,  timeStyle,  cDateTimeInstanceCache);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  key  =  new  Pair(key,  timeStyle,  cDateTimeInstanceCache);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	key  =  new  Pair(key,  timeStyle,  cDateTimeInstanceCache);	  key    =    new    Pair(key,    timeStyle);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
143	[BUG]  [BUGGY]  Locale  locale  =(Locale)cDateTimeInstanceCache.get(timeStyle,  timeStyle);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =(Locale)cDateTimeInstanceCache.get(timeStyle,  timeStyle);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Locale  locale  =(Locale)cDateTimeInstanceCache.get(timeStyle,  timeStyle);	  Locale    locale    =(Locale)cDateTimeInstanceCache.get(timeStyle);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
144	[BUG]  [BUGGY]  cDateTimeInstanceCache.put(key,  new  Pair(locale,  timeStyle));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  cDateTimeInstanceCache.put(key,  new  Pair(locale,  timeStyle));  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	cDateTimeInstanceCache.put(key,  new  Pair(locale,  timeStyle));	  cDateTimeInstanceCache.put(key,    new    Pair(locale));    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
145	[BUG]  [BUGGY]  Object  locale  =  locale!=  null?  locale.getDefault()  :  null;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Object  locale  =  locale!=  null?  locale.getDefault()  :  null;  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Object  locale  =  locale!=  null?  locale.getDefault()  :  null;	  Object    locale    =    locale.getDefault();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
146	[BUG]  [BUGGY]  key  =  new  Pair(locale,  timeZone,  locale);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  key  =  new  Pair(locale,  timeZone,  locale);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	key  =  new  Pair(locale,  timeZone,  locale);	  key    =    new    Pair(key,    timeZone,    locale);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
147	[BUG]  [BUGGY]  key  =  new  Pair(key,  timeZone,  mLocale);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  key  =  new  Pair(key,  timeZone,  mLocale);  [BUGGY]      }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	key  =  new  Pair(key,  timeZone,  mLocale);	  key    =    new    Pair(key,    timeZone,    locale);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
148	[BUG]  [BUGGY]  Object  locale  =  cDateTimeInstanceCache.get(locale,  locale);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Object  locale  =  cDateTimeInstanceCache.get(locale,  locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Object  locale  =  cDateTimeInstanceCache.get(locale,  locale);	  Object    locale    =    cDateTimeInstanceCache.get(locale);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
149	[BUG]  [BUGGY]  Locale  locale  =(Locale)cDateTimeInstanceCache.get(timeStyle,  locale);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =(Locale)cDateTimeInstanceCache.get(timeStyle,  locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Locale  locale  =(Locale)cDateTimeInstanceCache.get(timeStyle,  locale);	  Locale    locale    =(Locale)cDateTimeInstanceCache.get(locale,    timeStyle);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
150	[BUG]  [BUGGY]  Locale  locale  =(Locale)cDateTimeInstanceCache.get(key  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Locale  locale  =(Locale)cDateTimeInstanceCache.get(key  +  1);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Locale  locale  =(Locale)cDateTimeInstanceCache.get(key  +  1);	  Locale    locale    =(Locale)cDateTimeInstanceCache.get(key);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
151	[BUG]  [BUGGY]  Object  key  =  new  Pair(locale,  timeStyle,  locale);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Object  key  =  new  Pair(locale,  timeStyle,  locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Object  key  =  new  Pair(locale,  timeStyle,  locale);	  Object    key    =    new    Pair(key,    timeStyle,    locale);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
152	[BUG]  [BUGGY]  Object  locale  =  cDateTimeInstanceCache.get(timeZone);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  Object  locale  =  cDateTimeInstanceCache.get(timeZone);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	Object  locale  =  cDateTimeInstanceCache.get(timeZone);	  Object    locale    =    locale.get();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
153	[BUG]  [BUGGY]  cDateTimeInstanceCache.put(key,  new  Pair(timeZone),  locale);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      Locale  locale)  {  Object  key  =  new  Pair(new  Integer(dateStyle),  new  Integer(timeStyle));  if  (timeZone  !=  null)  {  key  =  new  Pair(key,  timeZone);  }  if  (locale  !=  null)  {      [BUGGY]  cDateTimeInstanceCache.put(key,  new  Pair(timeZone),  locale);  [BUGGY]      key  =  new  Pair(key,  locale);  }  FastDateFormat  format  =  (FastDateFormat)  cDateTimeInstanceCache.get(key);  if  (format  ==  null)  {  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  try  {  SimpleDateFormat  formatter  =  (SimpleDateFormat)  DateFormat.getDateTimeInstance(dateStyle,  timeStyle,  locale);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getDateTimeInstance  [RETURN_TYPE]  FastDateFormat  int  dateStyle  int  timeStyle  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  ClassCastException  ex  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  SimpleDateFormat  formatter  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	466	466	2	replace	cDateTimeInstanceCache.put(key,  new  Pair(timeZone),  locale);	  cDateTimeInstanceCache.put(key,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
