bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	add	rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);	      rule    =    selectNumberRule(Calendar.MILLIS,    tokenLen);    	compilable	  [FE]  AssertionFailedError  	7	2	replace
2	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);	      rule    =    selectNumberRule(Calendar.MILLIS,    tokenLen);    	compilable	  [FE]  AssertionFailedError  	7	2	replace
3	[BUG]  [BUGGY]  rule  =  new  TextField(Calendar.MONTH,  day);  [CE]  cannot  find  symbol  day  [FE]          AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  new  TextField(Calendar.MONTH,  day);  [BUGGY]    }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	rule  =  new  TextField(Calendar.MONTH,  day);	  rule    =    new    TextField(Calendar.MONTH,    monthS);    	non-compiled	[CE]  cannot  find  symbol  day	14	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen  +  1);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	add	rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen  +  1);	      rule    =    selectNumberRule(Calendar.MILLISECOND,    tokenLen);    	compilable	  [FE]  AssertionFailedError  	4	2	replace
5	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen  +  1);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen  +  1);	      rule    =    selectNumberRule(Calendar.MILLISECOND,    tokenLen);    	compilable	  [FE]  AssertionFailedError  	4	2	replace
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen  -  1);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	add	rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen  -  1);	      rule    =    selectNumberRule(Calendar.MILLISECOND,    tokenLen);    	compilable	  [FE]  AssertionFailedError  	4	2	replace
7	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen  -  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen  -  1);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen  -  1);	      rule    =    selectNumberRule(Calendar.MILLISECOND,    tokenLen);    	compilable	  [FE]  AssertionFailedError  	4	2	replace
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  [BUGGY]    }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	add	rule    =    new    TextField(Calendar.MONTH,    shortMonths);    rule  =  new  TextField(Calendar.MONTH,  shortMonths);	  	compilable	  [FE]  AssertionFailedError  	11	2	add
9	[BUG]  [BUGGY]  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  [BUGGY]    }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	rule    =    new    TextField(Calendar.MONTH,    shortMonths);    rule  =  new  TextField(Calendar.MONTH,  shortMonths);	  	compilable	  [FE]  AssertionFailedError  	11	2	add
10	[BUG]  [BUGGY]  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  Rule  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  [CE]  variable  rule  is  already  defined  in  method  parsePattern()  [FE]      AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  Rule  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  [BUGGY]    }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	rule    =    new    TextField(Calendar.MONTH,    shortMonths);    Rule  rule  =  new  TextField(Calendar.MONTH,  shortMonths);	  	non-compiled	[CE]  variable  rule  is  already  defined  in  method  parsePattern()	11	None	add
11	[BUG]  [BUGGY]  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  rule  =  new  TextField(Calendar.MONTH,  ShortMonths);  [CE]  cannot  find  symbol  ShortMonths  [FE]        AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  rule  =  new  TextField(Calendar.MONTH,  ShortMonths);  [BUGGY]    }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	rule    =    new    TextField(Calendar.MONTH,    shortMonths);    rule  =  new  TextField(Calendar.MONTH,  ShortMonths);	  	non-compiled	[CE]  cannot  find  symbol  ShortMonths	11	None	add
12	[BUG]  [BUGGY]  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  rule  =  new  TextField(Calendar.Month,  shortMonths);  [CE]  cannot  find  symbol  Month  [FE]          AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  rule  =  new  TextField(Calendar.Month,  shortMonths);  [BUGGY]    }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	rule    =    new    TextField(Calendar.MONTH,    shortMonths);    rule  =  new  TextField(Calendar.Month,  shortMonths);	  	non-compiled	[CE]  cannot  find  symbol  Month	11	None	add
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  rule  =  new  TextField(Calendar.YEAR,  shortMonths);  [BUGGY]    }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	add	rule    =    new    TextField(Calendar.MONTH,    shortMonths);    rule  =  new  TextField(Calendar.YEAR,  shortMonths);	  	compilable	  [FE]  AssertionFailedError  	11	2	add
14	[BUG]  [BUGGY]  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  rule  =  new  TextField(Calendar.YEAR,  shortMonths);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  rule  =  new  TextField(Calendar.YEAR,  shortMonths);  [BUGGY]    }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	rule    =    new    TextField(Calendar.MONTH,    shortMonths);    rule  =  new  TextField(Calendar.YEAR,  shortMonths);	  	compilable	  [FE]  AssertionFailedError  	11	2	add
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]      rule  =  selectNumberRule(Calendar.MONTH,  tokenLen);  rule  =  selectNumberRule(Calendar.MONTH,  tokenLen);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	add	        rule    =    selectNumberRule(Calendar.MONTH,    tokenLen);    rule  =  selectNumberRule(Calendar.MONTH,  tokenLen);	  	compilable	  [FE]  AssertionFailedError  	1	2	add
16	[BUG]  [BUGGY]      rule  =  selectNumberRule(Calendar.MONTH,  tokenLen);  rule  =  selectNumberRule(Calendar.MONTH,  tokenLen);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]      rule  =  selectNumberRule(Calendar.MONTH,  tokenLen);  rule  =  selectNumberRule(Calendar.MONTH,  tokenLen);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	        rule    =    selectNumberRule(Calendar.MONTH,    tokenLen);    rule  =  selectNumberRule(Calendar.MONTH,  tokenLen);	  	compilable	  [FE]  AssertionFailedError  	1	2	add
17	[BUG]  [BUGGY]      rule  =  selectNumberRule(Calendar.MONTH,  tokenLen);  rule  =  SelectNumberRule(Calendar.MONTH,  tokenLen);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]      rule  =  selectNumberRule(Calendar.MONTH,  tokenLen);  rule  =  SelectNumberRule(Calendar.MONTH,  tokenLen);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	        rule    =    selectNumberRule(Calendar.MONTH,    tokenLen);    rule  =  SelectNumberRule(Calendar.MONTH,  tokenLen);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
18	[BUG]  [BUGGY]      rule  =  selectNumberRule(Calendar.MONTH,  tokenLen);  Rule  rule  =  selectNumberRule(Calendar.MONTH,  tokenLen);  [CE]  variable  rule  is  already  defined  in  method  parsePattern()  [FE]        AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]      rule  =  selectNumberRule(Calendar.MONTH,  tokenLen);  Rule  rule  =  selectNumberRule(Calendar.MONTH,  tokenLen);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	        rule    =    selectNumberRule(Calendar.MONTH,    tokenLen);    Rule  rule  =  selectNumberRule(Calendar.MONTH,  tokenLen);	  	non-compiled	[CE]  variable  rule  is  already  defined  in  method  parsePattern()	1	None	add
19	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]      rule  =  selectNumberRule(Calendar.MONTH,  tokenLen);  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	add	        rule    =    selectNumberRule(Calendar.MONTH,    tokenLen);    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);	  	compilable	  [FE]  AssertionFailedError  	1	2	add
20	[BUG]  [BUGGY]      rule  =  selectNumberRule(Calendar.MONTH,  tokenLen);  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]      rule  =  selectNumberRule(Calendar.MONTH,  tokenLen);  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	        rule    =    selectNumberRule(Calendar.MONTH,    tokenLen);    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);	  	compilable	  [FE]  AssertionFailedError  	1	2	add
21	[BUG]  [BUGGY]      rule  =  selectNumberRule(Calendar.MONTH,  tokenLen);  rule  =  selectionNumberRule(Calendar.MONTH,  tokenLen);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]      rule  =  selectNumberRule(Calendar.MONTH,  tokenLen);  rule  =  selectionNumberRule(Calendar.MONTH,  tokenLen);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	        rule    =    selectNumberRule(Calendar.MONTH,    tokenLen);    rule  =  selectionNumberRule(Calendar.MONTH,  tokenLen);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  +  1);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	add	rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  +  1);	      rule    =    selectNumberRule(Calendar.YEAR,    tokenLen);    	compilable	  [FE]  AssertionFailedError  	6	2	replace
23	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  +  1);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  +  1);	      rule    =    selectNumberRule(Calendar.YEAR,    tokenLen);    	compilable	  [FE]  AssertionFailedError  	6	2	replace
24	[BUG]  [BUGGY]  int  months  =  Math.min(mValues.length,  1,  tokenLen);  [CE]  variable  months  is  already  defined  in  method  parsePattern()  [FE]          AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  int  months  =  Math.min(mValues.length,  1,  tokenLen);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	int  months  =  Math.min(mValues.length,  1,  tokenLen);	      int    months    =    Math.min(mValues.length,    tokenLen);    	non-compiled	[CE]  variable  months  is  already  defined  in  method  parsePattern()	18	None	replace
25	[BUG]  [BUGGY]  int  months  =  Math.min(mValues.length,  1);  [CE]  variable  months  is  already  defined  in  method  parsePattern()  [FE]            AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  int  months  =  Math.min(mValues.length,  1);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	int  months  =  Math.min(mValues.length,  1);	      int    months    =    Math.min(mValues.length,    tokenLen);    	non-compiled	[CE]  variable  months  is  already  defined  in  method  parsePattern()	18	None	replace
26	[BUG]  [BUGGY]  int  months  =  Math.min(mValues.length,  year);  [CE]  variable  months  is  already  defined  in  method  parsePattern()  [FE]              AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  int  months  =  Math.min(mValues.length,  year);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	int  months  =  Math.min(mValues.length,  year);	      int    months    =    Math.min(mValues.length,    tokenLen);    	non-compiled	[CE]  variable  months  is  already  defined  in  method  parsePattern()	18	None	replace
27	[BUG]  [BUGGY]  int  months  =  Math.min(mValues.length,  0);  [CE]  variable  months  is  already  defined  in  method  parsePattern()  [FE]                AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  int  months  =  Math.min(mValues.length,  0);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	int  months  =  Math.min(mValues.length,  0);	      int    months    =    Math.min(mValues.length,    tokenLen);    	non-compiled	[CE]  variable  months  is  already  defined  in  method  parsePattern()	18	None	replace
28	[BUG]  [BUGGY]  rule  =  new  TextField(Calendar.MONTH,  1);  [CE]  constructor  TextField  in  class  TextField  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  new  TextField(Calendar.MONTH,  1);  [BUGGY]    }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	rule  =  new  TextField(Calendar.MONTH,  1);	  rule    =    new    TextField(Calendar.MONTH,    shortMonths);    	non-compiled	[CE]  constructor  TextField  in  class  TextField  cannot  be  applied  to  given  types;	12	None	replace
29	[BUG]  [BUGGY]  int  months  =  selectNumberRule(Calendar.MONTH,  tokenLen  +  1);  [CE]  variable  months  is  already  defined  in  method  parsePattern()  [FE]        AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  int  months  =  selectNumberRule(Calendar.MONTH,  tokenLen  +  1);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	int  months  =  selectNumberRule(Calendar.MONTH,  tokenLen  +  1);	      int    months    =    selectNumberRule(Calendar.MONTH,    tokenLen);    	non-compiled	[CE]  variable  months  is  already  defined  in  method  parsePattern()	17	None	replace
30	[BUG]  [BUGGY]  int  months  =  selectNumberRule(Calendar.MONTH,  tokenLen  -  1);  [CE]  variable  months  is  already  defined  in  method  parsePattern()  [FE]          AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  int  months  =  selectNumberRule(Calendar.MONTH,  tokenLen  -  1);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	int  months  =  selectNumberRule(Calendar.MONTH,  tokenLen  -  1);	      int    months    =    selectNumberRule(Calendar.MONTH,    tokenLen);    	non-compiled	[CE]  variable  months  is  already  defined  in  method  parsePattern()	17	None	replace
31	[BUG]  [BUGGY]  int  months  =  selectNumberRule(Calendar.MONTH,  1,  tokenLen);  [CE]  variable  months  is  already  defined  in  method  parsePattern()  [FE]            AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  int  months  =  selectNumberRule(Calendar.MONTH,  1,  tokenLen);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	int  months  =  selectNumberRule(Calendar.MONTH,  1,  tokenLen);	      int    months    =    selectNumberRule(Calendar.MONTH,    tokenLen);    	non-compiled	[CE]  variable  months  is  already  defined  in  method  parsePattern()	17	None	replace
32	[BUG]  [BUGGY]  int  months  =  selectNumberRule(Calendar.MONTH,  month);  [CE]  variable  months  is  already  defined  in  method  parsePattern()  [FE]              AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  int  months  =  selectNumberRule(Calendar.MONTH,  month);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	int  months  =  selectNumberRule(Calendar.MONTH,  month);	      int    months    =    selectNumberRule(Calendar.MONTH,    tokenLen);    	non-compiled	[CE]  variable  months  is  already  defined  in  method  parsePattern()	17	None	replace
33	[BUG]  [BUGGY]  rule  =  SelectNumberRule(Calendar.MONTH,  tokenLen  +  1);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  SelectNumberRule(Calendar.MONTH,  tokenLen  +  1);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	rule  =  SelectNumberRule(Calendar.MONTH,  tokenLen  +  1);	      rule    =    SelectNumberRule(Calendar.MONTH,    tokenLen);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
34	[BUG]  [BUGGY]  rule  =  SelectNumberRule(Calendar.MONTH,  month);  [CE]  cannot  find  symbol  month  [FE]          AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  SelectNumberRule(Calendar.MONTH,  month);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	rule  =  SelectNumberRule(Calendar.MONTH,  month);	      rule    =    SelectNumberRule(Calendar.MONTH,    tokenLen);    	non-compiled	[CE]  cannot  find  symbol  month	16	None	replace
35	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.MONTH,  day);  [CE]  cannot  find  symbol  day  [FE]                AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.MONTH,  day);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	rule  =  selectNumberRule(Calendar.MONTH,  day);	      rule    =    selectNumberRule(Calendar.MONTH,    month);    	non-compiled	[CE]  cannot  find  symbol  day	8	None	replace
36	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]      rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	add	        rule    =    selectNumberRule(Calendar.YEAR,    tokenLen);    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);	  	compilable	  [FE]  AssertionFailedError  	5	2	add
37	[BUG]  [BUGGY]      rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]      rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	        rule    =    selectNumberRule(Calendar.YEAR,    tokenLen);    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);	  	compilable	  [FE]  AssertionFailedError  	5	2	add
38	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]      rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  rule  =  selectNumberRule(Calendar.MONTH,  tokenLen);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	add	        rule    =    selectNumberRule(Calendar.YEAR,    tokenLen);    rule  =  selectNumberRule(Calendar.MONTH,  tokenLen);	  	compilable	  [FE]  AssertionFailedError  	5	2	add
39	[BUG]  [BUGGY]      rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  rule  =  selectNumberRule(Calendar.MONTH,  tokenLen);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]      rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  rule  =  selectNumberRule(Calendar.MONTH,  tokenLen);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	        rule    =    selectNumberRule(Calendar.YEAR,    tokenLen);    rule  =  selectNumberRule(Calendar.MONTH,  tokenLen);	  	compilable	  [FE]  AssertionFailedError  	5	2	add
40	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]      rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	add	        rule    =    selectNumberRule(Calendar.YEAR,    tokenLen);    rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);	  	compilable	  [FE]  AssertionFailedError  	5	2	add
41	[BUG]  [BUGGY]      rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]      rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	        rule    =    selectNumberRule(Calendar.YEAR,    tokenLen);    rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);	  	compilable	  [FE]  AssertionFailedError  	5	2	add
42	[BUG]  [BUGGY]      rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  rule  =  SelectNumberRule(Calendar.YEAR,  tokenLen);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]      rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  rule  =  SelectNumberRule(Calendar.YEAR,  tokenLen);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	        rule    =    selectNumberRule(Calendar.YEAR,    tokenLen);    rule  =  SelectNumberRule(Calendar.YEAR,  tokenLen);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
43	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]      rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	add	        rule    =    selectNumberRule(Calendar.YEAR,    tokenLen);    rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);	  	compilable	  [FE]  AssertionFailedError  	5	2	add
44	[BUG]  [BUGGY]      rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]      rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	        rule    =    selectNumberRule(Calendar.YEAR,    tokenLen);    rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);	  	compilable	  [FE]  AssertionFailedError  	5	2	add
45	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.MONTH,  tokenLen  +  1);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	add	rule  =  selectNumberRule(Calendar.MONTH,  tokenLen  +  1);	      rule    =    selectNumberRule(Calendar.MONTH,    tokenLen);    	compilable	  [FE]  AssertionFailedError  	2	2	replace
46	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.MONTH,  tokenLen  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.MONTH,  tokenLen  +  1);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	rule  =  selectNumberRule(Calendar.MONTH,  tokenLen  +  1);	      rule    =    selectNumberRule(Calendar.MONTH,    tokenLen);    	compilable	  [FE]  AssertionFailedError  	2	2	replace
47	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.MONTH,  tokenLen  -  1);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	add	rule  =  selectNumberRule(Calendar.MONTH,  tokenLen  -  1);	      rule    =    selectNumberRule(Calendar.MONTH,    tokenLen);    	compilable	  [FE]  AssertionFailedError  	2	2	replace
48	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.MONTH,  tokenLen  -  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.MONTH,  tokenLen  -  1);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	rule  =  selectNumberRule(Calendar.MONTH,  tokenLen  -  1);	      rule    =    selectNumberRule(Calendar.MONTH,    tokenLen);    	compilable	  [FE]  AssertionFailedError  	2	2	replace
49	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]      rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen);  rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	add	        rule    =    selectNumberRule(Calendar.MILLISECOND,    tokenLen);    rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen);	  	compilable	  [FE]  AssertionFailedError  	3	2	add
50	[BUG]  [BUGGY]      rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen);  rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]      rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen);  rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	        rule    =    selectNumberRule(Calendar.MILLISECOND,    tokenLen);    rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen);	  	compilable	  [FE]  AssertionFailedError  	3	2	add
51	[BUG]  [BUGGY]      rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen);  rule  =  SelectNumberRule(Calendar.MILLISECOND,  tokenLen);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]      rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen);  rule  =  SelectNumberRule(Calendar.MILLISECOND,  tokenLen);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	        rule    =    selectNumberRule(Calendar.MILLISECOND,    tokenLen);    rule  =  SelectNumberRule(Calendar.MILLISECOND,  tokenLen);	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
52	[BUG]  [BUGGY]      rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen);  Rule  rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen);  [CE]  variable  rule  is  already  defined  in  method  parsePattern()  [FE]        AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]      rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen);  Rule  rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	        rule    =    selectNumberRule(Calendar.MILLISECOND,    tokenLen);    Rule  rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen);	  	non-compiled	[CE]  variable  rule  is  already  defined  in  method  parsePattern()	3	None	add
53	[BUG]  [BUGGY]      rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen);  rule  =  selectionNumberRule(Calendar.MILLISECOND,  tokenLen);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]      rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen);  rule  =  selectionNumberRule(Calendar.MILLISECOND,  tokenLen);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	        rule    =    selectNumberRule(Calendar.MILLISECOND,    tokenLen);    rule  =  selectionNumberRule(Calendar.MILLISECOND,  tokenLen);	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
54	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  -  1);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	add	rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  -  1);	      rule    =    selectNumberRule(Calendar.YEAR,    tokenLen);    	compilable	  [FE]  AssertionFailedError  	6	2	replace
55	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  -  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  -  1);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  -  1);	      rule    =    selectNumberRule(Calendar.YEAR,    tokenLen);    	compilable	  [FE]  AssertionFailedError  	6	2	replace
56	[BUG]  [BUGGY]      rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  Rule  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  [CE]  variable  rule  is  already  defined  in  method  parsePattern()  [FE]    AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]      rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  Rule  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	        rule    =    selectNumberRule(Calendar.YEAR,    tokenLen);    Rule  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);	  	non-compiled	[CE]  variable  rule  is  already  defined  in  method  parsePattern()	5	None	add
57	[BUG]  [BUGGY]      rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  rule  =  selectionNumberRule(Calendar.YEAR,  tokenLen);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]      rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  rule  =  selectionNumberRule(Calendar.YEAR,  tokenLen);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	        rule    =    selectNumberRule(Calendar.YEAR,    tokenLen);    rule  =  selectionNumberRule(Calendar.YEAR,  tokenLen);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
58	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.MONTH,  tokenLen)+  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]    AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.MONTH,  tokenLen)+  1;  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	rule  =  selectNumberRule(Calendar.MONTH,  tokenLen)+  1;	      rule    =    selectNumberRule(Calendar.MONTH,    tokenLen);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	2	None	replace
59	[BUG]  [BUGGY]  rule  =  new  TextField(Calendar.MONTH,  tokenLen);  [CE]  constructor  TextField  in  class  TextField  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  new  TextField(Calendar.MONTH,  tokenLen);  [BUGGY]    }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	rule  =  new  TextField(Calendar.MONTH,  tokenLen);	  rule    =    new    TextField(Calendar.MONTH,    shortMonths);    	non-compiled	[CE]  constructor  TextField  in  class  TextField  cannot  be  applied  to  given  types;	12	None	replace
60	[BUG]  [BUGGY]  int  months  =  selectNumberRule(Calendar.MONTH,  0,  tokenLen);  [CE]  variable  months  is  already  defined  in  method  parsePattern()  [FE]        AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  int  months  =  selectNumberRule(Calendar.MONTH,  0,  tokenLen);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	int  months  =  selectNumberRule(Calendar.MONTH,  0,  tokenLen);	      int    months    =    selectNumberRule(Calendar.MONTH,    tokenLen);    	non-compiled	[CE]  variable  months  is  already  defined  in  method  parsePattern()	17	None	replace
61	[BUG]  [BUGGY]  rule  =  SelectNumberRule(Calendar.MONTH,  tokenLen  -  1);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  SelectNumberRule(Calendar.MONTH,  tokenLen  -  1);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	rule  =  SelectNumberRule(Calendar.MONTH,  tokenLen  -  1);	      rule    =    SelectNumberRule(Calendar.MONTH,    tokenLen);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
62	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.MONTH_OF_MONTH,  tokenLen);  [CE]  cannot  find  symbol  MONTH_OF_MONTH  [FE]              AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.MONTH_OF_MONTH,  tokenLen);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	rule  =  selectNumberRule(Calendar.MONTH_OF_MONTH,  tokenLen);	      rule    =    selectNumberRule(Calendar.MILLIS,    tokenLen);    	non-compiled	[CE]  cannot  find  symbol  MONTH_OF_MONTH	7	None	replace
63	[BUG]  [BUGGY]  int  months  =  Math.min(mValues.length,  12);  [CE]  variable  months  is  already  defined  in  method  parsePattern()  [FE]          AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  int  months  =  Math.min(mValues.length,  12);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	int  months  =  Math.min(mValues.length,  12);	      int    months    =    Math.min(mValues.length,    tokenLen);    	non-compiled	[CE]  variable  months  is  already  defined  in  method  parsePattern()	18	None	replace
64	[BUG]  [BUGGY]  int  months  =  Math.min(mValues.length,  month);  [CE]  variable  months  is  already  defined  in  method  parsePattern()  [FE]            AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  int  months  =  Math.min(mValues.length,  month);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	int  months  =  Math.min(mValues.length,  month);	      int    months    =    Math.min(mValues.length,    tokenLen);    	non-compiled	[CE]  variable  months  is  already  defined  in  method  parsePattern()	18	None	replace
65	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]      rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen);  rule  =  selectNumberRule(Calendar.MINUTE,  tokenLen);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	add	        rule    =    selectNumberRule(Calendar.MILLISECOND,    tokenLen);    rule  =  selectNumberRule(Calendar.MINUTE,  tokenLen);	  	compilable	  [FE]  AssertionFailedError  	3	2	add
66	[BUG]  [BUGGY]      rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen);  rule  =  selectNumberRule(Calendar.MINUTE,  tokenLen);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]      rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen);  rule  =  selectNumberRule(Calendar.MINUTE,  tokenLen);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	        rule    =    selectNumberRule(Calendar.MILLISECOND,    tokenLen);    rule  =  selectNumberRule(Calendar.MINUTE,  tokenLen);	  	compilable	  [FE]  AssertionFailedError  	3	2	add
67	[BUG]  [BUGGY]  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  rule  =  new  TextField(Calendar.MonH,  shortMonths);  [CE]  cannot  find  symbol  MonH  [FE]    AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  rule  =  new  TextField(Calendar.MonH,  shortMonths);  [BUGGY]    }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	rule    =    new    TextField(Calendar.MONTH,    shortMonths);    rule  =  new  TextField(Calendar.MonH,  shortMonths);	  	non-compiled	[CE]  cannot  find  symbol  MonH	11	None	add
68	[BUG]  [BUGGY]  int  months  =  Math.min(mValues.length,  text.length);  [CE]  variable  months  is  already  defined  in  method  parsePattern()  [FE]          AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  int  months  =  Math.min(mValues.length,  text.length);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	int  months  =  Math.min(mValues.length,  text.length);	      int    months    =    Math.min(mValues.length,    tokenLen);    	non-compiled	[CE]  variable  months  is  already  defined  in  method  parsePattern()	18	None	replace
69	[BUG]  [BUGGY]  int  months  =  Math.min(mValues.length,  word);  [CE]  variable  months  is  already  defined  in  method  parsePattern()  [FE]            AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  int  months  =  Math.min(mValues.length,  word);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	int  months  =  Math.min(mValues.length,  word);	      int    months    =    Math.min(mValues.length,    tokenLen);    	non-compiled	[CE]  variable  months  is  already  defined  in  method  parsePattern()	18	None	replace
70	[BUG]  [BUGGY]  int  months  =  Math.min(mValues.length,  wordLen);  [CE]  variable  months  is  already  defined  in  method  parsePattern()  [FE]              AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  int  months  =  Math.min(mValues.length,  wordLen);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	int  months  =  Math.min(mValues.length,  wordLen);	      int    months    =    Math.min(mValues.length,    tokenLen);    	non-compiled	[CE]  variable  months  is  already  defined  in  method  parsePattern()	18	None	replace
71	[BUG]  [BUGGY]      rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen);  rule  =  selectNumberRule(Calendar.MINUTECOND,  tokenLen);  [CE]  cannot  find  symbol  MINUTECOND  [FE]    AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]      rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen);  rule  =  selectNumberRule(Calendar.MINUTECOND,  tokenLen);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	        rule    =    selectNumberRule(Calendar.MILLISECOND,    tokenLen);    rule  =  selectNumberRule(Calendar.MINUTECOND,  tokenLen);	  	non-compiled	[CE]  cannot  find  symbol  MINUTECOND	3	None	add
72	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.MONTH,  shortMonths);  [CE]  method  selectNumberRule  in  class  FastDateFormat  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.MONTH,  shortMonths);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	rule  =  selectNumberRule(Calendar.MONTH,  shortMonths);	      rule    =    selectNumberRule(Calendar.MONTH,    month);    	non-compiled	[CE]  method  selectNumberRule  in  class  FastDateFormat  cannot  be  applied  to  given  types;	8	None	replace
73	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.MONTH,  year);  [CE]  cannot  find  symbol  year  [FE]                  AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.MONTH,  year);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	rule  =  selectNumberRule(Calendar.MONTH,  year);	      rule    =    selectNumberRule(Calendar.MONTH,    month);    	non-compiled	[CE]  cannot  find  symbol  year	8	None	replace
74	[BUG]  [BUGGY]  rule  =  SelectNumberRule(Calendar.MONTH,  months);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  SelectNumberRule(Calendar.MONTH,  months);  [BUGGY]    rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	1.0	620	620	2	replace	rule  =  SelectNumberRule(Calendar.MONTH,  months);	      rule    =    SelectNumberRule(Calendar.MONTH,    tokenLen);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
