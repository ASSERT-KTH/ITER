projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewUnpaddedNumberField(field);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewUnpaddedNumberField(field,padding);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewDoubleDigitNumberField(field);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewSimpleDateFormatField(field);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewUnpaddedNumberField(field,0);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772mRules.select(field,padding);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772mRules.selectNumberRule(field,padding);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772Integerfield=getField(field).intValue();
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772mRules.selectNumberRule(field);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772mRules.selectNumberRule(field,padding);break;
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772IntegercDateInstance=getChronology().selectNumberRule(field,padding);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772IntegercDateInstance=getChronology().selectNumberRule(field);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772Integerfield=mRules.get(padding);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772IntegercDateInstance=getCurrentInstance();
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772IntegercDateInstance=getChronology().select(field,padding);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewSingleDigitNumberField(field);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewShortDigitNumberField(field);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772if(mRules==null){for(inti=0,len=field.length();i<len;++i){Rulerule=getRule(i);if(rule!=null){thrownewIllegalArgumentException("");}
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772if(mRules==null){for(inti=0,len=field.length();i<len;++i){charpeek=padding[i];}
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772if(mRules==null){for(inti=0,len=field.length();i<len;++i){Rulerule=getRule(i);if(rule!=null){returnrule.selectNumberRule(
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772if(mRules==null){for(inti=0,len=field.length();i<len;++i){Rulerule=getRule(i);if(rule!=null){returnrule.selectNumberRule(field,padding);}
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772if(mRules==null){for(inti=0,len=field.length();i<len;++i){Rulerule=getRule(i);if(rule!=null){returnrule.selectNumberRule(field,padding
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewFastDateFormatField(field);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772mRules.select(field);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772mRules.selectNumber(field,padding);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772IntegercDateInstance=getChronology().select(field,1);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772IntegercDateInstance=getChronology().select(field,padding,0);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772IntegercDateInstance=getChronology().select(field,padding+1);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772IntegercDateInstance=getChronology().select(field,field+1);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewSimpleDateFormatField(field,padding);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772ReturnnewSimpleDateFormatField(field,padding);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewSimpleDateFormatField(field,0);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewSimpleDateFormatField(field,false);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772For(inti=0,len=field.length();i<len;++i){charpeek=padding[i];}
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772for(inti=0,len=field.length();i<len;++i){charpeek=padding[i];}
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772For(inti=0,len=field.length();i<len;++i){charpeek=padding[i];
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772For(inti=0,len=field.length();i<len;++i){charpeek=padding[0];}
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772mRules.selectNumberRule(field,padding+1);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772mRules.selectNumberRule(field,padding,1);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772mRules.selectNumberRule(field,padding,true);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewSingleDigitNumberField(field,padding);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewDoubleDigitNumberField(field,padding);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewSimpleDigitNumberField(field,padding);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772IntegercDateInstance=getChronology().selectNumberRule(padding);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772IntegercDateInstance=getChronology().selectNullRule(field);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772Integerfield=mRules.get(field);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772Integerfield=mRules.get(0);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772Integerfield=mRules.get(padding+1);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772Integerfield=mRules.getField(field);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewUnpaddedNumberField(field,1);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewUnpaddedNumberField(field,2);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772for(inti=0,len=field.length();i<len;++i){Rulerule=getRule(i);if(rule!=null){returnrule.selectNumberRule(field,padding
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772if(padding==0){for(inti=0,len=field.length();i<len;++i){Rulerule=getRule(i);if(rule!=null){returnrule.selectNumberRule(field,padding
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772if(field==null){for(inti=0,len=field.length();i<len;++i){Rulerule=getRule(i);if(rule!=null){returnrule.selectNumberRule(field,padding
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772if(padding==null){for(inti=0,len=field.length();i<len;++i){Rulerule=getRule(i);if(rule!=null){returnrule.selectNumberRule(field,padding
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772case1:returnnewTwoDigitNumberField(field);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772case2:returnnewTwoDigitNumberField(field);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772case1:returnnewDoubleDigitNumberField(field);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772case2:returnnewTwoDigitNumberField(field,padding);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewFastDateFormatField(field,padding);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewShortDateFormatField(field);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewFastDateFormatField(field,0);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewDoubleDigitNumberField(field,mMaxLengthEstimate);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewDoubleDigitNumberField(field,0);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewDoubleDigitNumberField(field,mMinLengthEstimate);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewShortDigitNumberField(field,padding);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewSHORTDigitNumberField(field);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewShortDigitNumberField(field,0);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewLongDigitNumberField(field);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772for(inti=0,len=field.length();i<len;++i){Rulerule=getRule(i);if(rule!=null){returnrule.selectNumberRule(field,padding);}
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772for(inti=0,len=field.length();i<len;++i){rule=getRule(i);if(rule!=null){returnrule.selectNumberRule(field,padding);}
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772for(inti=0,len=field.length();i<len;++i){Rulerule=getRule(i);if(rule==null){returnrule.selectNumberRule(field,padding);}
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772mRules.select(field,padding+1);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772mRules.select(field,padding,1);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772mRules.select(field,padding,true);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772mRules.select(field,padding,false);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772for(inti=0,len=field.length();i<len;++i){Rulerule=getRule(i);if(rule!=null){returnrule.selectNumberRule(
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772if(field==null){for(inti=0,len=field.length();i<len;++i){Rulerule=getRule(i);if(rule!=null){returnrule.selectNumberRule(
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772if(padding==0){for(inti=0,len=field.length();i<len;++i){Rulerule=getRule(i);if(rule!=null){returnrule.selectNumberRule
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772if(field!=null){for(inti=0,len=field.length();i<len;++i){Rulerule=getRule(i);if(rule!=null){returnrule.selectNumberRule(
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772IntegercDateInstance=getCurrentCharIndex();
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772IntegercDateInstance=getCurrentSecondInstance();
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772IntegercDateInstance=getCurrentEntry();
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772Integerfield=getField(field).intValue()+1;
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772Integerfield=getField(field).intValue()-1;
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772Integerfield=getField(field).intValue()+padding;
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewUnpaddedNumberField(field,padding+1);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewUnpaddedNumberField(field,mMaxLengthEstimate);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772mRules.selectNumberRule(field,padding+1);break;
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772rule.selectNumberRule(field,padding);break;
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772IntegercDateInstance=getChronology().selectNumberRule(field,padding+1);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772IntegercDateInstance=getChronology().selectNumberRule(field,1);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772IntegercDateInstance=getChronology().selectNumberRule(field,padding,0);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772IntegercDateInstance=getChronology().selectNumberRule(field,padding,1);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772for(inti=0,len=field.length();i<len;++i){Rulerule=getRule(i);if(rule!=null){thrownewIllegalArgumentException("");}
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772For(inti=0,len=field.length();i<len;++i){Rulerule=getRule(i);if(rule!=null){thrownewIllegalArgumentException("");}
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772for(inti=0,len=field.length();i<len;++i){Rulerule=getRule(i);if(rule==null){thrownewIllegalArgumentException("");}
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772for(inti=0,len=field.length();i<len;++i){Rulerule=getRule(i);if(rule!=null){thrownewIllegalArgumentException("".);}
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772for(inti=0,len=field.length();i<len;++i){Rulerule=getRule(i);if(rule!=null){thrownewIllegalArgumentException(".");}
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772if(field==0){for(inti=0,len=field.length();i<len;++i){Rulerule=getRule(i);if(rule!=null){returnrule.selectNumberRule(field,padding
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772if(field<0){for(inti=0,len=field.length();i<len;++i){Rulerule=getRule(i);if(rule!=null){returnrule.selectNumberRule(field,padding
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772if(field!=0){for(inti=0,len=field.length();i<len;++i){Rulerule=getRule(i);if(rule!=null){returnrule.selectNumberRule(field,padding
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772mRules.selectNumberRule(field,1);break;
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewFastDateFormatField(field,false);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772IntegercDateInstance=getChronology().selectNumberRule(field,4);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewSelectNumberRule(field,padding);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772mRules.selectNumberRule(field,1);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772mRules.selectNumberRule(field,field);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewSingleDigitNumberField(field,0);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewSimpleDigitNumberField(field);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772for(inti=0,len=field.length();i<len;++i){Rulerule=getRule(i);if(rule!=null){returnrule.selectNumberRule
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772IntegercDateInstance=getCurrentIndex();
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewUnpaddedNumberField(field,0L);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772IntegercDateInstance=getChronology().selectNumber(field,padding);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772if(field==0){for(inti=0,len=field.length();i<len;++i){Rulerule=getRule(i);if(rule!=null){returnrule.selectNumberRule(
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772if(field!=0){for(inti=0,len=field.length();i<len;++i){Rulerule=getRule(i);if(rule!=null){returnrule.selectNumberRule(
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772if(field==0){for(inti=0,len=field.length();i<len;++i){Rulerule=getRule(i);if(rule!=null){returnrule.selectNumberRule
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772Integerfield=getField(1).intValue();
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewDoubleDigitNumberField(field,false);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772if(padding==null){for(inti=0,len=field.length();i<len;++i){charpeek=padding[i];}
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772if(padding!=null){for(inti=0,len=field.length();i<len;++i){charpeek=padding[i];}
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772if(padding==null){for(inti=0,len=field.length();i<len;++i){charpeek=padding[0];}
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewSimpleDateFormatField(field,true);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772IntegercDateInstance=getChronology().select(field,4);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772mRules.select(field,field);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772mRules.select(field,1);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772mRules.select(field,null);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772Integerfield=mRules.get(this.timeZone);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772IntegercDateInstance=getCurrentCharacterInstance();
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772IntegercDateInstance=getCurrentInstance(field);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772case2:returnnewDoubleDigitNumberField(field);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772if(mRules!=null){for(inti=0,len=field.length();i<len;++i){Rulerule=getRule(i);if(rule!=null){returnrule.selectNumberRule(
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772if(mRules!=null){for(inti=0,len=field.length();i<len;++i){rule=getRule(i);if(rule!=null){returnrule.selectNumberRule(
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772if(field!=null){for(inti=0,len=field.length();i<len;++i){rule=getRule(i);if(rule!=null){returnrule.selectNumberRule(
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewFastDateFormatField(field,mMaxLengthEstimate);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewFastDateFormatField(field,mRules);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772if(padding==null){for(inti=0,len=field.length();i<len;++i){peek=padding[i];}
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772Integerfield=mRules.get(padding-1);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772Integerfield=mRules.remove(padding);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772if(field!=null){for(inti=0,len=field.length();i<len;++i){Rulerule=getRule(i);if(rule!=null){returnrule.selectNumberRule(field,padding);}
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772if(field!=null){for(inti=0,len=field.length();i<len;++i){rule=getRule(i);if(rule!=null){returnrule.selectNumberRule(field,padding);}
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772if(field!=null){for(inti=0,len=field.length();i<len;++i){Rulerule=getRule(i);if(rule!=null){returnrule.selectNumberRule(field,padding
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772if(field!=null){for(inti=0,len=field.length();i<len;++i){Rulerule=getRule(i);if(rule!=null){thrownewIllegalArgumentException("");}
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772if(padding>0){for(inti=0,len=field.length();i<len;++i){Rulerule=getRule(i);if(rule!=null){thrownewIllegalArgumentException("");}
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewSimpleDateFormatField(field,mMaxLengthEstimate);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewSimpleDateFormatField(field,mRules);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewSimpleDateFormatField(field,mMinLengthEstimate);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772mRules.selectPattern(field);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772if(mRules!=null){mRules.selectNumberRule(field,padding);break;}
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772mRules.selectNumberRule(field,padding,0);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772mRules.selectNumberRule(field,padding,false);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewShortDigitYearField(field);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772if(mRules!=null){for(inti=0,len=field.length();i<len;++i){Rulerule=getRule(i);if(rule!=null){returnrule.selectNumberRule(field,padding
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewUnpaddedNumberField(field,padding-1);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772returnnewUnpaddedNumberField(field,mRules);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772mRules.select(field,padding,null);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772IntegercDateInstance=getChronology().select(field,3);
projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java772IntegercDateInstance=getChronology().selectPattern(field);
