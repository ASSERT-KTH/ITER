bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  mRules.select(field,  padding,  false,  true);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.select(field,  padding,  false,  true);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.select(field,  padding,  false,  true);	  mRules.select(field,    padding,    false);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
2	[BUG]  [BUGGY]  return  new  FastDateFormatField(field,  padding  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  FastDateFormatField(field,  padding  +  1);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  FastDateFormatField(field,  padding  +  1);	  return    new    FastDateFormatField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
3	[BUG]  [BUGGY]  return  new  FastDateFormatField(field,  padding,  0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  FastDateFormatField(field,  padding,  0);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  FastDateFormatField(field,  padding,  0);	  return    new    FastDateFormatField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
4	[BUG]  [BUGGY]  return  new  FastDateFormatField(field,  padding,  mMaxLengthEstimate);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  FastDateFormatField(field,  padding,  mMaxLengthEstimate);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  FastDateFormatField(field,  padding,  mMaxLengthEstimate);	  return    new    FastDateFormatField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
5	[BUG]  [BUGGY]  Integer  field  =  mRules.get(this.timeZone,  padding);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  field  =  mRules.get(this.timeZone,  padding);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  mRules.get(this.timeZone,  padding);	  Integer    field    =    mRules.get(this.timeZone);    	non-compiled	[CE]  <identifier>  expected	105	None	replace
6	[BUG]  [BUGGY]  return  new  UnpaddedNumberField(field,  padding  +  2);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  UnpaddedNumberField(field,  padding  +  2);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  UnpaddedNumberField(field,  padding  +  2);	  return    new    UnpaddedNumberField(field,    padding    +    1);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
7	[BUG]  [BUGGY]  return  new  UnpaddedNumberField(field,  padding  +  3);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  UnpaddedNumberField(field,  padding  +  3);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  UnpaddedNumberField(field,  padding  +  3);	  return    new    UnpaddedNumberField(field,    padding    +    1);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
8	[BUG]  [BUGGY]  case  2:  return  new  ThreeDigitNumberField(field,  padding);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  case  2:  return  new  ThreeDigitNumberField(field,  padding);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	case  2:  return  new  ThreeDigitNumberField(field,  padding);	  case    2:    return    new    TwoDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
9	[BUG]  [BUGGY]  Integer  field  =  mRules.get(0,  padding);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  field  =  mRules.get(0,  padding);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  mRules.get(0,  padding);	  Integer    field    =    mRules.get(0);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
10	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().select(field,  0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getChronology().select(field,  0);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().select(field,  0);	  Integer    cDateInstance    =    getChronology().select(field,    1);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
11	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().select(field,  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getChronology().select(field,  2);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().select(field,  2);	  Integer    cDateInstance    =    getChronology().select(field,    1);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
12	[BUG]  [BUGGY]  return  new  LongDigitNumberField(field,  padding);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  LongDigitNumberField(field,  padding);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  LongDigitNumberField(field,  padding);	  return    new    LongDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
13	[BUG]  [BUGGY]  return  new  LongDigitNumberField(field,  0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  LongDigitNumberField(field,  0);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  LongDigitNumberField(field,  0);	  return    new    LongDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
14	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  String  peek  =  padding[i];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  String  peek  =  padding[i];  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  String  peek  =  padding[i];  }	  if(padding    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[i];    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
15	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( " ".   ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( " ".   ");  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( " ".   ");  }	  for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    throw    new    IllegalArgumentException(   ".   ");    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
16	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }	  for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    throw    new    IllegalArgumentException(   ".   ");    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
17	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( ". ");  }	  for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    throw    new    IllegalArgumentException(   ".   ");    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
18	[BUG]  [BUGGY]  mRules.select(field,  0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.select(field,  0);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.select(field,  0);	  mRules.select(field,    1);    	non-compiled	[CE]  <identifier>  expected	103	None	replace
19	[BUG]  [BUGGY]  mRules.select(field,  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.select(field,  2);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.select(field,  2);	  mRules.select(field,    1);    	non-compiled	[CE]  <identifier>  expected	103	None	replace
20	[BUG]  [BUGGY]  return  new  SimpleDateFormatField(field,  padding  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SimpleDateFormatField(field,  padding  +  1);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SimpleDateFormatField(field,  padding  +  1);	  return    new    SimpleDateFormatField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
21	[BUG]  [BUGGY]  return  new  SimpleDateFormatField(field,  padding,  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SimpleDateFormatField(field,  padding,  0);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SimpleDateFormatField(field,  padding,  0);	  return    new    SimpleDateFormatField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
22	[BUG]  [BUGGY]  return  new  SimpleDateFormatField(field,  padding,  false);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SimpleDateFormatField(field,  padding,  false);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SimpleDateFormatField(field,  padding,  false);	  return    new    SimpleDateFormatField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
23	[BUG]  [BUGGY]  Return  new  UnpaddedNumberField(field,  padding);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Return  new  UnpaddedNumberField(field,  padding);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Return  new  UnpaddedNumberField(field,  padding);	  return    new    UnpaddedNumberField(field,    mMaxLengthEstimate);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
24	[BUG]  [BUGGY]  return  new  UnpaddedNumberField(field,  mMinLengthEstimate);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  UnpaddedNumberField(field,  mMinLengthEstimate);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  UnpaddedNumberField(field,  mMinLengthEstimate);	  return    new    UnpaddedNumberField(field,    mMaxLengthEstimate);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
25	[BUG]  [BUGGY]  Return  new  DoubleDigitNumberField(field,  padding);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Return  new  DoubleDigitNumberField(field,  padding);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Return  new  DoubleDigitNumberField(field,  padding);	  return    new    DoubleDigitNumberField(field,    mMinLengthEstimate);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
26	[BUG]  [BUGGY]  if(mRules!=  null)  {  return  new  FastDateFormatField(field,  mRules);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(mRules!=  null)  {  return  new  FastDateFormatField(field,  mRules);  }  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(mRules!=  null)  {  return  new  FastDateFormatField(field,  mRules);  }	  return    new    FastDateFormatField(field,    mRules);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
27	[BUG]  [BUGGY]  if(mRules!=  null)  {  return  new  FastDateFormatField(field,  mRules);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(mRules!=  null)  {  return  new  FastDateFormatField(field,  mRules);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(mRules!=  null)  {  return  new  FastDateFormatField(field,  mRules);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    new    FastDateFormatField(field,    mRules);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
28	[BUG]  [BUGGY]  return  new  FastDateFormatField(field,  mRules,  padding);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  FastDateFormatField(field,  mRules,  padding);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  FastDateFormatField(field,  mRules,  padding);	  return    new    FastDateFormatField(field,    mRules);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
29	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().select(field,  padding  *  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getChronology().select(field,  padding  *  1);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().select(field,  padding  *  1);	  Integer    cDateInstance    =    getChronology().select(field,    padding    +    1);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
30	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().select(field,  padding  +  2);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getChronology().select(field,  padding  +  2);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().select(field,  padding  +  2);	  Integer    cDateInstance    =    getChronology().select(field,    padding    +    1);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
31	[BUG]  [BUGGY]  case  2:  return  new  DoubleDigitNumberField(field,  padding);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  case  2:  return  new  DoubleDigitNumberField(field,  padding);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	case  2:  return  new  DoubleDigitNumberField(field,  padding);	  case    2:    return    new    DoubleDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
32	[BUG]  [BUGGY]  case  3:  return  new  DoubleDigitNumberField(field);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  case  3:  return  new  DoubleDigitNumberField(field);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	case  3:  return  new  DoubleDigitNumberField(field);	  case    2:    return    new    DoubleDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
33	[BUG]  [BUGGY]  case  2:  return  new  NumberDigitNumberField(field,  padding);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  case  2:  return  new  NumberDigitNumberField(field,  padding);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	case  2:  return  new  NumberDigitNumberField(field,  padding);	  case    2:    return    new    DoubleDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
34	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().select(padding,  field  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getChronology().select(padding,  field  +  1);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().select(padding,  field  +  1);	  Integer    cDateInstance    =    getChronology().select(field,    field    +    1);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
35	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().set(field,  padding  +  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getChronology().set(field,  padding  +  1);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().set(field,  padding  +  1);	  Integer    cDateInstance    =    getChronology().select(field,    field    +    1);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
36	[BUG]  [BUGGY]  return  new  SimpleDateFormatField(field,  null);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SimpleDateFormatField(field,  null);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SimpleDateFormatField(field,  null);	  return    new    SimpleDateFormatField(field,    true);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
37	[BUG]  [BUGGY]  Return  new  SimpleDateFormatField(field,  false);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Return  new  SimpleDateFormatField(field,  false);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Return  new  SimpleDateFormatField(field,  false);	  return    new    SimpleDateFormatField(field,    true);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
38	[BUG]  [BUGGY]  mRules.selectPatternRule(field,  padding,  true);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.selectPatternRule(field,  padding,  true);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectPatternRule(field,  padding,  true);	  mRules.selectNumberRule(field,    padding,    true);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
39	[BUG]  [BUGGY]  mRules.selectNullRule(field,  padding,  true);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.selectNullRule(field,  padding,  true);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNullRule(field,  padding,  true);	  mRules.selectNumberRule(field,    padding,    true);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
40	[BUG]  [BUGGY]  Integer  cDateInstance  =  getCurrentCharacterInstance(padding);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getCurrentCharacterInstance(padding);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getCurrentCharacterInstance(padding);	  Integer    cDateInstance    =    getCurrentCharacterInstance();    	non-compiled	[CE]  <identifier>  expected	106	None	replace
41	[BUG]  [BUGGY]  Integer  cDateInstance  =  getCurrentCharacterInstance(field);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getCurrentCharacterInstance(field);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getCurrentCharacterInstance(field);	  Integer    cDateInstance    =    getCurrentCharacterInstance();    	non-compiled	[CE]  <identifier>  expected	106	None	replace
42	[BUG]  [BUGGY]  mRules.select(padding);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.select(padding);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.select(padding);	  mRules.select(field);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
43	[BUG]  [BUGGY]  mRules.select(0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.select(0);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.select(0);	  mRules.select(field);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
44	[BUG]  [BUGGY]  return  new  FastDateFormatField(field,  true);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  FastDateFormatField(field,  true);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  FastDateFormatField(field,  true);	  return    new    FastDateFormatField(field,    false);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
45	[BUG]  [BUGGY]  return  new  FastDateFormatField(field,  false,  padding);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  FastDateFormatField(field,  false,  padding);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  FastDateFormatField(field,  false,  padding);	  return    new    FastDateFormatField(field,    false);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
46	[BUG]  [BUGGY]  return  new  FastDateFormatField(field,  null);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  FastDateFormatField(field,  null);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  FastDateFormatField(field,  null);	  return    new    FastDateFormatField(field,    false);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
47	[BUG]  [BUGGY]  Integer  field  =  getField(1).intValue()  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  field  =  getField(1).intValue()  +  1;  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  getField(1).intValue()  +  1;	  Integer    field    =    getField(1).intValue();    	non-compiled	[CE]  <identifier>  expected	95	None	replace
48	[BUG]  [BUGGY]  Integer  field  =  getField(2).intValue();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  field  =  getField(2).intValue();  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  getField(2).intValue();	  Integer    field    =    getField(1).intValue();    	non-compiled	[CE]  <identifier>  expected	95	None	replace
49	[BUG]  [BUGGY]  Integer  field  =  getField(1).intValue()  -  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  field  =  getField(1).intValue()  -  1;  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  getField(1).intValue()  -  1;	  Integer    field    =    getField(1).intValue();    	non-compiled	[CE]  <identifier>  expected	95	None	replace
50	[BUG]  [BUGGY]  Return  new  FastDateFormatField(field,  padding);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Return  new  FastDateFormatField(field,  padding);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Return  new  FastDateFormatField(field,  padding);	  return    new    FastDateFormatField(field,    mMaxLengthEstimate);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
51	[BUG]  [BUGGY]  mRules.select(padding,  field);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.select(padding,  field);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.select(padding,  field);	  mRules.select(field,    field);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
52	[BUG]  [BUGGY]  rule[0].select(field,  padding);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  rule[0].select(field,  padding);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	rule[0].select(field,  padding);	  mRules.select(field,    field);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
53	[BUG]  [BUGGY]  rule.select(field,  padding);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  rule.select(field,  padding);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	rule.select(field,  padding);	  mRules.select(field,    field);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
54	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  }	  for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding    	non-compiled	[CE]  <identifier>  expected	29	None	replace
55	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule  ==  null)  {  return  rule.selectNumberRule(field,  padding  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule  ==  null)  {  return  rule.selectNumberRule(field,  padding  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule  ==  null)  {  return  rule.selectNumberRule(field,  padding	  for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding    	non-compiled	[CE]  <identifier>  expected	29	None	replace
56	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding	  for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding    	non-compiled	[CE]  <identifier>  expected	29	None	replace
57	[BUG]  [BUGGY]  Integer  field  =  mRules.get(field  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  field  =  mRules.get(field  +  1);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  mRules.get(field  +  1);	  Integer    field    =    mRules.get(padding    +    1);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
58	[BUG]  [BUGGY]  Integer  field  =  mRules.get(padding  +  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  field  =  mRules.get(padding  +  2);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  mRules.get(padding  +  2);	  Integer    field    =    mRules.get(padding    +    1);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
59	[BUG]  [BUGGY]  return  new  SelectNumberRule(field,  padding,  0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SelectNumberRule(field,  padding,  0);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SelectNumberRule(field,  padding,  0);	  return    new    SelectNumberRule(field,    padding);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
60	[BUG]  [BUGGY]  return  new  SelectNumberRule(field,  padding  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SelectNumberRule(field,  padding  +  1);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SelectNumberRule(field,  padding  +  1);	  return    new    SelectNumberRule(field,    padding);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
61	[BUG]  [BUGGY]  return  new  SelectNumberRule(field,  padding,  mMaxLengthEstimate);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SelectNumberRule(field,  padding,  mMaxLengthEstimate);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SelectNumberRule(field,  padding,  mMaxLengthEstimate);	  return    new    SelectNumberRule(field,    padding);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
62	[BUG]  [BUGGY]  return  new  SelectNumberRule(field,  padding,  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SelectNumberRule(field,  padding,  1);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SelectNumberRule(field,  padding,  1);	  return    new    SelectNumberRule(field,    padding);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
63	[BUG]  [BUGGY]  mRules.selectPosition(field,  padding);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.selectPosition(field,  padding);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectPosition(field,  padding);	  mRules.selectNumberRule(field,    field);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
64	[BUG]  [BUGGY]  mRules.selectNullRule(field,  padding);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.selectNullRule(field,  padding);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNullRule(field,  padding);	  mRules.selectNumberRule(field,    field);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
65	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field);  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field);  }	  for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule    	non-compiled	[CE]  <identifier>  expected	88	None	replace
66	[BUG]  [BUGGY]  parent.selectNumberRule(field,  padding);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  parent.selectNumberRule(field,  padding);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	parent.selectNumberRule(field,  padding);	  if(field!=    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
67	[BUG]  [BUGGY]  Integer  i  =  getRule(i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  i  =  getRule(i);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  i  =  getRule(i);	  if(field!=    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
68	[BUG]  [BUGGY]  Integer  field  =  getField(i);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  field  =  getField(i);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  getField(i);	  if(field!=    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
69	[BUG]  [BUGGY]  vice.select(field,  padding);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  vice.select(field,  padding);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	vice.select(field,  padding);	  if(field!=    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
70	[BUG]  [BUGGY]  if(padding  <  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(padding  <  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding  <  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding	  if(field    <    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding    	non-compiled	[CE]  <identifier>  expected	78	None	replace
71	[BUG]  [BUGGY]  if(padding  >  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(padding  >  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding  >  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding	  if(field    <    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding    	non-compiled	[CE]  <identifier>  expected	78	None	replace
72	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule  ==  null)  {  return  rule.selectNumberRule(field,  padding);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule  ==  null)  {  return  rule.selectNumberRule(field,  padding);  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule  ==  null)  {  return  rule.selectNumberRule(field,  padding);  }	  for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule    ==    null)    {    return    rule.selectNumberRule(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
73	[BUG]  [BUGGY]  if(mRules!=  null)  {  return  new  UnpaddedNumberField(field,  mRules);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(mRules!=  null)  {  return  new  UnpaddedNumberField(field,  mRules);  }  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(mRules!=  null)  {  return  new  UnpaddedNumberField(field,  mRules);  }	  return    new    UnpaddedNumberField(field,    mRules);    	non-compiled	[CE]  <identifier>  expected	132	None	replace
74	[BUG]  [BUGGY]  if(mRules!=  null)  {  return  new  UnpaddedNumberField(field,  mRules);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(mRules!=  null)  {  return  new  UnpaddedNumberField(field,  mRules);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(mRules!=  null)  {  return  new  UnpaddedNumberField(field,  mRules);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    new    UnpaddedNumberField(field,    mRules);    	non-compiled	[CE]  <identifier>  expected	132	None	replace
75	[BUG]  [BUGGY]  if(mRules!=  null)  {  return  new  UnpaddedNumberField(field,  padding);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(mRules!=  null)  {  return  new  UnpaddedNumberField(field,  padding);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(mRules!=  null)  {  return  new  UnpaddedNumberField(field,  padding);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    new    UnpaddedNumberField(field,    mRules);    	non-compiled	[CE]  <identifier>  expected	132	None	replace
76	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule  ==  null)  {  return  rule.selectNumberRule(field,  padding);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule  ==  null)  {  return  rule.selectNumberRule(field,  padding);  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule  ==  null)  {  return  rule.selectNumberRule(field,  padding);  }	  for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
77	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }	  for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
78	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  fields.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  for(int  i  =  0,  len  =  fields.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	for(int  i  =  0,  len  =  fields.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }	  for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
79	[BUG]  [BUGGY]  Return  new  SimpleDateFormatField(field,  padding  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Return  new  SimpleDateFormatField(field,  padding  +  1);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Return  new  SimpleDateFormatField(field,  padding  +  1);	  Return    new    SimpleDateFormatField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
80	[BUG]  [BUGGY]  return  new  SimpleDateFormatField(field,  padding,  mMaxLengthEstimate);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SimpleDateFormatField(field,  padding,  mMaxLengthEstimate);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SimpleDateFormatField(field,  padding,  mMaxLengthEstimate);	  Return    new    SimpleDateFormatField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
81	[BUG]  [BUGGY]  return  new  DoubleDigitNumberField(field,  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  DoubleDigitNumberField(field,  1);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  DoubleDigitNumberField(field,  1);	  return    new    DoubleDigitNumberField(field,    0);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
82	[BUG]  [BUGGY]  return  new  DoubleDigitNumberField(field,  0L);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  DoubleDigitNumberField(field,  0L);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  DoubleDigitNumberField(field,  0L);	  return    new    DoubleDigitNumberField(field,    0);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
83	[BUG]  [BUGGY]  mRules.selectNumber(field,  padding  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.selectNumber(field,  padding  +  1);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNumber(field,  padding  +  1);	  mRules.selectNumber(field,    padding);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
84	[BUG]  [BUGGY]  mRules.selectNumber(field,  padding,  true);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.selectNumber(field,  padding,  true);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNumber(field,  padding,  true);	  mRules.selectNumber(field,    padding);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
85	[BUG]  [BUGGY]  mRules.selectNumber(field,  padding,  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.selectNumber(field,  padding,  1);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNumber(field,  padding,  1);	  mRules.selectNumber(field,    padding);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
86	[BUG]  [BUGGY]  mRules.selectNumber(field,  padding,  false);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.selectNumber(field,  padding,  false);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNumber(field,  padding,  false);	  mRules.selectNumber(field,    padding);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
87	[BUG]  [BUGGY]  return  new  ShortDateFormatField(field,  padding);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  ShortDateFormatField(field,  padding);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  ShortDateFormatField(field,  padding);	  return    new    ShortDateFormatField(field);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
88	[BUG]  [BUGGY]  return  new  SHORTDateFormatField(field);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SHORTDateFormatField(field);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SHORTDateFormatField(field);	  return    new    ShortDateFormatField(field);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
89	[BUG]  [BUGGY]  return  new  ShortDateFormatField(field,  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  ShortDateFormatField(field,  0);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  ShortDateFormatField(field,  0);	  return    new    ShortDateFormatField(field);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
90	[BUG]  [BUGGY]  return  new  SimpleDigitNumberField(field,  mMaxLengthEstimate);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SimpleDigitNumberField(field,  mMaxLengthEstimate);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SimpleDigitNumberField(field,  mMaxLengthEstimate);	  return    new    SimpleDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
91	[BUG]  [BUGGY]  Return  new  SimpleDigitNumberField(field,  padding);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Return  new  SimpleDigitNumberField(field,  padding);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Return  new  SimpleDigitNumberField(field,  padding);	  return    new    SimpleDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
92	[BUG]  [BUGGY]  return  new  SimpleDigitNumberField(field,  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SimpleDigitNumberField(field,  0);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SimpleDigitNumberField(field,  0);	  return    new    SimpleDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
93	[BUG]  [BUGGY]  Integer  cDateInstance  =  getCurrentEntryCount();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getCurrentEntryCount();  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getCurrentEntryCount();	  Integer    cDateInstance    =    getCurrentEntry();    	non-compiled	[CE]  <identifier>  expected	60	None	replace
94	[BUG]  [BUGGY]  Integer  cDateInstance  =  getCurrentEntryIndex();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getCurrentEntryIndex();  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getCurrentEntryIndex();	  Integer    cDateInstance    =    getCurrentEntry();    	non-compiled	[CE]  <identifier>  expected	60	None	replace
95	[BUG]  [BUGGY]  Integer  cDateInstance  =  getCurrentEntryY();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getCurrentEntryY();  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getCurrentEntryY();	  Integer    cDateInstance    =    getCurrentEntry();    	non-compiled	[CE]  <identifier>  expected	60	None	replace
96	[BUG]  [BUGGY]  return  new  ShortDigitYearField(field,  padding);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  ShortDigitYearField(field,  padding);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  ShortDigitYearField(field,  padding);	  return    new    ShortDigitYearField(field);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
97	[BUG]  [BUGGY]  return  new  ShortDigitMonthField(field);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  ShortDigitMonthField(field);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  ShortDigitMonthField(field);	  return    new    ShortDigitYearField(field);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
98	[BUG]  [BUGGY]  if(padding  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(padding  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(	  if(field    ==    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding    	non-compiled	[CE]  <identifier>  expected	77	None	replace
99	[BUG]  [BUGGY]  if(padding  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(padding  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,	  if(field    ==    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding    	non-compiled	[CE]  <identifier>  expected	77	None	replace
100	[BUG]  [BUGGY]  Integer  cDateInstance  =  getCurrentIndex()  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getCurrentIndex()  +  1;  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getCurrentIndex()  +  1;	  Integer    cDateInstance    =    getCurrentIndex();    	non-compiled	[CE]  <identifier>  expected	89	None	replace
101	[BUG]  [BUGGY]  Integer  cDateInstance  =  getCurrentIndex()  -  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getCurrentIndex()  -  1;  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getCurrentIndex()  -  1;	  Integer    cDateInstance    =    getCurrentIndex();    	non-compiled	[CE]  <identifier>  expected	89	None	replace
102	[BUG]  [BUGGY]  Integer  cDateInstance  =  getCurrentStartIndex();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getCurrentStartIndex();  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getCurrentStartIndex();	  Integer    cDateInstance    =    getCurrentIndex();    	non-compiled	[CE]  <identifier>  expected	89	None	replace
103	[BUG]  [BUGGY]  FieldUtils.selectField(field,  padding);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  FieldUtils.selectField(field,  padding);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	FieldUtils.selectField(field,  padding);	  if(padding    >    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
104	[BUG]  [BUGGY]  allowNumberRule(field);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  allowNumberRule(field);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	allowNumberRule(field);	  if(padding    >    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
105	[BUG]  [BUGGY]  FieldUtils.select(field,  padding);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  FieldUtils.select(field,  padding);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	FieldUtils.select(field,  padding);	  if(padding    >    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
106	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumberRule(field,  padding  +  2);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumberRule(field,  padding  +  2);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().selectNumberRule(field,  padding  +  2);	  Integer    cDateInstance    =    getChronology().selectNumberRule(field,    padding    +    1);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
107	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumberRule(field,  padding  *  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumberRule(field,  padding  *  1);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().selectNumberRule(field,  padding  *  1);	  Integer    cDateInstance    =    getChronology().selectNumberRule(field,    padding    +    1);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
108	[BUG]  [BUGGY]  vice.selectNumberRule(field,  padding);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  vice.selectNumberRule(field,  padding);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	vice.selectNumberRule(field,  padding);	  if(padding    ==    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule    	non-compiled	[CE]  <identifier>  expected	56	None	replace
109	[BUG]  [BUGGY]  int  len  =  field.length();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  int  len  =  field.length();  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	int  len  =  field.length();	  if(padding    ==    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule    	non-compiled	[CE]  <identifier>  expected	56	None	replace
110	[BUG]  [BUGGY]  FieldUtils.selectPadding(field,  padding);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  FieldUtils.selectPadding(field,  padding);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	FieldUtils.selectPadding(field,  padding);	  if(padding    ==    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule    	non-compiled	[CE]  <identifier>  expected	56	None	replace
111	[BUG]  [BUGGY]  Integer  cDateInstance  =  getCurrentCharIndex()  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getCurrentCharIndex()  +  1;  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getCurrentCharIndex()  +  1;	  Integer    cDateInstance    =    getCurrentCharIndex();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
112	[BUG]  [BUGGY]  Integer  cDateInstance  =  getCurrentCharIndex()  -  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getCurrentCharIndex()  -  1;  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getCurrentCharIndex()  -  1;	  Integer    cDateInstance    =    getCurrentCharIndex();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
113	[BUG]  [BUGGY]  Integer  cDateInstance  =  getCurrentCharIndex(padding);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getCurrentCharIndex(padding);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getCurrentCharIndex(padding);	  Integer    cDateInstance    =    getCurrentCharIndex();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
114	[BUG]  [BUGGY]  mRules.selectNumberRule(field,  padding,  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.selectNumberRule(field,  padding,  2);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNumberRule(field,  padding,  2);	  mRules.selectNumberRule(field,    padding,    0);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
115	[BUG]  [BUGGY]  mRules.selectNumberRule(field,  padding,  3);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.selectNumberRule(field,  padding,  3);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNumberRule(field,  padding,  3);	  mRules.selectNumberRule(field,    padding,    0);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
116	[BUG]  [BUGGY]  mRules.selectNumberRule(field,  padding,  4);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.selectNumberRule(field,  padding,  4);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNumberRule(field,  padding,  4);	  mRules.selectNumberRule(field,    padding,    0);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
117	[BUG]  [BUGGY]  return  new  SingleDigitNumberField(field,  padding  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SingleDigitNumberField(field,  padding  +  1);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SingleDigitNumberField(field,  padding  +  1);	  return    new    SingleDigitNumberField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
118	[BUG]  [BUGGY]  return  new  SingleDigitNumberField(field,  padding,  0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SingleDigitNumberField(field,  padding,  0);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SingleDigitNumberField(field,  padding,  0);	  return    new    SingleDigitNumberField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
119	[BUG]  [BUGGY]  return  new  SingleDigitNumberField(field,  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SingleDigitNumberField(field,  1);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SingleDigitNumberField(field,  1);	  return    new    SingleDigitNumberField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
120	[BUG]  [BUGGY]  return  new  SHORTDigitNumberField(field,  padding);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SHORTDigitNumberField(field,  padding);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SHORTDigitNumberField(field,  padding);	  return    new    SHORTDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
121	[BUG]  [BUGGY]  return  new  SHORTNumberField(field);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SHORTNumberField(field);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SHORTNumberField(field);	  return    new    SHORTDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
122	[BUG]  [BUGGY]  return  new  ShortDigitNumberField(field,  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  ShortDigitNumberField(field,  1);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  ShortDigitNumberField(field,  1);	  return    new    ShortDigitNumberField(field,    0);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
123	[BUG]  [BUGGY]  return  new  ShortDigitNumberField(field,  0L);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  ShortDigitNumberField(field,  0L);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  ShortDigitNumberField(field,  0L);	  return    new    ShortDigitNumberField(field,    0);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
124	[BUG]  [BUGGY]  return  new  SimpleDigitNumberField(field,  padding  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SimpleDigitNumberField(field,  padding  +  1);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SimpleDigitNumberField(field,  padding  +  1);	  return    new    SimpleDigitNumberField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
125	[BUG]  [BUGGY]  return  new  SimpleDigitNumberField(field,  padding,  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SimpleDigitNumberField(field,  padding,  0);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SimpleDigitNumberField(field,  padding,  0);	  return    new    SimpleDigitNumberField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
126	[BUG]  [BUGGY]  return  new  SimpleDigitNumberField(field,  padding,  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SimpleDigitNumberField(field,  padding,  1);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SimpleDigitNumberField(field,  padding,  1);	  return    new    SimpleDigitNumberField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
127	[BUG]  [BUGGY]  Integer  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  String  peek  =  padding[i];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  String  peek  =  padding[i];  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  String  peek  =  padding[i];	  For(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[i];    	non-compiled	[CE]  <identifier>  expected	13	None	replace
128	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  String  peek  =  padding[i];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  String  peek  =  padding[i];  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  String  peek  =  padding[i];	  For(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[i];    	non-compiled	[CE]  <identifier>  expected	13	None	replace
129	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  padding.length();  i  <  len;  ++i)  {  char  peek  =  padding[i];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  For(int  i  =  0,  len  =  padding.length();  i  <  len;  ++i)  {  char  peek  =  padding[i];  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	For(int  i  =  0,  len  =  padding.length();  i  <  len;  ++i)  {  char  peek  =  padding[i];	  For(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[i];    	non-compiled	[CE]  <identifier>  expected	13	None	replace
130	[BUG]  [BUGGY]  mRules.select(field,  null,  padding);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.select(field,  null,  padding);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.select(field,  null,  padding);	  mRules.select(field,    null);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
131	[BUG]  [BUGGY]  mRules.select(padding,  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.select(padding,  null);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.select(padding,  null);	  mRules.select(field,    null);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
132	[BUG]  [BUGGY]  mRules.select(field,  new  Rule[padding]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.select(field,  new  Rule[padding]);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.select(field,  new  Rule[padding]);	  mRules.select(field,    null);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
133	[BUG]  [BUGGY]  mRules.selectPattern(field,  padding);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.selectPattern(field,  padding);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectPattern(field,  padding);	  mRules.selectPattern(field);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
134	[BUG]  [BUGGY]  mRules.selectPattern(padding);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.selectPattern(padding);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectPattern(padding);	  mRules.selectPattern(field);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
135	[BUG]  [BUGGY]  mRules.selectPattern(c);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.selectPattern(c);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectPattern(c);	  mRules.selectPattern(field);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
136	[BUG]  [BUGGY]  Integer  cDateInstance  =  getCurrentInstance(field,  padding);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getCurrentInstance(field,  padding);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getCurrentInstance(field,  padding);	  Integer    cDateInstance    =    getCurrentInstance(field);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
137	[BUG]  [BUGGY]  Integer  cDateInstance  =  getCurrentInstance(padding);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getCurrentInstance(padding);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getCurrentInstance(padding);	  Integer    cDateInstance    =    getCurrentInstance(field);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
138	[BUG]  [BUGGY]  Integer  cDateInstance  =  getCurrentSecondInstance(field);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getCurrentSecondInstance(field);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getCurrentSecondInstance(field);	  Integer    cDateInstance    =    getCurrentInstance(field);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
139	[BUG]  [BUGGY]  Integer  cDateInstance  =  getNumberInstance(field);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getNumberInstance(field);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getNumberInstance(field);	  Integer    cDateInstance    =    getCurrentInstance(field);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
140	[BUG]  [BUGGY]  Integer  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  String  peek  =  padding[i];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  String  peek  =  padding[i];  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  String  peek  =  padding[i];  }	  For(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[i];    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
141	[BUG]  [BUGGY]  Integer  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[i];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[i];  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[i];  }	  For(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[i];    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
142	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  padding.length();  i  <  len;  ++i)  {  char  peek  =  field[i];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  For(int  i  =  0,  len  =  padding.length();  i  <  len;  ++i)  {  char  peek  =  field[i];  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	For(int  i  =  0,  len  =  padding.length();  i  <  len;  ++i)  {  char  peek  =  field[i];  }	  For(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[i];    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
143	[BUG]  [BUGGY]  if(padding  >  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(padding  >  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding  >  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule	  if(field    ==    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule    	non-compiled	[CE]  <identifier>  expected	94	None	replace
144	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule  ==  null)  {  return  rule.selectNumberRule  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule  ==  null)  {  return  rule.selectNumberRule  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule  ==  null)  {  return  rule.selectNumberRule	  if(field    ==    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule    	non-compiled	[CE]  <identifier>  expected	94	None	replace
145	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  For(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
146	[BUG]  [BUGGY]  Pentru(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Pentru(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Pentru(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  For(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
147	[BUG]  [BUGGY]  mRules.selectNumberRule(field,  padding  +  2);  break;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.selectNumberRule(field,  padding  +  2);  break;  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNumberRule(field,  padding  +  2);  break;	  mRules.selectNumberRule(field,    padding    +    1);    break;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
148	[BUG]  [BUGGY]  mRules.selectNumberRule(field,  padding  +  3);  break;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.selectNumberRule(field,  padding  +  3);  break;  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNumberRule(field,  padding  +  3);  break;	  mRules.selectNumberRule(field,    padding    +    1);    break;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
149	[BUG]  [BUGGY]  FieldUtils.selectPattern(field,  padding);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  FieldUtils.selectPattern(field,  padding);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	FieldUtils.selectPattern(field,  padding);	  if(padding    ==    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding    	non-compiled	[CE]  <identifier>  expected	30	None	replace
150	[BUG]  [BUGGY]  vice.selectNumberRule(field);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  vice.selectNumberRule(field);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	vice.selectNumberRule(field);	  if(padding    ==    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding    	non-compiled	[CE]  <identifier>  expected	30	None	replace
151	[BUG]  [BUGGY]  if(padding  >  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(padding  >  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding  >  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(	  if(field!=    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(    	non-compiled	[CE]  <identifier>  expected	93	None	replace
152	[BUG]  [BUGGY]  if(padding  >=  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(padding  >=  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding  >=  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule	  if(field!=    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(    	non-compiled	[CE]  <identifier>  expected	93	None	replace
153	[BUG]  [BUGGY]  mRules.select(field,  padding,  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.select(field,  padding,  2);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.select(field,  padding,  2);	  mRules.select(field,    padding,    1);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
154	[BUG]  [BUGGY]  mRules.select(field,  padding,  3);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.select(field,  padding,  3);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.select(field,  padding,  3);	  mRules.select(field,    padding,    1);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
155	[BUG]  [BUGGY]  mRules.select(field,  padding,  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.select(field,  padding,  0);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.select(field,  padding,  0);	  mRules.select(field,    padding,    1);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
156	[BUG]  [BUGGY]  mRules.select(field,  padding,  this);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.select(field,  padding,  this);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.select(field,  padding,  this);	  mRules.select(field,    padding,    null);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
157	[BUG]  [BUGGY]  mRules.select(field,  padding,  null,  true);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.select(field,  padding,  null,  true);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.select(field,  padding,  null,  true);	  mRules.select(field,    padding,    null);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
158	[BUG]  [BUGGY]  mRules.select(field,  padding,  null,  false);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.select(field,  padding,  null,  false);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.select(field,  padding,  null,  false);	  mRules.select(field,    padding,    null);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
159	[BUG]  [BUGGY]  Integer  field  =  mRules.get(field,  padding);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  field  =  mRules.get(field,  padding);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  mRules.get(field,  padding);	  Integer    field    =    mRules.get(field);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
160	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumberRule(field,  2);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumberRule(field,  2);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().selectNumberRule(field,  2);	  Integer    cDateInstance    =    getChronology().selectNumberRule(field,    4);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
161	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().select(field,  padding,  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getChronology().select(field,  padding,  1);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().select(field,  padding,  1);	  Integer    cDateInstance    =    getChronology().select(field,    padding,    0);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
162	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().select(field,  padding,  2);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getChronology().select(field,  padding,  2);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().select(field,  padding,  2);	  Integer    cDateInstance    =    getChronology().select(field,    padding,    0);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
163	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().select(field,  padding,  4);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getChronology().select(field,  padding,  4);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().select(field,  padding,  4);	  Integer    cDateInstance    =    getChronology().select(field,    padding,    0);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
164	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().select(field,  padding,  3);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getChronology().select(field,  padding,  3);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().select(field,  padding,  3);	  Integer    cDateInstance    =    getChronology().select(field,    padding,    0);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
165	[BUG]  [BUGGY]  if(padding  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(padding  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule	  if(padding    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding    	non-compiled	[CE]  <identifier>  expected	32	None	replace
166	[BUG]  [BUGGY]  if(padding  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(padding  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,	  if(padding    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding    	non-compiled	[CE]  <identifier>  expected	32	None	replace
167	[BUG]  [BUGGY]  if(padding  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(padding  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding	  if(padding    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding    	non-compiled	[CE]  <identifier>  expected	32	None	replace
168	[BUG]  [BUGGY]  rule[0].selectNumberRule(field,  1);  break;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  rule[0].selectNumberRule(field,  1);  break;  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	rule[0].selectNumberRule(field,  1);  break;	  mRules.selectNumberRule(field,    1);    break;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
169	[BUG]  [BUGGY]  if(padding  >=  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(padding  >=  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding  >=  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding	  if(field!=    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding    	non-compiled	[CE]  <identifier>  expected	79	None	replace
170	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumber(field);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumber(field);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().selectNumber(field);	  Integer    cDateInstance    =    getChronology().selectNumberRule(padding);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
171	[BUG]  [BUGGY]  return  new  UnpaddedNumberField(field,  padding  -  2);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  UnpaddedNumberField(field,  padding  -  2);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  UnpaddedNumberField(field,  padding  -  2);	  return    new    UnpaddedNumberField(field,    padding    -    1);    	non-compiled	[CE]  <identifier>  expected	131	None	replace
172	[BUG]  [BUGGY]  mRules.select(field,  padding  +  2);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.select(field,  padding  +  2);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.select(field,  padding  +  2);	  mRules.select(field,    padding    +    1);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
173	[BUG]  [BUGGY]  mRules.select(field,  padding  +  3);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.select(field,  padding  +  3);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.select(field,  padding  +  3);	  mRules.select(field,    padding    +    1);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
174	[BUG]  [BUGGY]  if(padding  ==  1)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(padding  ==  1)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding  ==  1)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(	  if(field!=    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(    	non-compiled	[CE]  <identifier>  expected	57	None	replace
175	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumber(field,  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumber(field,  1);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().selectNumber(field,  1);	  Integer    cDateInstance    =    getChronology().selectNumber(field,    padding);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
176	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumber(field,  padding  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumber(field,  padding  +  1);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().selectNumber(field,  padding  +  1);	  Integer    cDateInstance    =    getChronology().selectNumber(field,    padding);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
177	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumber(field,  padding,  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumber(field,  padding,  0);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().selectNumber(field,  padding,  0);	  Integer    cDateInstance    =    getChronology().selectNumber(field,    padding);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
178	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumber(field,  field  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumber(field,  field  +  1);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().selectNumber(field,  field  +  1);	  Integer    cDateInstance    =    getChronology().selectNumber(field,    padding);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
179	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(	  if(mRules!=    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(    	non-compiled	[CE]  <identifier>  expected	110	None	replace
180	[BUG]  [BUGGY]  if(padding  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(padding  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(	  if(mRules!=    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(    	non-compiled	[CE]  <identifier>  expected	110	None	replace
181	[BUG]  [BUGGY]  if(padding  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(padding  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule	  if(mRules!=    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(    	non-compiled	[CE]  <identifier>  expected	110	None	replace
182	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule	  if(mRules!=    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(    	non-compiled	[CE]  <identifier>  expected	110	None	replace
183	[BUG]  [BUGGY]  Integer  field  =  mRules.getField(field,  padding);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  field  =  mRules.getField(field,  padding);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  mRules.getField(field,  padding);	  Integer    field    =    mRules.getField(field);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
184	[BUG]  [BUGGY]  Integer  field  =  mRules.getField(padding);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  field  =  mRules.getField(padding);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  mRules.getField(padding);	  Integer    field    =    mRules.getField(field);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
185	[BUG]  [BUGGY]  Integer  field  =  mRules.getField(field  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  field  =  mRules.getField(field  +  1);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  mRules.getField(field  +  1);	  Integer    field    =    mRules.getField(field);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
186	[BUG]  [BUGGY]  case  1:  return  new  TwoDigitNumberField(field,  padding);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  case  1:  return  new  TwoDigitNumberField(field,  padding);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	case  1:  return  new  TwoDigitNumberField(field,  padding);	  case    1:    return    new    TwoDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
187	[BUG]  [BUGGY]  case  1:  return  new  ThreeDigitNumberField(field,  padding);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  case  1:  return  new  ThreeDigitNumberField(field,  padding);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	case  1:  return  new  ThreeDigitNumberField(field,  padding);	  case    1:    return    new    TwoDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
188	[BUG]  [BUGGY]  case  1:  return  new  TwoDigitNumberField(field,  0);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  case  1:  return  new  TwoDigitNumberField(field,  0);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	case  1:  return  new  TwoDigitNumberField(field,  0);	  case    1:    return    new    TwoDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
189	[BUG]  [BUGGY]  Rule  mRules  =  mRules.selectNumberRule(field,  padding);  break;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Rule  mRules  =  mRules.selectNumberRule(field,  padding);  break;  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Rule  mRules  =  mRules.selectNumberRule(field,  padding);  break;	  if(mRules!=    null)    {    mRules.selectNumberRule(field,    padding);    break;    }    	non-compiled	[CE]  <identifier>  expected	126	None	replace
190	[BUG]  [BUGGY]  Rules.selectNumberRule(field,  padding);  break;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Rules.selectNumberRule(field,  padding);  break;  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Rules.selectNumberRule(field,  padding);  break;	  if(mRules!=    null)    {    mRules.selectNumberRule(field,    padding);    break;    }    	non-compiled	[CE]  <identifier>  expected	126	None	replace
191	[BUG]  [BUGGY]  vice.selectNumberRule(field,  padding);  break;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  vice.selectNumberRule(field,  padding);  break;  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	vice.selectNumberRule(field,  padding);  break;	  if(mRules!=    null)    {    mRules.selectNumberRule(field,    padding);    break;    }    	non-compiled	[CE]  <identifier>  expected	126	None	replace
192	[BUG]  [BUGGY]  Integer  field  =  getField(field).longValue()  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  field  =  getField(field).longValue()  +  1;  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  getField(field).longValue()  +  1;	  Integer    field    =    getField(field).intValue()    +    1;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
193	[BUG]  [BUGGY]  Integer  field  =  getField(field).longValue();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  field  =  getField(field).longValue();  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  getField(field).longValue();	  Integer    field    =    getField(field).intValue()    -    1;    	non-compiled	[CE]  <identifier>  expected	62	None	replace
194	[BUG]  [BUGGY]  return  new  SingleDigitNumberField(field,  0L);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SingleDigitNumberField(field,  0L);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SingleDigitNumberField(field,  0L);	  return    new    SingleDigitNumberField(field,    0);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
195	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }	  for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
196	[BUG]  [BUGGY]  mRules.selectNumberRule(field,  padding  +  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.selectNumberRule(field,  padding  +  2);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNumberRule(field,  padding  +  2);	  mRules.selectNumberRule(field,    padding    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
197	[BUG]  [BUGGY]  mRules.selectNumberRule(field,  padding  +  3);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.selectNumberRule(field,  padding  +  3);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNumberRule(field,  padding  +  3);	  mRules.selectNumberRule(field,    padding    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
198	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[1];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[1];  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[1];  }	  if(padding    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[0];    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
199	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  String  peek  =  padding[0];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  String  peek  =  padding[0];  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  String  peek  =  padding[0];  }	  if(padding    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[0];    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
200	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[0];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[0];  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[0];	  if(padding    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[0];    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
201	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule  ==  null)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule  ==  null)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule  ==  null)  {  throw  new  IllegalArgumentException( " ".);  }	  for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
202	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumberRule(field,  padding,  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumberRule(field,  padding,  2);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().selectNumberRule(field,  padding,  2);	  Integer    cDateInstance    =    getChronology().selectNumberRule(field,    padding,    0);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
203	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumberRule(field,  padding,  4);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumberRule(field,  padding,  4);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().selectNumberRule(field,  padding,  4);	  Integer    cDateInstance    =    getChronology().selectNumberRule(field,    padding,    0);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
204	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumberRule(field,  padding,  3);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumberRule(field,  padding,  3);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().selectNumberRule(field,  padding,  3);	  Integer    cDateInstance    =    getChronology().selectNumberRule(field,    padding,    0);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
205	[BUG]  [BUGGY]  mRules.selectNumberRule(field,  padding,  false,  true);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.selectNumberRule(field,  padding,  false,  true);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNumberRule(field,  padding,  false,  true);	  mRules.selectNumberRule(field,    padding,    false);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
206	[BUG]  [BUGGY]  mRules.selectNumberRule(field,  field,  true);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.selectNumberRule(field,  field,  true);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNumberRule(field,  field,  true);	  mRules.selectNumberRule(field,    padding,    false);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
207	[BUG]  [BUGGY]  rule.selectNumberRule(field,  padding  +  1);  break;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  rule.selectNumberRule(field,  padding  +  1);  break;  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	rule.selectNumberRule(field,  padding  +  1);  break;	  rule.selectNumberRule(field,    padding);    break;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
208	[BUG]  [BUGGY]  rule.selectNumberRule(field,  padding,  0);  break;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  rule.selectNumberRule(field,  padding,  0);  break;  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	rule.selectNumberRule(field,  padding,  0);  break;	  rule.selectNumberRule(field,    padding);    break;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
209	[BUG]  [BUGGY]  rule.selectNumberRule(field,  padding,  1);  break;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  rule.selectNumberRule(field,  padding,  1);  break;  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	rule.selectNumberRule(field,  padding,  1);  break;	  rule.selectNumberRule(field,    padding);    break;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
210	[BUG]  [BUGGY]  Integer  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  String  peek  =  padding[0];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  String  peek  =  padding[0];  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  String  peek  =  padding[0];  }	  For(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[0];    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
211	[BUG]  [BUGGY]  Integer  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[0];  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[0];  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[0];  }	  For(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[0];    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
212	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  padding.length();  i  <  len;  ++i)  {  char  peek  =  padding[0];  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  For(int  i  =  0,  len  =  padding.length();  i  <  len;  ++i)  {  char  peek  =  padding[0];  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	For(int  i  =  0,  len  =  padding.length();  i  <  len;  ++i)  {  char  peek  =  padding[0];  }	  For(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[0];    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
213	[BUG]  [BUGGY]  Integer  field  =  mRules.get(i);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  field  =  mRules.get(i);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  mRules.get(i);	  Integer    field    =    mRules.remove(padding);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
214	[BUG]  [BUGGY]  mRules.selectNumberRule(field,  3);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.selectNumberRule(field,  3);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNumberRule(field,  3);	  mRules.selectNumberRule(field,    1);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
215	[BUG]  [BUGGY]  mRules.selectNumberRule(field,  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.selectNumberRule(field,  2);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNumberRule(field,  2);	  mRules.selectNumberRule(field,    1);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
216	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().selectPattern(field,  padding);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getChronology().selectPattern(field,  padding);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().selectPattern(field,  padding);	  Integer    cDateInstance    =    getChronology().selectPattern(field);    	non-compiled	[CE]  <identifier>  expected	135	None	replace
217	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().selectPattern(padding);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getChronology().selectPattern(padding);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().selectPattern(padding);	  Integer    cDateInstance    =    getChronology().selectPattern(field);    	non-compiled	[CE]  <identifier>  expected	135	None	replace
218	[BUG]  [BUGGY]  Integer  field  =  mRules.get(field  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  field  =  mRules.get(field  -  1);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  mRules.get(field  -  1);	  Integer    field    =    mRules.get(padding    -    1);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
219	[BUG]  [BUGGY]  return  new  SimpleDateFormatField(field,  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SimpleDateFormatField(field,  1);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SimpleDateFormatField(field,  1);	  return    new    SimpleDateFormatField(field,    0);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
220	[BUG]  [BUGGY]  return  new  SimpleDateFormatField(field,  0L);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SimpleDateFormatField(field,  0L);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SimpleDateFormatField(field,  0L);	  return    new    SimpleDateFormatField(field,    0);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
221	[BUG]  [BUGGY]  return  new  SimpleDateFormatField(field,  false,  padding);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SimpleDateFormatField(field,  false,  padding);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SimpleDateFormatField(field,  false,  padding);	  return    new    SimpleDateFormatField(field,    false);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
222	[BUG]  [BUGGY]  Return  new  SimpleDateFormatField(field,  true);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Return  new  SimpleDateFormatField(field,  true);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Return  new  SimpleDateFormatField(field,  true);	  return    new    SimpleDateFormatField(field,    false);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
223	[BUG]  [BUGGY]  mRules.select(field,  padding  +  1,  true);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.select(field,  padding  +  1,  true);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.select(field,  padding  +  1,  true);	  mRules.select(field,    padding,    true);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
224	[BUG]  [BUGGY]  case  2:  return  new  TwoDigitNumberField(field,  padding  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  case  2:  return  new  TwoDigitNumberField(field,  padding  +  1);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	case  2:  return  new  TwoDigitNumberField(field,  padding  +  1);	  case    2:    return    new    TwoDigitNumberField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
225	[BUG]  [BUGGY]  case  2:  return  new  TwoDigitNumberField(field,  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  case  2:  return  new  TwoDigitNumberField(field,  1);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	case  2:  return  new  TwoDigitNumberField(field,  1);	  case    2:    return    new    TwoDigitNumberField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
226	[BUG]  [BUGGY]  return  new  DoubleDigitNumberField(field,  true);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  DoubleDigitNumberField(field,  true);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  DoubleDigitNumberField(field,  true);	  return    new    DoubleDigitNumberField(field,    false);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
227	[BUG]  [BUGGY]  return  new  DoubleDigitNumberField(field,  false,  padding);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  DoubleDigitNumberField(field,  false,  padding);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  DoubleDigitNumberField(field,  false,  padding);	  return    new    DoubleDigitNumberField(field,    false);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
228	[BUG]  [BUGGY]  return  new  DoubleDigitNumberField(field,  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  DoubleDigitNumberField(field,  null);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  DoubleDigitNumberField(field,  null);	  return    new    DoubleDigitNumberField(field,    false);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
229	[BUG]  [BUGGY]  rule  =  getRule(i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  rule  =  getRule(i);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	rule  =  getRule(i);	  if(field!=    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
230	[BUG]  [BUGGY]  parent.selectField(field,  padding);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  parent.selectField(field,  padding);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	parent.selectField(field,  padding);	  if(field!=    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
231	[BUG]  [BUGGY]  Integer  cDateInstance  =  getSecondInstance();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getSecondInstance();  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getSecondInstance();	  Integer    cDateInstance    =    getCurrentSecondInstance();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
232	[BUG]  [BUGGY]  Integer  cDateInstance  =  getCurrentSecondInstance(padding);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getCurrentSecondInstance(padding);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getCurrentSecondInstance(padding);	  Integer    cDateInstance    =    getCurrentSecondInstance();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
233	[BUG]  [BUGGY]  Integer  cDateInstance  =  getCurrentDecimalInstance();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getCurrentDecimalInstance();  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getCurrentDecimalInstance();	  Integer    cDateInstance    =    getCurrentSecondInstance();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
234	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  peek  =  padding[i];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  peek  =  padding[i];  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  peek  =  padding[i];  }	  if(padding    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    peek    =    padding[i];    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
235	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  peek  =  padding[0];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  peek  =  padding[0];  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  peek  =  padding[0];  }	  if(padding    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    peek    =    padding[i];    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
236	[BUG]  [BUGGY]  For(int  i  =  0,  peek  =  field.length();  i  <  len;  ++i)  {  padding[i];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  For(int  i  =  0,  peek  =  field.length();  i  <  len;  ++i)  {  padding[i];  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	For(int  i  =  0,  peek  =  field.length();  i  <  len;  ++i)  {  padding[i];  }	  if(padding    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    peek    =    padding[i];    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
237	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  peek  =  null;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  peek  =  null;  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  peek  =  null;  }	  if(padding    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    peek    =    padding[i];    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
238	[BUG]  [BUGGY]  return  new  FastDateFormatField(field,  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  FastDateFormatField(field,  1);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  FastDateFormatField(field,  1);	  return    new    FastDateFormatField(field,    0);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
239	[BUG]  [BUGGY]  return  new  FastDateFormatField(field,  0L);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  FastDateFormatField(field,  0L);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  FastDateFormatField(field,  0L);	  return    new    FastDateFormatField(field,    0);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
240	[BUG]  [BUGGY]  if(mRules!=  null)  {  return  new  SimpleDateFormatField(field,  mRules);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(mRules!=  null)  {  return  new  SimpleDateFormatField(field,  mRules);  }  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(mRules!=  null)  {  return  new  SimpleDateFormatField(field,  mRules);  }	  return    new    SimpleDateFormatField(field,    mRules);    	non-compiled	[CE]  <identifier>  expected	123	None	replace
241	[BUG]  [BUGGY]  if(mRules!=  null)  {  return  new  SimpleDateFormatField(field,  mRules);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(mRules!=  null)  {  return  new  SimpleDateFormatField(field,  mRules);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(mRules!=  null)  {  return  new  SimpleDateFormatField(field,  mRules);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    new    SimpleDateFormatField(field,    mRules);    	non-compiled	[CE]  <identifier>  expected	123	None	replace
242	[BUG]  [BUGGY]  return  new  SimpleDateFormatField(field,  mRules,  padding);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SimpleDateFormatField(field,  mRules,  padding);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SimpleDateFormatField(field,  mRules,  padding);	  return    new    SimpleDateFormatField(field,    mRules);    	non-compiled	[CE]  <identifier>  expected	123	None	replace
243	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumberRule(field,  0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumberRule(field,  0);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().selectNumberRule(field,  0);	  Integer    cDateInstance    =    getChronology().selectNumberRule(field,    1);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
244	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumberRule(field,  3);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumberRule(field,  3);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().selectNumberRule(field,  3);	  Integer    cDateInstance    =    getChronology().selectNumberRule(field,    1);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
245	[BUG]  [BUGGY]  return  new  DoubleDigitNumberField(field,  padding  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  DoubleDigitNumberField(field,  padding  +  1);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  DoubleDigitNumberField(field,  padding  +  1);	  return    new    DoubleDigitNumberField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
246	[BUG]  [BUGGY]  return  new  DoubleDigitNumberField(field,  padding,  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  DoubleDigitNumberField(field,  padding,  0);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  DoubleDigitNumberField(field,  padding,  0);	  return    new    DoubleDigitNumberField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
247	[BUG]  [BUGGY]  if(padding  >  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(padding  >  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding  >  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule	  if(field!=    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(    	non-compiled	[CE]  <identifier>  expected	111	None	replace
248	[BUG]  [BUGGY]  if(padding  >  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(padding  >  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding  >  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(	  if(field!=    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(    	non-compiled	[CE]  <identifier>  expected	111	None	replace
249	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().selectNullRule(field,  padding);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getChronology().selectNullRule(field,  padding);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().selectNullRule(field,  padding);	  Integer    cDateInstance    =    getChronology().selectNullRule(field);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
250	[BUG]  [BUGGY]  return  new  ShortDigitNumberField(field,  padding  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  ShortDigitNumberField(field,  padding  +  1);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  ShortDigitNumberField(field,  padding  +  1);	  return    new    ShortDigitNumberField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
251	[BUG]  [BUGGY]  return  new  ShortDigitNumberField(field,  padding,  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  ShortDigitNumberField(field,  padding,  0);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  ShortDigitNumberField(field,  padding,  0);	  return    new    ShortDigitNumberField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
252	[BUG]  [BUGGY]  return  new  ShortDigitNumberField(field,  padding,  mMaxLengthEstimate);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  ShortDigitNumberField(field,  padding,  mMaxLengthEstimate);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  ShortDigitNumberField(field,  padding,  mMaxLengthEstimate);	  return    new    ShortDigitNumberField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
253	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  padding.length();  i  <  len;  ++i)  {  char  peek  =  field[i];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  for(int  i  =  0,  len  =  padding.length();  i  <  len;  ++i)  {  char  peek  =  field[i];  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	for(int  i  =  0,  len  =  padding.length();  i  <  len;  ++i)  {  char  peek  =  field[i];  }	  for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[i];    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
254	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  String  peek  =  padding[i];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  String  peek  =  padding[i];  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  String  peek  =  padding[i];  }	  for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[i];    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
255	[BUG]  [BUGGY]  case  1:  return  new  DoubleDigitNumberField(field,  padding);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  case  1:  return  new  DoubleDigitNumberField(field,  padding);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	case  1:  return  new  DoubleDigitNumberField(field,  padding);	  case    1:    return    new    DoubleDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
256	[BUG]  [BUGGY]  Case  1:  return  new  DoubleDigitNumberField(field,  padding);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Case  1:  return  new  DoubleDigitNumberField(field,  padding);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Case  1:  return  new  DoubleDigitNumberField(field,  padding);	  case    1:    return    new    DoubleDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
257	[BUG]  [BUGGY]  case  1:  return  new  NumberDigitNumberField(field,  padding);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  case  1:  return  new  NumberDigitNumberField(field,  padding);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	case  1:  return  new  NumberDigitNumberField(field,  padding);	  case    1:    return    new    DoubleDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
258	[BUG]  [BUGGY]  case  1:  return  new  DoubleDigitNumberField(field,  0);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  case  1:  return  new  DoubleDigitNumberField(field,  0);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	case  1:  return  new  DoubleDigitNumberField(field,  0);	  case    1:    return    new    DoubleDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
259	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule  ==  null)  {  return  rule.selectNumberRule(  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule  ==  null)  {  return  rule.selectNumberRule(  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule  ==  null)  {  return  rule.selectNumberRule(	  for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(    	non-compiled	[CE]  <identifier>  expected	54	None	replace
260	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(	  for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(    	non-compiled	[CE]  <identifier>  expected	54	None	replace
261	[BUG]  [BUGGY]  Integer  field  =  getField(field).intValue()  *  padding;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  field  =  getField(field).intValue()  *  padding;  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  getField(field).intValue()  *  padding;	  Integer    field    =    getField(field).intValue()    +    padding;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
262	[BUG]  [BUGGY]  Integer  field  =  getField(field).intValue()  /  padding;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  field  =  getField(field).intValue()  /  padding;  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  getField(field).intValue()  /  padding;	  Integer    field    =    getField(field).intValue()    +    padding;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
263	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  new  UnpaddedNumberField(field);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  new  UnpaddedNumberField(field);  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  new  UnpaddedNumberField(field);  }	  for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule    	non-compiled	[CE]  <identifier>  expected	88	None	replace
264	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule;  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule;  }	  for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule    	non-compiled	[CE]  <identifier>  expected	88	None	replace
265	[BUG]  [BUGGY]  mRules.selectNumber(field,  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.selectNumber(field,  1);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNumber(field,  1);	  mRules.selectNumber(field,    padding);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
266	[BUG]  [BUGGY]  mRules.selectNumber(field,  field);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.selectNumber(field,  field);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNumber(field,  field);	  mRules.selectNumber(field,    padding);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
267	[BUG]  [BUGGY]  Integer  cDateInstance  =  getCurrentName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getCurrentName();  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getCurrentName();	  Integer    cDateInstance    =    getCurrentEntry();    	non-compiled	[CE]  <identifier>  expected	60	None	replace
268	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  padding.length();  i  <  len;  ++i)  {  char  peek  =  field[0];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  For(int  i  =  0,  len  =  padding.length();  i  <  len;  ++i)  {  char  peek  =  field[0];  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	For(int  i  =  0,  len  =  padding.length();  i  <  len;  ++i)  {  char  peek  =  field[0];  }	  For(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[0];    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
269	[BUG]  [BUGGY]  case  2:  return  new  TwoDigitNumberField(field,  0);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  case  2:  return  new  TwoDigitNumberField(field,  0);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	case  2:  return  new  TwoDigitNumberField(field,  0);	  case    2:    return    new    TwoDigitNumberField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
270	[BUG]  [BUGGY]  return  new  SingleDigitNumberField(field,  3);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SingleDigitNumberField(field,  3);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SingleDigitNumberField(field,  3);	  return    new    SingleDigitNumberField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
271	[BUG]  [BUGGY]  mRules.insert(field,  padding);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.insert(field,  padding);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.insert(field,  padding);	  mRules.select(field,    field);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
272	[BUG]  [BUGGY]  return  new  ShortDigitYearField(field,  0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  ShortDigitYearField(field,  0);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  ShortDigitYearField(field,  0);	  return    new    ShortDigitYearField(field);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
273	[BUG]  [BUGGY]  return  new  ShortDigitNumberField(field,  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  ShortDigitNumberField(field,  2);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  ShortDigitNumberField(field,  2);	  return    new    ShortDigitNumberField(field,    0);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
274	[BUG]  [BUGGY]  return  new  SimpleDigitNumberField(field,  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SimpleDigitNumberField(field,  1);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SimpleDigitNumberField(field,  1);	  return    new    SimpleDigitNumberField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
275	[BUG]  [BUGGY]  return  new  SimpleDigitNumberField(field,  3);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SimpleDigitNumberField(field,  3);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SimpleDigitNumberField(field,  3);	  return    new    SimpleDigitNumberField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
276	[BUG]  [BUGGY]  if(field  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(field  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(field  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(	  if(field!=    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(    	non-compiled	[CE]  <identifier>  expected	111	None	replace
277	[BUG]  [BUGGY]  case  2:  return  new  DoubleDigitNumberField(field,  0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  case  2:  return  new  DoubleDigitNumberField(field,  0);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	case  2:  return  new  DoubleDigitNumberField(field,  0);	  case    2:    return    new    DoubleDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
278	[BUG]  [BUGGY]  int  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[i];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  int  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[i];  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	int  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[i];  }	  for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[i];    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
279	[BUG]  [BUGGY]  return  new  SimpleDigitNumberField(field,  mRules);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SimpleDigitNumberField(field,  mRules);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SimpleDigitNumberField(field,  mRules);	  return    new    UnpaddedNumberField(field,    mRules);    	non-compiled	[CE]  <identifier>  expected	132	None	replace
280	[BUG]  [BUGGY]  return  new  UnpaddedNumberField(field,  mRules,  padding);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  UnpaddedNumberField(field,  mRules,  padding);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  UnpaddedNumberField(field,  mRules,  padding);	  return    new    UnpaddedNumberField(field,    mRules);    	non-compiled	[CE]  <identifier>  expected	132	None	replace
281	[BUG]  [BUGGY]  mRules.select(field,  field,  null);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.select(field,  field,  null);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.select(field,  field,  null);	  mRules.select(field,    padding,    null);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
282	[BUG]  [BUGGY]  if(field  <  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(field  <  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(field  <  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule	  if(field    <    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding    	non-compiled	[CE]  <identifier>  expected	78	None	replace
283	[BUG]  [BUGGY]  return  new  SimpleDateFormatField(field,  mMaxLengthEstimate  +  padding);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SimpleDateFormatField(field,  mMaxLengthEstimate  +  padding);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SimpleDateFormatField(field,  mMaxLengthEstimate  +  padding);	  return    new    SimpleDateFormatField(field,    mMaxLengthEstimate);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
284	[BUG]  [BUGGY]  Return  new  SimpleDateFormatField(field,  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Return  new  SimpleDateFormatField(field,  0);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Return  new  SimpleDateFormatField(field,  0);	  Return    new    SimpleDateFormatField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
285	[BUG]  [BUGGY]  if(field  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(field  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(field  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }	  if(field!=    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
286	[BUG]  [BUGGY]  if(field  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(field  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(field  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }	  if(field!=    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
287	[BUG]  [BUGGY]  if(field  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(field  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(field  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule	  if(field!=    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
288	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);	  for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding    	non-compiled	[CE]  <identifier>  expected	29	None	replace
289	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  fields.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  for(int  i  =  0,  len  =  fields.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	for(int  i  =  0,  len  =  fields.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
290	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  fields.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  For(int  i  =  0,  len  =  fields.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	For(int  i  =  0,  len  =  fields.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  For(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
291	[BUG]  [BUGGY]  case  1:  return  new  IntegerDigitNumberField(field);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  case  1:  return  new  IntegerDigitNumberField(field);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	case  1:  return  new  IntegerDigitNumberField(field);	  case    1:    return    new    DoubleDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
292	[BUG]  [BUGGY]  Integer  field  =  getField(field).intValue()  *  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  field  =  getField(field).intValue()  *  1;  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  getField(field).intValue()  *  1;	  Integer    field    =    getField(field).intValue()    -    1;    	non-compiled	[CE]  <identifier>  expected	62	None	replace
293	[BUG]  [BUGGY]  mRules.selectNumberRule(field,  0);  break;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.selectNumberRule(field,  0);  break;  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNumberRule(field,  0);  break;	  mRules.selectNumberRule(field,    1);    break;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
294	[BUG]  [BUGGY]  mRules.selectNumberRule(field,  2);  break;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.selectNumberRule(field,  2);  break;  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNumberRule(field,  2);  break;	  mRules.selectNumberRule(field,    1);    break;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
295	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( " ".);  }	  for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
296	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  fields.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  for(int  i  =  0,  len  =  fields.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	for(int  i  =  0,  len  =  fields.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
297	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().selectValue(field,  padding  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getChronology().selectValue(field,  padding  +  1);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().selectValue(field,  padding  +  1);	  Integer    cDateInstance    =    getChronology().select(field,    field    +    1);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
298	[BUG]  [BUGGY]  return  new  UnpaddedNumberField(field,  padding  *  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  UnpaddedNumberField(field,  padding  *  1);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  UnpaddedNumberField(field,  padding  *  1);	  return    new    UnpaddedNumberField(field,    padding    -    1);    	non-compiled	[CE]  <identifier>  expected	131	None	replace
299	[BUG]  [BUGGY]  return  new  FastDateFormatField(field,  3);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  FastDateFormatField(field,  3);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  FastDateFormatField(field,  3);	  return    new    FastDateFormatField(field,    0);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
300	[BUG]  [BUGGY]  Integer  field  =  mRules.get(padding  -  1  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  field  =  mRules.get(padding  -  1  +  1);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  mRules.get(padding  -  1  +  1);	  Integer    field    =    mRules.get(padding    -    1);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
301	[BUG]  [BUGGY]  Integer  field  =  mRules.get(padding  -  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  field  =  mRules.get(padding  -  2);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  mRules.get(padding  -  2);	  Integer    field    =    mRules.get(padding    -    1);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
302	[BUG]  [BUGGY]  return  new  ShortDigitNumberField(field,  3);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  ShortDigitNumberField(field,  3);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  ShortDigitNumberField(field,  3);	  return    new    ShortDigitNumberField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
303	[BUG]  [BUGGY]  if(field  <  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(field  <  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(field  <  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(	  if(field    ==    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(    	non-compiled	[CE]  <identifier>  expected	92	None	replace
304	[BUG]  [BUGGY]  if(field!=  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(field!=  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(field!=  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule	  if(field    ==    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule    	non-compiled	[CE]  <identifier>  expected	94	None	replace
305	[BUG]  [BUGGY]  return  new  Long(field,  mMaxLengthEstimate);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  Long(field,  mMaxLengthEstimate);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  Long(field,  mMaxLengthEstimate);	  return    new    UnpaddedNumberField(field,    mMaxLengthEstimate);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
306	[BUG]  [BUGGY]  mRules.selectNumberRule(field,  padding  *  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.selectNumberRule(field,  padding  *  1);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNumberRule(field,  padding  *  1);	  mRules.selectNumberRule(field,    padding    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
307	[BUG]  [BUGGY]  Integer  field  =  mRules.get(padding  *  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  field  =  mRules.get(padding  *  1);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  mRules.get(padding  *  1);	  Integer    field    =    mRules.get(padding    +    1);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
308	[BUG]  [BUGGY]  return  new  SelectNumberRule(field,  0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SelectNumberRule(field,  0);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SelectNumberRule(field,  0);	  return    new    SelectNumberRule(field,    padding);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
309	[BUG]  [BUGGY]  return  new  SelectNumberRule(field,  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SelectNumberRule(field,  1);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SelectNumberRule(field,  1);	  return    new    SelectNumberRule(field,    padding);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
310	[BUG]  [BUGGY]  mRules.selectNumberRule(field,  field,  false);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.selectNumberRule(field,  field,  false);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNumberRule(field,  field,  false);	  mRules.selectNumberRule(field,    padding,    false);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
311	[BUG]  [BUGGY]  Integer  padding  =  mRules.get(field);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  padding  =  mRules.get(field);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  padding  =  mRules.get(field);	  if(padding    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    peek    =    padding[i];    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
312	[BUG]  [BUGGY]  Integer  padding  =  getPadding(field);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  padding  =  getPadding(field);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  padding  =  getPadding(field);	  if(padding    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    peek    =    padding[i];    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
313	[BUG]  [BUGGY]  Integer  padding  =  mRules.get(peek);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  padding  =  mRules.get(peek);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  padding  =  mRules.get(peek);	  if(padding    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    peek    =    padding[i];    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
314	[BUG]  [BUGGY]  Integer  padding  =  getPosition(field);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  padding  =  getPosition(field);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  padding  =  getPosition(field);	  if(padding    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    peek    =    padding[i];    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
315	[BUG]  [BUGGY]  Integer  field  =  mRules.getField(field  +  padding);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  field  =  mRules.getField(field  +  padding);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  mRules.getField(field  +  padding);	  Integer    field    =    mRules.getField(field);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
316	[BUG]  [BUGGY]  Integer  field  =  mRules.selectField(field);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  field  =  mRules.selectField(field);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  mRules.selectField(field);	  Integer    field    =    mRules.getField(field);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
317	[BUG]  [BUGGY]  mRules.select(field,  padding  *  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.select(field,  padding  *  1);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.select(field,  padding  *  1);	  mRules.select(field,    padding    +    1);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
318	[BUG]  [BUGGY]  mRules.select(field,  field,  false);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.select(field,  field,  false);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.select(field,  field,  false);	  mRules.select(field,    padding,    true);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
319	[BUG]  [BUGGY]  if(field  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(field  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(field  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule	  if(padding    ==    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule    	non-compiled	[CE]  <identifier>  expected	56	None	replace
320	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumber(field,  4);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumber(field,  4);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().selectNumber(field,  4);	  Integer    cDateInstance    =    getChronology().selectNumber(field,    padding);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
321	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumber(field,  3);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumber(field,  3);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().selectNumber(field,  3);	  Integer    cDateInstance    =    getChronology().selectNumber(field,    padding);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
322	[BUG]  [BUGGY]  if(padding!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[0];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(padding!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[0];  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[0];  }	  if(padding    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[0];    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
323	[BUG]  [BUGGY]  if(peek  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[0];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(peek  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[0];  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(peek  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[0];  }	  if(padding    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[0];    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
324	[BUG]  [BUGGY]  if(padding!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[1];  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(padding!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[1];  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[1];  }	  if(padding    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[0];    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
325	[BUG]  [BUGGY]  if(field  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(field  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(field  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(	  if(mRules!=    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(    	non-compiled	[CE]  <identifier>  expected	110	None	replace
326	[BUG]  [BUGGY]  if(field!=  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(field!=  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(field!=  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(	  if(mRules!=    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(    	non-compiled	[CE]  <identifier>  expected	110	None	replace
327	[BUG]  [BUGGY]  if(field  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(field  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(field  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field	  if(padding    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding    	non-compiled	[CE]  <identifier>  expected	32	None	replace
328	[BUG]  [BUGGY]  if(peek  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[i];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(peek  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[i];  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(peek  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[i];  }	  if(padding!=    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[i];    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
329	[BUG]  [BUGGY]  if(padding  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  field[i];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(padding  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  field[i];  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  field[i];  }	  if(padding!=    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[i];    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
330	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumberRule(field,  field,  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumberRule(field,  field,  1);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().selectNumberRule(field,  field,  1);	  Integer    cDateInstance    =    getChronology().selectNumberRule(field,    padding,    1);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
331	[BUG]  [BUGGY]  NeighborRule  rule  =  getRule(i);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  NeighborRule  rule  =  getRule(i);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	NeighborRule  rule  =  getRule(i);	  if(padding    >    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
332	[BUG]  [BUGGY]  FilterRule  rule  =  getRule(field);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  FilterRule  rule  =  getRule(field);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	FilterRule  rule  =  getRule(field);	  if(padding    >    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
333	[BUG]  [BUGGY]  NeighborRule  rule  =  getRule(field);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  NeighborRule  rule  =  getRule(field);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	NeighborRule  rule  =  getRule(field);	  if(padding    >    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
334	[BUG]  [BUGGY]  Integer  i  =  getRule(field);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  i  =  getRule(field);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  i  =  getRule(field);	  if(padding    >    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
335	[BUG]  [BUGGY]  mRules.selectPosition(field,  padding,  true);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.selectPosition(field,  padding,  true);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectPosition(field,  padding,  true);	  mRules.selectNumberRule(field,    padding,    true);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
336	[BUG]  [BUGGY]  return  new  UnpaddedNumberField(field,  3);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  UnpaddedNumberField(field,  3);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  UnpaddedNumberField(field,  3);	  return    new    UnpaddedNumberField(field,    1);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
337	[BUG]  [BUGGY]  return  new  SimpleDateFormatField(field,  mMinLengthEstimate  +  padding);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SimpleDateFormatField(field,  mMinLengthEstimate  +  padding);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SimpleDateFormatField(field,  mMinLengthEstimate  +  padding);	  return    new    SimpleDateFormatField(field,    mMinLengthEstimate);    	non-compiled	[CE]  <identifier>  expected	124	None	replace
338	[BUG]  [BUGGY]  return  new  SimpleDateFormatField(field,  3);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SimpleDateFormatField(field,  3);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SimpleDateFormatField(field,  3);	  return    new    SimpleDateFormatField(field,    0);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
339	[BUG]  [BUGGY]  if(field  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(field  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(field  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding	  if(field!=    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding    	non-compiled	[CE]  <identifier>  expected	119	None	replace
340	[BUG]  [BUGGY]  MutableRules.selectNumberRule(field,  padding);  break;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  MutableRules.selectNumberRule(field,  padding);  break;  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	MutableRules.selectNumberRule(field,  padding);  break;	  if(mRules!=    null)    {    mRules.selectNumberRule(field,    padding);    break;    }    	non-compiled	[CE]  <identifier>  expected	126	None	replace
341	[BUG]  [BUGGY]  mRules.selectNumberRule(field,  padding  *  1);  break;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.selectNumberRule(field,  padding  *  1);  break;  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNumberRule(field,  padding  *  1);  break;	  mRules.selectNumberRule(field,    padding    +    1);    break;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
342	[BUG]  [BUGGY]  Integer  field  =  mRules.get(this.timeZone  +  padding);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  field  =  mRules.get(this.timeZone  +  padding);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  mRules.get(this.timeZone  +  padding);	  Integer    field    =    mRules.get(this.timeZone);    	non-compiled	[CE]  <identifier>  expected	105	None	replace
343	[BUG]  [BUGGY]  rule.selectNumberRule(field,  0);  break;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  rule.selectNumberRule(field,  0);  break;  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	rule.selectNumberRule(field,  0);  break;	  rule.selectNumberRule(field,    padding);    break;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
344	[BUG]  [BUGGY]  rule.selectNumberRule(field,  field);  break;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  rule.selectNumberRule(field,  field);  break;  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	rule.selectNumberRule(field,  field);  break;	  rule.selectNumberRule(field,    padding);    break;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
345	[BUG]  [BUGGY]  return  new  SingleDigitNumberField(field,  2);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SingleDigitNumberField(field,  2);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SingleDigitNumberField(field,  2);	  return    new    SingleDigitNumberField(field,    0);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
346	[BUG]  [BUGGY]  mRules.selectNumberRule(field,  0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.selectNumberRule(field,  0);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNumberRule(field,  0);	  mRules.selectNumberRule(field,    1);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
347	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  fields.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  for(int  i  =  0,  len  =  fields.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	for(int  i  =  0,  len  =  fields.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }	  for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
348	[BUG]  [BUGGY]  if(padding  >  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(padding  >  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding  >  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }	  if(field!=    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
349	[BUG]  [BUGGY]  if(padding  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(padding  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }	  if(field!=    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
350	[BUG]  [BUGGY]  if(padding  >  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(padding  >  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding  >  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding	  if(field!=    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
351	[BUG]  [BUGGY]  if(padding  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(padding  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding	  if(field!=    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
352	[BUG]  [BUGGY]  return  new  SimpleDigitNumberField(field,  false);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SimpleDigitNumberField(field,  false);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SimpleDigitNumberField(field,  false);	  return    new    SimpleDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
353	[BUG]  [BUGGY]  return  new  DoubleDigitNumberField(field,  mMaxLengthEstimate  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  DoubleDigitNumberField(field,  mMaxLengthEstimate  +  1);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  DoubleDigitNumberField(field,  mMaxLengthEstimate  +  1);	  return    new    DoubleDigitNumberField(field,    mMaxLengthEstimate);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
354	[BUG]  [BUGGY]  if(padding!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  field[i];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(padding!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  field[i];  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  field[i];  }	  if(padding    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[i];    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
355	[BUG]  [BUGGY]  int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }	  for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
356	[BUG]  [BUGGY]  return  new  FastDateFormatField(field,  mMaxLengthEstimate  +  padding);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  FastDateFormatField(field,  mMaxLengthEstimate  +  padding);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  FastDateFormatField(field,  mMaxLengthEstimate  +  padding);	  return    new    FastDateFormatField(field,    mMaxLengthEstimate);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
357	[BUG]  [BUGGY]  return  new  FastDateFormatField(field,  mMinLengthEstimate);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  FastDateFormatField(field,  mMinLengthEstimate);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  FastDateFormatField(field,  mMinLengthEstimate);	  return    new    FastDateFormatField(field,    mMaxLengthEstimate);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
358	[BUG]  [BUGGY]  Integer  field  =  mRules.remove(field);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  field  =  mRules.remove(field);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  mRules.remove(field);	  Integer    field    =    mRules.remove(padding);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
359	[BUG]  [BUGGY]  if(field!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(field!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(field!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule	  if(field!=    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(    	non-compiled	[CE]  <identifier>  expected	57	None	replace
360	[BUG]  [BUGGY]  return  new  DoubleDigitNumberField(field,  3);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  DoubleDigitNumberField(field,  3);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  DoubleDigitNumberField(field,  3);	  return    new    DoubleDigitNumberField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
361	[BUG]  [BUGGY]  Integer  cDateInstance  =  getCurrentNumberInstance(field);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getCurrentNumberInstance(field);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getCurrentNumberInstance(field);	  Integer    cDateInstance    =    getCurrentInstance(field);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
362	[BUG]  [BUGGY]  Integer  cDateInstance  =  selectNumberRule(field);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  selectNumberRule(field);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  selectNumberRule(field);	  Integer    cDateInstance    =    getCurrentInstance(field);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
363	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  fields.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  for(int  i  =  0,  len  =  fields.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	for(int  i  =  0,  len  =  fields.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(	  for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(    	non-compiled	[CE]  <identifier>  expected	54	None	replace
364	[BUG]  [BUGGY]  if(padding  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(padding  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(field!=    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	120	None	replace
365	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  padding.length();  i  <  len;  ++i)  {  char  peek  =  field[i];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  For(int  i  =  0,  len  =  padding.length();  i  <  len;  ++i)  {  char  peek  =  field[i];  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	For(int  i  =  0,  len  =  padding.length();  i  <  len;  ++i)  {  char  peek  =  field[i];	  For(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[i];    	non-compiled	[CE]  <identifier>  expected	13	None	replace
366	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  fields.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule  ==  null)  {  return  rule.selectNumberRule(field,  padding);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  for(int  i  =  0,  len  =  fields.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule  ==  null)  {  return  rule.selectNumberRule(field,  padding);  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	for(int  i  =  0,  len  =  fields.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule  ==  null)  {  return  rule.selectNumberRule(field,  padding);  }	  for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule    ==    null)    {    return    rule.selectNumberRule(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
367	[BUG]  [BUGGY]  return  new  DoubleDigitNumberField(field,  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  DoubleDigitNumberField(field,  2);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  DoubleDigitNumberField(field,  2);	  return    new    DoubleDigitNumberField(field,    0);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
368	[BUG]  [BUGGY]  return  new  ShortDateFormatField(field,  mMaxLengthEstimate);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  ShortDateFormatField(field,  mMaxLengthEstimate);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  ShortDateFormatField(field,  mMaxLengthEstimate);	  return    new    ShortDateFormatField(field);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
369	[BUG]  [BUGGY]  return  new  ShortDateFormatField(field,  mRules);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  ShortDateFormatField(field,  mRules);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  ShortDateFormatField(field,  mRules);	  return    new    ShortDateFormatField(field);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
370	[BUG]  [BUGGY]  return  new  ShortDateFormatField(field,  mMinLengthEstimate);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  ShortDateFormatField(field,  mMinLengthEstimate);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  ShortDateFormatField(field,  mMinLengthEstimate);	  return    new    ShortDateFormatField(field);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
371	[BUG]  [BUGGY]  case  3:  return  new  TwoDigitNumberField(field);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  case  3:  return  new  TwoDigitNumberField(field);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	case  3:  return  new  TwoDigitNumberField(field);	  case    2:    return    new    TwoDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
372	[BUG]  [BUGGY]  return  new  DoubleDigitNumberField(field,  padding  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  DoubleDigitNumberField(field,  padding  -  1);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  DoubleDigitNumberField(field,  padding  -  1);	  return    new    DoubleDigitNumberField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
373	[BUG]  [BUGGY]  mRules.select(padding,  field,  true);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.select(padding,  field,  true);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.select(padding,  field,  true);	  mRules.select(field,    padding,    true);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
374	[BUG]  [BUGGY]  mRules.skip(field,  padding,  false);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.skip(field,  padding,  false);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.skip(field,  padding,  false);	  mRules.select(field,    padding,    true);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
375	[BUG]  [BUGGY]  Integer  cDateInstance  =  getCurrentDecimalInstance(field);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getCurrentDecimalInstance(field);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getCurrentDecimalInstance(field);	  Integer    cDateInstance    =    getCurrentInstance(field);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
376	[BUG]  [BUGGY]  mRules.selectPattern(this,  field);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.selectPattern(this,  field);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectPattern(this,  field);	  mRules.selectPattern(field);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
377	[BUG]  [BUGGY]  Integer  field  =  mRules.get(padding  /  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  field  =  mRules.get(padding  /  1);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  mRules.get(padding  /  1);	  Integer    field    =    mRules.get(padding    +    1);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
378	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumber(field,  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumber(field,  2);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().selectNumber(field,  2);	  Integer    cDateInstance    =    getChronology().selectNumber(field,    padding);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
379	[BUG]  [BUGGY]  mRules.selectPattern(field,  padding,  true);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.selectPattern(field,  padding,  true);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectPattern(field,  padding,  true);	  mRules.selectNumberRule(field,    padding,    true);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
380	[BUG]  [BUGGY]  case  0:  return  new  DoubleDigitNumberField(field);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  case  0:  return  new  DoubleDigitNumberField(field);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	case  0:  return  new  DoubleDigitNumberField(field);	  case    2:    return    new    DoubleDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
381	[BUG]  [BUGGY]  if(padding  >  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(padding  >  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding  >  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(field!=    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	120	None	replace
382	[BUG]  [BUGGY]  mRules.selectPattern(field,  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.selectPattern(field,  1);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectPattern(field,  1);	  mRules.selectNumberRule(field,    1);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
383	[BUG]  [BUGGY]  Integer  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[1];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[1];  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[1];  }	  For(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[0];    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
384	[BUG]  [BUGGY]  Integer  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  peek  =  padding[0];  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  peek  =  padding[0];  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  peek  =  padding[0];  }	  For(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[0];    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
385	[BUG]  [BUGGY]  return  new  SimpleDigitNumberField(field,  mMinLengthEstimate);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SimpleDigitNumberField(field,  mMinLengthEstimate);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SimpleDigitNumberField(field,  mMinLengthEstimate);	  return    new    SimpleDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
386	[BUG]  [BUGGY]  mRules.select(field,  padding,  4);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.select(field,  padding,  4);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.select(field,  padding,  4);	  mRules.select(field,    padding,    1);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
387	[BUG]  [BUGGY]  Integer  field  =  mRules.select(field);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  field  =  mRules.select(field);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  mRules.select(field);	  Integer    field    =    mRules.getField(field);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
388	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  fields.length();  i  <  len;  ++i)  {  char  peek  =  padding[i];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  for(int  i  =  0,  len  =  fields.length();  i  <  len;  ++i)  {  char  peek  =  padding[i];  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	for(int  i  =  0,  len  =  fields.length();  i  <  len;  ++i)  {  char  peek  =  padding[i];  }	  for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[i];    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
389	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(1);  if(rule!=  null)  {  return  rule.selectNumberRule(  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(1);  if(rule!=  null)  {  return  rule.selectNumberRule(  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(1);  if(rule!=  null)  {  return  rule.selectNumberRule(	  for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(    	non-compiled	[CE]  <identifier>  expected	54	None	replace
390	[BUG]  [BUGGY]  if(padding!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  peek  =  padding[i];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(padding!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  peek  =  padding[i];  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  peek  =  padding[i];  }	  if(padding    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[i];    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
391	[BUG]  [BUGGY]  mRules.selectNumberRule(field,  padding,  false,  null);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.selectNumberRule(field,  padding,  false,  null);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNumberRule(field,  padding,  false,  null);	  mRules.selectNumberRule(field,    padding,    false);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
392	[BUG]  [BUGGY]  if(padding  >=  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(padding  >=  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding  >=  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }	  if(field!=    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
393	[BUG]  [BUGGY]  if(padding  >=  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(padding  >=  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding  >=  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding	  if(field!=    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
394	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().select(field,  padding  -  padding  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getChronology().select(field,  padding  -  padding  +  1);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().select(field,  padding  -  padding  +  1);	  Integer    cDateInstance    =    getChronology().select(field,    padding    +    1);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
395	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding	  for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding    	non-compiled	[CE]  <identifier>  expected	29	None	replace
396	[BUG]  [BUGGY]  if(peek  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  peek  =  padding[i];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(peek  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  peek  =  padding[i];  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(peek  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  peek  =  padding[i];  }	  if(padding    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    peek    =    padding[i];    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
397	[BUG]  [BUGGY]  FormatPattern  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  peek  =  padding[i];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  FormatPattern  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  peek  =  padding[i];  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	FormatPattern  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  peek  =  padding[i];  }	  if(padding    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    peek    =    padding[i];    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
398	[BUG]  [BUGGY]  if(peek  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  peek  =  FieldUtils.safeMultiply(field,  padding[i]);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(peek  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  peek  =  FieldUtils.safeMultiply(field,  padding[i]);  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(peek  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  peek  =  FieldUtils.safeMultiply(field,  padding[i]);  }	  if(padding    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    peek    =    padding[i];    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
399	[BUG]  [BUGGY]  if(peek  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  peek  =  padding[0];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(peek  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  peek  =  padding[0];  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(peek  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  peek  =  padding[0];  }	  if(padding    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    peek    =    padding[i];    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
400	[BUG]  [BUGGY]  return  new  UnpaddedNumberField(field,  mRules,  mMaxLengthEstimate);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  UnpaddedNumberField(field,  mRules,  mMaxLengthEstimate);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  UnpaddedNumberField(field,  mRules,  mMaxLengthEstimate);	  return    new    UnpaddedNumberField(field,    mRules);    	non-compiled	[CE]  <identifier>  expected	132	None	replace
401	[BUG]  [BUGGY]  return  new  LongDigitNumberField(field,  mMaxLengthEstimate);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  LongDigitNumberField(field,  mMaxLengthEstimate);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  LongDigitNumberField(field,  mMaxLengthEstimate);	  return    new    LongDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
402	[BUG]  [BUGGY]  return  new  LongDigitNumberField(field,  mMinLengthEstimate);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  LongDigitNumberField(field,  mMinLengthEstimate);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  LongDigitNumberField(field,  mMinLengthEstimate);	  return    new    LongDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
403	[BUG]  [BUGGY]  return  new  SimpleDigitNumberField(field,  padding  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SimpleDigitNumberField(field,  padding  -  1);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SimpleDigitNumberField(field,  padding  -  1);	  return    new    SimpleDigitNumberField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
404	[BUG]  [BUGGY]  return  new  BigDecimalField(field);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  BigDecimalField(field);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  BigDecimalField(field);	  return    new    SHORTDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
405	[BUG]  [BUGGY]  if(mRules!=  null)  {  mRules.selectNumberRule(field,  1);  break;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(mRules!=  null)  {  mRules.selectNumberRule(field,  1);  break;  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(mRules!=  null)  {  mRules.selectNumberRule(field,  1);  break;  }	  mRules.selectNumberRule(field,    1);    break;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
406	[BUG]  [BUGGY]  mRules.selectNumber(field,  padding);  break;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.selectNumber(field,  padding);  break;  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNumber(field,  padding);  break;	  mRules.selectNumberRule(field,    1);    break;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
407	[BUG]  [BUGGY]  mRules.select(field,  3);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.select(field,  3);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.select(field,  3);	  mRules.select(field,    1);    	non-compiled	[CE]  <identifier>  expected	103	None	replace
408	[BUG]  [BUGGY]  if(field  <  1)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(field  <  1)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(field  <  1)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule	  if(field    ==    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule    	non-compiled	[CE]  <identifier>  expected	94	None	replace
409	[BUG]  [BUGGY]  case  1:  return  new  TwoDigitYearField(field);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  case  1:  return  new  TwoDigitYearField(field);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	case  1:  return  new  TwoDigitYearField(field);	  case    1:    return    new    TwoDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
410	[BUG]  [BUGGY]  Case  1:  return  new  TwoDigitNumberField(field,  padding);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Case  1:  return  new  TwoDigitNumberField(field,  padding);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Case  1:  return  new  TwoDigitNumberField(field,  padding);	  case    1:    return    new    TwoDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
411	[BUG]  [BUGGY]  Integer  cDateInstance  =  getCurrentCharacterInstance(polymorphic);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getCurrentCharacterInstance(polymorphic);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getCurrentCharacterInstance(polymorphic);	  Integer    cDateInstance    =    getCurrentCharacterInstance();    	non-compiled	[CE]  <identifier>  expected	106	None	replace
412	[BUG]  [BUGGY]  if(mRule!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(mRule!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(mRule!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(	  if(mRules!=    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(    	non-compiled	[CE]  <identifier>  expected	109	None	replace
413	[BUG]  [BUGGY]  if(padding  >=  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(padding  >=  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding  >=  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(	  if(field!=    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(    	non-compiled	[CE]  <identifier>  expected	111	None	replace
414	[BUG]  [BUGGY]  mRules.remove(field);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.remove(field);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.remove(field);	  mRules.select(field);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
415	[BUG]  [BUGGY]  Integer  cDateInstance  =  getCurrentCharIndex(field);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  cDateInstance  =  getCurrentCharIndex(field);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getCurrentCharIndex(field);	  Integer    cDateInstance    =    getCurrentCharIndex();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
416	[BUG]  [BUGGY]  mRules.selectNumberRule(field,  padding);  break;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.selectNumberRule(field,  padding);  break;  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNumberRule(field,  padding);  break;  }	  if(mRules!=    null)    {    mRules.selectNumberRule(field,    padding);    break;    }    	non-compiled	[CE]  <identifier>  expected	126	None	replace
417	[BUG]  [BUGGY]  return  new  ShortDigitNumberField(field,  mMaxLengthEstimate);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  ShortDigitNumberField(field,  mMaxLengthEstimate);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  ShortDigitNumberField(field,  mMaxLengthEstimate);	  return    new    ShortDigitNumberField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
418	[BUG]  [BUGGY]  Return  new  SimpleDateFormatField(field,  mRules);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Return  new  SimpleDateFormatField(field,  mRules);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Return  new  SimpleDateFormatField(field,  mRules);	  Return    new    SimpleDateFormatField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
419	[BUG]  [BUGGY]  if(padding!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  peek  =  padding[0];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(padding!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  peek  =  padding[0];  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  peek  =  padding[0];  }	  if(padding    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[0];    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
420	[BUG]  [BUGGY]  if(padding  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  peek  =  padding[0];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(padding  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  peek  =  padding[0];  }  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  peek  =  padding[0];  }	  if(padding    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[0];    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
421	[BUG]  [BUGGY]  rule.selectNumberRule(field,  padding,  true);  break;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  rule.selectNumberRule(field,  padding,  true);  break;  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	rule.selectNumberRule(field,  padding,  true);  break;	  rule.selectNumberRule(field,    padding);    break;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
422	[BUG]  [BUGGY]  Integer  field  =  getField(field).intValue()  /  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  Integer  field  =  getField(field).intValue()  /  1;  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  getField(field).intValue()  /  1;	  Integer    field    =    getField(field).intValue()    +    1;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
423	[BUG]  [BUGGY]  case  1:  return  new  DoubleDigitNumberField(field,  mMaxLengthEstimate);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  case  1:  return  new  DoubleDigitNumberField(field,  mMaxLengthEstimate);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	case  1:  return  new  DoubleDigitNumberField(field,  mMaxLengthEstimate);	  case    1:    return    new    DoubleDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
424	[BUG]  [BUGGY]  return  new  FastDateFormatField(field,  padding  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  FastDateFormatField(field,  padding  -  1);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  FastDateFormatField(field,  padding  -  1);	  return    new    FastDateFormatField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
425	[BUG]  [BUGGY]  return  new  SimpleDateFormatField(field,  true,  padding);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SimpleDateFormatField(field,  true,  padding);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SimpleDateFormatField(field,  true,  padding);	  return    new    SimpleDateFormatField(field,    true);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
426	[BUG]  [BUGGY]  return  new  SelectNumberRule(field,  padding  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  SelectNumberRule(field,  padding  -  1);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SelectNumberRule(field,  padding  -  1);	  return    new    SelectNumberRule(field,    padding);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
427	[BUG]  [BUGGY]  mRules.select(field,  padding,  rule);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.select(field,  padding,  rule);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.select(field,  padding,  rule);	  mRules.select(field,    padding,    null);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
428	[BUG]  [BUGGY]  mRules.select(field,  padding,  Rule.NONE);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  mRules.select(field,  padding,  Rule.NONE);  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.select(field,  padding,  Rule.NONE);	  mRules.select(field,    padding,    null);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
429	[BUG]  [BUGGY]  return  new  ShortDigitYearField(field,  mMaxLengthEstimate);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  ShortDigitYearField(field,  mMaxLengthEstimate);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  ShortDigitYearField(field,  mMaxLengthEstimate);	  return    new    ShortDigitYearField(field);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
430	[BUG]  [BUGGY]  return  new  ShortDigitYearField(field,  mMinLengthEstimate);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  return  new  ShortDigitYearField(field,  mMinLengthEstimate);  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  ShortDigitYearField(field,  mMinLengthEstimate);	  return    new    ShortDigitYearField(field);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
431	[BUG]  [BUGGY]  if(mRules!=  null)  {  return  new  SimpleDateFormatField(field,  mRules);  }  else  {  return  new  SimpleDateFormatField(field,  padding);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(mRules!=  null)  {  return  new  SimpleDateFormatField(field,  mRules);  }  else  {  return  new  SimpleDateFormatField(field,  padding);  }  [BUGGY]      case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(mRules!=  null)  {  return  new  SimpleDateFormatField(field,  mRules);  }  else  {  return  new  SimpleDateFormatField(field,  padding);  }	  return    new    SimpleDateFormatField(field,    mRules);    	non-compiled	[CE]  <identifier>  expected	123	None	replace
432	[BUG]  [BUGGY]  if(padding!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(padding!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding	  if(padding    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding    	non-compiled	[CE]  <identifier>  expected	32	None	replace
433	[BUG]  [BUGGY]  if(padding!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:      [BUGGY]  if(padding!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [BUGGY]      return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding	  if(padding    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding    	non-compiled	[CE]  <identifier>  expected	32	None	replace
