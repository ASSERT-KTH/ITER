bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  mRules.select(field);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  mRules.select(field);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.select(field);	      mRules.selectNumberRule(field);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
2	[BUG]  [BUGGY]  mRules.selectNumber(field,  padding);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  mRules.selectNumber(field,  padding);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNumber(field,  padding);	      mRules.selectNumberRule(field);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
3	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().select(field,  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  Integer  cDateInstance  =  getChronology().select(field,  1);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().select(field,  1);	      Integer    cDateInstance    =    getChronology().select(field,    padding);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
4	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().select(field,  padding,  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  Integer  cDateInstance  =  getChronology().select(field,  padding,  0);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().select(field,  padding,  0);	      Integer    cDateInstance    =    getChronology().select(field,    padding);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
5	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().select(field,  padding  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  Integer  cDateInstance  =  getChronology().select(field,  padding  +  1);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().select(field,  padding  +  1);	      Integer    cDateInstance    =    getChronology().select(field,    padding);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
6	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().select(field,  field  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  Integer  cDateInstance  =  getChronology().select(field,  field  +  1);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().select(field,  field  +  1);	      Integer    cDateInstance    =    getChronology().select(field,    padding);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
7	[BUG]  [BUGGY]  return  new  SimpleDateFormatField(field,  padding);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  return  new  SimpleDateFormatField(field,  padding);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SimpleDateFormatField(field,  padding);	  return    new    SimpleDateFormatField(field);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
8	[BUG]  [BUGGY]  Return  new  SimpleDateFormatField(field,  padding);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  Return  new  SimpleDateFormatField(field,  padding);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Return  new  SimpleDateFormatField(field,  padding);	  return    new    SimpleDateFormatField(field);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
9	[BUG]  [BUGGY]  return  new  SimpleDateFormatField(field,  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  return  new  SimpleDateFormatField(field,  0);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SimpleDateFormatField(field,  0);	  return    new    SimpleDateFormatField(field);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
10	[BUG]  [BUGGY]  return  new  SimpleDateFormatField(field,  false);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  return  new  SimpleDateFormatField(field,  false);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SimpleDateFormatField(field,  false);	  return    new    SimpleDateFormatField(field);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
11	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[i];  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[i];  }  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[i];  }	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[i];    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
12	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[i];  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[i];  }  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[i];  }	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[i];    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
13	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[i];  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[i];  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[i];	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[i];    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
14	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[0];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[0];  }  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[0];  }	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[i];    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
15	[BUG]  [BUGGY]  mRules.selectNumberRule(field,  padding  +  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  mRules.selectNumberRule(field,  padding  +  1);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNumberRule(field,  padding  +  1);	      mRules.selectNumberRule(field,    padding);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
16	[BUG]  [BUGGY]  mRules.selectNumberRule(field,  padding,  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  mRules.selectNumberRule(field,  padding,  1);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNumberRule(field,  padding,  1);	      mRules.selectNumberRule(field,    padding);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
17	[BUG]  [BUGGY]  mRules.selectNumberRule(field,  padding,  true);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  mRules.selectNumberRule(field,  padding,  true);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNumberRule(field,  padding,  true);	      mRules.selectNumberRule(field,    padding);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
18	[BUG]  [BUGGY]  return  new  SingleDigitNumberField(field,  padding);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  return  new  SingleDigitNumberField(field,  padding);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SingleDigitNumberField(field,  padding);	  return    new    SingleDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
19	[BUG]  [BUGGY]  return  new  DoubleDigitNumberField(field,  padding);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  return  new  DoubleDigitNumberField(field,  padding);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  DoubleDigitNumberField(field,  padding);	  return    new    SingleDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
20	[BUG]  [BUGGY]  return  new  SimpleDigitNumberField(field,  padding);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  return  new  SimpleDigitNumberField(field,  padding);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SimpleDigitNumberField(field,  padding);	  return    new    SingleDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
21	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumberRule(padding);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumberRule(padding);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().selectNumberRule(padding);	      Integer    cDateInstance    =    getChronology().selectNumberRule(field);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
22	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().selectNullRule(field);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  Integer  cDateInstance  =  getChronology().selectNullRule(field);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().selectNullRule(field);	      Integer    cDateInstance    =    getChronology().selectNumberRule(field);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
23	[BUG]  [BUGGY]  Integer  field  =  mRules.get(field);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  Integer  field  =  mRules.get(field);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  mRules.get(field);	      Integer    field    =    mRules.get(padding);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
24	[BUG]  [BUGGY]  Integer  field  =  mRules.get(0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  Integer  field  =  mRules.get(0);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  mRules.get(0);	      Integer    field    =    mRules.get(padding);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
25	[BUG]  [BUGGY]  Integer  field  =  mRules.get(padding  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  Integer  field  =  mRules.get(padding  +  1);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  mRules.get(padding  +  1);	      Integer    field    =    mRules.get(padding);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
26	[BUG]  [BUGGY]  Integer  field  =  mRules.getField(field);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  Integer  field  =  mRules.getField(field);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  mRules.getField(field);	      Integer    field    =    mRules.get(padding);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
27	[BUG]  [BUGGY]  return  new  UnpaddedNumberField(field,  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  return  new  UnpaddedNumberField(field,  1);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  UnpaddedNumberField(field,  1);	  return    new    UnpaddedNumberField(field,    0);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
28	[BUG]  [BUGGY]  return  new  UnpaddedNumberField(field,  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  return  new  UnpaddedNumberField(field,  2);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  UnpaddedNumberField(field,  2);	  return    new    UnpaddedNumberField(field,    0);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
29	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding    	non-compiled	[CE]  <identifier>  expected	22	None	replace
30	[BUG]  [BUGGY]  if(padding  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  if(padding  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding    	non-compiled	[CE]  <identifier>  expected	22	None	replace
31	[BUG]  [BUGGY]  if(field  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  if(field  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(field  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding    	non-compiled	[CE]  <identifier>  expected	22	None	replace
32	[BUG]  [BUGGY]  if(padding  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  if(padding  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding    	non-compiled	[CE]  <identifier>  expected	22	None	replace
33	[BUG]  [BUGGY]  case  1:  return  new  TwoDigitNumberField(field);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  case  1:  return  new  TwoDigitNumberField(field);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	case  1:  return  new  TwoDigitNumberField(field);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
34	[BUG]  [BUGGY]  case  2:  return  new  TwoDigitNumberField(field);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  case  2:  return  new  TwoDigitNumberField(field);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	case  2:  return  new  TwoDigitNumberField(field);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
35	[BUG]  [BUGGY]  case  1:  return  new  DoubleDigitNumberField(field);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  case  1:  return  new  DoubleDigitNumberField(field);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	case  1:  return  new  DoubleDigitNumberField(field);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
36	[BUG]  [BUGGY]  case  2:  return  new  TwoDigitNumberField(field,  padding);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  case  2:  return  new  TwoDigitNumberField(field,  padding);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	case  2:  return  new  TwoDigitNumberField(field,  padding);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
37	[BUG]  [BUGGY]  return  new  FastDateFormatField(field,  padding);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  return  new  FastDateFormatField(field,  padding);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  FastDateFormatField(field,  padding);	  return    new    FastDateFormatField(field);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
38	[BUG]  [BUGGY]  return  new  ShortDateFormatField(field);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  return  new  ShortDateFormatField(field);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  ShortDateFormatField(field);	  return    new    FastDateFormatField(field);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
39	[BUG]  [BUGGY]  return  new  FastDateFormatField(field,  0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  return  new  FastDateFormatField(field,  0);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  FastDateFormatField(field,  0);	  return    new    FastDateFormatField(field);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
40	[BUG]  [BUGGY]  return  new  DoubleDigitNumberField(field,  mMaxLengthEstimate);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  return  new  DoubleDigitNumberField(field,  mMaxLengthEstimate);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  DoubleDigitNumberField(field,  mMaxLengthEstimate);	  return    new    DoubleDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
41	[BUG]  [BUGGY]  return  new  DoubleDigitNumberField(field,  0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  return  new  DoubleDigitNumberField(field,  0);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  DoubleDigitNumberField(field,  0);	  return    new    DoubleDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
42	[BUG]  [BUGGY]  return  new  DoubleDigitNumberField(field,  mMinLengthEstimate);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  return  new  DoubleDigitNumberField(field,  mMinLengthEstimate);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  DoubleDigitNumberField(field,  mMinLengthEstimate);	  return    new    DoubleDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
43	[BUG]  [BUGGY]  return  new  ShortDigitNumberField(field,  padding);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  return  new  ShortDigitNumberField(field,  padding);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  ShortDigitNumberField(field,  padding);	  return    new    ShortDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
44	[BUG]  [BUGGY]  return  new  SHORTDigitNumberField(field);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  return  new  SHORTDigitNumberField(field);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SHORTDigitNumberField(field);	  return    new    ShortDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
45	[BUG]  [BUGGY]  return  new  ShortDigitNumberField(field,  0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  return  new  ShortDigitNumberField(field,  0);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  ShortDigitNumberField(field,  0);	  return    new    ShortDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
46	[BUG]  [BUGGY]  return  new  LongDigitNumberField(field);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  return  new  LongDigitNumberField(field);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  LongDigitNumberField(field);	  return    new    ShortDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
47	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
48	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
49	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule  ==  null)  {  return  rule.selectNumberRule(field,  padding);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule  ==  null)  {  return  rule.selectNumberRule(field,  padding);  }  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule  ==  null)  {  return  rule.selectNumberRule(field,  padding);  }	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
50	[BUG]  [BUGGY]  mRules.select(field,  padding  +  1);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  mRules.select(field,  padding  +  1);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.select(field,  padding  +  1);	      mRules.select(field,    padding);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
51	[BUG]  [BUGGY]  mRules.select(field,  padding,  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  mRules.select(field,  padding,  1);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.select(field,  padding,  1);	      mRules.select(field,    padding);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
52	[BUG]  [BUGGY]  mRules.select(field,  padding,  true);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  mRules.select(field,  padding,  true);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.select(field,  padding,  true);	      mRules.select(field,    padding);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
53	[BUG]  [BUGGY]  mRules.select(field,  padding,  false);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  mRules.select(field,  padding,  false);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.select(field,  padding,  false);	      mRules.select(field,    padding);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
54	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(    	non-compiled	[CE]  <identifier>  expected	20	None	replace
55	[BUG]  [BUGGY]  if(field  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  if(field  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(field  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(    	non-compiled	[CE]  <identifier>  expected	20	None	replace
56	[BUG]  [BUGGY]  if(padding  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  if(padding  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(    	non-compiled	[CE]  <identifier>  expected	20	None	replace
57	[BUG]  [BUGGY]  if(field!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  if(field!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(field!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(    	non-compiled	[CE]  <identifier>  expected	20	None	replace
58	[BUG]  [BUGGY]  Integer  cDateInstance  =  getCurrentCharIndex();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  Integer  cDateInstance  =  getCurrentCharIndex();  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getCurrentCharIndex();	      Integer    cDateInstance    =    getCurrentInstance();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
59	[BUG]  [BUGGY]  Integer  cDateInstance  =  getCurrentSecondInstance();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  Integer  cDateInstance  =  getCurrentSecondInstance();  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getCurrentSecondInstance();	      Integer    cDateInstance    =    getCurrentInstance();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
60	[BUG]  [BUGGY]  Integer  cDateInstance  =  getCurrentEntry();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  Integer  cDateInstance  =  getCurrentEntry();  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getCurrentEntry();	      Integer    cDateInstance    =    getCurrentInstance();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
61	[BUG]  [BUGGY]  Integer  field  =  getField(field).intValue()  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  Integer  field  =  getField(field).intValue()  +  1;  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  getField(field).intValue()  +  1;	      Integer    field    =    getField(field).intValue();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
62	[BUG]  [BUGGY]  Integer  field  =  getField(field).intValue()  -  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  Integer  field  =  getField(field).intValue()  -  1;  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  getField(field).intValue()  -  1;	      Integer    field    =    getField(field).intValue();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
63	[BUG]  [BUGGY]  Integer  field  =  getField(field).intValue()  +  padding;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  Integer  field  =  getField(field).intValue()  +  padding;  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  getField(field).intValue()  +  padding;	      Integer    field    =    getField(field).intValue();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
64	[BUG]  [BUGGY]  return  new  UnpaddedNumberField(field,  padding  +  1);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  return  new  UnpaddedNumberField(field,  padding  +  1);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  UnpaddedNumberField(field,  padding  +  1);	  return    new    UnpaddedNumberField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
65	[BUG]  [BUGGY]  return  new  UnpaddedNumberField(field,  mMaxLengthEstimate);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  return  new  UnpaddedNumberField(field,  mMaxLengthEstimate);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  UnpaddedNumberField(field,  mMaxLengthEstimate);	  return    new    UnpaddedNumberField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
66	[BUG]  [BUGGY]  mRules.selectNumberRule(field,  padding  +  1);  break;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  mRules.selectNumberRule(field,  padding  +  1);  break;  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNumberRule(field,  padding  +  1);  break;	      mRules.selectNumberRule(field,    padding);    break;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
67	[BUG]  [BUGGY]  rule.selectNumberRule(field,  padding);  break;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  rule.selectNumberRule(field,  padding);  break;  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	rule.selectNumberRule(field,  padding);  break;	      mRules.selectNumberRule(field,    padding);    break;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
68	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumberRule(field,  padding  +  1);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumberRule(field,  padding  +  1);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().selectNumberRule(field,  padding  +  1);	      Integer    cDateInstance    =    getChronology().selectNumberRule(field,    padding);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
69	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumberRule(field,  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumberRule(field,  1);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().selectNumberRule(field,  1);	      Integer    cDateInstance    =    getChronology().selectNumberRule(field,    padding);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
70	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumberRule(field,  padding,  0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumberRule(field,  padding,  0);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().selectNumberRule(field,  padding,  0);	      Integer    cDateInstance    =    getChronology().selectNumberRule(field,    padding);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
71	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumberRule(field,  padding,  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumberRule(field,  padding,  1);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().selectNumberRule(field,  padding,  1);	      Integer    cDateInstance    =    getChronology().selectNumberRule(field,    padding);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
72	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
73	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	For(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
74	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
75	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( " ".);  }	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
76	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( ". ");  }	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
77	[BUG]  [BUGGY]  if(field  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  if(field  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(field  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding    	non-compiled	[CE]  <identifier>  expected	22	None	replace
78	[BUG]  [BUGGY]  if(field  <  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  if(field  <  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(field  <  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding    	non-compiled	[CE]  <identifier>  expected	22	None	replace
79	[BUG]  [BUGGY]  if(field!=  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  if(field!=  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(field!=  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding    	non-compiled	[CE]  <identifier>  expected	22	None	replace
80	[BUG]  [BUGGY]  mRules.selectNumberRule(field,  1);  break;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  mRules.selectNumberRule(field,  1);  break;  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNumberRule(field,  1);  break;	      mRules.selectNumberRule(field,    padding);    break;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
81	[BUG]  [BUGGY]  return  new  FastDateFormatField(field,  false);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  return  new  FastDateFormatField(field,  false);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  FastDateFormatField(field,  false);	  return    new    FastDateFormatField(field);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
82	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumberRule(field,  4);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumberRule(field,  4);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().selectNumberRule(field,  4);	      Integer    cDateInstance    =    getChronology().selectNumberRule(field,    padding);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
83	[BUG]  [BUGGY]  return  new  SelectNumberRule(field,  padding);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  return  new  SelectNumberRule(field,  padding);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SelectNumberRule(field,  padding);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
84	[BUG]  [BUGGY]  mRules.selectNumberRule(field,  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  mRules.selectNumberRule(field,  1);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNumberRule(field,  1);	      mRules.selectNumberRule(field,    padding);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
85	[BUG]  [BUGGY]  mRules.selectNumberRule(field,  field);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  mRules.selectNumberRule(field,  field);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNumberRule(field,  field);	      mRules.selectNumberRule(field,    padding);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
86	[BUG]  [BUGGY]  return  new  SingleDigitNumberField(field,  0);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  return  new  SingleDigitNumberField(field,  0);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SingleDigitNumberField(field,  0);	  return    new    SingleDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
87	[BUG]  [BUGGY]  return  new  SimpleDigitNumberField(field);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  return  new  SimpleDigitNumberField(field);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SimpleDigitNumberField(field);	  return    new    SingleDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
88	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
89	[BUG]  [BUGGY]  Integer  cDateInstance  =  getCurrentIndex();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  Integer  cDateInstance  =  getCurrentIndex();  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getCurrentIndex();	      Integer    cDateInstance    =    getCurrentInstance();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
90	[BUG]  [BUGGY]  return  new  UnpaddedNumberField(field,  0L);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  return  new  UnpaddedNumberField(field,  0L);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  UnpaddedNumberField(field,  0L);	  return    new    UnpaddedNumberField(field,    0);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
91	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumber(field,  padding);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  Integer  cDateInstance  =  getChronology().selectNumber(field,  padding);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().selectNumber(field,  padding);	      Integer    cDateInstance    =    getChronology().selectNumberRule(field);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
92	[BUG]  [BUGGY]  if(field  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  if(field  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(field  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(    	non-compiled	[CE]  <identifier>  expected	20	None	replace
93	[BUG]  [BUGGY]  if(field!=  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  if(field!=  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(field!=  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(    	non-compiled	[CE]  <identifier>  expected	20	None	replace
94	[BUG]  [BUGGY]  if(field  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  if(field  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(field  ==  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(    	non-compiled	[CE]  <identifier>  expected	20	None	replace
95	[BUG]  [BUGGY]  Integer  field  =  getField(1).intValue();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  Integer  field  =  getField(1).intValue();  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  getField(1).intValue();	      Integer    field    =    getField(field).intValue();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
96	[BUG]  [BUGGY]  return  new  DoubleDigitNumberField(field,  false);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  return  new  DoubleDigitNumberField(field,  false);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  DoubleDigitNumberField(field,  false);	  return    new    DoubleDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
97	[BUG]  [BUGGY]  if(padding  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[i];  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  if(padding  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[i];  }  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[i];  }	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[i];    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
98	[BUG]  [BUGGY]  if(padding!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[i];  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  if(padding!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[i];  }  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[i];  }	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[i];    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
99	[BUG]  [BUGGY]  if(padding  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[0];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  if(padding  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[0];  }  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  char  peek  =  padding[0];  }	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[i];    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
100	[BUG]  [BUGGY]  return  new  SimpleDateFormatField(field,  true);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  return  new  SimpleDateFormatField(field,  true);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SimpleDateFormatField(field,  true);	  return    new    SimpleDateFormatField(field);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
101	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().select(field,  4);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  Integer  cDateInstance  =  getChronology().select(field,  4);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().select(field,  4);	      Integer    cDateInstance    =    getChronology().select(field,    padding);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
102	[BUG]  [BUGGY]  mRules.select(field,  field);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  mRules.select(field,  field);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.select(field,  field);	      mRules.select(field,    padding);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
103	[BUG]  [BUGGY]  mRules.select(field,  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  mRules.select(field,  1);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.select(field,  1);	      mRules.select(field,    padding);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
104	[BUG]  [BUGGY]  mRules.select(field,  null);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  mRules.select(field,  null);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.select(field,  null);	      mRules.select(field,    padding);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
105	[BUG]  [BUGGY]  Integer  field  =  mRules.get(this.timeZone);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  Integer  field  =  mRules.get(this.timeZone);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  mRules.get(this.timeZone);	      Integer    field    =    mRules.get(padding);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
106	[BUG]  [BUGGY]  Integer  cDateInstance  =  getCurrentCharacterInstance();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  Integer  cDateInstance  =  getCurrentCharacterInstance();  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getCurrentCharacterInstance();	      Integer    cDateInstance    =    getCurrentInstance();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
107	[BUG]  [BUGGY]  Integer  cDateInstance  =  getCurrentInstance(field);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  Integer  cDateInstance  =  getCurrentInstance(field);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getCurrentInstance(field);	      Integer    cDateInstance    =    getCurrentInstance();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
108	[BUG]  [BUGGY]  case  2:  return  new  DoubleDigitNumberField(field);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  case  2:  return  new  DoubleDigitNumberField(field);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	case  2:  return  new  DoubleDigitNumberField(field);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
109	[BUG]  [BUGGY]  if(mRules!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  if(mRules!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(mRules!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(    	non-compiled	[CE]  <identifier>  expected	20	None	replace
110	[BUG]  [BUGGY]  if(mRules!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  if(mRules!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(mRules!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(    	non-compiled	[CE]  <identifier>  expected	20	None	replace
111	[BUG]  [BUGGY]  if(field!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  if(field!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(field!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(    	non-compiled	[CE]  <identifier>  expected	20	None	replace
112	[BUG]  [BUGGY]  return  new  FastDateFormatField(field,  mMaxLengthEstimate);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  return  new  FastDateFormatField(field,  mMaxLengthEstimate);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  FastDateFormatField(field,  mMaxLengthEstimate);	  return    new    FastDateFormatField(field);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
113	[BUG]  [BUGGY]  return  new  FastDateFormatField(field,  mRules);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  return  new  FastDateFormatField(field,  mRules);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  FastDateFormatField(field,  mRules);	  return    new    FastDateFormatField(field);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
114	[BUG]  [BUGGY]  if(padding  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  peek  =  padding[i];  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  if(padding  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  peek  =  padding[i];  }  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding  ==  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  peek  =  padding[i];  }	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    char    peek    =    padding[i];    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
115	[BUG]  [BUGGY]  Integer  field  =  mRules.get(padding  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  Integer  field  =  mRules.get(padding  -  1);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  mRules.get(padding  -  1);	      Integer    field    =    mRules.get(padding);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
116	[BUG]  [BUGGY]  Integer  field  =  mRules.remove(padding);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  Integer  field  =  mRules.remove(padding);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  field  =  mRules.remove(padding);	      Integer    field    =    mRules.get(padding);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
117	[BUG]  [BUGGY]  if(field!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  if(field!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(field!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
118	[BUG]  [BUGGY]  if(field!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  if(field!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(field!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding);  }	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
119	[BUG]  [BUGGY]  if(field!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  if(field!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(field!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
120	[BUG]  [BUGGY]  if(field!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  if(field!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(field!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
121	[BUG]  [BUGGY]  if(padding  >  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  if(padding  >  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(padding  >  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
122	[BUG]  [BUGGY]  return  new  SimpleDateFormatField(field,  mMaxLengthEstimate);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  return  new  SimpleDateFormatField(field,  mMaxLengthEstimate);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SimpleDateFormatField(field,  mMaxLengthEstimate);	  return    new    SimpleDateFormatField(field);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
123	[BUG]  [BUGGY]  return  new  SimpleDateFormatField(field,  mRules);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  return  new  SimpleDateFormatField(field,  mRules);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SimpleDateFormatField(field,  mRules);	  return    new    SimpleDateFormatField(field);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
124	[BUG]  [BUGGY]  return  new  SimpleDateFormatField(field,  mMinLengthEstimate);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  return  new  SimpleDateFormatField(field,  mMinLengthEstimate);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  SimpleDateFormatField(field,  mMinLengthEstimate);	  return    new    SimpleDateFormatField(field);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
125	[BUG]  [BUGGY]  mRules.selectPattern(field);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  mRules.selectPattern(field);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectPattern(field);	      mRules.selectNumberRule(field);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
126	[BUG]  [BUGGY]  if(mRules!=  null)  {  mRules.selectNumberRule(field,  padding);  break;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  if(mRules!=  null)  {  mRules.selectNumberRule(field,  padding);  break;  }  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(mRules!=  null)  {  mRules.selectNumberRule(field,  padding);  break;  }	      mRules.selectNumberRule(field,    padding);    break;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
127	[BUG]  [BUGGY]  mRules.selectNumberRule(field,  padding,  0);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  mRules.selectNumberRule(field,  padding,  0);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNumberRule(field,  padding,  0);	      mRules.selectNumberRule(field,    padding);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
128	[BUG]  [BUGGY]  mRules.selectNumberRule(field,  padding,  false);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  mRules.selectNumberRule(field,  padding,  false);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.selectNumberRule(field,  padding,  false);	      mRules.selectNumberRule(field,    padding);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
129	[BUG]  [BUGGY]  return  new  ShortDigitYearField(field);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  return  new  ShortDigitYearField(field);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  ShortDigitYearField(field);	  return    new    ShortDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
130	[BUG]  [BUGGY]  if(mRules!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  if(mRules!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	if(mRules!=  null)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  Rule  rule  =  getRule(i);  if(rule!=  null)  {  return  rule.selectNumberRule(field,  padding	      if(mRules    ==    null)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    Rule    rule    =    getRule(i);    if(rule!=    null)    {    return    rule.selectNumberRule(field,    padding    	non-compiled	[CE]  <identifier>  expected	22	None	replace
131	[BUG]  [BUGGY]  return  new  UnpaddedNumberField(field,  padding  -  1);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  return  new  UnpaddedNumberField(field,  padding  -  1);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  UnpaddedNumberField(field,  padding  -  1);	  return    new    UnpaddedNumberField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
132	[BUG]  [BUGGY]  return  new  UnpaddedNumberField(field,  mRules);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  return  new  UnpaddedNumberField(field,  mRules);  [BUGGY]    case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	return  new  UnpaddedNumberField(field,  mRules);	  return    new    UnpaddedNumberField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
133	[BUG]  [BUGGY]  mRules.select(field,  padding,  null);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  mRules.select(field,  padding,  null);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	mRules.select(field,  padding,  null);	      mRules.select(field,    padding);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
134	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().select(field,  3);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  Integer  cDateInstance  =  getChronology().select(field,  3);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().select(field,  3);	      Integer    cDateInstance    =    getChronology().select(field,    padding);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
135	[BUG]  [BUGGY]  Integer  cDateInstance  =  getChronology().selectPattern(field);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:    [BUGGY]  Integer  cDateInstance  =  getChronology().selectPattern(field);  [BUGGY]    return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang50/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.7071067811865475	772	772	2	replace	Integer  cDateInstance  =  getChronology().selectPattern(field);	      Integer    cDateInstance    =    getChronology().selectNumberRule(field);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
