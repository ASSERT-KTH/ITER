bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] throw new IllegalArgumentException("Invalid locale format: " + str); [FE] IllegalArgumentException [CONTEXT] if (str == null) { return null; } final int len = str.length(); if (len < 2) { throw new IllegalArgumentException("Invalid locale format: " + str); } final char ch0 = str.charAt(0); final char ch1 = str.charAt(1); if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) { [BUGGY] throw new IllegalArgumentException("Invalid locale format: " + str); [BUGGY] } if (len == 2) { return new Locale(str); } if (len < 5) { throw new IllegalArgumentException("Invalid locale format: " + str); } if (str.charAt(2) != '_') { throw new IllegalArgumentException("Invalid locale format: " + str); } [CLASS] LocaleUtils SyncAvoid [METHOD] toLocale [RETURN_TYPE] Locale  String str [VARIABLES] Set AVAILABLE_LOCALE_SET boolean ConcurrentMap cCountriesByLanguage cLanguagesByCountry char ch0 ch1 ch3 ch4 List AVAILABLE_LOCALE_LIST String str int len  	projects/Lang5/src/main/java/org/apache/commons/lang3/LocaleUtils.java	0.5773502691896258	99	99	1	replace	
2	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] if (str == null) { return null; } final int len = str.length(); if (len < 2) { throw new IllegalArgumentException("Invalid locale format: " + str); } final char ch0 = str.charAt(0); final char ch1 = str.charAt(1); if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) { [BUGGY] [BUGGY] throw new IllegalArgumentException("Invalid locale format: " + str); } if (len == 2) { return new Locale(str); } if (len < 5) { throw new IllegalArgumentException("Invalid locale format: " + str); } if (str.charAt(2) != '_') { throw new IllegalArgumentException("Invalid locale format: " + str); } [CLASS] LocaleUtils SyncAvoid [METHOD] toLocale [RETURN_TYPE] Locale  String str [VARIABLES] Set AVAILABLE_LOCALE_SET boolean ConcurrentMap cCountriesByLanguage cLanguagesByCountry char ch0 ch1 ch3 ch4 List AVAILABLE_LOCALE_LIST String str int len  	projects/Lang5/src/main/java/org/apache/commons/lang3/LocaleUtils.java	0.5773502691896258	99	99	1	add	
3	[BUG] [BUGGY] if (str == null) { [FE] IllegalArgumentException [CONTEXT] public static Locale toLocale(final String str) { [BUGGY] if (str == null) { [BUGGY] return null; } final int len = str.length(); if (len < 2) { throw new IllegalArgumentException("Invalid locale format: " + str); } final char ch0 = str.charAt(0); final char ch1 = str.charAt(1); if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) { throw new IllegalArgumentException("Invalid locale format: " + str); [CLASS] LocaleUtils SyncAvoid [METHOD] toLocale [RETURN_TYPE] Locale  String str [VARIABLES] Set AVAILABLE_LOCALE_SET boolean ConcurrentMap cCountriesByLanguage cLanguagesByCountry char ch0 ch1 ch3 ch4 List AVAILABLE_LOCALE_LIST String str int len  	projects/Lang5/src/main/java/org/apache/commons/lang3/LocaleUtils.java	0.4472135954999579	89	89	1	replace	
4	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] public static Locale toLocale(final String str) { [BUGGY] [BUGGY] if (str == null) { return null; } final int len = str.length(); if (len < 2) { throw new IllegalArgumentException("Invalid locale format: " + str); } final char ch0 = str.charAt(0); final char ch1 = str.charAt(1); if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) { throw new IllegalArgumentException("Invalid locale format: " + str); [CLASS] LocaleUtils SyncAvoid [METHOD] toLocale [RETURN_TYPE] Locale  String str [VARIABLES] Set AVAILABLE_LOCALE_SET boolean ConcurrentMap cCountriesByLanguage cLanguagesByCountry char ch0 ch1 ch3 ch4 List AVAILABLE_LOCALE_LIST String str int len  	projects/Lang5/src/main/java/org/apache/commons/lang3/LocaleUtils.java	0.4472135954999579	89	89	1	add	
5	[BUG] [BUGGY] final int len = str.length(); [FE] IllegalArgumentException [CONTEXT] public static Locale toLocale(final String str) { if (str == null) { return null; } [BUGGY] final int len = str.length(); [BUGGY] if (len < 2) { throw new IllegalArgumentException("Invalid locale format: " + str); } final char ch0 = str.charAt(0); final char ch1 = str.charAt(1); if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) { throw new IllegalArgumentException("Invalid locale format: " + str); } if (len == 2) { return new Locale(str); [CLASS] LocaleUtils SyncAvoid [METHOD] toLocale [RETURN_TYPE] Locale  String str [VARIABLES] Set AVAILABLE_LOCALE_SET boolean ConcurrentMap cCountriesByLanguage cLanguagesByCountry char ch0 ch1 ch3 ch4 List AVAILABLE_LOCALE_LIST String str int len  	projects/Lang5/src/main/java/org/apache/commons/lang3/LocaleUtils.java	0.4472135954999579	92	92	1	replace	
6	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] public static Locale toLocale(final String str) { if (str == null) { return null; } [BUGGY] [BUGGY] final int len = str.length(); if (len < 2) { throw new IllegalArgumentException("Invalid locale format: " + str); } final char ch0 = str.charAt(0); final char ch1 = str.charAt(1); if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) { throw new IllegalArgumentException("Invalid locale format: " + str); } if (len == 2) { return new Locale(str); [CLASS] LocaleUtils SyncAvoid [METHOD] toLocale [RETURN_TYPE] Locale  String str [VARIABLES] Set AVAILABLE_LOCALE_SET boolean ConcurrentMap cCountriesByLanguage cLanguagesByCountry char ch0 ch1 ch3 ch4 List AVAILABLE_LOCALE_LIST String str int len  	projects/Lang5/src/main/java/org/apache/commons/lang3/LocaleUtils.java	0.4472135954999579	92	92	1	add	
7	[BUG] [BUGGY] if (len < 2) { [FE] IllegalArgumentException [CONTEXT] public static Locale toLocale(final String str) { if (str == null) { return null; } final int len = str.length(); [BUGGY] if (len < 2) { [BUGGY] throw new IllegalArgumentException("Invalid locale format: " + str); } final char ch0 = str.charAt(0); final char ch1 = str.charAt(1); if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) { throw new IllegalArgumentException("Invalid locale format: " + str); } if (len == 2) { return new Locale(str); } [CLASS] LocaleUtils SyncAvoid [METHOD] toLocale [RETURN_TYPE] Locale  String str [VARIABLES] Set AVAILABLE_LOCALE_SET boolean ConcurrentMap cCountriesByLanguage cLanguagesByCountry char ch0 ch1 ch3 ch4 List AVAILABLE_LOCALE_LIST String str int len  	projects/Lang5/src/main/java/org/apache/commons/lang3/LocaleUtils.java	0.4472135954999579	93	93	1	replace	
8	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] public static Locale toLocale(final String str) { if (str == null) { return null; } final int len = str.length(); [BUGGY] [BUGGY] if (len < 2) { throw new IllegalArgumentException("Invalid locale format: " + str); } final char ch0 = str.charAt(0); final char ch1 = str.charAt(1); if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) { throw new IllegalArgumentException("Invalid locale format: " + str); } if (len == 2) { return new Locale(str); } [CLASS] LocaleUtils SyncAvoid [METHOD] toLocale [RETURN_TYPE] Locale  String str [VARIABLES] Set AVAILABLE_LOCALE_SET boolean ConcurrentMap cCountriesByLanguage cLanguagesByCountry char ch0 ch1 ch3 ch4 List AVAILABLE_LOCALE_LIST String str int len  	projects/Lang5/src/main/java/org/apache/commons/lang3/LocaleUtils.java	0.4472135954999579	93	93	1	add	
9	[BUG] [BUGGY] final char ch0 = str.charAt(0); [FE] IllegalArgumentException [CONTEXT] public static Locale toLocale(final String str) { if (str == null) { return null; } final int len = str.length(); if (len < 2) { throw new IllegalArgumentException("Invalid locale format: " + str); } [BUGGY] final char ch0 = str.charAt(0); [BUGGY] final char ch1 = str.charAt(1); if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) { throw new IllegalArgumentException("Invalid locale format: " + str); } if (len == 2) { return new Locale(str); } if (len < 5) { throw new IllegalArgumentException("Invalid locale format: " + str); } [CLASS] LocaleUtils SyncAvoid [METHOD] toLocale [RETURN_TYPE] Locale  String str [VARIABLES] Set AVAILABLE_LOCALE_SET boolean ConcurrentMap cCountriesByLanguage cLanguagesByCountry char ch0 ch1 ch3 ch4 List AVAILABLE_LOCALE_LIST String str int len  	projects/Lang5/src/main/java/org/apache/commons/lang3/LocaleUtils.java	0.4472135954999579	96	96	1	replace	
10	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] public static Locale toLocale(final String str) { if (str == null) { return null; } final int len = str.length(); if (len < 2) { throw new IllegalArgumentException("Invalid locale format: " + str); } [BUGGY] [BUGGY] final char ch0 = str.charAt(0); final char ch1 = str.charAt(1); if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) { throw new IllegalArgumentException("Invalid locale format: " + str); } if (len == 2) { return new Locale(str); } if (len < 5) { throw new IllegalArgumentException("Invalid locale format: " + str); } [CLASS] LocaleUtils SyncAvoid [METHOD] toLocale [RETURN_TYPE] Locale  String str [VARIABLES] Set AVAILABLE_LOCALE_SET boolean ConcurrentMap cCountriesByLanguage cLanguagesByCountry char ch0 ch1 ch3 ch4 List AVAILABLE_LOCALE_LIST String str int len  	projects/Lang5/src/main/java/org/apache/commons/lang3/LocaleUtils.java	0.4472135954999579	96	96	1	add	
11	[BUG] [BUGGY] final char ch1 = str.charAt(1); [FE] IllegalArgumentException [CONTEXT] public static Locale toLocale(final String str) { if (str == null) { return null; } final int len = str.length(); if (len < 2) { throw new IllegalArgumentException("Invalid locale format: " + str); } final char ch0 = str.charAt(0); [BUGGY] final char ch1 = str.charAt(1); [BUGGY] if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) { throw new IllegalArgumentException("Invalid locale format: " + str); } if (len == 2) { return new Locale(str); } if (len < 5) { throw new IllegalArgumentException("Invalid locale format: " + str); } if (str.charAt(2) != '_') { [CLASS] LocaleUtils SyncAvoid [METHOD] toLocale [RETURN_TYPE] Locale  String str [VARIABLES] Set AVAILABLE_LOCALE_SET boolean ConcurrentMap cCountriesByLanguage cLanguagesByCountry char ch0 ch1 ch3 ch4 List AVAILABLE_LOCALE_LIST String str int len  	projects/Lang5/src/main/java/org/apache/commons/lang3/LocaleUtils.java	0.4472135954999579	97	97	1	replace	
12	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] public static Locale toLocale(final String str) { if (str == null) { return null; } final int len = str.length(); if (len < 2) { throw new IllegalArgumentException("Invalid locale format: " + str); } final char ch0 = str.charAt(0); [BUGGY] [BUGGY] final char ch1 = str.charAt(1); if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) { throw new IllegalArgumentException("Invalid locale format: " + str); } if (len == 2) { return new Locale(str); } if (len < 5) { throw new IllegalArgumentException("Invalid locale format: " + str); } if (str.charAt(2) != '_') { [CLASS] LocaleUtils SyncAvoid [METHOD] toLocale [RETURN_TYPE] Locale  String str [VARIABLES] Set AVAILABLE_LOCALE_SET boolean ConcurrentMap cCountriesByLanguage cLanguagesByCountry char ch0 ch1 ch3 ch4 List AVAILABLE_LOCALE_LIST String str int len  	projects/Lang5/src/main/java/org/apache/commons/lang3/LocaleUtils.java	0.4472135954999579	97	97	1	add	
13	[BUG] [BUGGY] if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) { [FE] IllegalArgumentException [CONTEXT] public static Locale toLocale(final String str) { if (str == null) { return null; } final int len = str.length(); if (len < 2) { throw new IllegalArgumentException("Invalid locale format: " + str); } final char ch0 = str.charAt(0); final char ch1 = str.charAt(1); [BUGGY] if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) { [BUGGY] throw new IllegalArgumentException("Invalid locale format: " + str); } if (len == 2) { return new Locale(str); } if (len < 5) { throw new IllegalArgumentException("Invalid locale format: " + str); } if (str.charAt(2) != '_') { throw new IllegalArgumentException("Invalid locale format: " + str); [CLASS] LocaleUtils SyncAvoid [METHOD] toLocale [RETURN_TYPE] Locale  String str [VARIABLES] Set AVAILABLE_LOCALE_SET boolean ConcurrentMap cCountriesByLanguage cLanguagesByCountry char ch0 ch1 ch3 ch4 List AVAILABLE_LOCALE_LIST String str int len  	projects/Lang5/src/main/java/org/apache/commons/lang3/LocaleUtils.java	0.4472135954999579	98	98	1	replace	
14	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] public static Locale toLocale(final String str) { if (str == null) { return null; } final int len = str.length(); if (len < 2) { throw new IllegalArgumentException("Invalid locale format: " + str); } final char ch0 = str.charAt(0); final char ch1 = str.charAt(1); [BUGGY] [BUGGY] if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) { throw new IllegalArgumentException("Invalid locale format: " + str); } if (len == 2) { return new Locale(str); } if (len < 5) { throw new IllegalArgumentException("Invalid locale format: " + str); } if (str.charAt(2) != '_') { throw new IllegalArgumentException("Invalid locale format: " + str); [CLASS] LocaleUtils SyncAvoid [METHOD] toLocale [RETURN_TYPE] Locale  String str [VARIABLES] Set AVAILABLE_LOCALE_SET boolean ConcurrentMap cCountriesByLanguage cLanguagesByCountry char ch0 ch1 ch3 ch4 List AVAILABLE_LOCALE_LIST String str int len  	projects/Lang5/src/main/java/org/apache/commons/lang3/LocaleUtils.java	0.4472135954999579	98	98	1	add	
15	[BUG] [BUGGY] private static final ConcurrentMap<String, List<Locale>> cLanguagesByCountry = new ConcurrentHashMap<String, List<Locale>>(); [FE] IllegalArgumentException [CONTEXT] [BUGGY] private static final ConcurrentMap<String, List<Locale>> cLanguagesByCountry =  new ConcurrentHashMap<String, List<Locale>>(); [BUGGY] new ConcurrentHashMap<String, List<Locale>>(); [CLASS] LocaleUtils SyncAvoid  [VARIABLES] 	projects/Lang5/src/main/java/org/apache/commons/lang3/LocaleUtils.java	0.2773500981126146	42	43	1	replace	
16	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] [BUGGY] [BUGGY] private static final ConcurrentMap<String, List<Locale>> cLanguagesByCountry =  new ConcurrentHashMap<String, List<Locale>>(); new ConcurrentHashMap<String, List<Locale>>(); [CLASS] LocaleUtils SyncAvoid  [VARIABLES] 	projects/Lang5/src/main/java/org/apache/commons/lang3/LocaleUtils.java	0.2773500981126146	42	43	1	add	
17	[BUG] [BUGGY] private static final ConcurrentMap<String, List<Locale>> cCountriesByLanguage = new ConcurrentHashMap<String, List<Locale>>(); [FE] IllegalArgumentException [CONTEXT] [BUGGY] private static final ConcurrentMap<String, List<Locale>> cCountriesByLanguage =  new ConcurrentHashMap<String, List<Locale>>(); [BUGGY] new ConcurrentHashMap<String, List<Locale>>(); [CLASS] LocaleUtils SyncAvoid  [VARIABLES] 	projects/Lang5/src/main/java/org/apache/commons/lang3/LocaleUtils.java	0.2773500981126146	46	47	1	replace	
18	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] [BUGGY] [BUGGY] private static final ConcurrentMap<String, List<Locale>> cCountriesByLanguage =  new ConcurrentHashMap<String, List<Locale>>(); new ConcurrentHashMap<String, List<Locale>>(); [CLASS] LocaleUtils SyncAvoid  [VARIABLES] 	projects/Lang5/src/main/java/org/apache/commons/lang3/LocaleUtils.java	0.2773500981126146	46	47	1	add	
19	[BUG] [BUGGY] return SyncAvoid.AVAILABLE_LOCALE_LIST; [FE] IllegalArgumentException [CONTEXT] public static List<Locale> availableLocaleList() { [BUGGY] return SyncAvoid.AVAILABLE_LOCALE_LIST; [BUGGY] } [CLASS] LocaleUtils SyncAvoid [METHOD] availableLocaleList [RETURN_TYPE] List  [VARIABLES] ConcurrentMap cCountriesByLanguage cLanguagesByCountry List AVAILABLE_LOCALE_LIST list Set AVAILABLE_LOCALE_SET boolean  	projects/Lang5/src/main/java/org/apache/commons/lang3/LocaleUtils.java	0.2773500981126146	193	193	1	replace	
20	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] public static List<Locale> availableLocaleList() { [BUGGY] [BUGGY] return SyncAvoid.AVAILABLE_LOCALE_LIST; } [CLASS] LocaleUtils SyncAvoid [METHOD] availableLocaleList [RETURN_TYPE] List  [VARIABLES] ConcurrentMap cCountriesByLanguage cLanguagesByCountry List AVAILABLE_LOCALE_LIST list Set AVAILABLE_LOCALE_SET boolean  	projects/Lang5/src/main/java/org/apache/commons/lang3/LocaleUtils.java	0.2773500981126146	193	193	1	add	
21	[BUG] [BUGGY] return availableLocaleList().contains(locale); [FE] IllegalArgumentException [CONTEXT] public static boolean isAvailableLocale(Locale locale) { [BUGGY] return availableLocaleList().contains(locale); [BUGGY] } [CLASS] LocaleUtils SyncAvoid [METHOD] isAvailableLocale [RETURN_TYPE] boolean  Locale locale [VARIABLES] ConcurrentMap cCountriesByLanguage cLanguagesByCountry Locale locale List AVAILABLE_LOCALE_LIST list Set AVAILABLE_LOCALE_SET boolean  	projects/Lang5/src/main/java/org/apache/commons/lang3/LocaleUtils.java	0.2773500981126146	218	218	1	replace	
22	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] public static boolean isAvailableLocale(Locale locale) { [BUGGY] [BUGGY] return availableLocaleList().contains(locale); } [CLASS] LocaleUtils SyncAvoid [METHOD] isAvailableLocale [RETURN_TYPE] boolean  Locale locale [VARIABLES] ConcurrentMap cCountriesByLanguage cLanguagesByCountry Locale locale List AVAILABLE_LOCALE_LIST list Set AVAILABLE_LOCALE_SET boolean  	projects/Lang5/src/main/java/org/apache/commons/lang3/LocaleUtils.java	0.2773500981126146	218	218	1	add	
