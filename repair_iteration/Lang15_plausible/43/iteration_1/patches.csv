bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]      Class  <?>  bound  =(Class  <?>)type;  Class  <?>  bound  =(Class  <?>)type;  [CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]      Class  <?>  bound  =(Class  <?>)type;  Class  <?>  bound  =(Class  <?>)type;  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	        Class    <?>    bound    =(Class    <?>)type;    Class  <?>  bound  =(Class  <?>)type;	  	non-compiled	[CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)	19	None	add
2	[BUG]  [BUGGY]      Class  <?>  bound  =(Class  <?>)type;  Type  <?>  bound  =(Class  <?>)type;  [CE]  type  Type  does  not  take  parameters  [FE]      AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]      Class  <?>  bound  =(Class  <?>)type;  Type  <?>  bound  =(Class  <?>)type;  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	        Class    <?>    bound    =(Class    <?>)type;    Type  <?>  bound  =(Class  <?>)type;	  	non-compiled	[CE]  type  Type  does  not  take  parameters	19	None	add
3	[BUG]  [BUGGY]      Class  <?>  bound  =(Class  <?>)type;  Class  <?>  bound  =(Class  <? ">)type;  [CE]  unclosed  string  literal  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]      Class  <?>  bound  =(Class  <?>)type;  Class  <?>  bound  =(Class  <? ">)type;  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	        Class    <?>    bound    =(Class    <?>)type;    Class  <?>  bound  =(Class  <? ">)type;	  	non-compiled	[CE]  unclosed  string  literal	19	None	add
4	[BUG]  [BUGGY]      Class  <?>  bound  =(Class  <?>)type;  Class  >=?>  bound  =(Class  <?>)type;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]      Class  <?>  bound  =(Class  <?>)type;  Class  >=?>  bound  =(Class  <?>)type;  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	        Class    <?>    bound    =(Class    <?>)type;    Class  >=?>  bound  =(Class  <?>)type;	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
5	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null);  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,<null>)  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null);  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null);	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    bounds);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,<null>)	1	None	replace
6	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  this);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  this);  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  this);	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    bounds);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	1	None	replace
7	[BUG]  [BUGGY]  Type  bound  =  type.getRawType();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =  type.getRawType();  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  type.getRawType();	      Type    bound    =    toClass.getRawType();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
8	[BUG]  [BUGGY]  Type  bound  =  toClass.getRawType(),  subtypeVarAssigns);  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =  toClass.getRawType(),  subtypeVarAssigns);  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  toClass.getRawType(),  subtypeVarAssigns);	      Type    bound    =    toClass.getRawType();    	non-compiled	[CE]  ';'  expected	8	None	replace
9	[BUG]  [BUGGY]  Type  bound  =  subtypeVarAssigns.getRawType();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =  subtypeVarAssigns.getRawType();  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  subtypeVarAssigns.getRawType();	      Type    bound    =    toClass.getRawType();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
10	[BUG]  [BUGGY]  Class  <?>  bound  =  toClass,  subtypeVarAssigns.getRawClass();  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  bound  =  toClass,  subtypeVarAssigns.getRawClass();  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class  <?>  bound  =  toClass,  subtypeVarAssigns.getRawClass();	      Class    <?>    bound    =    toClass.getRawClass();    	non-compiled	[CE]  ';'  expected	7	None	replace
11	[BUG]  [BUGGY]  Class  <?>  bound  =  toClass,  type.getRawClass();  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  bound  =  toClass,  type.getRawClass();  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class  <?>  bound  =  toClass,  type.getRawClass();	      Class    <?>    bound    =    toClass.getRawClass();    	non-compiled	[CE]  ';'  expected	7	None	replace
12	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getbound();  [CE]  :  expected  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getbound();  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getbound();	      Type    bound    =((    Class    <?>)type).getbound();    	non-compiled	[CE]  :  expected	21	None	replace
13	[BUG]  [BUGGY]  Type  bound  =((  Class  <?>)type).getboundType();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =((  Class  <?>)type).getboundType();  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =((  Class  <?>)type).getboundType();	      Type    bound    =((    Class    <?>)type).getbound();    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
14	[BUG]  [BUGGY]  Type  bound  =((  Class  <?>)type).getboundAssigns();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =((  Class  <?>)type).getboundAssigns();  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =((  Class  <?>)type).getboundAssigns();	      Type    bound    =((    Class    <?>)type).getbound();    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
15	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type,  bound);  [CE]  cannot  find  symbol  bound  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type,  bound);  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type,  bound);	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  cannot  find  symbol  bound	18	None	replace
16	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  bound,  type);  [CE]  cannot  find  symbol  bound  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  bound,  type);  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  bound,  type);	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  cannot  find  symbol  bound	18	None	replace
17	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type,  bounds);  [CE]  cannot  find  symbol  bounds  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type,  bounds);  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type,  bounds);	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  cannot  find  symbol  bounds	18	None	replace
18	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.isArray());  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.isArray());  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.isArray());	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    bound.isArray());    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
19	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  toClass.isArray());  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,boolean)  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  toClass.isArray());  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  toClass.isArray());	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    bound.isArray());    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,boolean)	12	None	replace
20	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null.isArray());  [CE]  <null>  cannot  be  dereferenced  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null.isArray());  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null.isArray());	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    bound.isArray());    	non-compiled	[CE]  <null>  cannot  be  dereferenced	12	None	replace
21	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  this.subtypeVarAssigns.isArray());  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  this.subtypeVarAssigns.isArray());  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  this.subtypeVarAssigns.isArray());	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    bound.isArray());    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	12	None	replace
22	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getRawClass();  [CE]  :  expected  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getRawClass();  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getRawClass();	      Type    bound    =((    Class    <?>)type).getRawClass();    	non-compiled	[CE]  :  expected	15	None	replace
23	[BUG]  [BUGGY]  Type  bound  =((  Class  <?>)type).getRawClass().restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =((  Class  <?>)type).getRawClass().restrictByNotNullOrUndefined();  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =((  Class  <?>)type).getRawClass().restrictByNotNullOrUndefined();	      Type    bound    =((    Class    <?>)type).getRawClass();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
24	[BUG]  [BUGGY]  Type  bound  =((  Class  <?>)type).getRawClass()  ||  toClass.isArray();  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =((  Class  <?>)type).getRawClass()  ||  toClass.isArray();  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =((  Class  <?>)type).getRawClass()  ||  toClass.isArray();	      Type    bound    =((    Class    <?>)type).getRawClass();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
25	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds();  [CE]  :  expected  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds();  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds();	      Type    bound    =((    Class    <?>)type).getBounds();    	non-compiled	[CE]  :  expected	14	None	replace
26	[BUG]  [BUGGY]  Type  bounds  =((  Class  <?>)type).getBounds();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bounds  =((  Class  <?>)type).getBounds();  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bounds  =((  Class  <?>)type).getBounds();	      Type    bound    =((    Class    <?>)type).getBounds();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
27	[BUG]  [BUGGY]  Type  bound  =((  Class  <?>)type).getBounds()  ||  toClass.isArray();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =((  Class  <?>)type).getBounds()  ||  toClass.isArray();  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =((  Class  <?>)type).getBounds()  ||  toClass.isArray();	      Type    bound    =((    Class    <?>)type).getBounds();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
28	[BUG]  [BUGGY]  Type  bound  =  type.getRawClass();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =  type.getRawClass();  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  type.getRawClass();	      Type    bound    =    toClass.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
29	[BUG]  [BUGGY]  Type  bound  =  toClass.getRawClass(),  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =  toClass.getRawClass(),  subtypeVarAssigns);  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  toClass.getRawClass(),  subtypeVarAssigns);	      Type    bound    =    toClass.getRawClass();    	non-compiled	[CE]  ';'  expected	10	None	replace
30	[BUG]  [BUGGY]  Type  bound  =  subtypeVarAssigns.getRawClass();  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =  subtypeVarAssigns.getRawClass();  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  subtypeVarAssigns.getRawClass();	      Type    bound    =    toClass.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
31	[BUG]  [BUGGY]  Class  <?>  bound  =  subtypeVarAssigns.getRawClass();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  bound  =  subtypeVarAssigns.getRawClass();  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class  <?>  bound  =  subtypeVarAssigns.getRawClass();	      Class    <?>    bound    =    type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
32	[BUG]  [BUGGY]  Class  <?>  bound  =  this.bounds.getRawClass();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  bound  =  this.bounds.getRawClass();  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class  <?>  bound  =  this.bounds.getRawClass();	      Class    <?>    bound    =    type.getRawClass();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	9	None	replace
33	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  toClass);  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Class<CAP#3>)  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  toClass);  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  toClass);	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    bound);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Class<CAP#3>)	2	None	replace
34	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	add	return  getTypeArguments((  Class  <?>)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	compilable	  [FE]  NullPointerException  	4	4	replace
35	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	compilable	  [FE]  NullPointerException  	4	4	replace
36	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	add	return  getTypeArguments((  Class  <?>)type,  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	compilable	  [FE]  AssertionError  	4	2	replace
37	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass.isPrimitive()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	compilable	  [FE]  AssertionError  	4	2	replace
38	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isConstructor()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isConstructor()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass.isConstructor()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
39	[BUG]  [BUGGY]  Type  bound  =  type.getBounds();  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =  type.getBounds();  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  type.getBounds();	      Type    bound    =    toClass.getBounds();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
40	[BUG]  [BUGGY]  Type  bound  =  toClass.getBounds(),  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =  toClass.getBounds(),  subtypeVarAssigns);  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  toClass.getBounds(),  subtypeVarAssigns);	      Type    bound    =    toClass.getBounds();    	non-compiled	[CE]  ';'  expected	11	None	replace
41	[BUG]  [BUGGY]  Type  bound  =  subtypeVarAssigns.getBounds();  [CE]  cannot  find  symbol  [FE]                    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =  subtypeVarAssigns.getBounds();  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  subtypeVarAssigns.getBounds();	      Type    bound    =    toClass.getBounds();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
42	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  	non-compiled	[CE]  unreachable  statement	3	None	add
43	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    Return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  	non-compiled	[CE]  ';'  expected	3	None	add
44	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    Class  <?>  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  	non-compiled	[CE]  ';'  expected	3	None	add
45	[BUG]  [BUGGY]      return  getTypeArguments(((Class  <?>)type).isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Map<TypeVariable<?>,Type>)  [FE]    IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]      return  getTypeArguments(((Class  <?>)type).isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	        return  getTypeArguments(((Class  <?>)type).isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Map<TypeVariable<?>,Type>)	5	None	add
46	[BUG]  [BUGGY]      return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass,  subtypeVarAssigns);  [CE]  unreachable  statement  [FE]      IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]      return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass,  subtypeVarAssigns);  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	        return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass,  subtypeVarAssigns);	  	non-compiled	[CE]  unreachable  statement	5	None	add
47	[BUG]  [BUGGY]      return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  unreachable  statement  [FE]        IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]      return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	        return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  	non-compiled	[CE]  unreachable  statement	5	None	add
48	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]      if(toClass.isArray())  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	add	        if(toClass.isArray())  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }	  	compilable	  [FE]  AssertionError  	5	2	add
49	[BUG]  [BUGGY]      if(toClass.isArray())  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }  [FE]  AssertionError  [FE]          IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]      if(toClass.isArray())  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	        if(toClass.isArray())  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }	  	compilable	  [FE]  AssertionError  	5	2	add
50	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(type,(  Class  <?>)type);  [CE]  incompatible  types  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =  getTypeArguments(type,(  Class  <?>)type);  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments(type,(  Class  <?>)type);	      Type    bound    =    getTypeArguments((    Class    <?>)type);    	non-compiled	[CE]  incompatible  types	17	None	replace
51	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(toClass,(  Class  <?>)type);  [CE]  incompatible  types  [FE]                  AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =  getTypeArguments(toClass,(  Class  <?>)type);  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments(toClass,(  Class  <?>)type);	      Type    bound    =    getTypeArguments((    Class    <?>)type);    	non-compiled	[CE]  incompatible  types	17	None	replace
52	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type);  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Type)  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type);  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type);	      Type    bound    =    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Type)	13	None	replace
53	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null);  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,<null>)  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null);  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null);	      Type    bound    =    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,<null>)	13	None	replace
54	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  scope);  [CE]  cannot  find  symbol  scope  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  scope);  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  scope);	      Type    bound    =    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  scope	13	None	replace
55	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  bound  =(Class  <?>)toClass;  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	add	Class  <?>  bound  =(Class  <?>)toClass;	      Class    <?>    bound    =(Class    <?>)type;    	compilable	  [FE]  IllegalStateException  	20	5	replace
56	[BUG]  [BUGGY]  Class  <?>  bound  =(Class  <?>)toClass;  [FE]  IllegalStateException  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  bound  =(Class  <?>)toClass;  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class  <?>  bound  =(Class  <?>)toClass;	      Class    <?>    bound    =(Class    <?>)type;    	compilable	  [FE]  IllegalStateException  	20	5	replace
57	[BUG]  [BUGGY]  Class  <?>  bound  =(Class  <?>)subtypeVarAssigns;  [CE]  inconvertible  types  [FE]      AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  bound  =(Class  <?>)subtypeVarAssigns;  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class  <?>  bound  =(Class  <?>)subtypeVarAssigns;	      Class    <?>    bound    =(Class    <?>)type;    	non-compiled	[CE]  inconvertible  types	20	None	replace
58	[BUG]  [BUGGY]  Class  <?>  bound  =(Class  <?>)type.clone();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  bound  =(Class  <?>)type.clone();  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class  <?>  bound  =(Class  <?>)type.clone();	      Class    <?>    bound    =(Class    <?>)type;    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
59	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass.getComponentType());  [CE]  incompatible  types  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass.getComponentType());  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass.getComponentType());	      Type    bound    =    getTypeArguments((    Class    <?>)type,    toClass);    	non-compiled	[CE]  incompatible  types	16	None	replace
60	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass.isArray());  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,boolean)  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass.isArray());  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass.isArray());	      Type    bound    =    getTypeArguments((    Class    <?>)type,    toClass);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,boolean)	16	None	replace
61	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  subtypeVarAssigns);  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Map<TypeVariable<?>,Type>)  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  subtypeVarAssigns);  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments((  Class  <?>)type,  subtypeVarAssigns);	      Type    bound    =    getTypeArguments((    Class    <?>)type);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Map<TypeVariable<?>,Type>)	17	None	replace
62	[BUG]  [BUGGY]  Type  bound  =((  Class  <?>)type).getDeclaredTypes();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =((  Class  <?>)type).getDeclaredTypes();  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =((  Class  <?>)type).getDeclaredTypes();	      Type    bound    =((    Class    <?>)type).getBounds();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
63	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  target.isArray());  [CE]  cannot  find  symbol  target  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  target.isArray());  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  target.isArray());	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    bound.isArray());    	non-compiled	[CE]  cannot  find  symbol  target	12	None	replace
64	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.isObject());  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.isObject());  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.isObject());	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    bound.isArray());    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
65	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  target);  [CE]  cannot  find  symbol  target  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  target);  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  target);	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    bound);    	non-compiled	[CE]  cannot  find  symbol  target	2	None	replace
66	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	add	if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }	      	compilable	  [FE]  AssertionError  	6	2	replace
67	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }  [FE]  AssertionError  [FE]    IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	if(type  instanceof  Class  <?>)  {  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns);  }	      	compilable	  [FE]  AssertionError  	6	2	replace
68	[BUG]  [BUGGY]  Type  bound  =((  Class  <?>)type).getRawClass().clone();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =((  Class  <?>)type).getRawClass().clone();  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =((  Class  <?>)type).getRawClass().clone();	      Type    bound    =((    Class    <?>)type).getRawClass();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
69	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    Class  <?>  type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  	non-compiled	[CE]  ';'  expected	3	None	add
70	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  name);  [CE]  cannot  find  symbol  name  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  name);  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  name);	      Type    bound    =    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  name	13	None	replace
71	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  types);  [CE]  cannot  find  symbol  types  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  types);  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  types);	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    bounds);    	non-compiled	[CE]  cannot  find  symbol  types	1	None	replace
72	[BUG]  [BUGGY]  Type  bound  =  toClass,  type.getRawType();  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =  toClass,  type.getRawType();  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  toClass,  type.getRawType();	      Type    bound    =    toClass.getRawType();    	non-compiled	[CE]  ';'  expected	8	None	replace
73	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ')'  expected	4	None	replace
74	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isObject()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isObject()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass.isObject()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
75	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  	non-compiled	[CE]  unreachable  statement	3	None	add
76	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  bound  =  type.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  Class  <?>  bound  =  type.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    Class  <?>  bound  =  type.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  	non-compiled	[CE]  ';'  expected	3	None	add
77	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getRawClass()  :  null;  [CE]  :  expected  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getRawClass()  :  null;  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getRawClass()  :  null;	      Type    bound    =((    Class    <?>)type).getRawClass();    	non-compiled	[CE]  :  expected	15	None	replace
78	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getRawClass()  :  toClass;  [CE]  :  expected  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getRawClass()  :  toClass;  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getRawClass()  :  toClass;	      Type    bound    =((    Class    <?>)type).getRawClass();    	non-compiled	[CE]  :  expected	15	None	replace
79	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getRawClass()  :  subtypeVarAssigns;  [CE]  :  expected  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getRawClass()  :  subtypeVarAssigns;  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getRawClass()  :  subtypeVarAssigns;	      Type    bound    =((    Class    <?>)type).getRawClass();    	non-compiled	[CE]  :  expected	15	None	replace
80	[BUG]  [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.getBounds();  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.getBounds();  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  toClass,  subtypeVarAssigns.getBounds();	      Type    bound    =    toClass.getBounds();    	non-compiled	[CE]  ';'  expected	11	None	replace
81	[BUG]  [BUGGY]  Class  <?>  bound  =(Class  <?>)type.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Class  <?>  bound  =(Class  <?>)type.restrictByNotNullOrUndefined();  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Class  <?>  bound  =(Class  <?>)type.restrictByNotNullOrUndefined();	      Class    <?>    bound    =(Class    <?>)type;    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
82	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null,  type);  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,<null>,Type)  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null,  type);  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  null,  type);	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,<null>,Type)	18	None	replace
83	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  bounds,  type);  [CE]  cannot  find  symbol  bounds  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  bounds,  type);  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  bounds,  type);	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  cannot  find  symbol  bounds	18	None	replace
84	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Type)  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);	  return    getTypeArguments((    Class    <?>)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,Type)	4	None	replace
85	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  targetClass);  [CE]  cannot  find  symbol  targetClass  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  targetClass);  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  targetClass);	  return    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns,    bound);    	non-compiled	[CE]  cannot  find  symbol  targetClass	2	None	replace
86	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]      if(type  instanceof  Class  <?>)  {  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass,  subtypeVarAssigns);  }  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	add	        if(type  instanceof  Class  <?>)  {  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass,  subtypeVarAssigns);  }	  	compilable	  [FE]  NullPointerException  	5	5	add
87	[BUG]  [BUGGY]      if(type  instanceof  Class  <?>)  {  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass,  subtypeVarAssigns);  }  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]      if(type  instanceof  Class  <?>)  {  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass,  subtypeVarAssigns);  }  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	        if(type  instanceof  Class  <?>)  {  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass,  subtypeVarAssigns);  }	  	compilable	  [FE]  NullPointerException  	5	5	add
88	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]      if(type  instanceof  Class  <?>)  {  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	add	        if(type  instanceof  Class  <?>)  {  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }	  	compilable	  [FE]  NullPointerException  	5	5	add
89	[BUG]  [BUGGY]      if(type  instanceof  Class  <?>)  {  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [FE]  NullPointerException  [FE]      IllegalStateException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]      if(type  instanceof  Class  <?>)  {  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [BUGGY]    }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	        if(type  instanceof  Class  <?>)  {  return  getTypeArguments(((Class  <?>)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }	  	compilable	  [FE]  NullPointerException  	5	5	add
90	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.isArray());  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.isArray());  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  type.isArray());	      Type    bound    =    getTypeArguments((    Class    <?>)type,    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
91	[BUG]  [BUGGY]  Type  bound  =((  Class  <?>)type).restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =((  Class  <?>)type).restrictByNotNullOrUndefined();  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =((  Class  <?>)type).restrictByNotNullOrUndefined();	      Type    bound    =((    Class    <?>)type).getbound();    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
92	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type),  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type),  toClass,  subtypeVarAssigns);  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =  getTypeArguments((  Class  <?>)type),  toClass,  subtypeVarAssigns);	      Type    bound    =    getTypeArguments((    Class    <?>)type,    toClass);    	non-compiled	[CE]  ';'  expected	16	None	replace
93	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds()  :  null;  [CE]  :  expected  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds()  :  null;  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds()  :  null;	      Type    bound    =((    Class    <?>)type).getBounds();    	non-compiled	[CE]  :  expected	14	None	replace
94	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds()  :  Collections.emptyMap();  [CE]  :  expected  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {    [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds()  :  Collections.emptyMap();  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	548	548	2	replace	Type  bound  =(type  instanceof  Class  <?>)?(Class  <?>)type).getBounds()  :  Collections.emptyMap();	      Type    bound    =((    Class    <?>)type).getBounds();    	non-compiled	[CE]  :  expected	14	None	replace
