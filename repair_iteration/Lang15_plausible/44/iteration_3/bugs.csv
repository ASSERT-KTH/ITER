bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getRawType()  :  toClass.getRawType();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getRawType()  :  toClass.getRawType();  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isArray()?  toClass.getRawType()  :  toClass.getRawType();	  Type    bound    =    toClass.isArray()?    type.getRawType()    :    toClass.getRawType();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
2	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getRawType()  :  type.getRawType();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getRawType()  :  type.getRawType();  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isArray()?  toClass.getRawType()  :  type.getRawType();	  Type    bound    =    toClass.isArray()?    type.getRawType()    :    toClass.getRawType();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
3	[BUG]  [BUGGY]  Type  bound  =  toClass.isRawType()?  type.getRawType()  :  toClass.getRawType();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isRawType()?  type.getRawType()  :  toClass.getRawType();  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isRawType()?  type.getRawType()  :  toClass.getRawType();	  Type    bound    =    toClass.isArray()?    type.getRawType()    :    toClass.getRawType();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
4	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  null,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  null,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  null,  subtypeVarAssigns);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    null,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	66	None	replace
5	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  null,  subtypeVarAssigns,  type);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  null,  subtypeVarAssigns,  type);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  null,  subtypeVarAssigns,  type);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    null,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	66	None	replace
6	[BUG]  [BUGGY]  Type  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  null,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  null,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  null,  subtypeVarAssigns);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    null,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	66	None	replace
7	[BUG]  [BUGGY]  Type  bound  =  toClass.getDeclaredType();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.getDeclaredType();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.getDeclaredType();	  Type    bound    =    toClass.getParameterizedType();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
8	[BUG]  [BUGGY]  Type  bound  =  type.getParameterizedType();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  type.getParameterizedType();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  type.getParameterizedType();	  Type    bound    =    toClass.getParameterizedType();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
9	[BUG]  [BUGGY]  Type  bound  =  toClass.getType();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.getType();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.getType();	  Type    bound    =    toClass.getParameterizedType();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
10	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  toClass.isArray())  {  if(type  instanceof  ParameterizedType  ||  toClass.isArray())  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  ||  toClass.isArray())  {  if(type  instanceof  ParameterizedType  ||  toClass.isArray())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type    instanceof    ParameterizedType    ||    toClass.isArray())    {    if(type  instanceof  ParameterizedType  ||  toClass.isArray())  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
11	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  toClass.isArray())  {  If(type  instanceof  ParameterizedType  ||  toClass.isArray())  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  ||  toClass.isArray())  {  If(type  instanceof  ParameterizedType  ||  toClass.isArray())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type    instanceof    ParameterizedType    ||    toClass.isArray())    {    If(type  instanceof  ParameterizedType  ||  toClass.isArray())  {	  	non-compiled	[CE]  ';'  expected	34	None	add
12	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  toClass.isArray())  {  if(type  instanceof  ParameterizedType  ||  toClass.isObject())  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  ||  toClass.isArray())  {  if(type  instanceof  ParameterizedType  ||  toClass.isObject())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type    instanceof    ParameterizedType    ||    toClass.isArray())    {    if(type  instanceof  ParameterizedType  ||  toClass.isObject())  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
13	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns,  toClass);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns,  toClass);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns,  toClass);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  ';'  expected	77	None	replace
14	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  ';'  expected	77	None	replace
15	[BUG]  [BUGGY]  Type  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  ';'  expected	77	None	replace
16	[BUG]  [BUGGY]  Type  bound  =  toClass.getComponentType()?  type.getComponentType()  :  toClass;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.getComponentType()?  type.getComponentType()  :  toClass;  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.getComponentType()?  type.getComponentType()  :  toClass;	  Type    bound    =    toClass.getComponentType()?    toClass.getComponentType()    :    toClass;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
17	[BUG]  [BUGGY]  Type  bound  =  toClass.getComponentType()?  toClass.getComponentType()  :  type;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.getComponentType()?  toClass.getComponentType()  :  type;  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.getComponentType()?  toClass.getComponentType()  :  type;	  Type    bound    =    toClass.getComponentType()?    toClass.getComponentType()    :    toClass;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
18	[BUG]  [BUGGY]  if(toClass  instanceof  ParameterizedType  ||  toClass.isArray())  {  [CE]  inconvertible  types  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass  instanceof  ParameterizedType  ||  toClass.isArray())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass  instanceof  ParameterizedType  ||  toClass.isArray())  {	  if(type    instanceof    ParameterizedType    ||    toClass.isArray())    {    	non-compiled	[CE]  inconvertible  types	35	None	replace
19	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  toClass.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  ||  toClass.isAssignableFrom(type))  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  ||  toClass.isAssignableFrom(type))  {	  if(type    instanceof    ParameterizedType    ||    toClass.isArray())    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	35	None	replace
20	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  type.getComponentType()  :  toClass;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  type.getComponentType()  :  toClass;  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  type.getComponentType()  :  toClass;	  Type    bound    =    toClass.isArray()?    type.getComponentType()    :    toClass;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
21	[BUG]  [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  null  :  subtypeVarAssigns.getRawType();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  null  :  subtypeVarAssigns.getRawType();  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  subtypeVarAssigns!=  null?  null  :  subtypeVarAssigns.getRawType();	  Type    bound    =    subtypeVarAssigns.getRawType();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
22	[BUG]  [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.getRawType();  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.getRawType();  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass,  subtypeVarAssigns.getRawType();	  Type    bound    =    subtypeVarAssigns.getRawType();    	non-compiled	[CE]  ';'  expected	6	None	replace
23	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType    ||    toClass    instanceof    Class    <?>)    {    if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
24	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>)  {  If(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>)  {  If(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType    ||    toClass    instanceof    Class    <?>)    {    If(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>)  {	  	non-compiled	[CE]  ';'  expected	45	None	add
25	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getComponentType(),  subtypeVarAssigns);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getComponentType(),  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getComponentType(),  subtypeVarAssigns);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    type,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	48	None	replace
26	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    type,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	48	None	replace
27	[BUG]  [BUGGY]  if(!(type  instanceof  ParameterizedType)||  toClass.isArray())  {  if(!(type  instanceof  ParameterizedType)||  toClass.isArray())  {  [CE]  illegal  start  of  expression  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(!(type  instanceof  ParameterizedType)||  toClass.isArray())  {  if(!(type  instanceof  ParameterizedType)||  toClass.isArray())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(!(type    instanceof    ParameterizedType)||    toClass.isArray())    {    if(!(type  instanceof  ParameterizedType)||  toClass.isArray())  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
28	[BUG]  [BUGGY]  if(!(type  instanceof  ParameterizedType)||  toClass.isArray())  {  If(!(type  instanceof  ParameterizedType)||  toClass.isArray())  {  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(!(type  instanceof  ParameterizedType)||  toClass.isArray())  {  If(!(type  instanceof  ParameterizedType)||  toClass.isArray())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(!(type    instanceof    ParameterizedType)||    toClass.isArray())    {    If(!(type  instanceof  ParameterizedType)||  toClass.isArray())  {	  	non-compiled	[CE]  ';'  expected	53	None	add
29	[BUG]  [BUGGY]  if(!(type  instanceof  ParameterizedType)||  toClass.isArray())  {  if(!(type  instanceof  ParameterizedType)||  toClass.isObject())  {  [CE]  illegal  start  of  expression  [FE]        IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(!(type  instanceof  ParameterizedType)||  toClass.isArray())  {  if(!(type  instanceof  ParameterizedType)||  toClass.isObject())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(!(type    instanceof    ParameterizedType)||    toClass.isArray())    {    if(!(type  instanceof  ParameterizedType)||  toClass.isObject())  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
30	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  toClass  instanceof  ParameterizedType)  {  [CE]  inconvertible  types  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  &&  toClass  instanceof  ParameterizedType)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  &&  toClass  instanceof  ParameterizedType)  {	  if(toClass    instanceof    ParameterizedType    &&    toClass    instanceof    ParameterizedType)    {    	non-compiled	[CE]  inconvertible  types	52	None	replace
31	[BUG]  [BUGGY]  if(toClass  instanceof  ParameterizedType  &&  toClass  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType)  {  [CE]  inconvertible  types  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass  instanceof  ParameterizedType  &&  toClass  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass  instanceof  ParameterizedType  &&  toClass  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType)  {	  if(toClass    instanceof    ParameterizedType    &&    toClass    instanceof    ParameterizedType)    {    	non-compiled	[CE]  inconvertible  types	52	None	replace
32	[BUG]  [BUGGY]  If(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  If(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	If(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {	  if(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType)    {    If(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType)    {    	non-compiled	[CE]  ';'  expected	8	None	replace
33	[BUG]  [BUGGY]  If(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  If(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	If(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {	  if(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType)    {    If(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType)    {    	non-compiled	[CE]  ';'  expected	8	None	replace
34	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  type.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  type.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  type.getComponentType()  :  toClass,  subtypeVarAssigns);	  Type    bound    =    toClass.isAssignableFrom(type)?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	49	None	replace
35	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  type,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  type,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  type,  subtypeVarAssigns);	  Type    bound    =    toClass.isAssignableFrom(type)?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	49	None	replace
36	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(!(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType))  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	add	if(!(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType))  {	  if(!(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType))    {    	compilable	  [FE]  IllegalStateException  	20	5	replace
37	[BUG]  [BUGGY]  if(!(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType))  {  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(!(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType))  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(!(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType))  {	  if(!(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType))    {    	compilable	  [FE]  IllegalStateException  	20	5	replace
38	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(!(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)&&  toClass.isArray())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	add	if(!(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)&&  toClass.isArray())  {	  if(!(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType))    {    	compilable	  [FE]  IllegalStateException  	20	5	replace
39	[BUG]  [BUGGY]  if(!(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)&&  toClass.isArray())  {  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(!(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)&&  toClass.isArray())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(!(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)&&  toClass.isArray())  {	  if(!(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType))    {    	compilable	  [FE]  IllegalStateException  	20	5	replace
40	[BUG]  [BUGGY]  if(!(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)&&  subtypeVarAssigns.contains(subtypeVarAssigns))  {  [CE]  cannot  find  symbol  [FE]        IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(!(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)&&  subtypeVarAssigns.contains(subtypeVarAssigns))  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(!(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)&&  subtypeVarAssigns.contains(subtypeVarAssigns))  {	  if(!(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType))    {    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
41	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(!(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>))  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	add	if(!(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>))  {	  if(!(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType))    {    	compilable	  [FE]  IllegalStateException  	20	5	replace
42	[BUG]  [BUGGY]  if(!(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>))  {  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(!(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>))  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(!(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>))  {	  if(!(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType))    {    	compilable	  [FE]  IllegalStateException  	20	5	replace
43	[BUG]  [BUGGY]  Type  bound  =  toClass.getComponentType()?  type.getComponentType()  :  toClass.getParameterTypes();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.getComponentType()?  type.getComponentType()  :  toClass.getParameterTypes();  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.getComponentType()?  type.getComponentType()  :  toClass.getParameterTypes();	  Type    bound    =    toClass.getComponentType()?    toClass.getComponentType()    :    toClass.getParameterTypes();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
44	[BUG]  [BUGGY]  Type  bound  =  toClass.getComponentType()?  toClass.getComponentType()  :  type.getParameterTypes();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.getComponentType()?  toClass.getComponentType()  :  type.getParameterTypes();  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.getComponentType()?  toClass.getComponentType()  :  type.getParameterTypes();	  Type    bound    =    toClass.getComponentType()?    toClass.getComponentType()    :    toClass.getParameterTypes();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
45	[BUG]  [BUGGY]  Type  bound  =  toClass.getComponentType()?  toClass.getComponentType()  :  toClass.getDeclaredTypes();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.getComponentType()?  toClass.getComponentType()  :  toClass.getDeclaredTypes();  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.getComponentType()?  toClass.getComponentType()  :  toClass.getDeclaredTypes();	  Type    bound    =    toClass.getComponentType()?    toClass.getComponentType()    :    toClass.getParameterTypes();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
46	[BUG]  [BUGGY]  if(toClass.isArray()  ||!(type  instanceof  ParameterizedType))  {  if(toClass.isArray()  ||!(type  instanceof  ParameterizedType))  {  [CE]  illegal  start  of  expression  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass.isArray()  ||!(type  instanceof  ParameterizedType))  {  if(toClass.isArray()  ||!(type  instanceof  ParameterizedType))  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass.isArray()    ||!(type    instanceof    ParameterizedType))    {    if(toClass.isArray()  ||!(type  instanceof  ParameterizedType))  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
47	[BUG]  [BUGGY]  if(toClass.isArray()  ||!(type  instanceof  ParameterizedType))  {  If(toClass.isArray()  ||!(type  instanceof  ParameterizedType))  {  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass.isArray()  ||!(type  instanceof  ParameterizedType))  {  If(toClass.isArray()  ||!(type  instanceof  ParameterizedType))  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass.isArray()    ||!(type    instanceof    ParameterizedType))    {    If(toClass.isArray()  ||!(type  instanceof  ParameterizedType))  {	  	non-compiled	[CE]  ';'  expected	23	None	add
48	[BUG]  [BUGGY]  if(toClass.isArray()  ||!(type  instanceof  ParameterizedType))  {  if(ToClass.isArray()  ||!(type  instanceof  ParameterizedType))  {  [CE]  illegal  start  of  expression  [FE]        IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass.isArray()  ||!(type  instanceof  ParameterizedType))  {  if(ToClass.isArray()  ||!(type  instanceof  ParameterizedType))  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass.isArray()    ||!(type    instanceof    ParameterizedType))    {    if(ToClass.isArray()  ||!(type  instanceof  ParameterizedType))  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
49	[BUG]  [BUGGY]  if(toClass.isArray()  ||!(type  instanceof  ParameterizedType))  {  if(fromClass.isArray()  ||!(type  instanceof  ParameterizedType))  {  [CE]  illegal  start  of  expression  [FE]          IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass.isArray()  ||!(type  instanceof  ParameterizedType))  {  if(fromClass.isArray()  ||!(type  instanceof  ParameterizedType))  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass.isArray()    ||!(type    instanceof    ParameterizedType))    {    if(fromClass.isArray()  ||!(type  instanceof  ParameterizedType))  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
50	[BUG]  [BUGGY]  if(!(type  instanceof  ParameterizedType)&&  toClass.isArray())  {  if(!(type  instanceof  ParameterizedType)&&  toClass.isArray())  {  [CE]  illegal  start  of  expression  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(!(type  instanceof  ParameterizedType)&&  toClass.isArray())  {  if(!(type  instanceof  ParameterizedType)&&  toClass.isArray())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(!(type    instanceof    ParameterizedType)&&    toClass.isArray())    {    if(!(type  instanceof  ParameterizedType)&&  toClass.isArray())  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
51	[BUG]  [BUGGY]  if(!(type  instanceof  ParameterizedType)&&  toClass.isArray())  {  If(!(type  instanceof  ParameterizedType)&&  toClass.isArray())  {  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(!(type  instanceof  ParameterizedType)&&  toClass.isArray())  {  If(!(type  instanceof  ParameterizedType)&&  toClass.isArray())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(!(type    instanceof    ParameterizedType)&&    toClass.isArray())    {    If(!(type  instanceof  ParameterizedType)&&  toClass.isArray())  {	  	non-compiled	[CE]  ';'  expected	21	None	add
52	[BUG]  [BUGGY]  if(!(type  instanceof  ParameterizedType)&&  toClass.isArray())  {  if(!(type  instanceof  ParameterizedType)&&  toClass.isObject())  {  [CE]  illegal  start  of  expression  [FE]        IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(!(type  instanceof  ParameterizedType)&&  toClass.isArray())  {  if(!(type  instanceof  ParameterizedType)&&  toClass.isObject())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(!(type    instanceof    ParameterizedType)&&    toClass.isArray())    {    if(!(type  instanceof  ParameterizedType)&&  toClass.isObject())  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
53	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getComponentType(),  subtypeVarAssigns;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getComponentType(),  subtypeVarAssigns;  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getComponentType(),  subtypeVarAssigns;	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    type,    subtypeVarAssigns;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
54	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass.getComponentType()  :  toClass,  subtypeVarAssigns;  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass.getComponentType()  :  toClass,  subtypeVarAssigns;  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass.getComponentType()  :  toClass,  subtypeVarAssigns;	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    type,    subtypeVarAssigns;    	non-compiled	[CE]  ';'  expected	14	None	replace
55	[BUG]  [BUGGY]  Type  bound  =  toClass.isInterface()?  type.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isInterface()?  type.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isInterface()?  type.getComponentType()  :  toClass,  subtypeVarAssigns);	  Type    bound    =    toClass.isArray()?    type.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	50	None	replace
56	[BUG]  [BUGGY]  Type  bound  =  toClass,  type.isArray()?  toClass.getRawType()  :  subtypeVarAssigns;  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass,  type.isArray()?  toClass.getRawType()  :  subtypeVarAssigns;  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass,  type.isArray()?  toClass.getRawType()  :  subtypeVarAssigns;	  Type    bound    =    toClass,    type.getRawType();    	non-compiled	[CE]  ';'  expected	55	None	replace
57	[BUG]  [BUGGY]  Type  bound  =  toClass,  type.isArray()?  toClass.getRawType()  :  toClass.getRawType();  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass,  type.isArray()?  toClass.getRawType()  :  toClass.getRawType();  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass,  type.isArray()?  toClass.getRawType()  :  toClass.getRawType();	  Type    bound    =    toClass,    type.getRawType();    	non-compiled	[CE]  ';'  expected	55	None	replace
58	[BUG]  [BUGGY]  Type  bound  =  toClass.getDeclaredTypes();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.getDeclaredTypes();  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.getDeclaredTypes();	  Type    bound    =    type.getBounds();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
59	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  toClass.isObject())  {  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  &&  toClass.isObject())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  &&  toClass.isObject())  {	  if(type    instanceof    ParameterizedType    &&    toClass.isArray())    {    if(type    instanceof    ParameterizedType    &&    toClass.isObject())    {    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
60	[BUG]  [BUGGY]  if(toClass  instanceof  ParameterizedType  &&  toClass.isObject())  {  [CE]  inconvertible  types  [FE]              IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass  instanceof  ParameterizedType  &&  toClass.isObject())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass  instanceof  ParameterizedType  &&  toClass.isObject())  {	  if(type    instanceof    ParameterizedType    &&    toClass.isArray())    {    if(type    instanceof    ParameterizedType    &&    toClass.isObject())    {    	non-compiled	[CE]  inconvertible  types	29	None	replace
61	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  toClass.isObject())  {  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  ||  toClass.isObject())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  ||  toClass.isObject())  {	  if(type    instanceof    ParameterizedType    &&    toClass.isArray())    {    if(type    instanceof    ParameterizedType    &&    toClass.isObject())    {    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
62	[BUG]  [BUGGY]  if(!(type  instanceof  ParameterizedType)||!(type  instanceof  ParameterizedType))  {  if(!(type  instanceof  ParameterizedType)||!(type  instanceof  ParameterizedType))  {  [CE]  illegal  start  of  expression  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(!(type  instanceof  ParameterizedType)||!(type  instanceof  ParameterizedType))  {  if(!(type  instanceof  ParameterizedType)||!(type  instanceof  ParameterizedType))  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(!(type    instanceof    ParameterizedType)||!(type    instanceof    ParameterizedType))    {    if(!(type  instanceof  ParameterizedType)||!(type  instanceof  ParameterizedType))  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
63	[BUG]  [BUGGY]  if(!(type  instanceof  ParameterizedType)||!(type  instanceof  ParameterizedType))  {  If(!(type  instanceof  ParameterizedType)||!(type  instanceof  ParameterizedType))  {  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(!(type  instanceof  ParameterizedType)||!(type  instanceof  ParameterizedType))  {  If(!(type  instanceof  ParameterizedType)||!(type  instanceof  ParameterizedType))  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(!(type    instanceof    ParameterizedType)||!(type    instanceof    ParameterizedType))    {    If(!(type  instanceof  ParameterizedType)||!(type  instanceof  ParameterizedType))  {	  	non-compiled	[CE]  ';'  expected	25	None	add
64	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(toClass,  toClass.isArray()?  toClass.getComponentType()  :  subtypeVarAssigns,  type);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  getTypeArguments(toClass,  toClass.isArray()?  toClass.getComponentType()  :  subtypeVarAssigns,  type);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  getTypeArguments(toClass,  toClass.isArray()?  toClass.getComponentType()  :  subtypeVarAssigns,  type);	  Type    bound    =    getTypeArguments(toClass,    toClass.isArray()?    toClass.getComponentType()    :    type,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
65	[BUG]  [BUGGY]  If(type  instanceof  ParameterizedType  &&  toClass.isArray())  {  [CE]  ';'  expected  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  If(type  instanceof  ParameterizedType  &&  toClass.isArray())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	If(type  instanceof  ParameterizedType  &&  toClass.isArray())  {	  if(type    instanceof    ParameterizedType    &&    toClass.isArray())    {    If(type    instanceof    ParameterizedType    &&    toClass.isArray())    {    	non-compiled	[CE]  ';'  expected	28	None	replace
66	[BUG]  [BUGGY]  If(type  instanceof  ParameterizedType  &&  toClass.isAssignableFrom(type))  {  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  If(type  instanceof  ParameterizedType  &&  toClass.isAssignableFrom(type))  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	If(type  instanceof  ParameterizedType  &&  toClass.isAssignableFrom(type))  {	  if(type    instanceof    ParameterizedType    &&    toClass.isArray())    {    If(type    instanceof    ParameterizedType    &&    toClass.isArray())    {    	non-compiled	[CE]  ';'  expected	28	None	replace
67	[BUG]  [BUGGY]  If(type  instanceof  ParameterizedType  ||  toClass.isArray())  {  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  If(type  instanceof  ParameterizedType  ||  toClass.isArray())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	If(type  instanceof  ParameterizedType  ||  toClass.isArray())  {	  if(type    instanceof    ParameterizedType    &&    toClass.isArray())    {    If(type    instanceof    ParameterizedType    &&    toClass.isArray())    {    	non-compiled	[CE]  ';'  expected	28	None	replace
68	[BUG]  [BUGGY]  If(type  instanceof  ParameterizedType  &&  toClass.isInterface())  {  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  If(type  instanceof  ParameterizedType  &&  toClass.isInterface())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	If(type  instanceof  ParameterizedType  &&  toClass.isInterface())  {	  if(type    instanceof    ParameterizedType    &&    toClass.isArray())    {    If(type    instanceof    ParameterizedType    &&    toClass.isArray())    {    	non-compiled	[CE]  ';'  expected	28	None	replace
69	[BUG]  [BUGGY]  Type  bound  =  toClass.getBounds(),  subtypeVarAssigns,  type);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.getBounds(),  subtypeVarAssigns,  type);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.getBounds(),  subtypeVarAssigns,  type);	  Type    bound    =    toClass.getBounds(),    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	71	None	replace
70	[BUG]  [BUGGY]  Type  bound  =  type.getBounds(),  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  type.getBounds(),  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  type.getBounds(),  subtypeVarAssigns);	  Type    bound    =    toClass.getBounds(),    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	71	None	replace
71	[BUG]  [BUGGY]  Type  bound  =  toClass.getBounds(),  subtypeVarAssigns,  null);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.getBounds(),  subtypeVarAssigns,  null);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.getBounds(),  subtypeVarAssigns,  null);	  Type    bound    =    toClass.getBounds(),    subtypeVarAssigns);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
72	[BUG]  [BUGGY]  Type  bound  =  this.toClass.getBounds(),  toClass);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  this.toClass.getBounds(),  toClass);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  this.toClass.getBounds(),  toClass);	  Type    bound    =    this.toClass.getBounds();    	non-compiled	[CE]  ';'  expected	60	None	replace
73	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  <?>  ||  type  instanceof  ParameterizedType  <?>  ||  toClass  instanceof  ParameterizedType)  {  [CE]  type  ParameterizedType  does  not  take  parameters  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  <?>  ||  type  instanceof  ParameterizedType  <?>  ||  toClass  instanceof  ParameterizedType)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  <?>  ||  type  instanceof  ParameterizedType  <?>  ||  toClass  instanceof  ParameterizedType)  {	  if(type    instanceof    ParameterizedType    <?>    ||    type    instanceof    ParameterizedType    <?>)    {    	non-compiled	[CE]  type  ParameterizedType  does  not  take  parameters	3	None	replace
74	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  <?>  ||  toClass  instanceof  ParameterizedType  <?>)  {  [CE]  type  ParameterizedType  does  not  take  parameters  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  <?>  ||  toClass  instanceof  ParameterizedType  <?>)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  <?>  ||  toClass  instanceof  ParameterizedType  <?>)  {	  if(type    instanceof    ParameterizedType    <?>    ||    type    instanceof    ParameterizedType    <?>)    {    	non-compiled	[CE]  type  ParameterizedType  does  not  take  parameters	3	None	replace
75	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  getTypeArguments(toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  getTypeArguments(toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  Type    bound    =    getTypeArguments(toClass.isArray()?    type.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
76	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(type.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  getTypeArguments(type.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  getTypeArguments(type.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  Type    bound    =    getTypeArguments(toClass.isArray()?    type.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
77	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  getTypeArguments(toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  getTypeArguments(toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);	  Type    bound    =    getTypeArguments(toClass.isArray()?    type.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
78	[BUG]  [BUGGY]  if(toClass  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  [CE]  inconvertible  types  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    	non-compiled	[CE]  inconvertible  types	44	None	replace
79	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type.getParameterType();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type.getParameterType();  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type.getParameterType();	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass.getParameterType();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
80	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass.getParameterType();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass.getParameterType();  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass.getParameterType();	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass.getParameterType();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
81	[BUG]  [BUGGY]  Type  bound  =  toClass.isObject()?  toClass.getComponentType()  :  toClass.getParameterType();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isObject()?  toClass.getComponentType()  :  toClass.getParameterType();  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isObject()?  toClass.getComponentType()  :  toClass.getParameterType();	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass.getParameterType();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
82	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  null;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  null;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  null;	  Type    bound    =((    ParameterizedType)type).getBounds();    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
83	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  toClass.getBounds();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  toClass.getBounds();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  toClass.getBounds();	  Type    bound    =((    ParameterizedType)type).getBounds();    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
84	[BUG]  [BUGGY]  Type  bound  =((  ParameterizedType)type).getDeclaredTypes();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =((  ParameterizedType)type).getDeclaredTypes();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =((  ParameterizedType)type).getDeclaredTypes();	  Type    bound    =((    ParameterizedType)type).getBounds();    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
85	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType  <?>)  {  [CE]  type  ParameterizedType  does  not  take  parameters  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType  <?>)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType  <?>)  {	  if(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType    <?>)    {    	non-compiled	[CE]  type  ParameterizedType  does  not  take  parameters	61	None	replace
86	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType  <?>)  {  [CE]  type  ParameterizedType  does  not  take  parameters  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType  <?>)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType  <?>)  {	  if(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType    <?>)    {    	non-compiled	[CE]  type  ParameterizedType  does  not  take  parameters	61	None	replace
87	[BUG]  [BUGGY]  if(toClass  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType  <?>)  {  [CE]  inconvertible  types  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType  <?>)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType  <?>)  {	  if(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType    <?>)    {    	non-compiled	[CE]  inconvertible  types	61	None	replace
88	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  subtypeVarAssigns;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  subtypeVarAssigns;  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  subtypeVarAssigns;	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    type;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
89	[BUG]  [BUGGY]  type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {	  if(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType)    {    type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType)    {    	non-compiled	[CE]  not  a  statement	65	None	replace
90	[BUG]  [BUGGY]  Type  bound  =  type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {	  if(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType)    {    type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType)    {    	non-compiled	[CE]  ';'  expected	65	None	replace
91	[BUG]  [BUGGY]  Type  bound  =  type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {	  if(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType)    {    type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType)    {    	non-compiled	[CE]  ';'  expected	65	None	replace
92	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  type.getComponentType();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  type.getComponentType();  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  type.getComponentType();	  Type    bound    =    toClass.isAssignableFrom(type)?    toClass.getComponentType()    :    toClass.getComponentType();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
93	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  type.getComponentType()  :  toClass.getComponentType();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  type.getComponentType()  :  toClass.getComponentType();  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  type.getComponentType()  :  toClass.getComponentType();	  Type    bound    =    toClass.isAssignableFrom(type)?    toClass.getComponentType()    :    toClass.getComponentType();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
94	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getParameterType(1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getParameterType(1);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getParameterType(1);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass.getParameterType(0);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
95	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass.getParameterType(0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass.getParameterType(0);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass.getParameterType(0);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass.getParameterType(0);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
96	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type.getParameterType(0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type.getParameterType(0);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type.getParameterType(0);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass.getParameterType(0);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
97	[BUG]  [BUGGY]  Type  bound  =  toClass.getParameterType(type);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.getParameterType(type);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.getParameterType(type);	  Type    bound    =    toClass.getParameterType(0);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
98	[BUG]  [BUGGY]  Type  bound  =  type.getParameterType(0);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  type.getParameterType(0);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  type.getParameterType(0);	  Type    bound    =    toClass.getParameterType(0);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
99	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getRawType()  :  null;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getRawType()  :  null;  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isArray()?  toClass.getRawType()  :  null;	  Type    bound    =    toClass.isArray()?    type.getRawType()    :    null;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
100	[BUG]  [BUGGY]  Type  bound  =  toClass.getRawType()?  type.getRawType()  :  null;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.getRawType()?  type.getRawType()  :  null;  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.getRawType()?  type.getRawType()  :  null;	  Type    bound    =    toClass.isArray()?    type.getRawType()    :    null;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
101	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  type.getRawType()  :  toClass;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isArray()?  type.getRawType()  :  toClass;  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isArray()?  type.getRawType()  :  toClass;	  Type    bound    =    toClass.isArray()?    type.getRawType()    :    null;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
102	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass.isArray()  ||  toClass.isArray())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	add	if(toClass.isArray()  ||  toClass.isArray())  {	  if(!(type    instanceof    ParameterizedType))    {    if(!(type    instanceof    ParameterizedType))    {    	compilable	  [FE]  IllegalStateException  	12	5	replace
103	[BUG]  [BUGGY]  if(toClass.isArray()  ||  toClass.isArray())  {  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass.isArray()  ||  toClass.isArray())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass.isArray()  ||  toClass.isArray())  {	  if(!(type    instanceof    ParameterizedType))    {    if(!(type    instanceof    ParameterizedType))    {    	compilable	  [FE]  IllegalStateException  	12	5	replace
104	[BUG]  [BUGGY]  Type  bounds  =  type.getBounds();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bounds  =  type.getBounds();  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bounds  =  type.getBounds();	  Type    bounds    =    toClass.getBounds();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
105	[BUG]  [BUGGY]  Type  bounds  =  toClass.getDeclaredTypes();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bounds  =  toClass.getDeclaredTypes();  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bounds  =  toClass.getDeclaredTypes();	  Type    bounds    =    toClass.getBounds();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
106	[BUG]  [BUGGY]  Type  bounds  =  toClass.getConstructor();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bounds  =  toClass.getConstructor();  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bounds  =  toClass.getConstructor();	  Type    bounds    =    toClass.getBounds();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
107	[BUG]  [BUGGY]  Type  bound  =  toClass.getRawType(),  subtypeVarAssigns,  type);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.getRawType(),  subtypeVarAssigns,  type);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.getRawType(),  subtypeVarAssigns,  type);	  Type    bound    =    toClass.getRawType(),    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	5	None	replace
108	[BUG]  [BUGGY]  Type  bound  =  type.getRawType(),  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  type.getRawType(),  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  type.getRawType(),  subtypeVarAssigns);	  Type    bound    =    toClass.getRawType(),    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	5	None	replace
109	[BUG]  [BUGGY]  Type  bound  =  toClass.getRawType(),  type);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.getRawType(),  type);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.getRawType(),  type);	  Type    bound    =    toClass.getRawType(),    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	5	None	replace
110	[BUG]  [BUGGY]  If(!(type  instanceof  ParameterizedType))  {  [CE]  ';'  expected  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  If(!(type  instanceof  ParameterizedType))  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	If(!(type  instanceof  ParameterizedType))  {	  if(!(type    instanceof    ParameterizedType))    {    If(!(type    instanceof    ParameterizedType))    {    	non-compiled	[CE]  ';'  expected	13	None	replace
111	[BUG]  [BUGGY]  AssertionError(toClass,  toClass,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  AssertionError(toClass,  toClass,  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	AssertionError(toClass,  toClass,  subtypeVarAssigns);	  if(!(type    instanceof    ParameterizedType))    {    If(!(type    instanceof    ParameterizedType))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
112	[BUG]  [BUGGY]  Class  <?>  bound  =  toClass.getRawClass();  [CE]  illegal  start  of  type  [FE]              IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Class  <?>  bound  =  toClass.getRawClass();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Class  <?>  bound  =  toClass.getRawClass();	  if(!(type    instanceof    ParameterizedType))    {    If(!(type    instanceof    ParameterizedType))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
113	[BUG]  [BUGGY]  Class  <?>  bounds  =  toClass.getRawClass();  [CE]  illegal  start  of  type  [FE]                IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Class  <?>  bounds  =  toClass.getRawClass();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Class  <?>  bounds  =  toClass.getRawClass();	  if(!(type    instanceof    ParameterizedType))    {    If(!(type    instanceof    ParameterizedType))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
114	[BUG]  [BUGGY]  if(toClass  instanceof  ParameterizedType  <?>  ||  toClass  instanceof  ParameterizedType)  {  [CE]  type  ParameterizedType  does  not  take  parameters  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass  instanceof  ParameterizedType  <?>  ||  toClass  instanceof  ParameterizedType)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass  instanceof  ParameterizedType  <?>  ||  toClass  instanceof  ParameterizedType)  {	  if(toClass    instanceof    ParameterizedType    <?>)    {    	non-compiled	[CE]  type  ParameterizedType  does  not  take  parameters	1	None	replace
115	[BUG]  [BUGGY]  if(toClass  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  [CE]  inconvertible  types  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {	  if(type    instanceof    ParameterizedType    ||    toClass    instanceof    ParameterizedType)    {    	non-compiled	[CE]  inconvertible  types	47	None	replace
116	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>)  {  [CE]  inconvertible  types  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>)  {	  if(type    instanceof    ParameterizedType    ||    toClass    instanceof    ParameterizedType)    {    	non-compiled	[CE]  inconvertible  types	47	None	replace
117	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(!(type  instanceof  ParameterizedType)&&  toClass.isArray()  ||  toClass.isArray())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	add	if(!(type  instanceof  ParameterizedType)&&  toClass.isArray()  ||  toClass.isArray())  {	  if(!(type    instanceof    ParameterizedType)&&    toClass.isArray())    {    	compilable	  [FE]  IllegalStateException  	22	5	replace
118	[BUG]  [BUGGY]  if(!(type  instanceof  ParameterizedType)&&  toClass.isArray()  ||  toClass.isArray())  {  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(!(type  instanceof  ParameterizedType)&&  toClass.isArray()  ||  toClass.isArray())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(!(type  instanceof  ParameterizedType)&&  toClass.isArray()  ||  toClass.isArray())  {	  if(!(type    instanceof    ParameterizedType)&&    toClass.isArray())    {    	compilable	  [FE]  IllegalStateException  	22	5	replace
119	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(!(type  instanceof  ParameterizedType)&&  toClass.isInterface())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	add	if(!(type  instanceof  ParameterizedType)&&  toClass.isInterface())  {	  if(!(type    instanceof    ParameterizedType)&&    toClass.isArray())    {    	compilable	  [FE]  IllegalStateException  	22	5	replace
120	[BUG]  [BUGGY]  if(!(type  instanceof  ParameterizedType)&&  toClass.isInterface())  {  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(!(type  instanceof  ParameterizedType)&&  toClass.isInterface())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(!(type  instanceof  ParameterizedType)&&  toClass.isInterface())  {	  if(!(type    instanceof    ParameterizedType)&&    toClass.isArray())    {    	compilable	  [FE]  IllegalStateException  	22	5	replace
121	[BUG]  [BUGGY]  if(toClass  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>)  {  [CE]  inconvertible  types  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>)  {	  if(toClass    instanceof    ParameterizedType    ||    toClass    instanceof    ParameterizedType)    {    	non-compiled	[CE]  inconvertible  types	51	None	replace
122	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  toClass.isAssignableFrom(type)||  toClass.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  &&  toClass.isAssignableFrom(type)||  toClass.isAssignableFrom(type))  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  &&  toClass.isAssignableFrom(type)||  toClass.isAssignableFrom(type))  {	  if(type    instanceof    ParameterizedType    &&    toClass.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	36	None	replace
123	[BUG]  [BUGGY]  if(toClass  instanceof  ParameterizedType  &&  toClass.isAssignableFrom(type))  {  [CE]  inconvertible  types  [FE]              IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass  instanceof  ParameterizedType  &&  toClass.isAssignableFrom(type))  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass  instanceof  ParameterizedType  &&  toClass.isAssignableFrom(type))  {	  if(type    instanceof    ParameterizedType    &&    toClass.isAssignableFrom(type))    {    	non-compiled	[CE]  inconvertible  types	36	None	replace
124	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  toClass.isAssignableFrom(type),  subtypeVarAssigns)  {  [CE]  ')'  expected  [FE]                IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  &&  toClass.isAssignableFrom(type),  subtypeVarAssigns)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  &&  toClass.isAssignableFrom(type),  subtypeVarAssigns)  {	  if(type    instanceof    ParameterizedType    &&    toClass.isAssignableFrom(type))    {    	non-compiled	[CE]  ')'  expected	36	None	replace
125	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass.getParameterTypes();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass.getParameterTypes();  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass.getParameterTypes();	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    type.getParameterTypes();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
126	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getSubtypes();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getSubtypes();  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getSubtypes();	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    type.getParameterTypes();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
127	[BUG]  [BUGGY]  if(toClass  instanceof  ParameterizedType  &&  type.isParameterizedType())  {  [CE]  inconvertible  types  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass  instanceof  ParameterizedType  &&  type.isParameterizedType())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass  instanceof  ParameterizedType  &&  type.isParameterizedType())  {	  if(type    instanceof    ParameterizedType    &&    toClass.isParameterizedType())    {    	non-compiled	[CE]  inconvertible  types	62	None	replace
128	[BUG]  [BUGGY]  if(toClass  instanceof  ParameterizedType  &&  toClass.isParameterizedType())  {  [CE]  inconvertible  types  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass  instanceof  ParameterizedType  &&  toClass.isParameterizedType())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass  instanceof  ParameterizedType  &&  toClass.isParameterizedType())  {	  if(type    instanceof    ParameterizedType    &&    toClass.isParameterizedType())    {    	non-compiled	[CE]  inconvertible  types	62	None	replace
129	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  toClass.isArray()?  toClass.getComponentType()  :  toClass.isParameterizedType())  {  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  &&  toClass.isArray()?  toClass.getComponentType()  :  toClass.isParameterizedType())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  &&  toClass.isArray()?  toClass.getComponentType()  :  toClass.isParameterizedType())  {	  if(type    instanceof    ParameterizedType    &&    toClass.isParameterizedType())    {    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
130	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType  ||  type  instanceof  Class  <?>)  {  [CE]  inconvertible  types  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType  ||  type  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType  ||  type  instanceof  Class  <?>)  {	  if(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType    ||    toClass    instanceof    Class    <?>)    {    	non-compiled	[CE]  inconvertible  types	46	None	replace
131	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	add	if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>)  {	  if(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType    ||    toClass    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	46	2	replace
132	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>)  {	  if(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType    ||    toClass    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	46	2	replace
133	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(toClass,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  getTypeArguments(toClass,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  getTypeArguments(toClass,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);	  Type    bound    =    getTypeArguments(type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
134	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(toClass,  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  getTypeArguments(toClass,  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  getTypeArguments(toClass,  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns,  type);	  Type    bound    =    getTypeArguments(type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
135	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  null);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  getTypeArguments(type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  null);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  getTypeArguments(type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  null);	  Type    bound    =    getTypeArguments(type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
136	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  type;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  type;  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  type;	  Type    bound    =    toClass.isAssignableFrom(type)?    toClass.getComponentType()    :    toClass;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
137	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass.isArray())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	add	if(toClass.isArray())  {	  if(type    instanceof    ParameterizedType    &&    toClass.isArray())    {    if(type    instanceof    ParameterizedType    &&    toClass.isArray())    {    	compilable	  [FE]  IllegalStateException  	27	5	replace
138	[BUG]  [BUGGY]  if(toClass.isArray())  {  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass.isArray())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass.isArray())  {	  if(type    instanceof    ParameterizedType    &&    toClass.isArray())    {    if(type    instanceof    ParameterizedType    &&    toClass.isArray())    {    	compilable	  [FE]  IllegalStateException  	27	5	replace
139	[BUG]  [BUGGY]  Type  bound  =  type,  subtypeVarAssigns.getBounds();  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  type,  subtypeVarAssigns.getBounds();  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  type,  subtypeVarAssigns.getBounds();	  Type    bound    =    toClass,    subtypeVarAssigns.getBounds();    	non-compiled	[CE]  ';'  expected	72	None	replace
140	[BUG]  [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.getBounds(),  type);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.getBounds(),  type);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass,  subtypeVarAssigns.getBounds(),  type);	  Type    bound    =    toClass,    subtypeVarAssigns.getBounds();    	non-compiled	[CE]  ';'  expected	72	None	replace
141	[BUG]  [BUGGY]  Type  bound  =  subtypeVarAssigns.getBounds();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  subtypeVarAssigns.getBounds();  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  subtypeVarAssigns.getBounds();	  Type    bound    =    toClass,    subtypeVarAssigns.getBounds();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
142	[BUG]  [BUGGY]  if(!(type  instanceof  ParameterizedType)&&!(type  instanceof  ParameterizedType))  {  if(!(type  instanceof  ParameterizedType)&&!(type  instanceof  ParameterizedType))  {  [CE]  illegal  start  of  expression  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(!(type  instanceof  ParameterizedType)&&!(type  instanceof  ParameterizedType))  {  if(!(type  instanceof  ParameterizedType)&&!(type  instanceof  ParameterizedType))  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(!(type    instanceof    ParameterizedType)&&!(type    instanceof    ParameterizedType))    {    if(!(type  instanceof  ParameterizedType)&&!(type  instanceof  ParameterizedType))  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
143	[BUG]  [BUGGY]  if(!(type  instanceof  ParameterizedType)&&!(type  instanceof  ParameterizedType))  {  If(!(type  instanceof  ParameterizedType)&&!(type  instanceof  ParameterizedType))  {  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(!(type  instanceof  ParameterizedType)&&!(type  instanceof  ParameterizedType))  {  If(!(type  instanceof  ParameterizedType)&&!(type  instanceof  ParameterizedType))  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(!(type    instanceof    ParameterizedType)&&!(type    instanceof    ParameterizedType))    {    If(!(type  instanceof  ParameterizedType)&&!(type  instanceof  ParameterizedType))  {	  	non-compiled	[CE]  ';'  expected	82	None	add
144	[BUG]  [BUGGY]  Type  bound  =  type.getDeclaredType();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  type.getDeclaredType();  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  type.getDeclaredType();	  Type    bound    =    type.getRawType();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
145	[BUG]  [BUGGY]  if(toClass  instanceof  ParameterizedType  ||  subtypeVarAssigns  instanceof  ParameterizedType)  {  [CE]  inconvertible  types  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass  instanceof  ParameterizedType  ||  subtypeVarAssigns  instanceof  ParameterizedType)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass  instanceof  ParameterizedType  ||  subtypeVarAssigns  instanceof  ParameterizedType)  {	  if(toClass    instanceof    ParameterizedType    &&    subtypeVarAssigns    instanceof    ParameterizedType)    {    	non-compiled	[CE]  inconvertible  types	68	None	replace
146	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  &&  subtypeVarAssigns  instanceof  ParameterizedType)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	add	if(type  instanceof  ParameterizedType  &&  subtypeVarAssigns  instanceof  ParameterizedType)  {	  if(toClass    instanceof    ParameterizedType    &&    subtypeVarAssigns    instanceof    ParameterizedType)    {    	compilable	  [FE]  IllegalStateException  	68	5	replace
147	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  subtypeVarAssigns  instanceof  ParameterizedType)  {  [FE]  IllegalStateException  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  &&  subtypeVarAssigns  instanceof  ParameterizedType)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  &&  subtypeVarAssigns  instanceof  ParameterizedType)  {	  if(toClass    instanceof    ParameterizedType    &&    subtypeVarAssigns    instanceof    ParameterizedType)    {    	compilable	  [FE]  IllegalStateException  	68	5	replace
148	[BUG]  [BUGGY]  if(toClass  instanceof  ParameterizedType  &&  subtypeVarAssigns  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType)  {  [CE]  inconvertible  types  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass  instanceof  ParameterizedType  &&  subtypeVarAssigns  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass  instanceof  ParameterizedType  &&  subtypeVarAssigns  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType)  {	  if(toClass    instanceof    ParameterizedType    &&    subtypeVarAssigns    instanceof    ParameterizedType)    {    	non-compiled	[CE]  inconvertible  types	68	None	replace
149	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  [CE]  inconvertible  types  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {	  if(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType    ||    toClass    instanceof    ParameterizedType)    {    	non-compiled	[CE]  inconvertible  types	76	None	replace
150	[BUG]  [BUGGY]  if(toClass  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType)  {  [CE]  inconvertible  types  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType)  {	  if(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType    ||    toClass    instanceof    ParameterizedType)    {    	non-compiled	[CE]  inconvertible  types	76	None	replace
151	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType)  {  [CE]  inconvertible  types  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType)  {	  if(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType    ||    toClass    instanceof    ParameterizedType)    {    	non-compiled	[CE]  inconvertible  types	76	None	replace
152	[BUG]  [BUGGY]  if(!(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType))  {  if(!(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType))  {  [CE]  illegal  start  of  expression  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(!(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType))  {  if(!(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType))  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(!(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType))    {    if(!(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType))  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
153	[BUG]  [BUGGY]  if(!(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType))  {  If(!(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType))  {  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(!(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType))  {  If(!(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType))  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(!(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType))    {    If(!(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType))  {	  	non-compiled	[CE]  ';'  expected	19	None	add
154	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  &&  toClass.isArray()  ||  toClass.isArray())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	add	if(type  instanceof  ParameterizedType  &&  toClass.isArray()  ||  toClass.isArray())  {	  if(type    instanceof    ParameterizedType    &&    toClass.isArray())    {    if(type    instanceof    ParameterizedType    &&    toClass.isArray()    ||    toClass.isArray())    {    	compilable	  [FE]  IllegalStateException  	79	5	replace
155	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  toClass.isArray()  ||  toClass.isArray())  {  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  &&  toClass.isArray()  ||  toClass.isArray())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  &&  toClass.isArray()  ||  toClass.isArray())  {	  if(type    instanceof    ParameterizedType    &&    toClass.isArray())    {    if(type    instanceof    ParameterizedType    &&    toClass.isArray()    ||    toClass.isArray())    {    	compilable	  [FE]  IllegalStateException  	79	5	replace
156	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  ||  toClass.isArray()  ||  toClass.isArray())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	add	if(type  instanceof  ParameterizedType  ||  toClass.isArray()  ||  toClass.isArray())  {	  if(type    instanceof    ParameterizedType    &&    toClass.isArray())    {    if(type    instanceof    ParameterizedType    &&    toClass.isArray()    ||    toClass.isArray())    {    	compilable	  [FE]  AssertionError  	79	2	replace
157	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  toClass.isArray()  ||  toClass.isArray())  {  [FE]  AssertionError  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  ||  toClass.isArray()  ||  toClass.isArray())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  ||  toClass.isArray()  ||  toClass.isArray())  {	  if(type    instanceof    ParameterizedType    &&    toClass.isArray())    {    if(type    instanceof    ParameterizedType    &&    toClass.isArray()    ||    toClass.isArray())    {    	compilable	  [FE]  AssertionError  	79	2	replace
158	[BUG]  [BUGGY]  if(toClass  instanceof  ParameterizedType  &&  toClass.isArray()  ||  toClass.isArray())  {  [CE]  inconvertible  types  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass  instanceof  ParameterizedType  &&  toClass.isArray()  ||  toClass.isArray())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass  instanceof  ParameterizedType  &&  toClass.isArray()  ||  toClass.isArray())  {	  if(type    instanceof    ParameterizedType    &&    toClass.isArray())    {    if(type    instanceof    ParameterizedType    &&    toClass.isArray()    ||    toClass.isArray())    {    	non-compiled	[CE]  inconvertible  types	79	None	replace
159	[BUG]  [BUGGY]  if(toClass  instanceof  ParameterizedType  &&  toClass.isConstructor())  {  [CE]  inconvertible  types  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass  instanceof  ParameterizedType  &&  toClass.isConstructor())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass  instanceof  ParameterizedType  &&  toClass.isConstructor())  {	  if(toClass    instanceof    ParameterizedType    &&    toClass.isArray())    {    	non-compiled	[CE]  inconvertible  types	33	None	replace
160	[BUG]  [BUGGY]  if(toClass  instanceof  ParameterizedType  <?>  ||  type  instanceof  ParameterizedType)  {  [CE]  type  ParameterizedType  does  not  take  parameters  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass  instanceof  ParameterizedType  <?>  ||  type  instanceof  ParameterizedType)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass  instanceof  ParameterizedType  <?>  ||  type  instanceof  ParameterizedType)  {	  if(type    instanceof    ParameterizedType    <?>    ||    toClass    instanceof    ParameterizedType)    {    	non-compiled	[CE]  type  ParameterizedType  does  not  take  parameters	2	None	replace
161	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  <?>  ||  toClass  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>)  {  [CE]  type  ParameterizedType  does  not  take  parameters  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  <?>  ||  toClass  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  <?>  ||  toClass  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>)  {	  if(type    instanceof    ParameterizedType    <?>    ||    toClass    instanceof    ParameterizedType)    {    	non-compiled	[CE]  type  ParameterizedType  does  not  take  parameters	2	None	replace
162	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
163	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  If(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  If(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    If(type  instanceof  ParameterizedType  &&  type  instanceof  ParameterizedType)  {	  	non-compiled	[CE]  ';'  expected	43	None	add
164	[BUG]  [BUGGY]  Type  bound  =  toClass.getBounds(),  type,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.getBounds(),  type,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.getBounds(),  type,  subtypeVarAssigns);	  Type    bound    =    toClass.getBounds(),    type);    	non-compiled	[CE]  ';'  expected	18	None	replace
165	[BUG]  [BUGGY]  Type  bound  =  toClass.getDeclaredTypes(),  type);  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.getDeclaredTypes(),  type);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.getDeclaredTypes(),  type);	  Type    bound    =    toClass.getBounds(),    type);    	non-compiled	[CE]  ';'  expected	18	None	replace
166	[BUG]  [BUGGY]  Type  bound  =  type.getBounds(),  toClass);  [CE]  ';'  expected  [FE]                            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  type.getBounds(),  toClass);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  type.getBounds(),  toClass);	  Type    bound    =    toClass.getBounds(),    type);    	non-compiled	[CE]  ';'  expected	18	None	replace
167	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass.isArray()  &&!(type  instanceof  ParameterizedType))  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	add	if(toClass.isArray()  &&!(type  instanceof  ParameterizedType))  {	  if(toClass.isArray()    ||!(type    instanceof    ParameterizedType))    {    	compilable	  [FE]  IllegalStateException  	24	5	replace
168	[BUG]  [BUGGY]  if(toClass.isArray()  &&!(type  instanceof  ParameterizedType))  {  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass.isArray()  &&!(type  instanceof  ParameterizedType))  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass.isArray()  &&!(type  instanceof  ParameterizedType))  {	  if(toClass.isArray()    ||!(type    instanceof    ParameterizedType))    {    	compilable	  [FE]  IllegalStateException  	24	5	replace
169	[BUG]  [BUGGY]  if(type.isArray()  ||!(toClass  instanceof  ParameterizedType))  {  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type.isArray()  ||!(toClass  instanceof  ParameterizedType))  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type.isArray()  ||!(toClass  instanceof  ParameterizedType))  {	  if(toClass.isArray()    ||!(type    instanceof    ParameterizedType))    {    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
170	[BUG]  [BUGGY]  if(toClass.isParameterized()  ||!(type  instanceof  ParameterizedType))  {  [CE]  cannot  find  symbol  [FE]        IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass.isParameterized()  ||!(type  instanceof  ParameterizedType))  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass.isParameterized()  ||!(type  instanceof  ParameterizedType))  {	  if(toClass.isArray()    ||!(type    instanceof    ParameterizedType))    {    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
171	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  &&  toClass.isArray()  ||  type  instanceof  ParameterizedType)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	add	if(type  instanceof  ParameterizedType  &&  toClass.isArray()  ||  type  instanceof  ParameterizedType)  {	  if(type    instanceof    ParameterizedType    &&    toClass.isArray())    {    if(type    instanceof    ParameterizedType    &&    toClass.isArray()    ||    type    instanceof    ParameterizedType)    {    	compilable	  [FE]  AssertionError  	80	2	replace
172	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  toClass.isArray()  ||  type  instanceof  ParameterizedType)  {  [FE]  AssertionError  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  &&  toClass.isArray()  ||  type  instanceof  ParameterizedType)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  &&  toClass.isArray()  ||  type  instanceof  ParameterizedType)  {	  if(type    instanceof    ParameterizedType    &&    toClass.isArray())    {    if(type    instanceof    ParameterizedType    &&    toClass.isArray()    ||    type    instanceof    ParameterizedType)    {    	compilable	  [FE]  AssertionError  	80	2	replace
173	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  ||  toClass.isArray()  ||  type  instanceof  ParameterizedType)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	add	if(type  instanceof  ParameterizedType  ||  toClass.isArray()  ||  type  instanceof  ParameterizedType)  {	  if(type    instanceof    ParameterizedType    &&    toClass.isArray())    {    if(type    instanceof    ParameterizedType    &&    toClass.isArray()    ||    type    instanceof    ParameterizedType)    {    	compilable	  [FE]  AssertionError  	80	2	replace
174	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  toClass.isArray()  ||  type  instanceof  ParameterizedType)  {  [FE]  AssertionError  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  ||  toClass.isArray()  ||  type  instanceof  ParameterizedType)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  ||  toClass.isArray()  ||  type  instanceof  ParameterizedType)  {	  if(type    instanceof    ParameterizedType    &&    toClass.isArray())    {    if(type    instanceof    ParameterizedType    &&    toClass.isArray()    ||    type    instanceof    ParameterizedType)    {    	compilable	  [FE]  AssertionError  	80	2	replace
175	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass.isArray()  ||  type  instanceof  ParameterizedType)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	add	if(toClass.isArray()  ||  type  instanceof  ParameterizedType)  {	  if(type    instanceof    ParameterizedType    &&    toClass.isArray())    {    if(type    instanceof    ParameterizedType    &&    toClass.isArray()    ||    type    instanceof    ParameterizedType)    {    	compilable	  [FE]  AssertionError  	80	2	replace
176	[BUG]  [BUGGY]  if(toClass.isArray()  ||  type  instanceof  ParameterizedType)  {  [FE]  AssertionError  [FE]              IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass.isArray()  ||  type  instanceof  ParameterizedType)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass.isArray()  ||  type  instanceof  ParameterizedType)  {	  if(type    instanceof    ParameterizedType    &&    toClass.isArray())    {    if(type    instanceof    ParameterizedType    &&    toClass.isArray()    ||    type    instanceof    ParameterizedType)    {    	compilable	  [FE]  AssertionError  	80	2	replace
177	[BUG]  [BUGGY]  if(toClass  instanceof  ParameterizedType  &&  toClass.isArray()  ||  type  instanceof  ParameterizedType)  {  [CE]  inconvertible  types  [FE]                IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass  instanceof  ParameterizedType  &&  toClass.isArray()  ||  type  instanceof  ParameterizedType)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass  instanceof  ParameterizedType  &&  toClass.isArray()  ||  type  instanceof  ParameterizedType)  {	  if(type    instanceof    ParameterizedType    &&    toClass.isArray())    {    if(type    instanceof    ParameterizedType    &&    toClass.isArray()    ||    type    instanceof    ParameterizedType)    {    	non-compiled	[CE]  inconvertible  types	80	None	replace
178	[BUG]  [BUGGY]  if(toClass  instanceof  ParameterizedType  ||  type.isArray())  {  [CE]  inconvertible  types  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass  instanceof  ParameterizedType  ||  type.isArray())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass  instanceof  ParameterizedType  ||  type.isArray())  {	  if(toClass    instanceof    ParameterizedType    &&    type.isArray())    {    	non-compiled	[CE]  inconvertible  types	81	None	replace
179	[BUG]  [BUGGY]  if(toClass  instanceof  ParameterizedType  &&  subtypeVarAssigns.isArray())  {  [CE]  inconvertible  types  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass  instanceof  ParameterizedType  &&  subtypeVarAssigns.isArray())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass  instanceof  ParameterizedType  &&  subtypeVarAssigns.isArray())  {	  if(toClass    instanceof    ParameterizedType    &&    type.isArray())    {    	non-compiled	[CE]  inconvertible  types	81	None	replace
180	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  type.getComponentType()  :  toClass,  subtypeVarAssigns;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  type.getComponentType()  :  toClass,  subtypeVarAssigns;  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  type.getComponentType()  :  toClass,  subtypeVarAssigns;	  Type    bound    =    toClass.isArray()?    type.getComponentType()    :    toClass,    subtypeVarAssigns;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
181	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(subtypeVarAssigns,  toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  getTypeArguments(subtypeVarAssigns,  toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  getTypeArguments(subtypeVarAssigns,  toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);	  Type    bound    =    getTypeArguments(subtypeVarAssigns,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
182	[BUG]  [BUGGY]  Type  bound  =  type.getParameterType();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  type.getParameterType();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  type.getParameterType();	  Type    bound    =    toClass.getParameterType();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
183	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(!(type  instanceof  ParameterizedType)&&!(type  instanceof  ParameterizedType  ||  type  instanceof  Class  <?>))  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	add	if(!(type  instanceof  ParameterizedType)&&!(type  instanceof  ParameterizedType  ||  type  instanceof  Class  <?>))  {	  if(!(type    instanceof    ParameterizedType)&&!(type    instanceof    ParameterizedType))    {    	compilable	  [FE]  IllegalStateException  	83	5	replace
184	[BUG]  [BUGGY]  if(!(type  instanceof  ParameterizedType)&&!(type  instanceof  ParameterizedType  ||  type  instanceof  Class  <?>))  {  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(!(type  instanceof  ParameterizedType)&&!(type  instanceof  ParameterizedType  ||  type  instanceof  Class  <?>))  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(!(type  instanceof  ParameterizedType)&&!(type  instanceof  ParameterizedType  ||  type  instanceof  Class  <?>))  {	  if(!(type    instanceof    ParameterizedType)&&!(type    instanceof    ParameterizedType))    {    	compilable	  [FE]  IllegalStateException  	83	5	replace
185	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass!=  null)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	add	if(toClass!=  null)  {	  if(!(type    instanceof    ParameterizedType))    {    if(!(type    instanceof    ParameterisedType))    {    	compilable	  [FE]  AssertionError  	63	2	replace
186	[BUG]  [BUGGY]  if(toClass!=  null)  {  [FE]  AssertionError  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass!=  null)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass!=  null)  {	  if(!(type    instanceof    ParameterizedType))    {    if(!(type    instanceof    ParameterisedType))    {    	compilable	  [FE]  AssertionError  	63	2	replace
187	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  ||!(type  instanceof  ParameterizedType))  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	add	if(type  instanceof  ParameterizedType  ||!(type  instanceof  ParameterizedType))  {	  if(!(type    instanceof    ParameterizedType)||!(type    instanceof    ParameterizedType))    {    	compilable	  [FE]  AssertionError  	26	2	replace
188	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||!(type  instanceof  ParameterizedType))  {  [FE]  AssertionError  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  ||!(type  instanceof  ParameterizedType))  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  ||!(type  instanceof  ParameterizedType))  {	  if(!(type    instanceof    ParameterizedType)||!(type    instanceof    ParameterizedType))    {    	compilable	  [FE]  AssertionError  	26	2	replace
189	[BUG]  [BUGGY]  Type  bound  =  type.getRawType(toClass);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  type.getRawType(toClass);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  type.getRawType(toClass);	  Type    bound    =    type.getRawType();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
190	[BUG]  [BUGGY]  Type  bound  =  toClass,  type.getRawType(),  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass,  type.getRawType(),  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass,  type.getRawType(),  subtypeVarAssigns);	  Type    bound    =    toClass,    type.getRawType();    	non-compiled	[CE]  ';'  expected	55	None	replace
191	[BUG]  [BUGGY]  Type  bound  =  toClass,  type.isArray()?  toClass.getRawType()  :  toClass;  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass,  type.isArray()?  toClass.getRawType()  :  toClass;  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass,  type.isArray()?  toClass.getRawType()  :  toClass;	  Type    bound    =    toClass,    type.getRawType();    	non-compiled	[CE]  ';'  expected	55	None	replace
192	[BUG]  [BUGGY]  Type  bound  =  type  instanceof  ParameterizedType?  toClass.getComponentType()  :  toClass;  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  type  instanceof  ParameterizedType?  toClass.getComponentType()  :  toClass;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  type  instanceof  ParameterizedType?  toClass.getComponentType()  :  toClass;	  if(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType)    {    type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
193	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(type);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  getTypeArguments(type);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  getTypeArguments(type);	  if(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType)    {    type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
194	[BUG]  [BUGGY]  if(toClass  instanceof  ParameterizedType  <?>  ||  toClass  instanceof  ParameterizedType  <?>)  {  [CE]  type  ParameterizedType  does  not  take  parameters  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass  instanceof  ParameterizedType  <?>  ||  toClass  instanceof  ParameterizedType  <?>)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass  instanceof  ParameterizedType  <?>  ||  toClass  instanceof  ParameterizedType  <?>)  {	  if(toClass    instanceof    ParameterizedType    <?>)    {    	non-compiled	[CE]  type  ParameterizedType  does  not  take  parameters	1	None	replace
195	[BUG]  [BUGGY]  Type  bound  =  toClass.getType(),  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.getType(),  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.getType(),  subtypeVarAssigns);	  Type    bound    =    toClass.getBounds(),    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	71	None	replace
196	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  ||!(type  instanceof  ParameterizedType)&&!(type  instanceof  ParameterizedType))  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	add	if(type  instanceof  ParameterizedType  ||!(type  instanceof  ParameterizedType)&&!(type  instanceof  ParameterizedType))  {	  if(!(type    instanceof    ParameterizedType)&&!(type    instanceof    ParameterizedType))    {    	compilable	  [FE]  AssertionError  	83	2	replace
197	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||!(type  instanceof  ParameterizedType)&&!(type  instanceof  ParameterizedType))  {  [FE]  AssertionError  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  ||!(type  instanceof  ParameterizedType)&&!(type  instanceof  ParameterizedType))  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  ||!(type  instanceof  ParameterizedType)&&!(type  instanceof  ParameterizedType))  {	  if(!(type    instanceof    ParameterizedType)&&!(type    instanceof    ParameterizedType))    {    	compilable	  [FE]  AssertionError  	83	2	replace
198	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  <?>  ||  type  instanceof  ParameterizedType  >=?>)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  <?>  ||  type  instanceof  ParameterizedType  >=?>)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  <?>  ||  type  instanceof  ParameterizedType  >=?>)  {	  if(type    instanceof    ParameterizedType    <?>    ||    type    instanceof    ParameterizedType    <?>)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
199	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  <?>  ||  type  instanceof  ParameterizedType  ==?>)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  <?>  ||  type  instanceof  ParameterizedType  ==?>)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  <?>  ||  type  instanceof  ParameterizedType  ==?>)  {	  if(type    instanceof    ParameterizedType    <?>    ||    type    instanceof    ParameterizedType    <?>)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
200	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(subtypeVarAssigns,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  getTypeArguments(subtypeVarAssigns,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  getTypeArguments(subtypeVarAssigns,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);	  Type    bound    =    getTypeArguments(type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
201	[BUG]  [BUGGY]  if(toClass.isArray()  ||!(type  instanceof  ParameterizedType))  {  if(toClass.isObject()  ||!(type  instanceof  ParameterizedType))  {  [CE]  illegal  start  of  expression  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass.isArray()  ||!(type  instanceof  ParameterizedType))  {  if(toClass.isObject()  ||!(type  instanceof  ParameterizedType))  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass.isArray()    ||!(type    instanceof    ParameterizedType))    {    if(toClass.isObject()  ||!(type  instanceof  ParameterizedType))  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
202	[BUG]  [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.getBounds()  -  1;  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.getBounds()  -  1;  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass,  subtypeVarAssigns.getBounds()  -  1;	  Type    bound    =    toClass,    subtypeVarAssigns.getBounds();    	non-compiled	[CE]  ';'  expected	72	None	replace
203	[BUG]  [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.getDeclaredType(type);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.getDeclaredType(type);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass,  subtypeVarAssigns.getDeclaredType(type);	  Type    bound    =    toClass,    subtypeVarAssigns.getBounds();    	non-compiled	[CE]  ';'  expected	72	None	replace
204	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  toClass.isAssignableFrom(type)||  toClass.isArray())  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  &&  toClass.isAssignableFrom(type)||  toClass.isArray())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  &&  toClass.isAssignableFrom(type)||  toClass.isArray())  {	  if(type    instanceof    ParameterizedType    &&    toClass.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	36	None	replace
205	[BUG]  [BUGGY]  if(!(type  instanceof  ParameterizedType)&&  subtypeVarAssigns.isArray())  {  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(!(type  instanceof  ParameterizedType)&&  subtypeVarAssigns.isArray())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(!(type  instanceof  ParameterizedType)&&  subtypeVarAssigns.isArray())  {	  if(!(type    instanceof    ParameterizedType)&&    toClass.isArray())    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
206	[BUG]  [BUGGY]  Type  bound  =  toClass.getComponentType()?  toClass.getComponentType()  :  toClass.getParameterType(0);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.getComponentType()?  toClass.getComponentType()  :  toClass.getParameterType(0);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.getComponentType()?  toClass.getComponentType()  :  toClass.getParameterType(0);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass.getParameterType(0);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
207	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(subtypeVarAssigns,  type.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  getTypeArguments(subtypeVarAssigns,  type.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  getTypeArguments(subtypeVarAssigns,  type.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  Type    bound    =    getTypeArguments(subtypeVarAssigns,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
208	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  If(!(type  instanceof  ParameterizedType))  {  [CE]  ';'  expected  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType)  {  If(!(type  instanceof  ParameterizedType))  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType)  {  If(!(type  instanceof  ParameterizedType))  {	  if(!(type    instanceof    ParameterizedType))    {    If(!(type    instanceof    ParameterizedType))    {    	non-compiled	[CE]  ';'  expected	13	None	replace
209	[BUG]  [BUGGY]  AssertionError(type,  toClass,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  AssertionError(type,  toClass,  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	AssertionError(type,  toClass,  subtypeVarAssigns);	  if(!(type    instanceof    ParameterizedType))    {    If(!(type    instanceof    ParameterizedType))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
210	[BUG]  [BUGGY]  AssertionError.show(toClass,  toClass,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]              IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  AssertionError.show(toClass,  toClass,  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	AssertionError.show(toClass,  toClass,  subtypeVarAssigns);	  if(!(type    instanceof    ParameterizedType))    {    If(!(type    instanceof    ParameterizedType))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
211	[BUG]  [BUGGY]  if(toClass.isObject())  {  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass.isObject())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass.isObject())  {	  if(type    instanceof    ParameterizedType    &&    toClass.isArray())    {    if(type    instanceof    ParameterizedType    &&    toClass.isObject())    {    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
212	[BUG]  [BUGGY]  Type  bound  =  toClass.isObject()?  type.getComponentType()  :  toClass.getParameterTypes();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isObject()?  type.getComponentType()  :  toClass.getParameterTypes();  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isObject()?  type.getComponentType()  :  toClass.getParameterTypes();	  Type    bound    =    toClass.isArray()?    type.getComponentType()    :    toClass.getParameterTypes();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
213	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(toClass,  type.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  getTypeArguments(toClass,  type.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  getTypeArguments(toClass,  type.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  Type    bound    =    getTypeArguments(toClass,    toClass.isArray()?    type.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
214	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  null,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  null,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isArray()?  type.getComponentType()  :  null,  subtypeVarAssigns);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    null,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	66	None	replace
215	[BUG]  [BUGGY]  Type  bound  =  toClass.isObject()?  toClass.getComponentType()  :  null,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isObject()?  toClass.getComponentType()  :  null,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isObject()?  toClass.getComponentType()  :  null,  subtypeVarAssigns);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    null,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	66	None	replace
216	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  null,  type);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  null,  type);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  null,  type);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    null,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	66	None	replace
217	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass.getParameterType();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass.getParameterType();  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass.getParameterType();	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass.getParameterType();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
218	[BUG]  [BUGGY]  Type  bound  =  toClass.isObject()?  type.getComponentType()  :  toClass.getComponentType();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isObject()?  type.getComponentType()  :  toClass.getComponentType();  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isObject()?  type.getComponentType()  :  toClass.getComponentType();	  Type    bound    =    toClass.isArray()?    type.getComponentType()    :    toClass.getComponentType();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
219	[BUG]  [BUGGY]  If(type  instanceof  ParameterizedType  &&  subtypeVarAssigns.isArray())  {  [CE]  ';'  expected  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  If(type  instanceof  ParameterizedType  &&  subtypeVarAssigns.isArray())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	If(type  instanceof  ParameterizedType  &&  subtypeVarAssigns.isArray())  {	  if(type    instanceof    ParameterizedType    &&    toClass.isArray())    {    If(type    instanceof    ParameterizedType    &&    toClass.isArray())    {    	non-compiled	[CE]  ';'  expected	28	None	replace
220	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType  ||  toClass.isArray())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	add	if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType  ||  toClass.isArray())  {	  if(!(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType))    {    	compilable	  [FE]  AssertionError  	20	2	replace
221	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType  ||  toClass.isArray())  {  [FE]  AssertionError  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType  ||  toClass.isArray())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType  ||  toClass.isArray())  {	  if(!(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType))    {    	compilable	  [FE]  AssertionError  	20	2	replace
222	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType  ||  toClass  instancesof  Class  <?>)  {  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>)  {  if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType  ||  toClass  instancesof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType    ||    toClass    instanceof    Class    <?>)    {    if(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType  ||  toClass  instancesof  Class  <?>)  {	  	non-compiled	[CE]  ')'  expected	45	None	add
223	[BUG]  [BUGGY]  Type  bound  =  toClass.getType(),  type);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.getType(),  type);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.getType(),  type);	  Type    bound    =    toClass.getBounds(),    type);    	non-compiled	[CE]  ';'  expected	18	None	replace
224	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  toClass.isArray()  ||  toClass.isObject())  {  [CE]  cannot  find  symbol  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  &&  toClass.isArray()  ||  toClass.isObject())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  &&  toClass.isArray()  ||  toClass.isObject())  {	  if(type    instanceof    ParameterizedType    &&    toClass.isArray())    {    if(type    instanceof    ParameterizedType    &&    toClass.isArray()    ||    toClass.isArray())    {    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
225	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  <?>  &&  toClass  instanceof  ParameterizedType)  {  [CE]  type  ParameterizedType  does  not  take  parameters  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  <?>  &&  toClass  instanceof  ParameterizedType)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  <?>  &&  toClass  instanceof  ParameterizedType)  {	  if(type    instanceof    ParameterizedType    <?>    ||    toClass    instanceof    ParameterizedType)    {    	non-compiled	[CE]  type  ParameterizedType  does  not  take  parameters	2	None	replace
226	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType)  {  [CE]  inconvertible  types  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType)  {	  if(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType    ||    toClass    instanceof    ParameterizedType)    {    	non-compiled	[CE]  inconvertible  types	76	None	replace
227	[BUG]  [BUGGY]  Type  bound  =  toClass.isObject()?  type.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isObject()?  type.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isObject()?  type.getComponentType()  :  toClass,  subtypeVarAssigns);	  Type    bound    =    toClass.isArray()?    type.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	50	None	replace
228	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  toClass  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>)  {  [CE]  inconvertible  types  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  &&  toClass  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  &&  toClass  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>)  {	  if(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType    ||    toClass    instanceof    Class    <?>)    {    	non-compiled	[CE]  inconvertible  types	46	None	replace
229	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns,  toClass);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns,  toClass);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns,  toClass);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  ';'  expected	77	None	replace
230	[BUG]  [BUGGY]  Type  bound  =  type.toClass.getBounds();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  type.toClass.getBounds();  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  type.toClass.getBounds();	  Type    bound    =    this.toClass.getBounds();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
231	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  ||  type  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	add	if(type  instanceof  ParameterizedType  ||  type  instanceof  Class  <?>)  {	  if(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType)    {    if(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType)    {    	compilable	  [FE]  AssertionError  	7	2	replace
232	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  type  instanceof  Class  <?>)  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  ||  type  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  ||  type  instanceof  Class  <?>)  {	  if(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType)    {    if(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType)    {    	compilable	  [FE]  AssertionError  	7	2	replace
233	[BUG]  [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  toClass.getRawType()  :  subtypeVarAssigns.getRawType();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  toClass.getRawType()  :  subtypeVarAssigns.getRawType();  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  subtypeVarAssigns!=  null?  toClass.getRawType()  :  subtypeVarAssigns.getRawType();	  Type    bound    =    subtypeVarAssigns.getRawType();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
234	[BUG]  [BUGGY]  Type  bound  =  subtypeVarAssigns.getType();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  subtypeVarAssigns.getType();  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  subtypeVarAssigns.getType();	  Type    bound    =    subtypeVarAssigns.getRawType();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
235	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type.getParameterType(toClass);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type.getParameterType(toClass);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type.getParameterType(toClass);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    type.getComponentType();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
236	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?(ParameterizedType)type  :((  ParameterizedType)type).getBounds();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?(ParameterizedType)type  :((  ParameterizedType)type).getBounds();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?(ParameterizedType)type  :((  ParameterizedType)type).getBounds();	  Type    bound    =((    ParameterizedType)type).getBounds();    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
237	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?(ParameterizedType)type  :  toClass.getBounds();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?(ParameterizedType)type  :  toClass.getBounds();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?(ParameterizedType)type  :  toClass.getBounds();	  Type    bound    =((    ParameterizedType)type).getBounds();    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
238	[BUG]  [BUGGY]  Type  bounds  =  toClass.getConstructors();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bounds  =  toClass.getConstructors();  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bounds  =  toClass.getConstructors();	  Type    bounds    =    toClass.getBounds();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
239	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass.isArray()  ||  toClass.isArray()  ||  type  instanceof  ParameterizedType)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	add	if(toClass.isArray()  ||  toClass.isArray()  ||  type  instanceof  ParameterizedType)  {	  if(type    instanceof    ParameterizedType    &&    toClass.isArray())    {    if(type    instanceof    ParameterizedType    &&    toClass.isArray()    ||    type    instanceof    ParameterizedType)    {    	compilable	  [FE]  AssertionError  	80	2	replace
240	[BUG]  [BUGGY]  if(toClass.isArray()  ||  toClass.isArray()  ||  type  instanceof  ParameterizedType)  {  [FE]  AssertionError  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass.isArray()  ||  toClass.isArray()  ||  type  instanceof  ParameterizedType)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass.isArray()  ||  toClass.isArray()  ||  type  instanceof  ParameterizedType)  {	  if(type    instanceof    ParameterizedType    &&    toClass.isArray())    {    if(type    instanceof    ParameterizedType    &&    toClass.isArray()    ||    type    instanceof    ParameterizedType)    {    	compilable	  [FE]  AssertionError  	80	2	replace
241	[BUG]  [BUGGY]  if(toClass  instanceof  ParameterizedType  &&  toClass.isInterface())  {  [CE]  inconvertible  types  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass  instanceof  ParameterizedType  &&  toClass.isInterface())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass  instanceof  ParameterizedType  &&  toClass.isInterface())  {	  if(toClass    instanceof    ParameterizedType    &&    toClass.isArray())    {    	non-compiled	[CE]  inconvertible  types	33	None	replace
242	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  type.getParameterType(0)  :  toClass.getParameterType(0);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isArray()?  type.getParameterType(0)  :  toClass.getParameterType(0);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isArray()?  type.getParameterType(0)  :  toClass.getParameterType(0);	  Type    bound    =    toClass.getParameterType(0);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
243	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  type.getParameterType(0)  :  toClass.getParameterType(1);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isArray()?  type.getParameterType(0)  :  toClass.getParameterType(1);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isArray()?  type.getParameterType(0)  :  toClass.getParameterType(1);	  Type    bound    =    toClass.getParameterType(0);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
244	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type.getDeclaredType(type);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type.getDeclaredType(type);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type.getDeclaredType(type);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    type.getComponentType();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
245	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  <?>  &&  type  instanceof  ParameterizedType)  {  [CE]  type  ParameterizedType  does  not  take  parameters  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  <?>  &&  type  instanceof  ParameterizedType)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  <?>  &&  type  instanceof  ParameterizedType)  {	  if(type    instanceof    ParameterizedType    &&    type    instanceof    ParameterizedType)    {    	non-compiled	[CE]  type  ParameterizedType  does  not  take  parameters	44	None	replace
246	[BUG]  [BUGGY]  if(!type.isParameterizedType()  ||  toClass.isArray())  {  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(!type.isParameterizedType()  ||  toClass.isArray())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(!type.isParameterizedType()  ||  toClass.isArray())  {	  if(!(type    instanceof    ParameterizedType)||    toClass.isArray())    {    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
247	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  toClass.isParameterizedType())  {  [CE]  cannot  find  symbol  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  ||  toClass.isParameterizedType())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  ||  toClass.isParameterizedType())  {	  if(type    instanceof    ParameterizedType    &&    toClass.isParameterizedType())    {    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
248	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  type.getRawType()  :  toClass.getRawType(),  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isArray()?  type.getRawType()  :  toClass.getRawType(),  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isArray()?  type.getRawType()  :  toClass.getRawType(),  subtypeVarAssigns);	  Type    bound    =    toClass.getRawType(),    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	5	None	replace
249	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getRawType()  :  type;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getRawType()  :  type;  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isArray()?  toClass.getRawType()  :  type;	  Type    bound    =    toClass.isArray()?    type.getRawType()    :    null;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
250	[BUG]  [BUGGY]  if(toClass.isArray()  ||!(type  instanceof  ParameterizedType))  {  if(toClass.isArray()  ||?!(type  instanceof  ParameterizedType))  {  [CE]  illegal  start  of  expression  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass.isArray()  ||!(type  instanceof  ParameterizedType))  {  if(toClass.isArray()  ||?!(type  instanceof  ParameterizedType))  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass.isArray()    ||!(type    instanceof    ParameterizedType))    {    if(toClass.isArray()  ||?!(type  instanceof  ParameterizedType))  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
251	[BUG]  [BUGGY]  if(toClass  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType)  {  [CE]  inconvertible  types  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(toClass  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(toClass  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType)  {	  if(toClass    instanceof    ParameterizedType    ||    toClass    instanceof    ParameterizedType)    {    	non-compiled	[CE]  inconvertible  types	51	None	replace
252	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType))  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	add	if(type  instanceof  ParameterizedType  &&!(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType))  {	  if(!(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType))    {    	compilable	  [FE]  IllegalStateException  	20	5	replace
253	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&!(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType))  {  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  &&!(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType))  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  &&!(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType))  {	  if(!(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType))    {    	compilable	  [FE]  IllegalStateException  	20	5	replace
254	[BUG]  [BUGGY]  Iterator  <  ParameterizedType>  it  =  type.getParameterizedTypes().iterator();  [CE]  illegal  start  of  type  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Iterator  <  ParameterizedType>  it  =  type.getParameterizedTypes().iterator();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Iterator  <  ParameterizedType>  it  =  type.getParameterizedTypes().iterator();	  if(!(type    instanceof    ParameterizedType))    {    If(!(type    instanceof    ParameterizedType))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
255	[BUG]  [BUGGY]  if(!(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType))  {  if(!(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterisedType))  {  [CE]  illegal  start  of  expression  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(!(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType))  {  if(!(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterisedType))  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(!(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType))    {    if(!(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterisedType))  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
256	[BUG]  [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.isArray()?  type.getRawType()  :  type;  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.isArray()?  type.getRawType()  :  type;  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass,  subtypeVarAssigns.isArray()?  type.getRawType()  :  type;	  Type    bound    =    toClass,    type.getRawType();    	non-compiled	[CE]  ';'  expected	55	None	replace
257	[BUG]  [BUGGY]  if(type.isArray()  ||!(type  instanceof  ParameterizedType))  {  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type.isArray()  ||!(type  instanceof  ParameterizedType))  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type.isArray()  ||!(type  instanceof  ParameterizedType))  {	  if(toClass.isArray()    ||!(type    instanceof    ParameterizedType))    {    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
258	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  type.getParameterizedType()  :  toClass.getParameterizedType();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isArray()?  type.getParameterizedType()  :  toClass.getParameterizedType();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isArray()?  type.getParameterizedType()  :  toClass.getParameterizedType();	  Type    bound    =    toClass.getParameterizedType();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
259	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType)  {  If(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType)  {  If(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType)  {  If(type  instanceof  ParameterizedType  ||  type  instanceof  ParameterizedType)  {	  if(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType)    {    If(type    instanceof    ParameterizedType    ||    type    instanceof    ParameterizedType)    {    	non-compiled	[CE]  ';'  expected	8	None	replace
260	[BUG]  [BUGGY]  Type  bound  =  toClass.getBounds(),  toClass);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.getBounds(),  toClass);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.getBounds(),  toClass);	  Type    bound    =    toClass.getBounds(),    type);    	non-compiled	[CE]  ';'  expected	18	None	replace
261	[BUG]  [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  toClass.getRawType()  :  type;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  toClass.getRawType()  :  type;  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  subtypeVarAssigns!=  null?  toClass.getRawType()  :  type;	  Type    bound    =    subtypeVarAssigns.getRawType();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
262	[BUG]  [BUGGY]  Type  bound  =  this.subtypeVarAssigns.getRawType();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  this.subtypeVarAssigns.getRawType();  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  this.subtypeVarAssigns.getRawType();	  Type    bound    =    subtypeVarAssigns.getRawType();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
263	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  <?>  ||  toClass  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType)  {  [CE]  type  ParameterizedType  does  not  take  parameters  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  <?>  ||  toClass  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  <?>  ||  toClass  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType)  {	  if(type    instanceof    ParameterizedType    <?>    ||    toClass    instanceof    ParameterizedType)    {    	non-compiled	[CE]  type  ParameterizedType  does  not  take  parameters	2	None	replace
264	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  type.getParameterType()  :  toClass.getParameterType();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isArray()?  type.getParameterType()  :  toClass.getParameterType();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isArray()?  type.getParameterType()  :  toClass.getParameterType();	  Type    bound    =    toClass.getParameterType();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
265	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass.getParameterType(0);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass.getParameterType(0);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass.getParameterType(0);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass.getParameterType(0);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
266	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass.getParameterType(1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass.getParameterType(1);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass.getParameterType(1);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass.getParameterType(0);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
267	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  type.getRawType()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isArray()?  type.getRawType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isArray()?  type.getRawType()  :  toClass,  subtypeVarAssigns);	  Type    bound    =    toClass.isArray()?    type.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	50	None	replace
268	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  type.getName()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isArray()?  type.getName()  :  toClass,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isArray()?  type.getName()  :  toClass,  subtypeVarAssigns);	  Type    bound    =    toClass.isArray()?    type.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	50	None	replace
269	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns,  type);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  ';'  expected	77	None	replace
270	[BUG]  [BUGGY]  Type  bound  =  this.bounds.getBounds();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  this.bounds.getBounds();  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  this.bounds.getBounds();	  Type    bound    =    type.getBounds();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
271	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getSubtypeVarAssigns();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getSubtypeVarAssigns();  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getSubtypeVarAssigns();	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    type.getParameterTypes();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
272	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getName()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getName()  :  toClass,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getName()  :  toClass,  subtypeVarAssigns);	  Type    bound    =    toClass.isAssignableFrom(type)?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	49	None	replace
273	[BUG]  [BUGGY]  If(toClass  instanceof  ParameterizedType  &&  toClass.isArray())  {  [CE]  ';'  expected  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  If(toClass  instanceof  ParameterizedType  &&  toClass.isArray())  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	If(toClass  instanceof  ParameterizedType  &&  toClass.isArray())  {	  if(type    instanceof    ParameterizedType    &&    toClass.isArray())    {    If(type    instanceof    ParameterizedType    &&    toClass.isArray())    {    	non-compiled	[CE]  ';'  expected	28	None	replace
274	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  &&  toClass.isAssignableFrom(type)||  type  instanceof  ParameterizedType)  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  &&  toClass.isAssignableFrom(type)||  type  instanceof  ParameterizedType)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  &&  toClass.isAssignableFrom(type)||  type  instanceof  ParameterizedType)  {	  if(type    instanceof    ParameterizedType    &&    toClass.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	36	None	replace
275	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  <?>  &&  type  instanceof  ParameterizedType  <?>)  {  [CE]  type  ParameterizedType  does  not  take  parameters  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  if(type  instanceof  ParameterizedType  <?>  &&  type  instanceof  ParameterizedType  <?>)  {  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	if(type  instanceof  ParameterizedType  <?>  &&  type  instanceof  ParameterizedType  <?>)  {	  if(type    instanceof    ParameterizedType    <?>    ||    type    instanceof    ParameterizedType    <?>)    {    	non-compiled	[CE]  type  ParameterizedType  does  not  take  parameters	3	None	replace
276	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(type,  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  getTypeArguments(type,  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  getTypeArguments(type,  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns,  type);	  Type    bound    =    getTypeArguments(type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
277	[BUG]  [BUGGY]  Type  bounds  =  toClass.getBounds()  -  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bounds  =  toClass.getBounds()  -  1;  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bounds  =  toClass.getBounds()  -  1;	  Type    bounds    =    toClass.getBounds();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
278	[BUG]  [BUGGY]  Type  bound  =  toClass.getComponentType()?  toClass.getName()  :  toClass;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =  toClass.getComponentType()?  toClass.getName()  :  toClass;  [BUGGY]      if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =  toClass.getComponentType()?  toClass.getName()  :  toClass;	  Type    bound    =    toClass.getComponentType()?    toClass.getComponentType()    :    toClass;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
279	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  getBounds();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }      [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  getBounds();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	551	551	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  getBounds();	  Type    bound    =((    ParameterizedType)type).getBounds();    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
