bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(Type  toBound  :  toWildcardType)  {  [CE]  for-each  not  applicable  to  expression  type  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  for(Type  toBound  :  toWildcardType)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  toWildcardType)  {	  for(Type    toBound    :    upperBounds)    {    for(Type    toBound    :    typeVarAssigns)    {    	non-compiled	[CE]  for-each  not  applicable  to  expression  type	67	None	replace
2	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  toUpperBounds.toArray(new  Type[toLowerBounds.size()  ]);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  toUpperBounds.toArray(new  Type[toLowerBounds.size()  ]);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  toUpperBounds.toArray(new  Type[toLowerBounds.size()  ]);	  Type[]    toUpperBounds    =    toUpperBounds.toArray(new    Type[toUpperBounds.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
3	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  toUpperBounds.toArray(new  Type[toUpperBounds.size()  +  1]);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  toUpperBounds.toArray(new  Type[toUpperBounds.size()  +  1]);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  toUpperBounds.toArray(new  Type[toUpperBounds.size()  +  1]);	  Type[]    toUpperBounds    =    toUpperBounds.toArray(new    Type[toUpperBounds.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
4	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  toUpperBounds.toArray(new  Type[typeVarAssigns.size()  ]);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  toUpperBounds.toArray(new  Type[typeVarAssigns.size()  ]);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  toUpperBounds.toArray(new  Type[typeVarAssigns.size()  ]);	  Type[]    toUpperBounds    =    toUpperBounds.toArray(new    Type[toUpperBounds.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
5	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.toArray(new  Type[upperBounds.size()  ]);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.toArray(new  Type[upperBounds.size()  ]);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  toWildcardType.toArray(new  Type[upperBounds.size()  ]);	  Type[]    lowerBounds    =    toWildcardType.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
6	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.toArray(new  Type[toWildcardType.size()  ]);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.toArray(new  Type[toWildcardType.size()  ]);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  toWildcardType.toArray(new  Type[toWildcardType.size()  ]);	  Type[]    lowerBounds    =    toWildcardType.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
7	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.toArray(new  Type[toLowerBounds.size()  ]);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.toArray(new  Type[toLowerBounds.size()  ]);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  toWildcardType.toArray(new  Type[toLowerBounds.size()  ]);	  Type[]    lowerBounds    =    toWildcardType.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
8	[BUG]  [BUGGY]  for(Type  toBound  :  wildcardTypes)  {  [CE]  cannot  find  symbol  wildcardTypes  [FE]        AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  for(Type  toBound  :  wildcardTypes)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  wildcardTypes)  {	  for(Type    toBound    :    toWildcardTypes)    {    	non-compiled	[CE]  cannot  find  symbol  wildcardTypes	47	None	replace
9	[BUG]  [BUGGY]  for(Type  bound  :  toWildcardTypes)  {  [CE]  cannot  find  symbol  toWildcardTypes  [FE]          AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  for(Type  bound  :  toWildcardTypes)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  bound  :  toWildcardTypes)  {	  for(Type    toBound    :    toWildcardTypes)    {    	non-compiled	[CE]  cannot  find  symbol  toWildcardTypes	47	None	replace
10	[BUG]  [BUGGY]  for(Type  toBound  :  toWildcardType.typeVarAssigns)  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]          AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  for(Type  toBound  :  toWildcardType.typeVarAssigns)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  toWildcardType.typeVarAssigns)  {	  for(Type    toBound    :    typeVarAssigns)    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	48	None	replace
11	[BUG]  [BUGGY]  for(Type  toBound  :  toWildcardType.assigns)  {  [CE]  cannot  find  symbol  assigns  [FE]            AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  for(Type  toBound  :  toWildcardType.assigns)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  toWildcardType.assigns)  {	  for(Type    toBound    :    typeVarAssigns)    {    	non-compiled	[CE]  cannot  find  symbol  assigns	48	None	replace
12	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
13	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns);	  Type[]    lowerBounds    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
14	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toBound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toBound,  toUpperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(toBound,  toUpperBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
15	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  toWildcardType,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  toWildcardType,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(bound,  toWildcardType,  typeVarAssigns);	  Type    toLowerBounds    =    substituteTypeVariables(toBound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
16	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  toWildcardType,  wildcardType);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  toWildcardType,  wildcardType);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(toBound,  toWildcardType,  wildcardType);	  Type    toLowerBounds    =    substituteTypeVariables(toBound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
17	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  toWildcardType,  lowerBounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  toWildcardType,  lowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(toBound,  toWildcardType,  lowerBounds);	  Type    toLowerBounds    =    substituteTypeVariables(toBound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
18	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  toWildcardType,  upperBounds);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  toWildcardType,  upperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(toBound,  toWildcardType,  upperBounds);	  Type    toLowerBounds    =    substituteTypeVariables(toBound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
19	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(type,  toWildcardType,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(type,  toWildcardType,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(type,  toWildcardType,  typeVarAssigns);	  Type[]    lowerBounds    =    substituteTypeVariables(type,    toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
20	[BUG]  [BUGGY]  for(Type  toBound  :  toLowerBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  for(Type  toBound  :  toLowerBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  toLowerBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);	  for(Type    toBound    :    lowerBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	74	None	replace
21	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  upperBounds);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  upperBounds);  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  upperBounds);	  for(Type    toBound    :    lowerBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
22	[BUG]  [BUGGY]  for(Type  toBound  :  toLowerBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  for(Type  toBound  :  toLowerBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  }  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  toLowerBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  }	  for(Type    toBound    :    lowerBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
23	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toUpperBounds.toArray(new  Type[upperBounds.size()  ]);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  toUpperBounds.toArray(new  Type[upperBounds.size()  ]);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  toUpperBounds.toArray(new  Type[upperBounds.size()  ]);	  Type[]    lowerBounds    =    typeVarAssigns.toArray(new    Type[upperBounds.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
24	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toWildcardType.toLowerBounds();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  toWildcardType.toLowerBounds();  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  toWildcardType.toLowerBounds();	  Type[]    toLowerBounds    =    toUpperBounds.toLowerBounds();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
25	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(bound,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(bound,  toLowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(bound,  toLowerBounds);	  Type[]    toUpperBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
26	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  toUpperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  toUpperBounds);	  Type[]    toUpperBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
27	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  toUpperBounds.subtractTypeVariables(toBound,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  toUpperBounds.subtractTypeVariables(toBound,  toLowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  toUpperBounds.subtractTypeVariables(toBound,  toLowerBounds);	  Type[]    toUpperBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
28	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  replaceTypeVariables(toBound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  replaceTypeVariables(toBound,  toUpperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  replaceTypeVariables(toBound,  toUpperBounds);	  Type[]    toUpperBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
29	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  toLowerBounds.toUpperBounds();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  toLowerBounds.toUpperBounds();  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  toLowerBounds.toUpperBounds();	  Type[]    toLowerBounds    =    toLowerBounds.toLowerBounds();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
30	[BUG]  [BUGGY]  Type[]  upperBounds  =  substituteTypeVariables(toWildcardType,  toWildcardType,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  upperBounds  =  substituteTypeVariables(toWildcardType,  toWildcardType,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  upperBounds  =  substituteTypeVariables(toWildcardType,  toWildcardType,  typeVarAssigns);	  Type[]    upperBounds    =    substituteTypeVariables(bound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
31	[BUG]  [BUGGY]  Type[]  upperBounds  =  substituteTypeVariables(toWildcardType,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  upperBounds  =  substituteTypeVariables(toWildcardType,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  upperBounds  =  substituteTypeVariables(toWildcardType,  typeVarAssigns);	  Type[]    upperBounds    =    substituteTypeVariables(bound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
32	[BUG]  [BUGGY]  Type[]  upperBounds  =  substituteTypeVariables(toWildcardType,  bound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  upperBounds  =  substituteTypeVariables(toWildcardType,  bound,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  upperBounds  =  substituteTypeVariables(toWildcardType,  bound,  typeVarAssigns);	  Type[]    upperBounds    =    substituteTypeVariables(bound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
33	[BUG]  [BUGGY]  Type[]  upperBounds  =  substituteTypeVariables(bound,  toWildcardType,  typeVarAssigns,  wildcardType);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  upperBounds  =  substituteTypeVariables(bound,  toWildcardType,  typeVarAssigns,  wildcardType);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  upperBounds  =  substituteTypeVariables(bound,  toWildcardType,  typeVarAssigns,  wildcardType);	  Type[]    upperBounds    =    substituteTypeVariables(bound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
34	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toLowerBounds,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toLowerBounds,  toUpperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(toLowerBounds,  toUpperBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(toLowerBounds,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
35	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(bound,  lowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(bound,  lowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(bound,  lowerBounds,  typeVarAssigns);	  Type[]    toLowerBounds    =    substituteTypeVariables(bound,    lowerBounds);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
36	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toUpperBound,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toUpperBound,  toLowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(toUpperBound,  toLowerBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(upperBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
37	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toLowerBounds,  upperBounds);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toLowerBounds,  upperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(toLowerBounds,  upperBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(upperBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
38	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds);  for(Type  bound  :  toLowerBounds)  {  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds);  for(Type  bound  :  toLowerBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds);  for(Type  bound  :  toLowerBounds)  {	  for(Type    toBound    :    toUpperBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    toUpperBounds);    for(Type    bound    :    toUpperBounds)    {    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	9	None	replace
39	[BUG]  [BUGGY]  for(Type  bound  :  toLowerBounds)  {  [CE]  cannot  find  symbol  toBound  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  for(Type  bound  :  toLowerBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  bound  :  toLowerBounds)  {	  for(Type    toBound    :    toUpperBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    toUpperBounds);    for(Type    bound    :    toUpperBounds)    {    	non-compiled	[CE]  cannot  find  symbol  toBound	9	None	replace
40	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(bound,  toLowerBounds);  for(Type  bound  :  toLowerBounds)  {  [CE]  cannot  find  symbol  bound  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toBound  =  substituteTypeVariables(bound,  toLowerBounds);  for(Type  bound  :  toLowerBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toBound  =  substituteTypeVariables(bound,  toLowerBounds);  for(Type  bound  :  toLowerBounds)  {	  for(Type    toBound    :    toUpperBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    toUpperBounds);    for(Type    bound    :    toUpperBounds)    {    	non-compiled	[CE]  cannot  find  symbol  bound	9	None	replace
41	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(lowerBound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(lowerBound,  toUpperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(lowerBound,  toUpperBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(lowerBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
42	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toUpperBounds.subtract(lowerBound,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  toUpperBounds.subtract(lowerBound,  toLowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  toUpperBounds.subtract(lowerBound,  toLowerBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(lowerBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
43	[BUG]  [BUGGY]  for(Type  toBound  :  toLowerBounds)  {  if  (!isAssignable(toBound,  toLowerBound,  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  toLowerBound  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  for(Type  toBound  :  toLowerBounds)  {  if  (!isAssignable(toBound,  toLowerBound,  typeVarAssigns))  {  return  false;  }  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  toLowerBounds)  {  if  (!isAssignable(toBound,  toLowerBound,  typeVarAssigns))  {  return  false;  }	  for(Type    toBound    :    lowerBounds)    {    if    (!isAssignable(toBound,    bound,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  toLowerBound	82	None	replace
44	[BUG]  [BUGGY]  for(Type  toBound  :  toLowerBounds)  {  if  (!isAssignable(toBound,  toLowerBounds,  typeVarAssigns))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  for(Type  toBound  :  toLowerBounds)  {  if  (!isAssignable(toBound,  toLowerBounds,  typeVarAssigns))  {  return  false;  }  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  toLowerBounds)  {  if  (!isAssignable(toBound,  toLowerBounds,  typeVarAssigns))  {  return  false;  }	  for(Type    toBound    :    lowerBounds)    {    if    (!isAssignable(toBound,    bound,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Map<TypeVariable<?>,Type>)	82	None	replace
45	[BUG]  [BUGGY]  for(Type  toBound  :  toUpperBounds)  {  if  (!isAssignable(toBound,  toLowerBound,  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  toLowerBound  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  for(Type  toBound  :  toUpperBounds)  {  if  (!isAssignable(toBound,  toLowerBound,  typeVarAssigns))  {  return  false;  }  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  toUpperBounds)  {  if  (!isAssignable(toBound,  toLowerBound,  typeVarAssigns))  {  return  false;  }	  for(Type    toBound    :    lowerBounds)    {    if    (!isAssignable(toBound,    bound,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  toLowerBound	82	None	replace
46	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toUpperBounds.toArray(new  Type[typeVarAssigns.size()  ]);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  toUpperBounds.toArray(new  Type[typeVarAssigns.size()  ]);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  toUpperBounds.toArray(new  Type[typeVarAssigns.size()  ]);	  Type[]    lowerBounds    =    upperBounds.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
47	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  toBound  :  lowerBounds)  {  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  toBound  :  lowerBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  toBound  :  lowerBounds)  {	  for(Type    toBound    :    lowerBounds)    {    Type    toBound    =    substituteTypeVariables(toBound);    for(Type    toBound    :    lowerBounds)    {    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	75	None	replace
48	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound);  for(Type  toBound  :  lowerBounds)  {  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound);  for(Type  toBound  :  lowerBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toBound  =  substituteTypeVariables(toBound);  for(Type  toBound  :  lowerBounds)  {	  for(Type    toBound    :    lowerBounds)    {    Type    toBound    =    substituteTypeVariables(toBound);    for(Type    toBound    :    lowerBounds)    {    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	75	None	replace
49	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  lowerBounds);  for(Type  toBound  :  lowerBounds)  {  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  lowerBounds);  for(Type  toBound  :  lowerBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  lowerBounds);  for(Type  toBound  :  lowerBounds)  {	  for(Type    toBound    :    lowerBounds)    {    Type    toBound    =    substituteTypeVariables(toBound);    for(Type    toBound    :    lowerBounds)    {    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	75	None	replace
50	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toUpperBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toUpperBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(bound,  toUpperBounds,  typeVarAssigns);	  Type[]    lowerBounds    =    substituteTypeVariables(bound,    upperBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
51	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  toUpperBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  toUpperBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  toUpperBounds,  typeVarAssigns);	  Type[]    lowerBounds    =    substituteTypeVariables(bound,    upperBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
52	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  toBound,  typeVarAssigns,  upperBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  toBound,  typeVarAssigns,  upperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  toBound,  typeVarAssigns,  upperBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(bound,    toBound,    typeVarAssigns,    upperBounds);    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
53	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toWildcardType,  typeVarAssigns,  upperBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toWildcardType,  typeVarAssigns,  upperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(bound,  toWildcardType,  typeVarAssigns,  upperBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(bound,    toBound,    typeVarAssigns,    upperBounds);    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
54	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(typeVarAssigns,  toBound,  upperBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(typeVarAssigns,  toBound,  upperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(typeVarAssigns,  toBound,  upperBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(bound,    toBound,    typeVarAssigns,    upperBounds);    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
55	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toLowerBounds,  typeVarAssigns,  upperBounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toLowerBounds,  typeVarAssigns,  upperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(bound,  toLowerBounds,  typeVarAssigns,  upperBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(bound,    toBound,    typeVarAssigns,    upperBounds);    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
56	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(lowerBound,  toWildcardType,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(lowerBound,  toWildcardType,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(lowerBound,  toWildcardType,  typeVarAssigns);	  Type[]    lowerBounds    =    substituteTypeVariables(lowerBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
57	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(bound,  toWildcardType,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(bound,  toWildcardType,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(bound,  toWildcardType,  typeVarAssigns);	  Type[]    toLowerBounds    =    substituteTypeVariables(toBound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
58	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  toWildcardType,  wildcardType);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  toWildcardType,  wildcardType);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  toWildcardType,  wildcardType);	  Type[]    toLowerBounds    =    substituteTypeVariables(toBound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
59	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toWildcardType,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toWildcardType,  toLowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(toWildcardType,  toLowerBounds);	  Type[]    toLowerBounds    =    substituteTypeVariables(toBound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
60	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns,  wildcardType);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns,  wildcardType);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns,  wildcardType);	  Type[]    toLowerBounds    =    substituteTypeVariables(toBound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
61	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  toBound  :  toBounds)  {  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  toBound  :  toBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  toBound  :  toBounds)  {	  for(Type    toBound    :    toUpperBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    for(Type    toBound    :    toUpperBounds)    {    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	6	None	replace
62	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  toBound  :  toLowerBounds)  {  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  toBound  :  toLowerBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  toBound  :  toLowerBounds)  {	  for(Type    toBound    :    toUpperBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    for(Type    toBound    :    toUpperBounds)    {    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	6	None	replace
63	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  toBound  :  toUpperBounds)  {  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  toBound  :  toUpperBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  toBound  :  toUpperBounds)  {	  for(Type    toBound    :    toUpperBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    for(Type    toBound    :    toUpperBounds)    {    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	6	None	replace
64	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  toUpperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(toBound,  toUpperBounds);	  Type    toLowerBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
65	[BUG]  [BUGGY]  Type  toLowerBounds  =  replaceTypeVariables(bound,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  replaceTypeVariables(bound,  toLowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  replaceTypeVariables(bound,  toLowerBounds);	  Type    toLowerBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
66	[BUG]  [BUGGY]  Type  toLowerBounds  =  replacementTypeVariables(bound,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  replacementTypeVariables(bound,  toLowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  replacementTypeVariables(bound,  toLowerBounds);	  Type    toLowerBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
67	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  toBound  :  upperBounds)  {  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  toBound  :  upperBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  toBound  :  upperBounds)  {	  for(Type    toBound    :    upperBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    for(Type    toBound    :    lowerBounds)    {    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	89	None	replace
68	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds);  for(Type  toBound  :  lowerBounds)  {  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds);  for(Type  toBound  :  lowerBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds);  for(Type  toBound  :  lowerBounds)  {	  for(Type    toBound    :    upperBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    for(Type    toBound    :    lowerBounds)    {    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	89	None	replace
69	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  toLowerBound);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  toLowerBound);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(bound,  toLowerBound);	  Type    toLowerBounds    =    substituteTypeVariables(bound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
70	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  toWildcard.getTypes();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  toWildcard.getTypes();  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  toWildcard.getTypes();	  Type[]    toUpperBounds    =    typeVarAssigns.getTypes();    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
71	[BUG]  [BUGGY]  for(Type  toBound  :  toLowerBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  bound  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  for(Type  toBound  :  toLowerBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  toLowerBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }	  for(Type    toBound    :    toUpperBounds)    {    if    (!isAssignable(toBound,    bound,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  bound	51	None	replace
72	[BUG]  [BUGGY]  for(Type  toBound  :  toWildcardTypes)  {  if  (!isAssignable(toBound,  toLowerBounds,  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  toWildcardTypes  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  for(Type  toBound  :  toWildcardTypes)  {  if  (!isAssignable(toBound,  toLowerBounds,  typeVarAssigns))  {  return  false;  }  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  toWildcardTypes)  {  if  (!isAssignable(toBound,  toLowerBounds,  typeVarAssigns))  {  return  false;  }	  for(Type    toBound    :    toUpperBounds)    {    if    (!isAssignable(toBound,    bound,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  toWildcardTypes	51	None	replace
73	[BUG]  [BUGGY]  for(Type  bound  :  toUpperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  toBound  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  for(Type  bound  :  toUpperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  bound  :  toUpperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }	  for(Type    toBound    :    toUpperBounds)    {    if    (!isAssignable(toBound,    bound,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  toBound	51	None	replace
74	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  toLowerBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  toLowerBound,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(bound,  toLowerBound,  typeVarAssigns);	  Type    toLowerBounds    =    substituteTypeVariables(bound,    toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
75	[BUG]  [BUGGY]  Type  toLowerBounds  =  replaceTypeVariables(bound,  toLowerBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  replaceTypeVariables(bound,  toLowerBound,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  replaceTypeVariables(bound,  toLowerBound,  typeVarAssigns);	  Type    toLowerBounds    =    substituteTypeVariables(bound,    toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
76	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  toLowerBound,  lowerBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  toLowerBound,  lowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(bound,  toLowerBound,  lowerBounds);	  Type    toLowerBounds    =    substituteTypeVariables(bound,    toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
77	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toLowerBounds,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toLowerBounds,  toUpperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(toLowerBounds,  toUpperBounds);	  Type[]    toLowerBounds    =    substituteTypeVariables(toLowerBounds,    bound);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
78	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toLowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toLowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(toLowerBounds,  typeVarAssigns);	  Type[]    toLowerBounds    =    substituteTypeVariables(toLowerBounds,    bound);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
79	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toLowerBounds,  upperBounds);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toLowerBounds,  upperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(toLowerBounds,  upperBounds);	  Type[]    toLowerBounds    =    substituteTypeVariables(toLowerBounds,    bound);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
80	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds);  for(Type  toBound  :  toLowerBounds)  {  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds);  for(Type  toBound  :  toLowerBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds);  for(Type  toBound  :  toLowerBounds)  {	  for(Type    toBound    :    toUpperBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    toUpperBound);    for(Type    toBound    :    toUpperBounds)    {    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	91	None	replace
81	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds);  for(Type  toBound  :  toUpperBounds)  {  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds);  for(Type  toBound  :  toUpperBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds);  for(Type  toBound  :  toUpperBounds)  {	  for(Type    toBound    :    toUpperBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    toUpperBound);    for(Type    toBound    :    toUpperBounds)    {    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	91	None	replace
82	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);	  Type[]    toLowerBounds    =    substituteTypeVariables(toBound,    lowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
83	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  toUpperBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  toUpperBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  toUpperBounds,  typeVarAssigns);	  Type[]    toLowerBounds    =    substituteTypeVariables(toBound,    lowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
84	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  replaceTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  replaceTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  replaceTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);	  Type[]    toLowerBounds    =    substituteTypeVariables(toBound,    lowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
85	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  replacementTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  replacementTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  replacementTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);	  Type[]    toLowerBounds    =    substituteTypeVariables(toBound,    lowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
86	[BUG]  [BUGGY]  Type  toLowerBounds  =  replaceTypeVariables(bound,  toLowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  replaceTypeVariables(bound,  toLowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  replaceTypeVariables(bound,  toLowerBounds,  typeVarAssigns);	  Type    toLowerBounds    =    substituteTypeVariables(bound,    lowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
87	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  toUpperBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  toUpperBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(bound,  toUpperBounds,  typeVarAssigns);	  Type    toLowerBounds    =    substituteTypeVariables(bound,    lowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
88	[BUG]  [BUGGY]  Type  toLowerBounds  =  replacementTypeVariables(bound,  toLowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  replacementTypeVariables(bound,  toLowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  replacementTypeVariables(bound,  toLowerBounds,  typeVarAssigns);	  Type    toLowerBounds    =    substituteTypeVariables(bound,    lowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
89	[BUG]  [BUGGY]  Type[]  upperBounds  =  toWildcardType.toArray(new  Type[typeVarAssigns.size()  +  1]);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  upperBounds  =  toWildcardType.toArray(new  Type[typeVarAssigns.size()  +  1]);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  upperBounds  =  toWildcardType.toArray(new  Type[typeVarAssigns.size()  +  1]);	  Type[]    upperBounds    =    toWildcardType.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
90	[BUG]  [BUGGY]  Type[]  upperBounds  =  toWildcardType.toArray(new  Type[toWildcardType.size()  ]);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  upperBounds  =  toWildcardType.toArray(new  Type[toWildcardType.size()  ]);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  upperBounds  =  toWildcardType.toArray(new  Type[toWildcardType.size()  ]);	  Type[]    upperBounds    =    toWildcardType.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
91	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.toArray(new  Type[size()  -  1]);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.toArray(new  Type[size()  -  1]);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  toWildcardType.toArray(new  Type[size()  -  1]);	  Type[]    lowerBounds    =    toWildcardType.toArray(new    Type[size()    ]);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
92	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.toArray(new  Type[size()  +  1]);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.toArray(new  Type[size()  +  1]);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  toWildcardType.toArray(new  Type[size()  +  1]);	  Type[]    lowerBounds    =    toWildcardType.toArray(new    Type[size()    ]);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
93	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.toArray(new  Type[length()  ]);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.toArray(new  Type[length()  ]);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  toWildcardType.toArray(new  Type[length()  ]);	  Type[]    lowerBounds    =    toWildcardType.toArray(new    Type[size()    ]);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
94	[BUG]  [BUGGY]  For(Type  toBound  :  toLowerBounds)  {  [CE]  ')'  expected  [FE]        AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  For(Type  toBound  :  toLowerBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	For(Type  toBound  :  toLowerBounds)  {	  for(Type    toBound    :    toUpperBounds)    {    For(Type    toBound    :    toUpperBounds)    {    	non-compiled	[CE]  ')'  expected	103	None	replace
95	[BUG]  [BUGGY]  For(Type  toBound  :  upperBounds)  {  [CE]  ')'  expected  [FE]          AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  For(Type  toBound  :  upperBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	For(Type  toBound  :  upperBounds)  {	  for(Type    toBound    :    toUpperBounds)    {    For(Type    toBound    :    toUpperBounds)    {    	non-compiled	[CE]  ')'  expected	103	None	replace
96	[BUG]  [BUGGY]  For(Type  toBound  :  lowerBounds)  {  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  For(Type  toBound  :  lowerBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	For(Type  toBound  :  lowerBounds)  {	  for(Type    toBound    :    toUpperBounds)    {    For(Type    toBound    :    toUpperBounds)    {    	non-compiled	[CE]  ')'  expected	103	None	replace
97	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  toWildcardType.getUpperBounds();	  Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
98	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  toWildcardType.getLowerBounds();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  toWildcardType.getLowerBounds();  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  toWildcardType.getLowerBounds();	  Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
99	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getRawBounds();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getRawBounds();  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  toWildcardType.getRawBounds();	  Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
100	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(bound,  toUpperBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(bound,  toUpperBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(bound,  toUpperBounds,  typeVarAssigns);	  Type[]    toLowerBounds    =    substituteTypeVariables(bound,    toUpperBounds);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
101	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  toLowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  toLowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  toLowerBounds,  typeVarAssigns);	  Type[]    lowerBounds    =    substituteTypeVariables(toWildcardType,    bound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
102	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  toWildcardType,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  toWildcardType,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  toWildcardType,  typeVarAssigns);	  Type[]    lowerBounds    =    substituteTypeVariables(toWildcardType,    bound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
103	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toBound,  toUpperBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toBound,  toUpperBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(toBound,  toUpperBounds,  typeVarAssigns);	  Type[]    lowerBounds    =    substituteTypeVariables(toBound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
104	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toUpperBounds.subtractTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  toUpperBounds.subtractTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  toUpperBounds.subtractTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);	  Type[]    lowerBounds    =    substituteTypeVariables(toBound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
105	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toUpperBounds.toUpperBounds();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  toUpperBounds.toUpperBounds();  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  toUpperBounds.toUpperBounds();	  Type[]    toLowerBounds    =    toLowerBounds.toUpperBounds();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
106	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toUpperBounds(bound);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toUpperBounds(bound);  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  toLowerBounds.toUpperBounds(bound);	  Type[]    toLowerBounds    =    toLowerBounds.toUpperBounds();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
107	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toUpperBounds(typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toUpperBounds(typeVarAssigns);  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  toLowerBounds.toUpperBounds(typeVarAssigns);	  Type[]    toLowerBounds    =    toLowerBounds.toUpperBounds();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
108	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  toUpperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  toUpperBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(toUpperBounds,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
109	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toUpperBounds,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toUpperBounds,  toLowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(bound,  toUpperBounds,  toLowerBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(toUpperBounds,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
110	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toLowerBounds,  lowerBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toLowerBounds,  lowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(toLowerBounds,  lowerBounds);	  Type    toLowerBounds    =    substituteTypeVariables(lowerBounds,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
111	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(upperBound,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(upperBound,  toLowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(upperBound,  toLowerBounds);	  Type    toLowerBounds    =    substituteTypeVariables(lowerBounds,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
112	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(lowerBound,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(lowerBound,  toLowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(lowerBound,  toLowerBounds);	  Type    toLowerBounds    =    substituteTypeVariables(lowerBounds,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
113	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toUpperBounds.toArray(new  Type[size()  ]);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  toUpperBounds.toArray(new  Type[size()  ]);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  toUpperBounds.toArray(new  Type[size()  ]);	  Type[]    lowerBounds    =    toLowerBounds.toArray(new    Type[size()    ]);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
114	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[size()  -  1]);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[size()  -  1]);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[size()  -  1]);	  Type[]    lowerBounds    =    toLowerBounds.toArray(new    Type[size()    ]);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
115	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[size()  +  1]);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[size()  +  1]);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[size()  +  1]);	  Type[]    lowerBounds    =    toLowerBounds.toArray(new    Type[size()    ]);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
116	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  replaceTypeVariables(toBound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  replaceTypeVariables(toBound,  toUpperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  replaceTypeVariables(toBound,  toUpperBounds);	  Type[]    toLowerBounds    =    substituteTypeVariables(toBound,    upperBounds);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
117	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  replacementTypeVariables(toBound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  replacementTypeVariables(toBound,  toUpperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  replacementTypeVariables(toBound,  toUpperBounds);	  Type[]    toLowerBounds    =    substituteTypeVariables(toBound,    upperBounds);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
118	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getRawTypeVariables(bound);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getRawTypeVariables(bound);  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  toWildcardType.getRawTypeVariables(bound);	  Type[]    lowerBounds    =    toWildcardType.getRawTypeVariables();    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
119	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getRawTypeVariables(type);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getRawTypeVariables(type);  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  toWildcardType.getRawTypeVariables(type);	  Type[]    lowerBounds    =    toWildcardType.getRawTypeVariables();    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
120	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toWildcardType.getRawTypeVariables();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  toWildcardType.getRawTypeVariables();  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  toWildcardType.getRawTypeVariables();	  Type[]    lowerBounds    =    toWildcardType.getRawTypeVariables();    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
121	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  replacementTypeVariables(toBound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  replacementTypeVariables(toBound,  toUpperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  replacementTypeVariables(toBound,  toUpperBounds);	  Type[]    toUpperBounds    =    substituteTypeVariables(toBound,    lowerBounds);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
122	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[upperBounds.size()  ]);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[upperBounds.size()  ]);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[upperBounds.size()  ]);	  Type[]    lowerBounds    =    toLowerBounds.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
123	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  +  1]);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  +  1]);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  +  1]);	  Type[]    lowerBounds    =    toLowerBounds.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
124	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  upperBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  upperBound,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(bound,  upperBound,  typeVarAssigns);	  Type[]    lowerBounds    =    substituteTypeVariables(upperBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
125	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toWildcardType,  upperBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toWildcardType,  upperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(bound,  toWildcardType,  upperBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(bound,    toBound,    upperBounds);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
126	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  toBound,  upperBounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  toBound,  upperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  toBound,  upperBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(bound,    toBound,    upperBounds);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
127	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  upperBounds);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  upperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  upperBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(bound,    toBound,    upperBounds);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
128	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds;  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  toLowerBounds;	  Type[]    toLowerBounds    =    toLowerBounds.toUpperBounds;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
129	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toUpperBounds,  typeVarAssigns);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toUpperBounds,  typeVarAssigns);  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  toLowerBounds.toUpperBounds,  typeVarAssigns);	  Type[]    toLowerBounds    =    toLowerBounds.toUpperBounds;    	non-compiled	[CE]  ';'  expected	69	None	replace
130	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toWildcardType;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toWildcardType;  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  toLowerBounds.toWildcardType;	  Type[]    toLowerBounds    =    toLowerBounds.toUpperBounds;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
131	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(bound,  typeVarAssigns);  for(Type  bound  :  toLowerBounds)  {  [CE]  cannot  find  symbol  bound  [FE]            AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toBound  =  substituteTypeVariables(bound,  typeVarAssigns);  for(Type  bound  :  toLowerBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toBound  =  substituteTypeVariables(bound,  typeVarAssigns);  for(Type  bound  :  toLowerBounds)  {	  for(Type    toBound    :    toUpperBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    for(Type    bound    :    toUpperBounds)    {    	non-compiled	[CE]  cannot  find  symbol  bound	7	None	replace
132	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  bound  :  toLowerBounds)  {  [CE]  variable  bound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  bound  :  toLowerBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  bound  :  toLowerBounds)  {	  for(Type    toBound    :    toUpperBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    for(Type    bound    :    toUpperBounds)    {    	non-compiled	[CE]  variable  bound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	7	None	replace
133	[BUG]  [BUGGY]  For(Type  toBound  :  toLowerBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  For(Type  toBound  :  toLowerBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	For(Type  toBound  :  toLowerBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }	  for(Type    toBound    :    toWildcardTypes)    {    if    (!isAssignable(bound,    toBound,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	52	None	replace
134	[BUG]  [BUGGY]  for(Type  bound  :  toLowerBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  toBound  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  for(Type  bound  :  toLowerBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  bound  :  toLowerBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }	  for(Type    toBound    :    toWildcardTypes)    {    if    (!isAssignable(bound,    toBound,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  toBound	52	None	replace
135	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toUpperBounds,  toLowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toUpperBounds,  toLowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(toUpperBounds,  toLowerBounds,  typeVarAssigns);	  Type[]    lowerBounds    =    substituteTypeVariables(bound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
136	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toLowerBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toLowerBound,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(toLowerBound,  typeVarAssigns);	  Type[]    toLowerBounds    =    substituteTypeVariables(bound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
137	[BUG]  [BUGGY]  for(Type  toBound  :  toWildcardType.toLowerBounds)  {  [CE]  cannot  find  symbol  toLowerBounds  [FE]        AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  for(Type  toBound  :  toWildcardType.toLowerBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  toWildcardType.toLowerBounds)  {	  for(Type    toBound    :    topBounds)    {    	non-compiled	[CE]  cannot  find  symbol  toLowerBounds	84	None	replace
138	[BUG]  [BUGGY]  for(Type  toBound  :  this.toUpperBounds)  {  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]        AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  for(Type  toBound  :  this.toUpperBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  this.toUpperBounds)  {	  for(Type    toBound    :    this.toLowerBounds)    {    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	49	None	replace
139	[BUG]  [BUGGY]  for(Type  toBound  :  toWildcardType.upperBounds)  {  [CE]  cannot  find  symbol  upperBounds  [FE]        AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  for(Type  toBound  :  toWildcardType.upperBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  toWildcardType.upperBounds)  {	  for(Type    toBound    :    upperBounds)    {    for(Type    toBound    :    upperBounds)    {    	non-compiled	[CE]  cannot  find  symbol  upperBounds	64	None	replace
140	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  toLowerBounds,  lowerBounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  toLowerBounds,  lowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(bound,  toLowerBounds,  lowerBounds);	  Type    toLowerBounds    =    substituteTypeVariables(bound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
141	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  toLowerBounds,  upperBounds);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  toLowerBounds,  upperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(bound,  toLowerBounds,  upperBounds);	  Type    toLowerBounds    =    substituteTypeVariables(bound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
142	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toWildcardType,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toWildcardType,  toLowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(toWildcardType,  toLowerBounds);	  Type[]    toUpperBounds    =    substituteTypeVariables(toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
143	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(bound,  toWildcardType,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(bound,  toWildcardType,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(bound,  toWildcardType,  typeVarAssigns);	  Type[]    toUpperBounds    =    substituteTypeVariables(toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
144	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toWildcardType,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toWildcardType,  toUpperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(toWildcardType,  toUpperBounds);	  Type[]    toUpperBounds    =    substituteTypeVariables(toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
145	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toWildcard,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toWildcard,  toLowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(toWildcard,  toLowerBounds);	  Type[]    toUpperBounds    =    substituteTypeVariables(toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
146	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(bound,  toBound,  upperBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(bound,  toBound,  upperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(bound,  toBound,  upperBounds);	  Type[]    toUpperBounds    =    substituteTypeVariables(toBound,    upperBounds);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
147	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toWildcardType.getAllTypes();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  toWildcardType.getAllTypes();  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  toWildcardType.getAllTypes();	  Type[]    toLowerBounds    =    toUpperBounds.getAllTypes();    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
148	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.getAllTypes();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.getAllTypes();  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  toLowerBounds.getAllTypes();	  Type[]    toLowerBounds    =    toUpperBounds.getAllTypes();    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
149	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toUpperBounds.toArray();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  toUpperBounds.toArray();  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  toUpperBounds.toArray();	  Type[]    toLowerBounds    =    toUpperBounds.getAllTypes();    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
150	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toWildcardType,  toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toWildcardType,  toBound,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(toWildcardType,  toBound,  typeVarAssigns);	  Type[]    lowerBounds    =    substituteTypeVariables(toWildcardType,    toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
151	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(bound,  toLowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(bound,  toLowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(bound,  toLowerBounds,  typeVarAssigns);	  Type[]    toUpperBounds    =    substituteTypeVariables(bound,    toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
152	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toUpperBound,  toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toUpperBound,  toBound,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(toUpperBound,  toBound,  typeVarAssigns);	  Type[]    toUpperBounds    =    substituteTypeVariables(bound,    toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
153	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(bound,  toBound,  lowerBounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(bound,  toBound,  lowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(bound,  toBound,  lowerBounds);	  Type[]    toUpperBounds    =    substituteTypeVariables(bound,    toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
154	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  upperBounds);  for(Type  toBound  :  lowBounds)  {  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  upperBounds);  for(Type  toBound  :  lowBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  upperBounds);  for(Type  toBound  :  lowBounds)  {	  for(Type    toBound    :    lowerBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    for(Type    toBound    :    lowBounds)    {    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	25	None	replace
155	[BUG]  [BUGGY]  Type[]  lowerBounds  =  replaceTypeVariables(bound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  replaceTypeVariables(bound,  toUpperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  replaceTypeVariables(bound,  toUpperBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(bound,    upperBounds);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
156	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  upperBounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  upperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  upperBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(bound,    upperBounds);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
157	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  toBound,  typeVarAssigns,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  toBound,  typeVarAssigns,  toLowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  toBound,  typeVarAssigns,  toLowerBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(bound,    toBound,    typeVarAssigns,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
158	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toWildcardType,  typeVarAssigns,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toWildcardType,  typeVarAssigns,  toLowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(bound,  toWildcardType,  typeVarAssigns,  toLowerBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(bound,    toBound,    typeVarAssigns,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
159	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(bound,  toBound,  typeVarAssigns,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(bound,  toBound,  typeVarAssigns,  toLowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(bound,  toBound,  typeVarAssigns,  toLowerBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(bound,    toBound,    typeVarAssigns,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
160	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toUpperBounds,  toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toUpperBounds,  toBound,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(toUpperBounds,  toBound,  typeVarAssigns);	  Type[]    lowerBounds    =    substituteTypeVariables(bound,    toBound,    typeVarAssigns,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
161	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  bound.getTypes();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  bound.getTypes();  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  bound.getTypes();	  Type[]    toUpperBounds    =    upperBounds.getTypes();    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
162	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(bound,  toLowerBounds,  lowerBounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(bound,  toLowerBounds,  lowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(bound,  toLowerBounds,  lowerBounds);	  Type[]    toLowerBounds    =    substituteTypeVariables(bound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
163	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toLowerBounds,  toLowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toLowerBounds,  toLowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(toLowerBounds,  toLowerBounds,  typeVarAssigns);	  Type[]    toLowerBounds    =    substituteTypeVariables(bound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
164	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(bound,  typeVarAssigns);  for(Type  bound  :  lowerBounds)  {  [CE]  cannot  find  symbol  bound  [FE]            AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toBound  =  substituteTypeVariables(bound,  typeVarAssigns);  for(Type  bound  :  lowerBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toBound  =  substituteTypeVariables(bound,  typeVarAssigns);  for(Type  bound  :  lowerBounds)  {	  for(Type    toBound    :    lowerBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    for(Type    bound    :    lowerBounds)    {    	non-compiled	[CE]  cannot  find  symbol  bound	23	None	replace
165	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds);  for(Type  bound  :  lowerBounds)  {  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds);  for(Type  bound  :  lowerBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds);  for(Type  bound  :  lowerBounds)  {	  for(Type    toBound    :    lowerBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    for(Type    bound    :    lowerBounds)    {    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	23	None	replace
166	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  bound  :  lowerBounds)  {  [CE]  variable  bound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  bound  :  lowerBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  bound  :  lowerBounds)  {	  for(Type    toBound    :    lowerBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    for(Type    bound    :    lowerBounds)    {    	non-compiled	[CE]  variable  bound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	23	None	replace
167	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toWildcardType.getTypes();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  toWildcardType.getTypes();  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  toWildcardType.getTypes();	  Type[]    toLowerBounds    =    toUpperBounds.getTypes();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
168	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.getTypes();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.getTypes();  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  toLowerBounds.getTypes();	  Type[]    toLowerBounds    =    toUpperBounds.getTypes();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
169	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  upperBounds);  for(Type  toBound  :  lowerBounds)  {  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  upperBounds);  for(Type  toBound  :  lowerBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  upperBounds);  for(Type  toBound  :  lowerBounds)  {	  for(Type    toBound    :    lowerBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    for(Type    toBound    :    lowerBounds)    {    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	22	None	replace
170	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);	  Type    toLowerBounds    =    substituteTypeVariables(toBound,    lowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
171	[BUG]  [BUGGY]  Type  toLowerBounds  =  replaceTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  replaceTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  replaceTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);	  Type    toLowerBounds    =    substituteTypeVariables(toBound,    lowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
172	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  toUpperBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  toUpperBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(toBound,  toUpperBounds,  typeVarAssigns);	  Type    toLowerBounds    =    substituteTypeVariables(toBound,    lowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
173	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toUpperBound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toUpperBound,  toUpperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(toUpperBound,  toUpperBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(bound,    toUpperBounds);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
174	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toUpperBounds,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toUpperBounds,  toUpperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(toUpperBounds,  toUpperBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(bound,    toUpperBounds);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
175	[BUG]  [BUGGY]  Type[]  upperBounds  =  toWildcardType.toArray(new  Type[size()  ]);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  upperBounds  =  toWildcardType.toArray(new  Type[size()  ]);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  upperBounds  =  toWildcardType.toArray(new  Type[size()  ]);	  Type[]    upperBounds    =    typeVarAssigns.toArray(new    Type[size()    ]);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
176	[BUG]  [BUGGY]  Type[]  upperBounds  =  toUpperBounds.toArray(new  Type[size()  ]);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  upperBounds  =  toUpperBounds.toArray(new  Type[size()  ]);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  upperBounds  =  toUpperBounds.toArray(new  Type[size()  ]);	  Type[]    upperBounds    =    typeVarAssigns.toArray(new    Type[size()    ]);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
177	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  lowerBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  lowerBound,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(bound,  lowerBound,  typeVarAssigns);	  Type    toLowerBounds    =    substituteTypeVariables(lowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
178	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toLowerBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toLowerBound,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(toLowerBound,  typeVarAssigns);	  Type    toLowerBounds    =    substituteTypeVariables(lowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
179	[BUG]  [BUGGY]  Type[]  lowerBounds  =  replaceTypeVariables(toWildcardType,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  replaceTypeVariables(toWildcardType,  toLowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  replaceTypeVariables(toWildcardType,  toLowerBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
180	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  toWildcardType);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  toWildcardType);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  toWildcardType);	  Type[]    toLowerBounds    =    substituteTypeVariables(toBound,    toUpperBounds);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
181	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(bound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(bound,  toUpperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(bound,  toUpperBounds);	  Type[]    toUpperBounds    =    substituteTypeVariables(bound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
182	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toUpperBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toUpperBound,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(toUpperBound,  typeVarAssigns);	  Type[]    toUpperBounds    =    substituteTypeVariables(bound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
183	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(bound,  toWildcardType);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(bound,  toWildcardType);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(bound,  toWildcardType);	  Type[]    toUpperBounds    =    substituteTypeVariables(bound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
184	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  toWildcardType,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  toWildcardType,  toLowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  toWildcardType,  toLowerBounds);	  Type[]    toUpperBounds    =    substituteTypeVariables(toBound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
185	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  toWildcardType,  wildcardType);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  toWildcardType,  wildcardType);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  toWildcardType,  wildcardType);	  Type[]    toUpperBounds    =    substituteTypeVariables(toBound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
186	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns,  wildcardType);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns,  wildcardType);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns,  wildcardType);	  Type[]    toUpperBounds    =    substituteTypeVariables(toBound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
187	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);	  for(Type    toBound    :    upperBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
188	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(bound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toBound  =  substituteTypeVariables(bound,  typeVarAssigns);  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toBound  =  substituteTypeVariables(bound,  typeVarAssigns);	  for(Type    toBound    :    upperBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
189	[BUG]  [BUGGY]  for(Type  toBound  :  toLowerBounds,  upperBounds)  {  [CE]  ')'  expected  [FE]        AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  for(Type  toBound  :  toLowerBounds,  upperBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  toLowerBounds,  upperBounds)  {	  for(Type    toBound    :    lowerBounds,    upperBounds)    {    	non-compiled	[CE]  ')'  expected	87	None	replace
190	[BUG]  [BUGGY]  for(Type  toBound  :  toLowerBounds,  lowerBounds)  {  [CE]  ')'  expected  [FE]          AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  for(Type  toBound  :  toLowerBounds,  lowerBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  toLowerBounds,  lowerBounds)  {	  for(Type    toBound    :    lowerBounds,    upperBounds)    {    	non-compiled	[CE]  ')'  expected	87	None	replace
191	[BUG]  [BUGGY]  for(Type  toBound  :  lowerBounds,  toLowerBounds)  {  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  for(Type  toBound  :  lowerBounds,  toLowerBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  lowerBounds,  toLowerBounds)  {	  for(Type    toBound    :    lowerBounds,    upperBounds)    {    	non-compiled	[CE]  ')'  expected	87	None	replace
192	[BUG]  [BUGGY]  for(Type  toBound  :  toUpperBounds,  lowerBounds)  {  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  for(Type  toBound  :  toUpperBounds,  lowerBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  toUpperBounds,  lowerBounds)  {	  for(Type    toBound    :    lowerBounds,    upperBounds)    {    	non-compiled	[CE]  ')'  expected	87	None	replace
193	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  toWildcardType.getRawTypes();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  toWildcardType.getRawTypes();  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  toWildcardType.getRawTypes();	  Type[]    toUpperBounds    =    toWildcardType.getTypes();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
194	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  toWildcardType.getAllTypes();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  toWildcardType.getAllTypes();  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  toWildcardType.getAllTypes();	  Type[]    toUpperBounds    =    toWildcardType.getTypes();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
195	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  toWildcardType.getOwnerTypes();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  toWildcardType.getOwnerTypes();  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  toWildcardType.getOwnerTypes();	  Type[]    toUpperBounds    =    toWildcardType.getTypes();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
196	[BUG]  [BUGGY]  for(Type  toBound  :  upperBounds,  typeVarAssigns)  {  [CE]  ')'  expected  [FE]        AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  for(Type  toBound  :  upperBounds,  typeVarAssigns)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  upperBounds,  typeVarAssigns)  {	  for(Type    toBound    :    lowerBounds,    typeVarAssigns)    {    	non-compiled	[CE]  ')'  expected	4	None	replace
197	[BUG]  [BUGGY]  for(Type  toBound  :  toLowerBounds,  typeVarAssigns)  {  [CE]  ')'  expected  [FE]          AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  for(Type  toBound  :  toLowerBounds,  typeVarAssigns)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  toLowerBounds,  typeVarAssigns)  {	  for(Type    toBound    :    lowerBounds,    typeVarAssigns)    {    	non-compiled	[CE]  ')'  expected	4	None	replace
198	[BUG]  [BUGGY]  for(Type  toBound  :  toWildcardType,  typeVarAssigns)  {  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  for(Type  toBound  :  toWildcardType,  typeVarAssigns)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  toWildcardType,  typeVarAssigns)  {	  for(Type    toBound    :    lowerBounds,    typeVarAssigns)    {    	non-compiled	[CE]  ')'  expected	4	None	replace
199	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toWildcardType,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toWildcardType,  toLowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(bound,  toWildcardType,  toLowerBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(toWildcardType,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
200	[BUG]  [BUGGY]  Type[]  lowerBounds  =  replaceTypeVariables(toWildcardType,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  replaceTypeVariables(toWildcardType,  toUpperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  replaceTypeVariables(toWildcardType,  toUpperBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(toWildcardType,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
201	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toWildcardType,  typeVarAssigns,  wildcardType);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toWildcardType,  typeVarAssigns,  wildcardType);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(bound,  toWildcardType,  typeVarAssigns,  wildcardType);	  Type[]    lowerBounds    =    substituteTypeVariables(bound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
202	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toLowerBounds,  lowerBounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toLowerBounds,  lowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(toLowerBounds,  lowerBounds);	  Type[]    toLowerBounds    =    substituteTypeVariables(lowerBounds,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
203	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toUpperBounds,  lowerBounds);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toUpperBounds,  lowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(toUpperBounds,  lowerBounds);	  Type[]    toLowerBounds    =    substituteTypeVariables(lowerBounds,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
204	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(upperBound,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(upperBound,  toLowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(upperBound,  toLowerBounds);	  Type[]    toLowerBounds    =    substituteTypeVariables(lowerBounds,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
205	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  toUpperBounds  ==  null?  null  :  toUpperBounds.toArray();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  toUpperBounds  ==  null?  null  :  toUpperBounds.toArray();  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  toUpperBounds  ==  null?  null  :  toUpperBounds.toArray();	  Type[]    toUpperBounds    =    toUpperBounds.toArray();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
206	[BUG]  [BUGGY]  Type  toLowerBounds  =  replaceTypeVariables(toBound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  replaceTypeVariables(toBound,  toUpperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  replaceTypeVariables(toBound,  toUpperBounds);	  Type    toLowerBounds    =    substituteTypeVariables(toBound,    upperBounds);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
207	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);	  Type[]    toUpperBounds    =    substituteTypeVariables(toBound,    lowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
208	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  toUpperBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  toUpperBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  toUpperBounds,  typeVarAssigns);	  Type[]    toUpperBounds    =    substituteTypeVariables(toBound,    lowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
209	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toLowerBound,  toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toLowerBound,  toBound,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(toLowerBound,  toBound,  typeVarAssigns);	  Type[]    toLowerBounds    =    substituteTypeVariables(bound,    toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
210	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  replaceTypeVariables(bound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  replaceTypeVariables(bound,  toUpperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  replaceTypeVariables(bound,  toUpperBounds);	  Type[]    toLowerBounds    =    substituteTypeVariables(bound,    upperBounds);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
211	[BUG]  [BUGGY]  Type[]  upperBounds  =  substituteTypeVariables(bound,  toUpperBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  upperBounds  =  substituteTypeVariables(bound,  toUpperBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  upperBounds  =  substituteTypeVariables(bound,  toUpperBounds,  typeVarAssigns);	  Type[]    upperBounds    =    substituteTypeVariables(bound,    toUpperBounds);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
212	[BUG]  [BUGGY]  Type[]  upperBounds  =  substituteTypeVariables(toUpperBound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  upperBounds  =  substituteTypeVariables(toUpperBound,  toUpperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  upperBounds  =  substituteTypeVariables(toUpperBound,  toUpperBounds);	  Type[]    upperBounds    =    substituteTypeVariables(bound,    toUpperBounds);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
213	[BUG]  [BUGGY]  Type[]  upperBounds  =  substituteTypeVariables(bound,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  upperBounds  =  substituteTypeVariables(bound,  toLowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  upperBounds  =  substituteTypeVariables(bound,  toLowerBounds);	  Type[]    upperBounds    =    substituteTypeVariables(bound,    toUpperBounds);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
214	[BUG]  [BUGGY]  Type[]  upperBounds  =  substituteTypeVariables(toWildcardType,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  upperBounds  =  substituteTypeVariables(toWildcardType,  toUpperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  upperBounds  =  substituteTypeVariables(toWildcardType,  toUpperBounds);	  Type[]    upperBounds    =    substituteTypeVariables(bound,    toUpperBounds);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
215	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  replaceTypeVariables(bound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  replaceTypeVariables(bound,  toUpperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  replaceTypeVariables(bound,  toUpperBounds);	  Type[]    toUpperBounds    =    substituteTypeVariables(bound,    upperBounds);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
216	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  replacementTypeVariables(bound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  replacementTypeVariables(bound,  toUpperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  replacementTypeVariables(bound,  toUpperBounds);	  Type[]    toUpperBounds    =    substituteTypeVariables(bound,    upperBounds);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
217	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toUpperBounds,  typeVarAssigns,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toUpperBounds,  typeVarAssigns,  toLowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(bound,  toUpperBounds,  typeVarAssigns,  toLowerBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(bound,    toBound,    typeVarAssigns,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
218	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toWildcardType,  typeVarAssigns,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toWildcardType,  typeVarAssigns,  toUpperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(bound,  toWildcardType,  typeVarAssigns,  toUpperBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(bound,    toBound,    typeVarAssigns,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
219	[BUG]  [BUGGY]  for(Type  toBound  :  toUpperBounds)  {  if  (!isAssignable(toBound,  toLowerBounds,  typeVarAssigns))  {  return  false;  }  [CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  for(Type  toBound  :  toUpperBounds)  {  if  (!isAssignable(toBound,  toLowerBounds,  typeVarAssigns))  {  return  false;  }  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  toUpperBounds)  {  if  (!isAssignable(toBound,  toLowerBounds,  typeVarAssigns))  {  return  false;  }	  for(Type    toBound    :    lowerBounds)    {    if    (!isAssignable(toBound,    bound,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Map<TypeVariable<?>,Type>)	82	None	replace
220	[BUG]  [BUGGY]  for(Type  toBound  :  toWildcardType)  {  if  (!isAssignable(toBound,  toLowerBounds,  typeVarAssigns))  {  return  false;  }  [CE]  for-each  not  applicable  to  expression  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  for(Type  toBound  :  toWildcardType)  {  if  (!isAssignable(toBound,  toLowerBounds,  typeVarAssigns))  {  return  false;  }  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  toWildcardType)  {  if  (!isAssignable(toBound,  toLowerBounds,  typeVarAssigns))  {  return  false;  }	  for(Type    toBound    :    lowerBounds)    {    if    (!isAssignable(toBound,    bound,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  for-each  not  applicable  to  expression  type	82	None	replace
221	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(lowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(lowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(lowerBounds,  typeVarAssigns);	  Type[]    toLowerBounds    =    substituteTypeVariables(bound,    lowerBounds);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
222	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toLowerBound,  lowerBounds);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toLowerBound,  lowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(toLowerBound,  lowerBounds);	  Type[]    toLowerBounds    =    substituteTypeVariables(bound,    lowerBounds);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
223	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds);  for(Type  toBound  :  toBounds)  {  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds);  for(Type  toBound  :  toBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds);  for(Type  toBound  :  toBounds)  {	  for(Type    toBound    :    toUpperBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    toUpperBound);    for(Type    toBound    :    toUpperBounds)    {    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	91	None	replace
224	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds);  for(Type  toBound  :  toBound)  {  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds);  for(Type  toBound  :  toBound)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds);  for(Type  toBound  :  toBound)  {	  for(Type    toBound    :    toUpperBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    toUpperBound);    for(Type    toBound    :    toUpperBounds)    {    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	91	None	replace
225	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  upperBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  upperBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(bound,  upperBounds,  typeVarAssigns);	  Type    toLowerBounds    =    substituteTypeVariables(bound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
226	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(lowerBounds,  toLowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(lowerBounds,  toLowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(lowerBounds,  toLowerBounds,  typeVarAssigns);	  Type    toLowerBounds    =    substituteTypeVariables(bound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
227	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(upperBound,  toLowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(upperBound,  toLowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(upperBound,  toLowerBounds,  typeVarAssigns);	  Type    toLowerBounds    =    substituteTypeVariables(bound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
228	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  upperBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  upperBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  upperBounds,  typeVarAssigns);	  Type[]    toLowerBounds    =    substituteTypeVariables(toBound,    lowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
229	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  lowerBounds,  upperBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  lowerBounds,  upperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  lowerBounds,  upperBounds);	  Type[]    toLowerBounds    =    substituteTypeVariables(toBound,    lowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
230	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(lowerBounds,  toLowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(lowerBounds,  toLowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(lowerBounds,  toLowerBounds,  typeVarAssigns);	  Type[]    toLowerBounds    =    substituteTypeVariables(toBound,    lowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
231	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(bound,  upperBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(bound,  upperBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(bound,  upperBounds,  typeVarAssigns);	  Type[]    toLowerBounds    =    substituteTypeVariables(bound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
232	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(upperBound,  toLowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(upperBound,  toLowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(upperBound,  toLowerBounds,  typeVarAssigns);	  Type[]    toLowerBounds    =    substituteTypeVariables(bound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
233	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  toUpperBounds.toArray(new  Type[upperBounds.size()  ]);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  toUpperBounds.toArray(new  Type[upperBounds.size()  ]);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  toUpperBounds.toArray(new  Type[upperBounds.size()  ]);	  Type[]    toUpperBounds    =    toUpperBounds.toArray(new    Type[toUpperBounds.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
234	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  upperBounds.toArray(new  Type[toUpperBounds.size()  ]);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  upperBounds.toArray(new  Type[toUpperBounds.size()  ]);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  upperBounds.toArray(new  Type[toUpperBounds.size()  ]);	  Type[]    toUpperBounds    =    toUpperBounds.toArray(new    Type[toUpperBounds.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
235	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  upperBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  upperBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  upperBounds,  typeVarAssigns);	  Type[]    toUpperBounds    =    substituteTypeVariables(toBound,    lowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
236	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  lowerBounds,  upperBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  lowerBounds,  upperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  lowerBounds,  upperBounds);	  Type[]    toUpperBounds    =    substituteTypeVariables(toBound,    lowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
237	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(bound,  toBound,  lowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(bound,  toBound,  lowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(bound,  toBound,  lowerBounds,  typeVarAssigns);	  Type[]    toUpperBounds    =    substituteTypeVariables(toBound,    lowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
238	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  upperBounds.toArray();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  upperBounds.toArray();  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  upperBounds.toArray();	  Type[]    toUpperBounds    =    toUpperBounds.toArray();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
239	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toBound,  upperBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toBound,  upperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(toBound,  upperBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
240	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  lowBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  lowBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(bound,  lowBounds,  typeVarAssigns);	  Type    toLowerBounds    =    substituteTypeVariables(bound,    lowBounds);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
241	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(lowerBound,  upperBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(lowerBound,  upperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(lowerBound,  upperBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(lowerBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
242	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(bound,  lowerBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(bound,  lowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(bound,  lowerBounds);	  Type[]    toUpperBounds    =    substituteTypeVariables(bound,    upperBounds);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
243	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(bound,  lowBounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(bound,  lowBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(bound,  lowBounds);	  Type[]    toUpperBounds    =    substituteTypeVariables(bound,    upperBounds);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
244	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  toBound  :  lowBounds)  {  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  toBound  :  lowBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  toBound  :  lowBounds)  {	  for(Type    toBound    :    lowerBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    for(Type    toBound    :    lowBounds)    {    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	25	None	replace
245	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(lowerBound,  toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(lowerBound,  toBound,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(lowerBound,  toBound,  typeVarAssigns);	  Type[]    lowerBounds    =    substituteTypeVariables(type,    toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
246	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(upperBound,  toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(upperBound,  toBound,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(upperBound,  toBound,  typeVarAssigns);	  Type[]    lowerBounds    =    substituteTypeVariables(type,    toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
247	[BUG]  [BUGGY]  Type  toLowerBounds  =  replaceTypeVariables(toBound,  upperBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  replaceTypeVariables(toBound,  upperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  replaceTypeVariables(toBound,  upperBounds);	  Type    toLowerBounds    =    substituteTypeVariables(toBound,    lowerBounds);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
248	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toWildcardType,  upperBounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toWildcardType,  upperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(toWildcardType,  upperBounds);	  Type[]    toUpperBounds    =    substituteTypeVariables(toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
249	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toWildcardType,  lowerBounds);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toWildcardType,  lowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(toWildcardType,  lowerBounds);	  Type[]    toUpperBounds    =    substituteTypeVariables(toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
250	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(bound,  lowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(bound,  lowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(bound,  lowerBounds,  typeVarAssigns);	  Type[]    toUpperBounds    =    substituteTypeVariables(bound,    toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
251	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(bound,  upperBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(bound,  upperBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(bound,  upperBounds,  typeVarAssigns);	  Type[]    toUpperBounds    =    substituteTypeVariables(bound,    toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
252	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(lowerBounds,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(lowerBounds,  toUpperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(lowerBounds,  toUpperBounds);	  Type    toLowerBounds    =    substituteTypeVariables(bound,    toUpperBounds);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
253	[BUG]  [BUGGY]  Type  toUpperBounds  =  substituteTypeVariables(bound,  upperBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toUpperBounds  =  substituteTypeVariables(bound,  upperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toUpperBounds  =  substituteTypeVariables(bound,  upperBounds);	  Type    toLowerBounds    =    substituteTypeVariables(bound,    toUpperBounds);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
254	[BUG]  [BUGGY]  Type[]  upperBounds  =  toUpperBounds.toArray(new  Type[typeVarAssigns.size()  ]);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  upperBounds  =  toUpperBounds.toArray(new  Type[typeVarAssigns.size()  ]);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  upperBounds  =  toUpperBounds.toArray(new  Type[typeVarAssigns.size()  ]);	  Type[]    upperBounds    =    typeVarAssigns.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
255	[BUG]  [BUGGY]  for(Type  toBound  :  lowerBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  upperBounds);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  for(Type  toBound  :  lowerBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  upperBounds);  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  lowerBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  upperBounds);	  for(Type    toBound    :    lowerBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	74	None	replace
256	[BUG]  [BUGGY]  for(Type  toBound  :  upperBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  for(Type  toBound  :  upperBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  }  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  upperBounds)  {  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  }	  for(Type    toBound    :    lowerBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
257	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toLowerBounds,  upperBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toLowerBounds,  upperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(bound,  toLowerBounds,  upperBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(bound,    toBound,    upperBounds);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
258	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toUpperBounds,  upperBounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toUpperBounds,  upperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(bound,  toUpperBounds,  upperBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(bound,    toBound,    upperBounds);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
259	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  upperBounds);  for(Type  toBound  :  toBounds)  {  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  upperBounds);  for(Type  toBound  :  toBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  upperBounds);  for(Type  toBound  :  toBounds)  {	  for(Type    toBound    :    toUpperBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    toUpperBounds);    for(Type    toBound    :    toUpperBounds)    {    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	8	None	replace
260	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(lowerBounds,  upperBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(lowerBounds,  upperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(lowerBounds,  upperBounds);	  Type    toLowerBounds    =    substituteTypeVariables(lowerBounds,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
261	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(lowerBound,  upperBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(lowerBound,  upperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(lowerBound,  upperBounds);	  Type    toLowerBounds    =    substituteTypeVariables(lowerBounds,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
262	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(upperBounds,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(upperBounds,  toLowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(upperBounds,  toLowerBounds);	  Type    toLowerBounds    =    substituteTypeVariables(lowerBounds,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
263	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  upperBounds.toUpperBounds;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  upperBounds.toUpperBounds;  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  upperBounds.toUpperBounds;	  Type[]    toLowerBounds    =    toLowerBounds.toUpperBounds;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
264	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  typeVarAssigns.toUpperBounds;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  typeVarAssigns.toUpperBounds;  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  typeVarAssigns.toUpperBounds;	  Type[]    toLowerBounds    =    toLowerBounds.toUpperBounds;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
265	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  wildcardType.getTypes();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  wildcardType.getTypes();  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  wildcardType.getTypes();	  Type[]    toUpperBounds    =    toWildcardType.getTypes();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
266	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(lowerBounds,  upperBounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(lowerBounds,  upperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(lowerBounds,  upperBounds);	  Type[]    toLowerBounds    =    substituteTypeVariables(lowerBounds,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
267	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(lowerBound,  upperBounds);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(lowerBound,  upperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(lowerBound,  upperBounds);	  Type[]    toLowerBounds    =    substituteTypeVariables(lowerBounds,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
268	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(upperBounds,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(upperBounds,  toLowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(upperBounds,  toLowerBounds);	  Type[]    toLowerBounds    =    substituteTypeVariables(lowerBounds,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
269	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(lowerBounds,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(lowerBounds,  toUpperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(lowerBounds,  toUpperBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(toLowerBounds,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
270	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(upperBounds,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(upperBounds,  toLowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(upperBounds,  toLowerBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(toLowerBounds,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
271	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(lowerBounds,  toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(lowerBounds,  toBound,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(lowerBounds,  toBound,  typeVarAssigns);	  Type    toLowerBounds    =    substituteTypeVariables(bound,    toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
272	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  upperBounds.getTypes();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  upperBounds.getTypes();  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  upperBounds.getTypes();	  Type[]    toLowerBounds    =    toUpperBounds.getTypes();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
273	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  typeVarAssigns.getTypes();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  typeVarAssigns.getTypes();  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  typeVarAssigns.getTypes();	  Type[]    toLowerBounds    =    toUpperBounds.getTypes();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
274	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  lowerBounds,  upperBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  lowerBounds,  upperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(bound,  lowerBounds,  upperBounds);	  Type    toLowerBounds    =    substituteTypeVariables(bound,    lowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
275	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  upperBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  upperBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(toBound,  upperBounds,  typeVarAssigns);	  Type    toLowerBounds    =    substituteTypeVariables(toBound,    lowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
276	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  lowerBounds,  upperBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  lowerBounds,  upperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(toBound,  lowerBounds,  upperBounds);	  Type    toLowerBounds    =    substituteTypeVariables(toBound,    lowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
277	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  upperBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  upperBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(toWildcardType,  upperBounds,  typeVarAssigns);	  Type[]    lowerBounds    =    substituteTypeVariables(toWildcardType,    bound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
278	[BUG]  [BUGGY]  Type[]  upperBounds  =  typeVarAssigns.toArray(new  Type[upperBounds.size()  ]);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  upperBounds  =  typeVarAssigns.toArray(new  Type[upperBounds.size()  ]);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  upperBounds  =  typeVarAssigns.toArray(new  Type[upperBounds.size()  ]);	  Type[]    upperBounds    =    typeVarAssigns.toArray(new    Type[size()    ]);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
279	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(lowerBounds,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(lowerBounds,  toUpperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(lowerBounds,  toUpperBounds);	  Type[]    toLowerBounds    =    substituteTypeVariables(bound,    toUpperBounds);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
280	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(upperBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(upperBound,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(upperBound,  typeVarAssigns);	  Type    toLowerBounds    =    substituteTypeVariables(lowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
281	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  typeVarAssigns.toArray(new  Type[typeVarAssigns.size()  ]);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  typeVarAssigns.toArray(new  Type[typeVarAssigns.size()  ]);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  typeVarAssigns.toArray(new  Type[typeVarAssigns.size()  ]);	  Type[]    toUpperBounds    =    typeVarAssigns.getTypes();    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
282	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  typeVarAssigns.toArray();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  typeVarAssigns.toArray();  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  typeVarAssigns.toArray();	  Type[]    toUpperBounds    =    typeVarAssigns.getTypes();    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
283	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(upperBound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(upperBound,  toUpperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(upperBound,  toUpperBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(upperBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
284	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  upperBounds.getAllTypes();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  upperBounds.getAllTypes();  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  upperBounds.getAllTypes();	  Type[]    toLowerBounds    =    toUpperBounds.getAllTypes();    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
285	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  typeVarAssigns.getAllTypes();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  typeVarAssigns.getAllTypes();  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  typeVarAssigns.getAllTypes();	  Type[]    toLowerBounds    =    toUpperBounds.getAllTypes();    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
286	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  upperBounds.toLowerBounds();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  upperBounds.toLowerBounds();  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  upperBounds.toLowerBounds();	  Type[]    toLowerBounds    =    toLowerBounds.toLowerBounds();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
287	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  typeVarAssigns.toLowerBounds();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  typeVarAssigns.toLowerBounds();  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  typeVarAssigns.toLowerBounds();	  Type[]    toLowerBounds    =    toLowerBounds.toLowerBounds();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
288	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  toWildcardType,  upperBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  toWildcardType,  upperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  toWildcardType,  upperBounds);	  Type[]    toUpperBounds    =    substituteTypeVariables(toBound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
289	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  upperBounds);  for(Type  bound  :  lowerBounds)  {  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  upperBounds);  for(Type  bound  :  lowerBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  upperBounds);  for(Type  bound  :  lowerBounds)  {	  for(Type    toBound    :    lowerBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    for(Type    bound    :    lowerBounds)    {    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	23	None	replace
290	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds);  for(Type  bound  :  upperBounds)  {  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds);  for(Type  bound  :  upperBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds);  for(Type  bound  :  upperBounds)  {	  for(Type    toBound    :    toUpperBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    toUpperBounds);    for(Type    bound    :    toUpperBounds)    {    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	9	None	replace
291	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(bound,  toBound);  for(Type  bound  :  toLowerBounds)  {  [CE]  cannot  find  symbol  bound  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toBound  =  substituteTypeVariables(bound,  toBound);  for(Type  bound  :  toLowerBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toBound  =  substituteTypeVariables(bound,  toBound);  for(Type  bound  :  toLowerBounds)  {	  for(Type    toBound    :    toUpperBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    toUpperBounds);    for(Type    bound    :    toUpperBounds)    {    	non-compiled	[CE]  cannot  find  symbol  bound	9	None	replace
292	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(lowerBounds,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(lowerBounds,  toLowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(lowerBounds,  toLowerBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(toUpperBounds,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
293	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(upperBounds,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(upperBounds,  toUpperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(upperBounds,  toUpperBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(toUpperBounds,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
294	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.toArray(new  Type[lowerBounds.size()  ]);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.toArray(new  Type[lowerBounds.size()  ]);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  toWildcardType.toArray(new  Type[lowerBounds.size()  ]);	  Type[]    lowerBounds    =    toWildcardType.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
295	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.toArray(new  Type[higherBounds.size()  ]);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.toArray(new  Type[higherBounds.size()  ]);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  toWildcardType.toArray(new  Type[higherBounds.size()  ]);	  Type[]    lowerBounds    =    toWildcardType.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
296	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(bound,  toBound,  upperBounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(bound,  toBound,  upperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(bound,  toBound,  upperBounds);	  Type[]    toLowerBounds    =    substituteTypeVariables(toBound,    upperBounds);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
297	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  toBound,  upperBounds);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(bound,  toBound,  upperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(bound,  toBound,  upperBounds);	  Type    toLowerBounds    =    substituteTypeVariables(toBound,    upperBounds);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
298	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(lowerBounds,  toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(lowerBounds,  toBound,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(lowerBounds,  toBound,  typeVarAssigns);	  Type[]    toLowerBounds    =    substituteTypeVariables(bound,    toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
299	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  replacementTypeVariables(bound,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  replacementTypeVariables(bound,  toLowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  replacementTypeVariables(bound,  toLowerBounds);	  Type[]    toUpperBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
300	[BUG]  [BUGGY]  Type[]  lowerBounds  =  upperBounds.toArray(new  Type[size()  -  1]);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  upperBounds.toArray(new  Type[size()  -  1]);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  upperBounds.toArray(new  Type[size()  -  1]);	  Type[]    lowerBounds    =    upperBounds.toArray(new    Type[size()    ]);    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
301	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getRawTypeVariables(upperBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getRawTypeVariables(upperBounds);  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  toWildcardType.getRawTypeVariables(upperBounds);	  Type[]    lowerBounds    =    toWildcardType.getRawTypeVariables();    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
302	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getRawTypeVariables(lowerBounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getRawTypeVariables(lowerBounds);  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  toWildcardType.getRawTypeVariables(lowerBounds);	  Type[]    lowerBounds    =    toWildcardType.getRawTypeVariables();    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
303	[BUG]  [BUGGY]  Type[]  lowerBounds  =  wildcardType.getRawTypeVariables();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  wildcardType.getRawTypeVariables();  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  wildcardType.getRawTypeVariables();	  Type[]    lowerBounds    =    toWildcardType.getRawTypeVariables();    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
304	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(lowerBound,  toLowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(lowerBound,  toLowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(lowerBound,  toLowerBounds,  typeVarAssigns);	  Type[]    lowerBounds    =    substituteTypeVariables(bound,    upperBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
305	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  upperBounds.toUpperBounds();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  upperBounds.toUpperBounds();  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  upperBounds.toUpperBounds();	  Type[]    toLowerBounds    =    toLowerBounds.toUpperBounds();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
306	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toUpperBounds(lowerBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toUpperBounds(lowerBounds);  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  toLowerBounds.toUpperBounds(lowerBounds);	  Type[]    toLowerBounds    =    toLowerBounds.toUpperBounds();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
307	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  typeVarAssigns.toUpperBounds();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  typeVarAssigns.toUpperBounds();  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  typeVarAssigns.toUpperBounds();	  Type[]    toLowerBounds    =    toLowerBounds.toUpperBounds();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
308	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[lowerBounds.size()  ]);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[lowerBounds.size()  ]);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[lowerBounds.size()  ]);	  Type[]    lowerBounds    =    toLowerBounds.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
309	[BUG]  [BUGGY]  Type[]  upperBounds  =  wildcardType.toArray(new  Type[typeVarAssigns.size()  ]);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  upperBounds  =  wildcardType.toArray(new  Type[typeVarAssigns.size()  ]);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  upperBounds  =  wildcardType.toArray(new  Type[typeVarAssigns.size()  ]);	  Type[]    upperBounds    =    toWildcardType.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
310	[BUG]  [BUGGY]  Type[]  lowerBounds  =  wildcardType.getLowerBounds();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  wildcardType.getLowerBounds();  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  wildcardType.getLowerBounds();	  Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
311	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLowerBounds(upperBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLowerBounds(upperBounds);  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  toWildcardType.getLowerBounds(upperBounds);	  Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
312	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(upperBound,  toWildcardType,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(upperBound,  toWildcardType,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(upperBound,  toWildcardType,  typeVarAssigns);	  Type[]    lowerBounds    =    substituteTypeVariables(toWildcardType,    toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
313	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(upperBound,  toLowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(upperBound,  toLowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(upperBound,  toLowerBounds,  typeVarAssigns);	  Type[]    lowerBounds    =    substituteTypeVariables(toBound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
314	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toBound,  upperBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toBound,  upperBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(toBound,  upperBounds,  typeVarAssigns);	  Type[]    lowerBounds    =    substituteTypeVariables(toBound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
315	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  types.getTypes();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  types.getTypes();  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  types.getTypes();	  Type[]    toUpperBounds    =    upperBounds.getTypes();    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
316	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(bound,  lowBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(bound,  lowBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(bound,  lowBounds);	  Type[]    toLowerBounds    =    substituteTypeVariables(bound,    upperBounds);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
317	[BUG]  [BUGGY]  Type[]  lowerBounds  =  typeVarAssigns.toArray(new  Type[size()  1]);  [CE]  ']'  expected  [FE]                        AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  typeVarAssigns.toArray(new  Type[size()  1]);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  typeVarAssigns.toArray(new  Type[size()  1]);	  Type[]    lowerBounds    =    typeVarAssigns.toArray(new    Type[size()    -    1]);    	non-compiled	[CE]  ']'  expected	3	None	replace
318	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  bound  :  upperBounds)  {  [CE]  variable  bound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  bound  :  upperBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  bound  :  upperBounds)  {	  for(Type    toBound    :    toUpperBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    for(Type    bound    :    toUpperBounds)    {    	non-compiled	[CE]  variable  bound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	7	None	replace
319	[BUG]  [BUGGY]  Type  toUpperBounds  =  substituteTypeVariables(bound,  toWildcardType,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toUpperBounds  =  substituteTypeVariables(bound,  toWildcardType,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toUpperBounds  =  substituteTypeVariables(bound,  toWildcardType,  typeVarAssigns);	  Type    toLowerBounds    =    substituteTypeVariables(toBound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
320	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toUpperBounds.getTypes();  for(Type  toBound  :  toLowerBounds)  {  [CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  toUpperBounds.getTypes();  for(Type  toBound  :  toLowerBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  toUpperBounds.getTypes();  for(Type  toBound  :  toLowerBounds)  {	  for(Type    toBound    :    upperBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    for(Type    toBound    :    lowerBounds)    {    	non-compiled	[CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	89	None	replace
321	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds);  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds);	  for(Type    toBound    :    toUpperBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    toUpperBounds);    for(Type    bound    :    toUpperBounds)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
322	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds);  for(Type  bound  :  topBounds)  {  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds);  for(Type  bound  :  topBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds);  for(Type  bound  :  topBounds)  {	  for(Type    toBound    :    toUpperBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    toUpperBounds);    for(Type    bound    :    toUpperBounds)    {    	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	9	None	replace
323	[BUG]  [BUGGY]  for(Type  toBound  :  toUpperBounds,  upperBounds)  {  [CE]  ')'  expected  [FE]        AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  for(Type  toBound  :  toUpperBounds,  upperBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  toUpperBounds,  upperBounds)  {	  for(Type    toBound    :    lowerBounds,    upperBounds)    {    	non-compiled	[CE]  ')'  expected	87	None	replace
324	[BUG]  [BUGGY]  for(Type  toBound  :  typeVarAssigns,  upperBounds)  {  [CE]  ')'  expected  [FE]          AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  for(Type  toBound  :  typeVarAssigns,  upperBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  typeVarAssigns,  upperBounds)  {	  for(Type    toBound    :    lowerBounds,    upperBounds)    {    	non-compiled	[CE]  ')'  expected	87	None	replace
325	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  toBound  :  toBound)  {  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  toBound  :  toBound)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  toBound  :  toBound)  {	  for(Type    toBound    :    toUpperBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    for(Type    toBound    :    toUpperBounds)    {    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	6	None	replace
326	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(upperBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(upperBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(upperBounds,  typeVarAssigns);	  Type[]    toLowerBounds    =    substituteTypeVariables(lowerBounds,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
327	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(lowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(lowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(lowerBounds,  typeVarAssigns);	  Type[]    toLowerBounds    =    substituteTypeVariables(lowerBounds,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
328	[BUG]  [BUGGY]  Type[]  upperBounds  =  substituteTypeVariables(type,  toWildcardType,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  upperBounds  =  substituteTypeVariables(type,  toWildcardType,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  upperBounds  =  substituteTypeVariables(type,  toWildcardType,  typeVarAssigns);	  Type[]    upperBounds    =    substituteTypeVariables(bound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
329	[BUG]  [BUGGY]  for(Type  toBound  :  new  Type[]  {  typeVarAssigns  }  )  {  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  for(Type  toBound  :  new  Type[]  {  typeVarAssigns  }  )  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  new  Type[]  {  typeVarAssigns  }  )  {	  for(Type    toBound    :    upperBounds)    {    for(Type    toBound    :    new    Type[]    {    }    )    {    	non-compiled	[CE]  incompatible  types	68	None	replace
330	[BUG]  [BUGGY]  for(Type  toBound  :  this.upperBounds)  {  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]        AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  for(Type  toBound  :  this.upperBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  this.upperBounds)  {	  for(Type    toBound    :    upperBounds)    {    for(Type    toBound    :    upperBounds)    {    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	64	None	replace
331	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(lowerBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(lowerBound,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(lowerBound,  typeVarAssigns);	  Type    toLowerBounds    =    substituteTypeVariables(lowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
332	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toBound,  typeVarAssigns,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(bound,  toBound,  typeVarAssigns,  toUpperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(bound,  toBound,  typeVarAssigns,  toUpperBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(bound,    toBound,    typeVarAssigns,    upperBounds);    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
333	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(upperBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(upperBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  substituteTypeVariables(upperBounds,  typeVarAssigns);	  Type    toLowerBounds    =    substituteTypeVariables(lowerBounds,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
334	[BUG]  [BUGGY]  Type[]  lowerBounds  =  replaceTypeVariables(toWildcardType,  toLowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  replaceTypeVariables(toWildcardType,  toLowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  replaceTypeVariables(toWildcardType,  toLowerBounds,  typeVarAssigns);	  Type[]    lowerBounds    =    substituteTypeVariables(toWildcardType,    toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
335	[BUG]  [BUGGY]  Type[]  upperBounds  =  substituteTypeVariables(bound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  upperBounds  =  substituteTypeVariables(bound,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  upperBounds  =  substituteTypeVariables(bound,  typeVarAssigns);	  Type[]    lowerBounds    =    substituteTypeVariables(bound,    upperBounds);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
336	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  toWildcardType,  upperBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  toWildcardType,  upperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  toWildcardType,  upperBounds);	  Type[]    toLowerBounds    =    substituteTypeVariables(toBound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
337	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  toWildcardType,  lowerBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  toWildcardType,  lowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  substituteTypeVariables(toBound,  toWildcardType,  lowerBounds);	  Type[]    toLowerBounds    =    substituteTypeVariables(toBound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
338	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toUpperBounds(upperBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toUpperBounds(upperBounds);  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  toLowerBounds.toUpperBounds(upperBounds);	  Type[]    toLowerBounds    =    toLowerBounds.toUpperBounds();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
339	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  replacementTypeVariables(toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  replacementTypeVariables(toBound,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  replacementTypeVariables(toBound,  typeVarAssigns);	  Type[]    toUpperBounds    =    substituteTypeVariables(toBound,    upperBounds);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
340	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toUpperBounds();  for(Type  toBound  :  toLowerBounds)  {  [CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toUpperBounds();  for(Type  toBound  :  toLowerBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  toLowerBounds.toUpperBounds();  for(Type  toBound  :  toLowerBounds)  {	  for(Type    toBound    :    upperBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    for(Type    toBound    :    lowerBounds)    {    	non-compiled	[CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	89	None	replace
341	[BUG]  [BUGGY]  Type[]  upperBounds  =  typeVarAssigns.toArray(new  Type[size()  -  1]);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  upperBounds  =  typeVarAssigns.toArray(new  Type[size()  -  1]);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  upperBounds  =  typeVarAssigns.toArray(new  Type[size()  -  1]);	  Type[]    upperBounds    =    typeVarAssigns.toArray(new    Type[size()    ]);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
342	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toLowerBounds();  for(Type  toBound  :  toLowerBounds)  {  [CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toLowerBounds();  for(Type  toBound  :  toLowerBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  toLowerBounds.toLowerBounds();  for(Type  toBound  :  toLowerBounds)  {	  for(Type    toBound    :    lowerBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    for(Type    toBound    :    lowerBounds)    {    	non-compiled	[CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	22	None	replace
343	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toUpperBounds.toArray(new  Type[size()  ]);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  toUpperBounds.toArray(new  Type[size()  ]);  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  toUpperBounds.toArray(new  Type[size()  ]);	  Type[]    toLowerBounds    =    toUpperBounds.getTypes();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
344	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toUpperBounds.cloneTree();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  toUpperBounds.cloneTree();  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  toUpperBounds.cloneTree();	  Type[]    toLowerBounds    =    toUpperBounds.getTypes();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
345	[BUG]  [BUGGY]  Type[]  lowerBounds  =  wildcardType.toArray(new  Type[typeVarAssigns.size()  ]);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  wildcardType.toArray(new  Type[typeVarAssigns.size()  ]);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  wildcardType.toArray(new  Type[typeVarAssigns.size()  ]);	  Type[]    lowerBounds    =    toWildcardType.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
346	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  lowerBounds,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  lowerBounds,  toLowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  lowerBounds,  toLowerBounds);	  Type[]    toUpperBounds    =    substituteTypeVariables(toBound,    lowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
347	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  this.wildcardType.getTypes();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  this.wildcardType.getTypes();  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  this.wildcardType.getTypes();	  Type[]    toUpperBounds    =    toWildcardType.getTypes();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
348	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  toWildcardType.getUpperBounds();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  toWildcardType.getUpperBounds();  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  toWildcardType.getUpperBounds();	  Type[]    toUpperBounds    =    toWildcardType.getTypes();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
349	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(lowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(lowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(lowerBounds,  typeVarAssigns);	  Type[]    lowerBounds    =    substituteTypeVariables(toUpperBounds,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
350	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  toWildcardType,  lowerBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  toWildcardType,  lowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  substituteTypeVariables(toBound,  toWildcardType,  lowerBounds);	  Type[]    toUpperBounds    =    substituteTypeVariables(toBound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
351	[BUG]  [BUGGY]  Type[]  upperBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  ]);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  upperBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  ]);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  upperBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  ]);	  Type[]    upperBounds    =    typeVarAssigns.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
352	[BUG]  [BUGGY]  for(Type  toBound  :  toLowerBounds)  {  if  (!isAssignable(toBound,  header,  typeVarAssigns))  {  return  false;  }  [CE]  cannot  find  symbol  header  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  for(Type  toBound  :  toLowerBounds)  {  if  (!isAssignable(toBound,  header,  typeVarAssigns))  {  return  false;  }  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	for(Type  toBound  :  toLowerBounds)  {  if  (!isAssignable(toBound,  header,  typeVarAssigns))  {  return  false;  }	  for(Type    toBound    :    lowerBounds)    {    if    (!isAssignable(toBound,    bound,    typeVarAssigns))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  header	82	None	replace
353	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  type.toLowerBounds();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  type.toLowerBounds();  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  type.toLowerBounds();	  Type[]    toLowerBounds    =    toLowerBounds.toLowerBounds();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
354	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  this.upperBounds.getTypes();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  this.upperBounds.getTypes();  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  this.upperBounds.getTypes();	  Type[]    toUpperBounds    =    upperBounds.getTypes();    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
355	[BUG]  [BUGGY]  Type[]  upperBounds  =  substituteTypeVariables(bound,  toLowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  upperBounds  =  substituteTypeVariables(bound,  toLowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  upperBounds  =  substituteTypeVariables(bound,  toLowerBounds,  typeVarAssigns);	  Type[]    lowerBounds    =    substituteTypeVariables(bound,    upperBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
356	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(lowerBound,  typeVarAssigns,  upperBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(lowerBound,  typeVarAssigns,  upperBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(lowerBound,  typeVarAssigns,  upperBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(lowerBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
357	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  lowerBounds.toUpperBounds;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  lowerBounds.toUpperBounds;  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  lowerBounds.toUpperBounds;	  Type[]    toLowerBounds    =    toLowerBounds.toUpperBounds;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
358	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toUpperBounds,  lowerBounds);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toUpperBounds,  lowerBounds);  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  toLowerBounds.toUpperBounds,  lowerBounds);	  Type[]    toLowerBounds    =    toLowerBounds.toUpperBounds;    	non-compiled	[CE]  ';'  expected	69	None	replace
359	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  bound  :  toUpperBounds)  {  [CE]  variable  bound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  bound  :  toUpperBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  for(Type  bound  :  toUpperBounds)  {	  for(Type    toBound    :    toUpperBounds)    {    Type    toBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    for(Type    bound    :    toUpperBounds)    {    	non-compiled	[CE]  variable  bound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	7	None	replace
360	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(type,  toLowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(type,  toLowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(type,  toLowerBounds,  typeVarAssigns);	  Type[]    lowerBounds    =    substituteTypeVariables(type,    toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
361	[BUG]  [BUGGY]  Type  toLowerBounds  =  replaceTypeVariables(bound,  lowerBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  replaceTypeVariables(bound,  lowerBounds);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  replaceTypeVariables(bound,  lowerBounds);	  Type    toLowerBounds    =    substituteTypeVariables(bound,    lowerBounds);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
362	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  this.wildcardType.getAllTypes();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toLowerBounds  =  this.wildcardType.getAllTypes();  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toLowerBounds  =  this.wildcardType.getAllTypes();	  Type[]    toLowerBounds    =    toUpperBounds.getAllTypes();    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
363	[BUG]  [BUGGY]  Type  toLowerBounds  =  replaceTypeVariables(toBound,  upperBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toLowerBounds  =  replaceTypeVariables(toBound,  upperBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toLowerBounds  =  replaceTypeVariables(toBound,  upperBounds,  typeVarAssigns);	  Type    toLowerBounds    =    substituteTypeVariables(toBound,    lowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
364	[BUG]  [BUGGY]  Type  toUpperBounds  =  substituteTypeVariables(toBound,  upperBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type  toUpperBounds  =  substituteTypeVariables(toBound,  upperBounds,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type  toUpperBounds  =  substituteTypeVariables(toBound,  upperBounds,  typeVarAssigns);	  Type    toLowerBounds    =    substituteTypeVariables(toBound,    lowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
365	[BUG]  [BUGGY]  Type[]  upperBounds  =  substituteTypeVariables(bound,  toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  upperBounds  =  substituteTypeVariables(bound,  toBound,  typeVarAssigns);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  upperBounds  =  substituteTypeVariables(bound,  toBound,  typeVarAssigns);	  Type[]    lowerBounds    =    substituteTypeVariables(bound,    toBound,    upperBounds);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
366	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  toUpperBounds.toArray(new  Type[size()  ]);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  toUpperBounds  =  toUpperBounds.toArray(new  Type[size()  ]);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  toUpperBounds  =  toUpperBounds.toArray(new  Type[size()  ]);	  Type[]    toUpperBounds    =    toUpperBounds.toArray();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
367	[BUG]  [BUGGY]  For(Type  toBound  :  topBounds)  {  [CE]  ')'  expected  [FE]        AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  For(Type  toBound  :  topBounds)  {  [BUGGY]        toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	For(Type  toBound  :  topBounds)  {	  for(Type    toBound    :    toUpperBounds)    {    For(Type    toBound    :    toUpperBounds)    {    	non-compiled	[CE]  ')'  expected	103	None	replace
368	[BUG]  [BUGGY]  Type[]  lowerBounds  =  upperBounds.toArray(new  Type[upperBounds.size()  ]);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]          for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }      [BUGGY]  Type[]  lowerBounds  =  upperBounds.toArray(new  Type[upperBounds.size()  ]);  [BUGGY]      for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	376	376	2	replace	Type[]  lowerBounds  =  upperBounds.toArray(new  Type[upperBounds.size()  ]);	  Type[]    lowerBounds    =    typeVarAssigns.toArray(new    Type[upperBounds.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
