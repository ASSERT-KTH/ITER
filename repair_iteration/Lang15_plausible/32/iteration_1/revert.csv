projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:toLowerBounds){
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:toUpperBounds){
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:upperBounds){
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:toLowerBounds){if(!isAssignable(toBound,bound,typeVarAssigns)){returnfalse;}
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toLowerBounds=substituteTypeVariables(toBound,typeVarAssigns);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toLowerBounds=substituteTypeVariables(toBound,toLowerBounds);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toLowerBounds=substituteTypeVariables(bound,toLowerBounds);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toUpperBounds=toUpperBounds.getTypes();
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376TypetoLowerBounds=substituteTypeVariables(toBound,typeVarAssigns);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toUpperBounds=substituteTypeVariables(toBound,typeVarAssigns);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376TypetoLowerBounds=substituteTypeVariables(bound,toLowerBounds);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:lowerBounds){
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]lowerBounds=typeVarAssigns.toArray(newType[typeVarAssigns.size()]);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]lowerBounds=substituteTypeVariables(bound,toBound,typeVarAssigns);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]lowerBounds=substituteTypeVariables(bound,typeVarAssigns);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]lowerBounds=substituteTypeVariables(bound,toLowerBounds);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]lowerBounds=typeVarAssigns.toArray(newType[size()]);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]lowerBounds=toWildcardType.toArray(newType[size()]);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]upperBounds=typeVarAssigns.toArray(newType[size()]);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]lowerBounds=typeVarAssigns.toArray(newType[size()-1]);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:lowerBounds,typeVarAssigns){
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:toUpperBounds){for(TypetoBound:toUpperBounds){
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:toUpperBounds){TypetoBound=substituteTypeVariables(toBound,typeVarAssigns);for(TypetoBound:toUpperBounds){
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:toUpperBounds){TypetoBound=substituteTypeVariables(toBound,typeVarAssigns);for(Typebound:toUpperBounds){
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:toUpperBounds){TypetoBound=substituteTypeVariables(toBound,toUpperBounds);for(TypetoBound:toUpperBounds){
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:toUpperBounds){TypetoBound=substituteTypeVariables(toBound,toUpperBounds);for(Typebound:toUpperBounds){
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toLowerBounds=substituteTypeVariables(bound,toUpperBounds);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toLowerBounds=substituteTypeVariables(bound,toLowerBounds,typeVarAssigns);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toLowerBounds=substituteTypeVariables(bound,lowerBounds);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toLowerBounds=substituteTypeVariables(toLowerBounds,bound);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376TypetoLowerBounds=substituteTypeVariables(bound,toUpperBounds);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376TypetoLowerBounds=substituteTypeVariables(bound,lowerBounds);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376TypetoLowerBounds=substituteTypeVariables(bound,toLowerBounds,typeVarAssigns);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376TypetoLowerBounds=substituteTypeVariables(bound,upperBounds);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toLowerBounds=substituteTypeVariables(toBound,toUpperBounds);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toLowerBounds=substituteTypeVariables(toBound,lowerBounds);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toLowerBounds=substituteTypeVariables(toBound,upperBounds);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:lowerBounds){for(TypetoBound:lowerBounds){
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:lowerBounds){TypetoBound=substituteTypeVariables(toBound,typeVarAssigns);for(TypetoBound:lowerBounds){
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:lowerBounds){TypetoBound=substituteTypeVariables(toBound,typeVarAssigns);for(Typebound:lowerBounds){
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:lowerBounds){for(TypetoBound:upperBounds){
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:lowerBounds){TypetoBound=substituteTypeVariables(toBound,typeVarAssigns);for(TypetoBound:lowBounds){
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toLowerBounds=toLowerBounds.toUpperBounds();
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toLowerBounds=toUpperBounds.getTypes();
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toLowerBounds=toLowerBounds.toLowerBounds();
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toLowerBounds=toUpperBounds.toLowerBounds();
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]lowerBounds=substituteTypeVariables(toWildcardType,toBound,typeVarAssigns);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]lowerBounds=substituteTypeVariables(bound,toWildcardType,typeVarAssigns);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]lowerBounds=substituteTypeVariables(type,toBound,typeVarAssigns);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]lowerBounds=substituteTypeVariables(bound,toBound,typeVarAssigns,toLowerBounds);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]lowerBounds=toWildcardType.toArray(newType[typeVarAssigns.size()]);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]upperBounds=typeVarAssigns.toArray(newType[typeVarAssigns.size()]);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]upperBounds=toWildcardType.toArray(newType[typeVarAssigns.size()]);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376TypetoLowerBounds=substituteTypeVariables(bound,toBound,typeVarAssigns);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376TypetoLowerBounds=substituteTypeVariables(toBound,toLowerBounds);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376TypetoLowerBounds=substituteTypeVariables(toBound,toWildcardType,typeVarAssigns);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376TypetoLowerBounds=substituteTypeVariables(bound,typeVarAssigns);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toLowerBounds=substituteTypeVariables(toBound,toWildcardType,typeVarAssigns);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toLowerBounds=substituteTypeVariables(bound,toBound,typeVarAssigns);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]lowerBounds=substituteTypeVariables(toUpperBounds,toLowerBounds);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]lowerBounds=substituteTypeVariables(bound,toUpperBounds);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]lowerBounds=substituteTypeVariables(toWildcardType,toLowerBounds);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]lowerBounds=substituteTypeVariables(toLowerBounds,toLowerBounds);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:toWildcardTypes){
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:typeVarAssigns){
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:this.toLowerBounds){
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:toUpperBounds){if(!isAssignable(bound,toBound,typeVarAssigns)){returnfalse;}
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:toUpperBounds){if(!isAssignable(toBound,bound,typeVarAssigns)){returnfalse;}
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:toWildcardTypes){if(!isAssignable(bound,toBound,typeVarAssigns)){returnfalse;}
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:toWildcardType){if(!isAssignable(bound,toBound,typeVarAssigns)){returnfalse;}
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toUpperBounds=substituteTypeVariables(toBound,toWildcardType,typeVarAssigns);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toUpperBounds=substituteTypeVariables(bound,toBound,typeVarAssigns);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toUpperBounds=substituteTypeVariables(toBound,toLowerBounds);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toUpperBounds=substituteTypeVariables(toWildcardType,typeVarAssigns);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]lowerBounds=substituteTypeVariables(toWildcardType,typeVarAssigns);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]lowerBounds=substituteTypeVariables(toWildcardType,bound,typeVarAssigns);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]upperBounds=substituteTypeVariables(bound,toWildcardType,typeVarAssigns);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toUpperBounds=toUpperBounds.toArray();
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toUpperBounds=toWildcardType.getTypes();
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toUpperBounds=toUpperBounds.toArray(newType[toUpperBounds.size()]);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:upperBounds){for(TypetoBound:upperBounds){
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:upperBounds){for(TypetoBound:lowerBounds){
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:upperBounds){for(TypetoBound:topBounds){
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:upperBounds){for(TypetoBound:typeVarAssigns){
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:upperBounds){for(TypetoBound:newType[]{}){
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toLowerBounds=toLowerBounds.toUpperBounds;
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toLowerBounds=substituteTypeVariables(bound,upperBounds);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toLowerBounds=substituteTypeVariables(lowerBounds,toLowerBounds);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376TypetoLowerBounds=substituteTypeVariables(lowerBounds,toLowerBounds);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376TypetoLowerBounds=substituteTypeVariables(bound,lowBounds);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:lowerBounds){TypetoBound=substituteTypeVariables(toBound,typeVarAssigns);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:lowerBounds){TypetoBound=substituteTypeVariables(toBound);for(TypetoBound:lowerBounds){
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]lowerBounds=substituteTypeVariables(bound,upperBounds);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]lowerBounds=substituteTypeVariables(upperBound,toLowerBounds);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]lowerBounds=substituteTypeVariables(lowerBound,toLowerBounds);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]lowerBounds=substituteTypeVariables(lowerBound,typeVarAssigns);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]lowerBounds=substituteTypeVariables(upperBound,typeVarAssigns);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:upperBounds){if(!isAssignable(toBound,bound,typeVarAssigns)){returnfalse;}
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:lowerBounds){if(!isAssignable(toBound,bound,typeVarAssigns)){returnfalse;}
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toLowerBounds=substituteTypeVariables(bound,typeVarAssigns);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:topBounds){
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376TypetoLowerBounds=substituteTypeVariables(toBound,upperBounds);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376TypetoLowerBounds=substituteTypeVariables(toBound,lowerBounds);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:lowerBounds,upperBounds){
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:upperBounds){TypetoBound=substituteTypeVariables(toBound,typeVarAssigns);for(TypetoBound:upperBounds){
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:upperBounds){TypetoBound=substituteTypeVariables(toBound,typeVarAssigns);for(TypetoBound:lowerBounds){
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:upperBounds){TypetoBound=substituteTypeVariables(toBound,typeVarAssigns);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:toUpperBounds){TypetoBound=substituteTypeVariables(toBound,toUpperBound);for(TypetoBound:toUpperBounds){
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:toUpperBounds){TypetoBound=substituteTypeVariables(toBound,typeVarAssigns);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toUpperBounds=substituteTypeVariables(toBound,upperBounds);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toUpperBounds=substituteTypeVariables(toBound,lowerBounds);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toUpperBounds=substituteTypeVariables(bound,typeVarAssigns);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]lowerBounds=typeVarAssigns.toArray(newType[upperBounds.size()]);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]lowerBounds=upperBounds.toArray(newType[typeVarAssigns.size()]);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]lowerBounds=substituteTypeVariables(bound,toLowerBounds,typeVarAssigns);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]lowerBounds=substituteTypeVariables(toBound,toLowerBounds,typeVarAssigns);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]lowerBounds=substituteTypeVariables(bound,toBound,upperBounds);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toUpperBounds=typeVarAssigns.getTypes();
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toUpperBounds=upperBounds.getTypes();
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376for(TypetoBound:toUpperBounds){For(TypetoBound:toUpperBounds){
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toUpperBounds=substituteTypeVariables(bound,upperBounds);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]lowerBounds=substituteTypeVariables(toBound,typeVarAssigns);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toLowerBounds=substituteTypeVariables(toBound,lowerBounds,typeVarAssigns);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toUpperBounds=substituteTypeVariables(toBound,lowerBounds,typeVarAssigns);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]lowerBounds=toLowerBounds.toArray(newType[typeVarAssigns.size()]);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]lowerBounds=upperBounds.toArray(newType[size()]);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]lowerBounds=toLowerBounds.toArray(newType[size()]);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]lowerBounds=toWildcardType.getLowerBounds();
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]lowerBounds=toWildcardType.getRawTypeVariables();
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]toLowerBounds=toUpperBounds.getAllTypes();
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376TypetoLowerBounds=substituteTypeVariables(lowerBounds,typeVarAssigns);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376TypetoLowerBounds=substituteTypeVariables(bound,lowerBounds,typeVarAssigns);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]lowerBounds=substituteTypeVariables(bound,upperBounds,typeVarAssigns);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376TypetoLowerBounds=substituteTypeVariables(toBound,lowerBounds,typeVarAssigns);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]lowerBounds=substituteTypeVariables(bound,toBound,typeVarAssigns,upperBounds);
projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java376Type[]upperBounds=substituteTypeVariables(bound,toUpperBounds);
