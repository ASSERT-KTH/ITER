bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError  [CONTEXT]  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;    [BUGGY]    Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [BUGGY]  return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	    Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();		non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	42	None	add
2	[BUG]  [BUGGY]    Type  bound  toComponentType  =  toGenericArrayType.getRawClass();  [CE]  ';'  expected  [FE]      AssertionError  [CONTEXT]  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;    [BUGGY]    Type  bound  toComponentType  =  toGenericArrayType.getRawClass();  [BUGGY]  return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	    Type  bound  toComponentType  =  toGenericArrayType.getRawClass();		non-compiled	[CE]  ';'  expected	42	None	add
3	[BUG]  [BUGGY]    Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  if(toGenericArrayType.equals(cls))  {  return  true;  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError  [CONTEXT]  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;    [BUGGY]    Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  if(toGenericArrayType.equals(cls))  {  return  true;  }  [BUGGY]  return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	    Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  if(toGenericArrayType.equals(cls))  {  return  true;  }		non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	42	None	add
4	[BUG]  [BUGGY]    Type  toGenericArrayType  =  toGenericArrayType.getGenericConstructor();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError  [CONTEXT]  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;    [BUGGY]    Type  toGenericArrayType  =  toGenericArrayType.getGenericConstructor();  [BUGGY]  return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	    Type  toGenericArrayType  =  toGenericArrayType.getGenericConstructor();		non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	42	None	add
5	[BUG]  [BUGGY]    Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  if(toGenericArrayType!=  null)  {  return  false;  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError  [CONTEXT]  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;    [BUGGY]    Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  if(toGenericArrayType!=  null)  {  return  false;  }  [BUGGY]  return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	    Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  if(toGenericArrayType!=  null)  {  return  false;  }		non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	42	None	add
6	[BUG]  [BUGGY]  return  toComponentType.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]    AssertionError  [CONTEXT]  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;    [BUGGY]  return  toComponentType.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toComponentType.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);	return  cls.isArray()    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  	non-compiled	[CE]  cannot  find  symbol	41	None	replace
7	[BUG]  [BUGGY]  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;    [BUGGY]  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);	return  cls.isArray()    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;    [BUGGY]  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	add	return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);	return  cls.isArray()    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  	compilable	  [FE]  AssertionError  	41	2	replace
9	[BUG]  [BUGGY]  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;    [BUGGY]  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);	return  cls.isArray()    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  	compilable	  [FE]  AssertionError  	41	2	replace
10	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;    [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	add	if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	return  cls.isArray()    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  	compilable	  [FE]  AssertionError  	41	2	replace
11	[BUG]  [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;    [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	return  cls.isArray()    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  	compilable	  [FE]  AssertionError  	41	2	replace
12	[BUG]  [BUGGY]  return  toGenericArrayType.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]    AssertionError  [CONTEXT]  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;    [BUGGY]  return  toGenericArrayType.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toGenericArrayType.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);	return  cls.isArray()    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  	non-compiled	[CE]  cannot  find  symbol	41	None	replace
13	[BUG]  [BUGGY]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError  [CONTEXT]  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;    [BUGGY]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  [BUGGY]  return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();		non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	42	None	add
14	[BUG]  [BUGGY]    Type  toGenericArrayType  =  toGenericArrayType.getGeneric();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError  [CONTEXT]  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;    [BUGGY]    Type  toGenericArrayType  =  toGenericArrayType.getGeneric();  [BUGGY]  return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	    Type  toGenericArrayType  =  toGenericArrayType.getGeneric();		non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	42	None	add
15	[BUG]  [BUGGY]    Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError  [CONTEXT]  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;    [BUGGY]    Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  [BUGGY]  return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	    Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);		non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	42	None	add
16	[BUG]  [BUGGY]    Class  <?>  bound  =  toGenericArrayType.getRawClass();  [CE]  cannot  find  symbol  [FE]    AssertionError  [CONTEXT]  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;    [BUGGY]    Class  <?>  bound  =  toGenericArrayType.getRawClass();  [BUGGY]  return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	    Class  <?>  bound  =  toGenericArrayType.getRawClass();		non-compiled	[CE]  cannot  find  symbol	42	None	add
17	[BUG]  [BUGGY]    Type  bound  =  toGenericArrayType.getRawClass();  [CE]  cannot  find  symbol  [FE]      AssertionError  [CONTEXT]  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;    [BUGGY]    Type  bound  =  toGenericArrayType.getRawClass();  [BUGGY]  return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	    Type  bound  =  toGenericArrayType.getRawClass();		non-compiled	[CE]  cannot  find  symbol	42	None	add
18	[BUG]  [BUGGY]    Type  bound  =  toGenericArrayType.getBounds();  [CE]  cannot  find  symbol  [FE]        AssertionError  [CONTEXT]  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;    [BUGGY]    Type  bound  =  toGenericArrayType.getBounds();  [BUGGY]  return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	    Type  bound  =  toGenericArrayType.getBounds();		non-compiled	[CE]  cannot  find  symbol	42	None	add
19	[BUG]  [BUGGY]    Type  bound  =  toGenericArrayType.getboundType();  [CE]  cannot  find  symbol  [FE]          AssertionError  [CONTEXT]  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;    [BUGGY]    Type  bound  =  toGenericArrayType.getboundType();  [BUGGY]  return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	    Type  bound  =  toGenericArrayType.getboundType();		non-compiled	[CE]  cannot  find  symbol	42	None	add
20	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;    [BUGGY]  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	add	return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);	return  cls.isArray()    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  	compilable	  [FE]  AssertionError  	41	2	replace
21	[BUG]  [BUGGY]  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;    [BUGGY]  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);	return  cls.isArray()    &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  	compilable	  [FE]  AssertionError  	41	2	replace
