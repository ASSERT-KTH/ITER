bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Type  toGenericArrayType  =  cls.getGenericParameterType(0);  if(toGenericArrayType!=  null)  {  return  false;  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toGenericArrayType  =  cls.getGenericParameterType(0);  if(toGenericArrayType!=  null)  {  return  false;  }  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  cls.getGenericParameterType(0);  if(toGenericArrayType!=  null)  {  return  false;  }	  Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(0);    if(toGenericArrayType!=    null)    {    return    false;    }    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	79	None	replace
2	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(0);  if(toGenericArrayType!=  null)  {  return  false;  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(0);  if(toGenericArrayType!=  null)  {  return  false;  }  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  type.getGenericParameterType(0);  if(toGenericArrayType!=  null)  {  return  false;  }	  Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(0);    if(toGenericArrayType!=    null)    {    return    false;    }    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	79	None	replace
3	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  if(toGenericArrayType!=  null)  {  return  false;  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  if(toGenericArrayType!=  null)  {  return  false;  }  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  if(toGenericArrayType!=  null)  {  return  false;  }	  Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(0);    if(toGenericArrayType!=    null)    {    return    false;    }    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	79	None	replace
4	[BUG]  [BUGGY]  return  isAssignable(toComponentType.getDeclaredClass(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(toComponentType.getDeclaredClass(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  isAssignable(toComponentType.getDeclaredClass(),  toComponentType,  typeVarAssigns);	  return    isAssignable(cls.getDeclaredClass(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
5	[BUG]  [BUGGY]  return  isAssignable(cls.getDeclaredClass(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls.getDeclaredClass(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  isAssignable(cls.getDeclaredClass(),  toComponentType,  typeVarAssigns,  toGenericArrayType);	  return    isAssignable(cls.getDeclaredClass(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
6	[BUG]  [BUGGY]  return  isAssignable(cls,  toComponentType.getDeclaredClass(),  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls,  toComponentType.getDeclaredClass(),  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  isAssignable(cls,  toComponentType.getDeclaredClass(),  typeVarAssigns);	  return    isAssignable(cls.getDeclaredClass(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
7	[BUG]  [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  }  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  }	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Type    toComponentType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	76	None	replace
8	[BUG]  [BUGGY]  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    isAssignable(cls.getClass(),    toComponentType,    typeVarAssigns);    &&  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);	  	non-compiled	[CE]  illegal  start  of  expression	106	None	add
9	[BUG]  [BUGGY]  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);  Class  <?>  bound  =  toGenericArrayType.getRawClass();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);  Class  <?>  bound  =  toGenericArrayType.getRawClass();  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    isAssignable(cls.getClass(),    toComponentType,    typeVarAssigns);    Class  <?>  bound  =  toGenericArrayType.getRawClass();	  	non-compiled	[CE]  cannot  find  symbol	106	None	add
10	[BUG]  [BUGGY]  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);  Type  bound  =  toGenericArrayType.getRawClass();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);  Type  bound  =  toGenericArrayType.getRawClass();  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    isAssignable(cls.getClass(),    toComponentType,    typeVarAssigns);    Type  bound  =  toGenericArrayType.getRawClass();	  	non-compiled	[CE]  cannot  find  symbol	106	None	add
11	[BUG]  [BUGGY]  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);  Type  bound  =  toGenericArrayType.getRawType();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);  Type  bound  =  toGenericArrayType.getRawType();  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    isAssignable(cls.getClass(),    toComponentType,    typeVarAssigns);    Type  bound  =  toGenericArrayType.getRawType();	  	non-compiled	[CE]  cannot  find  symbol	106	None	add
12	[BUG]  [BUGGY]  return  toComponentType.isArray()  &&  isAssignable(toComponentType.getComponentType(),  cls,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  toComponentType.isArray()  &&  isAssignable(toComponentType.getComponentType(),  cls,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toComponentType.isArray()  &&  isAssignable(toComponentType.getComponentType(),  cls,  typeVarAssigns);	  return    cls.isArray()    &&    isAssignable(toComponentType.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
13	[BUG]  [BUGGY]  return  toComponentType.isArray()  &&  isAssignable(toComponentType.getComponentType(),  toComponentType,  cls);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  toComponentType.isArray()  &&  isAssignable(toComponentType.getComponentType(),  toComponentType,  cls);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toComponentType.isArray()  &&  isAssignable(toComponentType.getComponentType(),  toComponentType,  cls);	  return    cls.isArray()    &&    isAssignable(toComponentType.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
14	[BUG]  [BUGGY]  Type  toGenericArrayType  =  cls.getGenericParameterType(2);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toGenericArrayType  =  cls.getGenericParameterType(2);  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  cls.getGenericParameterType(2);	  Type    toGenericArrayType    =    cls.getGenericParameterType(1);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	59	None	replace
15	[BUG]  [BUGGY]  Type  toGenericArrayType  =  cls.getGenericParameterType(type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toGenericArrayType  =  cls.getGenericParameterType(type);  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  cls.getGenericParameterType(type);	  Type    toGenericArrayType    =    cls.getGenericParameterType(1);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	59	None	replace
16	[BUG]  [BUGGY]  &&  isAssignable(toComponentType.getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  isAssignable(toComponentType.getGenericComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isAssignable(toComponentType.getGenericComponentType(),  toComponentType,  typeVarAssigns);	  &&    isAssignable(cls.getGenericComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
17	[BUG]  [BUGGY]  &&  isAssignable(toGenericArrayType.getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  isAssignable(toGenericArrayType.getGenericComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isAssignable(toGenericArrayType.getGenericComponentType(),  toComponentType,  typeVarAssigns);	  &&    isAssignable(cls.getGenericComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
18	[BUG]  [BUGGY]  &&  isAssignable(cls.getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  isAssignable(cls.getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isAssignable(cls.getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);	  &&    isAssignable(cls.getGenericComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
19	[BUG]  [BUGGY]  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    isAssignable(cls.getComponentType(),    toGenericArrayType,    typeVarAssigns);    &&  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
20	[BUG]  [BUGGY]  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  Class  <?>  bound  =  toGenericArrayType.getRawClass();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  Class  <?>  bound  =  toGenericArrayType.getRawClass();  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    isAssignable(cls.getComponentType(),    toGenericArrayType,    typeVarAssigns);    Class  <?>  bound  =  toGenericArrayType.getRawClass();	  	non-compiled	[CE]  cannot  find  symbol	29	None	add
21	[BUG]  [BUGGY]  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    isAssignable(cls.getComponentType(),    toGenericArrayType,    typeVarAssigns);    GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();	  	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	29	None	add
22	[BUG]  [BUGGY]  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterTypes();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterTypes();  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    isAssignable(cls.getComponentType(),    toGenericArrayType,    typeVarAssigns);    GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterTypes();	  	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	29	None	add
23	[BUG]  [BUGGY]  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  Type  bound  =  toGenericArrayType.getRawClass();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  Type  bound  =  toGenericArrayType.getRawClass();  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    isAssignable(cls.getComponentType(),    toGenericArrayType,    typeVarAssigns);    Type  bound  =  toGenericArrayType.getRawClass();	  	non-compiled	[CE]  cannot  find  symbol	29	None	add
24	[BUG]  [BUGGY]  if(cls.isArray())  {  Type  toComponentType  =  type.getGenericComponentType();  if(toGenericArrayType.equals(cls))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())  {  Type  toComponentType  =  type.getGenericComponentType();  if(toGenericArrayType.equals(cls))  {  return  true;  }  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())  {  Type  toComponentType  =  type.getGenericComponentType();  if(toGenericArrayType.equals(cls))  {  return  true;  }	  Type    toComponentType    =    type.getGenericComponentType();    if(toGenericArrayType.equals(cls))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
25	[BUG]  [BUGGY]  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
26	[BUG]  [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  not  a  statement	40	None	replace
27	[BUG]  [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssign  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssign  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssign	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  ')'  expected	40	None	replace
28	[BUG]  [BUGGY]  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  type  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  type  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  type	  if(cls!=    null)    {    if(isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns))    {    return    isAssignable(cls.getComponentType(),    toComponentType,    type    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
29	[BUG]  [BUGGY]  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns))  {  return  isAssignable(cls.getComponentType(),  toComponentType,	  if(cls!=    null)    {    if(isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns))    {    return    isAssignable(cls.getComponentType(),    toComponentType,    type    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
30	[BUG]  [BUGGY]  &&  toGenericArrayType.equals(cls.getGenericComponentType()))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  type  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toGenericArrayType.equals(cls.getGenericComponentType()))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  type  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toGenericArrayType.equals(cls.getGenericComponentType()))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  type	  if(cls!=    null)    {    if(isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns))    {    return    isAssignable(cls.getComponentType(),    toComponentType,    type    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
31	[BUG]  [BUGGY]  Class  <?>  toComponentType  =  toGenericArrayType.getGenericComponentType();  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Class  <?>  toComponentType  =  toGenericArrayType.getGenericComponentType();  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Class  <?>  toComponentType  =  toGenericArrayType.getGenericComponentType();	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class    <?>    toComponentType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	77	None	replace
32	[BUG]  [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Class  <?>  toComponentType  =  toGenericArrayType.getGenericComponentType();  }  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Class  <?>  toComponentType  =  toGenericArrayType.getGenericComponentType();  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Class  <?>  toComponentType  =  toGenericArrayType.getGenericComponentType();  }	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class    <?>    toComponentType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	77	None	replace
33	[BUG]  [BUGGY]  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  toComponentType  =  toGenericArrayType.getGenericComponentType();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  toComponentType  =  toGenericArrayType.getGenericComponentType();  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  toComponentType  =  toGenericArrayType.getGenericComponentType();	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class    <?>    toComponentType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
34	[BUG]  [BUGGY]  &&  toGenericArrayType.equals(type))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toGenericArrayType.equals(type))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toGenericArrayType.equals(type))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    toGenericArrayType.equals(type))    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
35	[BUG]  [BUGGY]  &&  toGenericArrayType.equals(type))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toGenericArrayType.equals(type))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toGenericArrayType.equals(type))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    toGenericArrayType.equals(type))    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
36	[BUG]  [BUGGY]  &&  toGenericArrayType.equals(cls))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toGenericArrayType.equals(cls))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toGenericArrayType.equals(cls))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    toGenericArrayType.equals(type))    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
37	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(toGenericArrayType.equals(type))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	add	if(toGenericArrayType.equals(type))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    toGenericArrayType.equals(type))    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	24	2	replace
38	[BUG]  [BUGGY]  if(toGenericArrayType.equals(type))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(toGenericArrayType.equals(type))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(toGenericArrayType.equals(type))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    toGenericArrayType.equals(type))    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	24	2	replace
39	[BUG]  [BUGGY]  Type  toComponentType  =  cls.getGenericComponentType();  if(toComponentType!=  null)  {  return  false;  }  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toComponentType  =  cls.getGenericComponentType();  if(toComponentType!=  null)  {  return  false;  }  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =  cls.getGenericComponentType();  if(toComponentType!=  null)  {  return  false;  }	  Type    toComponentType    =    cls.getGenericComponentType();    if(toGenericArrayType!=    null)    {    return    false;    }    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	108	None	replace
40	[BUG]  [BUGGY]  Class  <?>  toComponentType  =  cls.getGenericComponentType();  if(toComponentType!=  null)  {  return  false;  }  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Class  <?>  toComponentType  =  cls.getGenericComponentType();  if(toComponentType!=  null)  {  return  false;  }  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Class  <?>  toComponentType  =  cls.getGenericComponentType();  if(toComponentType!=  null)  {  return  false;  }	  Type    toComponentType    =    cls.getGenericComponentType();    if(toGenericArrayType!=    null)    {    return    false;    }    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	108	None	replace
41	[BUG]  [BUGGY]  Type  toComponentType  =  cls.getGenericComponentType();  if(toComponentType  ==  null)  {  return  false;  }  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toComponentType  =  cls.getGenericComponentType();  if(toComponentType  ==  null)  {  return  false;  }  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =  cls.getGenericComponentType();  if(toComponentType  ==  null)  {  return  false;  }	  Type    toComponentType    =    cls.getGenericComponentType();    if(toGenericArrayType!=    null)    {    return    false;    }    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	108	None	replace
42	[BUG]  [BUGGY]  Type  toComponentType  =  type.getGenericComponentType();  if(toComponentType!=  null)  {  return  false;  }  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toComponentType  =  type.getGenericComponentType();  if(toComponentType!=  null)  {  return  false;  }  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =  type.getGenericComponentType();  if(toComponentType!=  null)  {  return  false;  }	  Type    toComponentType    =    cls.getGenericComponentType();    if(toGenericArrayType!=    null)    {    return    false;    }    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	108	None	replace
43	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericArrayType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericArrayType();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericArrayType();	  Type    toGenericArrayType    =    type.getGenericArrayType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	111	None	replace
44	[BUG]  [BUGGY]  Type  toGenericArrayType  =  cls.getGenericArrayType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toGenericArrayType  =  cls.getGenericArrayType();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  cls.getGenericArrayType();	  Type    toGenericArrayType    =    type.getGenericArrayType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	111	None	replace
45	[BUG]  [BUGGY]  type.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  type.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	type.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Type    bound    =    toGenericArrayType.getBounds();    	non-compiled	[CE]  not  a  statement	101	None	replace
46	[BUG]  [BUGGY]  Type  toComponentType  =  cls.isArray()  ||  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toComponentType  =  cls.isArray()  ||  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =  cls.isArray()  ||  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Type    bound    =    toGenericArrayType.getBounds();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	101	None	replace
47	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericComponentType();  if(toGenericArrayType  ==  null)  {  return  false;  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toGenericArrayType  =  type.getGenericComponentType();  if(toGenericArrayType  ==  null)  {  return  false;  }  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  type.getGenericComponentType();  if(toGenericArrayType  ==  null)  {  return  false;  }	  Type    toGenericArrayType    =    cls.getGenericComponentType();    if(toGenericArrayType    ==    null)    {    return    false;    }    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	53	None	replace
48	[BUG]  [BUGGY]  &&  toGenericArrayType.equals(cls))  {  return  true;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toGenericArrayType.equals(cls))  {  return  true;  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toGenericArrayType.equals(cls))  {  return  true;	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    toGenericArrayType.equals(cls))    {    return    true;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
49	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(type  instanceof  WildcardType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	add	if(type  instanceof  WildcardType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    toGenericArrayType.equals(cls))    {    return    true;    	compilable	  [FE]  AssertionError  	75	2	replace
50	[BUG]  [BUGGY]  if(type  instanceof  WildcardType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(type  instanceof  WildcardType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(type  instanceof  WildcardType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    toGenericArrayType.equals(cls))    {    return    true;    	compilable	  [FE]  AssertionError  	75	2	replace
51	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(type  instanceof  WildcardType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	add	if(type  instanceof  WildcardType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    toGenericArrayType.equals(cls))    {    return    true;    	compilable	  [FE]  AssertionError  	75	2	replace
52	[BUG]  [BUGGY]  if(type  instanceof  WildcardType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(type  instanceof  WildcardType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(type  instanceof  WildcardType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    toGenericArrayType.equals(cls))    {    return    true;    	compilable	  [FE]  AssertionError  	75	2	replace
53	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getRawClass();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toGenericArrayType  =  type.getRawClass();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  type.getRawClass();	  Type    toGenericArrayType    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	68	None	replace
54	[BUG]  [BUGGY]  Type  toGenericArrayType  =(toGenericArrayType!=  null)?  null  :  toGenericArrayType.getRawClass();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toGenericArrayType  =(toGenericArrayType!=  null)?  null  :  toGenericArrayType.getRawClass();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =(toGenericArrayType!=  null)?  null  :  toGenericArrayType.getRawClass();	  Type    toGenericArrayType    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	68	None	replace
55	[BUG]  [BUGGY]  Class  <?>  bound  =  toGenericArrayType.getRawClass();  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Class  <?>  bound  =  toGenericArrayType.getRawClass();  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Class  <?>  bound  =  toGenericArrayType.getRawClass();  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class    <?>    bound    =    toGenericArrayType.getRawClass();    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
56	[BUG]  [BUGGY]  if(type  instanceof  WildcardType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Class  <?>  bound  =  toGenericArrayType.getRawClass();  return  isAs  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(type  instanceof  WildcardType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Class  <?>  bound  =  toGenericArrayType.getRawClass();  return  isAs  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(type  instanceof  WildcardType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Class  <?>  bound  =  toGenericArrayType.getRawClass();  return  isAs	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class    <?>    bound    =    toGenericArrayType.getRawClass();    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  ';'  expected	26	None	replace
57	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Class  <?>  bound  =  toGenericArrayType.getRawClass();  return  isAs  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(type  instanceof  GenericArrayType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Class  <?>  bound  =  toGenericArrayType.getRawClass();  return  isAs  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(type  instanceof  GenericArrayType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Class  <?>  bound  =  toGenericArrayType.getRawClass();  return  isAs	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class    <?>    bound    =    toGenericArrayType.getRawClass();    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  ';'  expected	26	None	replace
58	[BUG]  [BUGGY]  &&  toGenericArrayType.equals(cls))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toGenericArrayType.equals(cls))  {  return  true;  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toGenericArrayType.equals(cls))  {  return  true;  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    toGenericArrayType.equals(type))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
59	[BUG]  [BUGGY]  &&  toGenericArrayType.equals(cls.getComponentType()))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toGenericArrayType.equals(cls.getComponentType()))  {  return  true;  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toGenericArrayType.equals(cls.getComponentType()))  {  return  true;  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    toGenericArrayType.equals(type))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
60	[BUG]  [BUGGY]  &&  toGenericArrayType.equals(type))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toGenericArrayType.equals(type))  {  return  true;  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toGenericArrayType.equals(type))  {  return  true;  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    toGenericArrayType.equals(type))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
61	[BUG]  [BUGGY]  Type  toGenericArrayType  =  cls.getGenericClass();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toGenericArrayType  =  cls.getGenericClass();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  cls.getGenericClass();	  Type    toGenericArrayType    =    cls.getGeneric();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	31	None	replace
62	[BUG]  [BUGGY]  return  toComponentType.isArray()  &&  isAssignable(toGenericArrayType.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  toComponentType.isArray()  &&  isAssignable(toGenericArrayType.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toComponentType.isArray()  &&  isAssignable(toGenericArrayType.getComponentType(),  toComponentType,  typeVarAssigns);	  return    toComponentType.isArray()    &&    isAssignable(cls.getComponentType(),    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
63	[BUG]  [BUGGY]  return  toComponentType.isArray()  &&  isAssignable(cls,  toGenericArrayType.getComponentType(),  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  toComponentType.isArray()  &&  isAssignable(cls,  toGenericArrayType.getComponentType(),  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toComponentType.isArray()  &&  isAssignable(cls,  toGenericArrayType.getComponentType(),  typeVarAssigns);	  return    toComponentType.isArray()    &&    isAssignable(cls.getComponentType(),    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
64	[BUG]  [BUGGY]  Type  toGenericArrayType  =  cls.getBounds();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toGenericArrayType  =  cls.getBounds();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  cls.getBounds();	  Type    toGenericArrayType    =    toGenericArrayType.getBounds();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	56	None	replace
65	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getBounds();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toGenericArrayType  =  type.getBounds();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  type.getBounds();	  Type    toGenericArrayType    =    toGenericArrayType.getBounds();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	56	None	replace
66	[BUG]  [BUGGY]  Type  toGenericArrayType  =  types.getBounds();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toGenericArrayType  =  types.getBounds();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  types.getBounds();	  Type    toGenericArrayType    =    toGenericArrayType.getBounds();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	56	None	replace
67	[BUG]  [BUGGY]  return  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);	  return    isAssignable(toComponentType.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
68	[BUG]  [BUGGY]  return  toComponentType.getComponentType(),  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  toComponentType.getComponentType(),  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toComponentType.getComponentType(),  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(toComponentType.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  ';'  expected	28	None	replace
69	[BUG]  [BUGGY]  Class  <?>  cls  =  toGenericArrayType.getRawClass();  [CE]  variable  cls  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Class  <?>  cls  =  toGenericArrayType.getRawClass();  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Class  <?>  cls  =  toGenericArrayType.getRawClass();	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class    <?>    cls    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  variable  cls  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	41	None	replace
70	[BUG]  [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Class  <?>  cls  =  toGenericArrayType.getRawClass();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Class  <?>  cls  =  toGenericArrayType.getRawClass();  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Class  <?>  cls  =  toGenericArrayType.getRawClass();	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class    <?>    cls    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
71	[BUG]  [BUGGY]  ||  isAssignable(toGenericArrayType.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  cls  =  toGenericArrayType.getRawClass();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  ||  isAssignable(toGenericArrayType.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  cls  =  toGenericArrayType.getRawClass();  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	||  isAssignable(toGenericArrayType.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  cls  =  toGenericArrayType.getRawClass();	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class    <?>    cls    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
72	[BUG]  [BUGGY]  Type  bound  =  toGenericArrayType,  cls.getDeclaredType();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  bound  =  toGenericArrayType,  cls.getDeclaredType();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  bound  =  toGenericArrayType,  cls.getDeclaredType();	  Type    bound    =    toGenericArrayType,    cls.getRawClass();    	non-compiled	[CE]  ';'  expected	96	None	replace
73	[BUG]  [BUGGY]  Type  bound  =  toComponentType,  cls.getRawClass();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  bound  =  toComponentType,  cls.getRawClass();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  bound  =  toComponentType,  cls.getRawClass();	  Type    bound    =    toGenericArrayType,    cls.getRawClass();    	non-compiled	[CE]  ';'  expected	96	None	replace
74	[BUG]  [BUGGY]  Type  bound  =  toGenericArrayType,  type.getRawClass();  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  bound  =  toGenericArrayType,  type.getRawClass();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  bound  =  toGenericArrayType,  type.getRawClass();	  Type    bound    =    toGenericArrayType,    cls.getRawClass();    	non-compiled	[CE]  ';'  expected	96	None	replace
75	[BUG]  [BUGGY]  Type  bound  =  toComponentType.getBounds();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  bound  =  toComponentType.getBounds();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  bound  =  toComponentType.getBounds();	  Type    bound    =    this.toGenericArrayType.getBounds();    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
76	[BUG]  [BUGGY]  Type  bound  =  cls.toGenericArrayType.getBounds();  [CE]  cannot  find  symbol  toGenericArrayType  [FE]                  AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  bound  =  cls.toGenericArrayType.getBounds();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  bound  =  cls.toGenericArrayType.getBounds();	  Type    bound    =    this.toGenericArrayType.getBounds();    	non-compiled	[CE]  cannot  find  symbol  toGenericArrayType	94	None	replace
77	[BUG]  [BUGGY]  &&  toGenericArrayType.isAssignableFrom(cls))  {  if(cls!=  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toGenericArrayType.isAssignableFrom(cls))  {  if(cls!=  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toGenericArrayType.isAssignableFrom(cls))  {  if(cls!=  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  if(cls!=    null)    {    if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
78	[BUG]  [BUGGY]  &&  toGenericArrayType.isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toGenericArrayType.isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toGenericArrayType.isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);	  if(cls!=    null)    {    if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
79	[BUG]  [BUGGY]  &&  toGenericArrayType.isAssignableFrom(cls))  {  if(cls!=  null  ||  cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toGenericArrayType.isAssignableFrom(cls))  {  if(cls!=  null  ||  cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toGenericArrayType.isAssignableFrom(cls))  {  if(cls!=  null  ||  cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  if(cls!=    null)    {    if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
80	[BUG]  [BUGGY]  Type  toComponentType  =  types!=  null?  types.getGenericComponentType()  :  cls;  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toComponentType  =  types!=  null?  types.getGenericComponentType()  :  cls;  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =  types!=  null?  types.getGenericComponentType()  :  cls;	  Type    toComponentType    =    types.getGenericComponentType();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	87	None	replace
81	[BUG]  [BUGGY]  if(cls.isArray()  ||  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  bound  =  toGenericArrayType.getRawClass();  [CE]  ')'  expected  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray()  ||  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  bound  =  toGenericArrayType.getRawClass();  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray()  ||  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  bound  =  toGenericArrayType.getRawClass();	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class    <?>    bound    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  ')'  expected	99	None	replace
82	[BUG]  [BUGGY]  Type  bounds  =  toComponentType.getBounds();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  bounds  =  toComponentType.getBounds();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  bounds  =  toComponentType.getBounds();	  Type    bound    =    type.getBounds();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
83	[BUG]  [BUGGY]  Class  <?>  bound  =  toComponentType.getRawClass();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Class  <?>  bound  =  toComponentType.getRawClass();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Class  <?>  bound  =  toComponentType.getRawClass();	  Class    <?>    bound    =    type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
84	[BUG]  [BUGGY]  Class  <?>  bound  =  toGericArrayType.getRawClass();  [CE]  cannot  find  symbol  toGericArrayType  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Class  <?>  bound  =  toGericArrayType.getRawClass();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Class  <?>  bound  =  toGericArrayType.getRawClass();	  Class    <?>    bound    =    type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol  toGericArrayType	4	None	replace
85	[BUG]  [BUGGY]  Class  <?>  bound  =  toComponentType,  toGenericArrayType.getRawClass();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Class  <?>  bound  =  toComponentType,  toGenericArrayType.getRawClass();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Class  <?>  bound  =  toComponentType,  toGenericArrayType.getRawClass();	  Class    <?>    bound    =    toGenericArrayType,    toComponentType.getRawClass();    	non-compiled	[CE]  ';'  expected	5	None	replace
86	[BUG]  [BUGGY]  Type  toGenericArrayType  =  types!=  null?  types.getGenericComponentType()  :  cls;  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toGenericArrayType  =  types!=  null?  types.getGenericComponentType()  :  cls;  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  types!=  null?  types.getGenericComponentType()  :  cls;	  Type    toGenericArrayType    =    types.getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	3	None	replace
87	[BUG]  [BUGGY]  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Type,Map<TypeVariable<?>,Type>,GenericArrayType)  [FE]    AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns,  toGenericArrayType);	  return    isAssignable(cls.getClass(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Type,Map<TypeVariable<?>,Type>,GenericArrayType)	107	None	replace
88	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(toComponentType.getClass(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	add	return  isAssignable(toComponentType.getClass(),  toComponentType,  typeVarAssigns);	  return    isAssignable(cls.getClass(),    toComponentType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	107	2	replace
89	[BUG]  [BUGGY]  return  isAssignable(toComponentType.getClass(),  toComponentType,  typeVarAssigns);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(toComponentType.getClass(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  isAssignable(toComponentType.getClass(),  toComponentType,  typeVarAssigns);	  return    isAssignable(cls.getClass(),    toComponentType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	107	2	replace
90	[BUG]  [BUGGY]  if(cls.getComponentType()!=  toComponentType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Class  <?>  bound  =  toGenericArrayType.getRawClass();  }  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.getComponentType()!=  toComponentType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Class  <?>  bound  =  toGenericArrayType.getRawClass();  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.getComponentType()!=  toComponentType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Class  <?>  bound  =  toGenericArrayType.getRawClass();  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class    <?>    bound    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
91	[BUG]  [BUGGY]  if(toGenericArrayType.getRawClass()!=  type)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Class  <?>  bound  =  toGenericArrayType.getRawClass();  }  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(toGenericArrayType.getRawClass()!=  type)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Class  <?>  bound  =  toGenericArrayType.getRawClass();  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(toGenericArrayType.getRawClass()!=  type)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Class  <?>  bound  =  toGenericArrayType.getRawClass();  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class    <?>    bound    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
92	[BUG]  [BUGGY]  if(toGenericArrayType.getRawClass()  ==  type)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Class  <?>  bound  =  toGenericArrayType.getRawClass();  }  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(toGenericArrayType.getRawClass()  ==  type)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Class  <?>  bound  =  toGenericArrayType.getRawClass();  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(toGenericArrayType.getRawClass()  ==  type)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Class  <?>  bound  =  toGenericArrayType.getRawClass();  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class    <?>    bound    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
93	[BUG]  [BUGGY]  &&  toGenericArrayType!=  null)  {  if(isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns))  {  return  isAssignable(cls.getComponentType()  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toGenericArrayType!=  null)  {  if(isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns))  {  return  isAssignable(cls.getComponentType()  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toGenericArrayType!=  null)  {  if(isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns))  {  return  isAssignable(cls.getComponentType()	  if(cls!=    null)    {    if(isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns))    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
94	[BUG]  [BUGGY]  &&  toGenericArrayType!=  null)  {  if(isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns))  {  return  isAssignable(cls.getComponentType(),  to  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toGenericArrayType!=  null)  {  if(isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns))  {  return  isAssignable(cls.getComponentType(),  to  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toGenericArrayType!=  null)  {  if(isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns))  {  return  isAssignable(cls.getComponentType(),  to	  if(cls!=    null)    {    if(isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns))    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
95	[BUG]  [BUGGY]  &&  toGenericArrayType.equals(type))  {  if(isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns))  {  return  isAssignable(cls.getComponentType()  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toGenericArrayType.equals(type))  {  if(isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns))  {  return  isAssignable(cls.getComponentType()  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toGenericArrayType.equals(type))  {  if(isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns))  {  return  isAssignable(cls.getComponentType()	  if(cls!=    null)    {    if(isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns))    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
96	[BUG]  [BUGGY]  return  type.isArray()  &&  isAssignable(cls,  toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  type.isArray()  &&  isAssignable(cls,  toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  type.isArray()  &&  isAssignable(cls,  toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);	  return    toComponentType.isArray()    &&    isAssignable(cls,    type.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
97	[BUG]  [BUGGY]  return  toComponentType.isArray()  &&  isAssignable(cls,  toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  toComponentType.isArray()  &&  isAssignable(cls,  toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toComponentType.isArray()  &&  isAssignable(cls,  toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);	  return    toComponentType.isArray()    &&    isAssignable(cls,    type.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
98	[BUG]  [BUGGY]  return  toComponentType.isArray()  &&  isAssignable(cls,  toComponentType.getComponentType(),  typeVarAssigns,  toComponentType);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  toComponentType.isArray()  &&  isAssignable(cls,  toComponentType.getComponentType(),  typeVarAssigns,  toComponentType);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toComponentType.isArray()  &&  isAssignable(cls,  toComponentType.getComponentType(),  typeVarAssigns,  toComponentType);	  return    toComponentType.isArray()    &&    isAssignable(cls,    type.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
99	[BUG]  [BUGGY]  Class  <?>  toComponentType  =  cls.getGenericComponentType();  if(toGenericArrayType.equals(type))  {  return  true;  }  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Class  <?>  toComponentType  =  cls.getGenericComponentType();  if(toGenericArrayType.equals(type))  {  return  true;  }  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Class  <?>  toComponentType  =  cls.getGenericComponentType();  if(toGenericArrayType.equals(type))  {  return  true;  }	  Type    toGenericArrayType    =    cls.getGenericComponentType();    if(toGenericArrayType.equals(cls))    {    return    true;    }    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	33	None	replace
100	[BUG]  [BUGGY]  Class  <?>  bound  =  type,  cls.getRawClass();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Class  <?>  bound  =  type,  cls.getRawClass();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Class  <?>  bound  =  type,  cls.getRawClass();	  Class    <?>    bound    =    toGenericArrayType,    cls.getRawClass();    	non-compiled	[CE]  ';'  expected	97	None	replace
101	[BUG]  [BUGGY]  if(type  instanceof  WildcardType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  }  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(type  instanceof  WildcardType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(type  instanceof  WildcardType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Type    toComponentType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	72	None	replace
102	[BUG]  [BUGGY]  if(toComponentType!=  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  }  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(toComponentType!=  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(toComponentType!=  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Type    toComponentType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	72	None	replace
103	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(toComponentType!=  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	add	if(toComponentType!=  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Type    toComponentType    =    toGenericArrayType.getGenericComponentType();    	compilable	  [FE]  AssertionError  	72	2	replace
104	[BUG]  [BUGGY]  if(toComponentType!=  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(toComponentType!=  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(toComponentType!=  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Type    toComponentType    =    toGenericArrayType.getGenericComponentType();    	compilable	  [FE]  AssertionError  	72	2	replace
105	[BUG]  [BUGGY]  Type  toComponentType  =  cls.getGenericComponentType(),  toGenericArrayType);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toComponentType  =  cls.getGenericComponentType(),  toGenericArrayType);  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =  cls.getGenericComponentType(),  toGenericArrayType);	  Type    toComponentType    =    toGenericArrayType.getGenericComponentType(),    cls);    	non-compiled	[CE]  ';'  expected	21	None	replace
106	[BUG]  [BUGGY]  Type  toComponentType  =  toGenericArrayType.getGenericComponentType(),  cls,  type);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toComponentType  =  toGenericArrayType.getGenericComponentType(),  cls,  type);  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =  toGenericArrayType.getGenericComponentType(),  cls,  type);	  Type    toComponentType    =    toGenericArrayType.getGenericComponentType(),    cls);    	non-compiled	[CE]  ';'  expected	21	None	replace
107	[BUG]  [BUGGY]  Type  toComponentType  =  type.getGenericComponentType(),  cls);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toComponentType  =  type.getGenericComponentType(),  cls);  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =  type.getGenericComponentType(),  cls);	  Type    toComponentType    =    toGenericArrayType.getGenericComponentType(),    cls);    	non-compiled	[CE]  ';'  expected	21	None	replace
108	[BUG]  [BUGGY]  Type  bound  =  toComponentType.getboundType();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  bound  =  toComponentType.getboundType();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  bound  =  toComponentType.getboundType();	  Type    bound    =    fromGenericArrayType.getboundType();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
109	[BUG]  [BUGGY]  &&  toGenericArrayType.equals(cls.getGenericComponentType()))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toGenericArrayType.equals(cls.getGenericComponentType()))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toGenericArrayType.equals(cls.getGenericComponentType()))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    If(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
110	[BUG]  [BUGGY]  &&  toGenericArrayType.equals(cls.getGenericComponentType()))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toGenericArrayType.equals(cls.getGenericComponentType()))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toGenericArrayType.equals(cls.getGenericComponentType()))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);	  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    If(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
111	[BUG]  [BUGGY]  return  toGenericArrayType.isArray()  &&  isAssignable(toComponentType,  type.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  toGenericArrayType.isArray()  &&  isAssignable(toComponentType,  type.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toGenericArrayType.isArray()  &&  isAssignable(toComponentType,  type.getComponentType(),  toComponentType,  typeVarAssigns);	  return    toGenericArrayType.isArray()    &&    isAssignable(cls,    type.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
112	[BUG]  [BUGGY]  return  type.isArray()  &&  isAssignable(cls,  toComponentType.getComponentType(),  toGenericArrayType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  type.isArray()  &&  isAssignable(cls,  toComponentType.getComponentType(),  toGenericArrayType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  type.isArray()  &&  isAssignable(cls,  toComponentType.getComponentType(),  toGenericArrayType,  typeVarAssigns);	  return    toGenericArrayType.isArray()    &&    isAssignable(cls,    type.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
113	[BUG]  [BUGGY]  Type  toGenericArrayType  =  cls.getDeclaredType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toGenericArrayType  =  cls.getDeclaredType();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  cls.getDeclaredType();	  Type    toGenericArrayType    =    cls.getRawClass();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	15	None	replace
114	[BUG]  [BUGGY]  Type  toGenericArrayType  =  cls.getReturnType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toGenericArrayType  =  cls.getReturnType();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  cls.getReturnType();	  Type    toGenericArrayType    =    cls.getRawClass();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	15	None	replace
115	[BUG]  [BUGGY]  Type  bound  =  toComponentType.getRawClass();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  bound  =  toComponentType.getRawClass();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  bound  =  toComponentType.getRawClass();	  Type    bound    =    type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
116	[BUG]  [BUGGY]  Type  toComponentType  =  type.getRawClass();  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toComponentType  =  type.getRawClass();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =  type.getRawClass();	  Type    bound    =    type.getRawClass();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	14	None	replace
117	[BUG]  [BUGGY]  Type  toGenericArrayType  =  cls.getGenericParameterType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toGenericArrayType  =  cls.getGenericParameterType();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  cls.getGenericParameterType();	  Type    toGenericArrayType    =    cls.getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	1	None	replace
118	[BUG]  [BUGGY]  Type  toComponentType  =  toComponentType.getGenericComponentType();  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toComponentType  =  toComponentType.getGenericComponentType();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =  toComponentType.getGenericComponentType();	  Type    toComponentType    =    type.getGenericComponentType();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	20	None	replace
119	[BUG]  [BUGGY]  return  isAssignable(toComponentType.getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(toComponentType.getGenericComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  isAssignable(toComponentType.getGenericComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(cls.getGenericComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
120	[BUG]  [BUGGY]  return  isAssignable(cls.getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls.getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  isAssignable(cls.getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);	  return    isAssignable(cls.getGenericComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
121	[BUG]  [BUGGY]  return  isAssignable(cls,  toComponentType.getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls,  toComponentType.getGenericComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  isAssignable(cls,  toComponentType.getGenericComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(cls.getGenericComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
122	[BUG]  [BUGGY]  &&  toGenericArrayType!=  null)  {  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toGenericArrayType!=  null)  {  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toGenericArrayType!=  null)  {  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  if(toGenericArrayType!=    null)    {    if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
123	[BUG]  [BUGGY]  &&  toGenericArrayType!=  null)  {  if(isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toGenericArrayType!=  null)  {  if(isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toGenericArrayType!=  null)  {  if(isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  if(toGenericArrayType!=    null)    {    if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
124	[BUG]  [BUGGY]  &&  toGenericArrayType!=  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toGenericArrayType!=  null)  {  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toGenericArrayType!=  null)  {	  if(toGenericArrayType!=    null)    {    if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
125	[BUG]  [BUGGY]  &&  toComponentType.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toComponentType.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toComponentType.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())    {    return    isAssignable(cls.getCOMponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
126	[BUG]  [BUGGY]  if(toComponentType.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(toComponentType.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(toComponentType.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())    {    return    isAssignable(cls.getCOMponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
127	[BUG]  [BUGGY]  Type  toComponentType  =  cls.getDeclaredType();  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toComponentType  =  cls.getDeclaredType();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =  cls.getDeclaredType();	  Type    bound    toComponentType    =    cls.getRawClass();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	10	None	replace
128	[BUG]  [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  cls.isArray()  ||  isAssignable(cls.getCOMponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  cls.isArray()  ||  isAssignable(cls.getCOMponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  cls.isArray()  ||  isAssignable(cls.getCOMponentType(),  toComponentType,  typeVarAssigns);  }	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    cls.isArray()    ||    isAssignable(cls.getCOMponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  not  a  statement	100	None	replace
129	[BUG]  [BUGGY]  ||  isAssignable(cls.getCOMponentType(),  toComponentType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  ||  isAssignable(cls.getCOMponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	||  isAssignable(cls.getCOMponentType(),  toComponentType,  typeVarAssigns);	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    cls.isArray()    ||    isAssignable(cls.getCOMponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
130	[BUG]  [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  cls.isArray()  ||  isAssignable(cls.getCOMponentType(),  toComponentType,  typeVarAssign  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  cls.isArray()  ||  isAssignable(cls.getCOMponentType(),  toComponentType,  typeVarAssign  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  cls.isArray()  ||  isAssignable(cls.getCOMponentType(),  toComponentType,  typeVarAssign	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    cls.isArray()    ||    isAssignable(cls.getCOMponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  ')'  expected	100	None	replace
131	[BUG]  [BUGGY]  &&  toGenericArrayType.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toGenericArrayType.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toGenericArrayType.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())    {    return    isAssigned(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
132	[BUG]  [BUGGY]  &&  isVarAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  isVarAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isVarAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
133	[BUG]  [BUGGY]  Type  bound  =  cls,  toComponentType.getboundType();  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  bound  =  cls,  toComponentType.getboundType();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  bound  =  cls,  toComponentType.getboundType();	  Type    bound    =    cls.getboundType();    	non-compiled	[CE]  ';'  expected	7	None	replace
134	[BUG]  [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Type  toGenericArrayType  =  toGenericArrayType.getGeneric();  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Type  toGenericArrayType  =  toGenericArrayType.getGeneric();  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Type  toGenericArrayType  =  toGenericArrayType.getGeneric();  }	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Type    toGenericArrayType    =    toGenericArrayType.getGeneric();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	78	None	replace
135	[BUG]  [BUGGY]  &&  toComponentType.equals(type))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toComponentType.equals(type))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toComponentType.equals(type))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    toComponentType.equals(type))    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
136	[BUG]  [BUGGY]  &&  toComponentType.equals(type))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toComponentType.equals(type))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toComponentType.equals(type))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    toComponentType.equals(type))    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
137	[BUG]  [BUGGY]  &&  toComponentType.equals(cls.getGenericComponentType()))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toComponentType.equals(cls.getGenericComponentType()))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toComponentType.equals(cls.getGenericComponentType()))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    toComponentType.equals(type))    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
138	[BUG]  [BUGGY]  Class  <?>  bound  =  cls,  toGenericArrayType.getRawClass();  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Class  <?>  bound  =  cls,  toGenericArrayType.getRawClass();  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Class  <?>  bound  =  cls,  toGenericArrayType.getRawClass();	  Class    <?>    bound    =    cls.getRawClass();    	non-compiled	[CE]  ';'  expected	92	None	replace
139	[BUG]  [BUGGY]  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns,  toComponentType);  [CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,GenericArrayType,Map<TypeVariable<?>,Type>,Type)  [FE]    AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns,  toComponentType);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns,  toComponentType);	  return    isAssignable(cls.getComponentType(),    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,GenericArrayType,Map<TypeVariable<?>,Type>,Type)	30	None	replace
140	[BUG]  [BUGGY]  return  isAssignable(toComponentType.getComponentType(),  toGenericArrayType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(toComponentType.getComponentType(),  toGenericArrayType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  isAssignable(toComponentType.getComponentType(),  toGenericArrayType,  typeVarAssigns);	  return    isAssignable(cls.getComponentType(),    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
141	[BUG]  [BUGGY]  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType()  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType()  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())        {        return        isAssignable(cls.getComponentType(),        toComponentType,        typeVarAssigns);        }        if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType()	  	non-compiled	[CE]  ')'  expected	62	None	add
142	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	add	if(cls.isArray())        {        return        isAssignable(cls.getComponentType(),        toComponentType,        typeVarAssigns);        }        if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  	compilable	  [FE]  AssertionError  	62	2	add
143	[BUG]  [BUGGY]  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())        {        return        isAssignable(cls.getComponentType(),        toComponentType,        typeVarAssigns);        }        if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  	compilable	  [FE]  AssertionError  	62	2	add
144	[BUG]  [BUGGY]  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())        {        return        isAssignable(cls.getComponentType(),        toComponentType,        typeVarAssigns);        }        if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType	  	non-compiled	[CE]  ')'  expected	62	None	add
145	[BUG]  [BUGGY]  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  type  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  type  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())        {        return        isAssignable(cls.getComponentType(),        toComponentType,        typeVarAssigns);        }        if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  type	  	non-compiled	[CE]  ')'  expected	62	None	add
146	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	add	if(cls.isArray())        {        return        isAssignable(cls.getComponentType(),        toComponentType,        typeVarAssigns);        }        if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  	compilable	  [FE]  AssertionError  	62	2	add
147	[BUG]  [BUGGY]  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())        {        return        isAssignable(cls.getComponentType(),        toComponentType,        typeVarAssigns);        }        if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  	compilable	  [FE]  AssertionError  	62	2	add
148	[BUG]  [BUGGY]  return  toComponentType.isAssignable()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  toComponentType.isAssignable()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toComponentType.isAssignable()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);	  return    cls.isAssignable()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
149	[BUG]  [BUGGY]  return  cls.isAssignable()  &&  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  cls.isAssignable()  &&  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  cls.isAssignable()  &&  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);	  return    cls.isAssignable()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
150	[BUG]  [BUGGY]  return  cls.isAssignable()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  cls.isAssignable()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  cls.isAssignable()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);	  return    cls.isAssignable()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
151	[BUG]  [BUGGY]  return  toComponentType.isAssignable()  ||  isAssignable(cls.getComponentType(),  toComponentType,  cls);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  toComponentType.isAssignable()  ||  isAssignable(cls.getComponentType(),  toComponentType,  cls);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toComponentType.isAssignable()  ||  isAssignable(cls.getComponentType(),  toComponentType,  cls);	  return    cls.isAssignable()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
152	[BUG]  [BUGGY]  &&  toComponentType.equals(cls.getGenericComponentType()))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toComponentType.equals(cls.getGenericComponentType()))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toComponentType.equals(cls.getGenericComponentType()))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    toComponentType.equals(type))    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
153	[BUG]  [BUGGY]  &&  isAssignable(type.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  isAssignable(type.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isAssignable(type.getComponentType(),  toComponentType,  typeVarAssigns);	  &&    isAssignable(toComponentType.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
154	[BUG]  [BUGGY]  Type  bound  =  cls,  toComponentType.getRawClass();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  bound  =  cls,  toComponentType.getRawClass();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  bound  =  cls,  toComponentType.getRawClass();	  Type    bound    =    cls.getRawClass();    	non-compiled	[CE]  ';'  expected	13	None	replace
155	[BUG]  [BUGGY]  Type  toComponentType  =(toGenericArrayType  ==  null)?  type.getGenericComponentType()  :  cls;  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toComponentType  =(toGenericArrayType  ==  null)?  type.getGenericComponentType()  :  cls;  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =(toGenericArrayType  ==  null)?  type.getGenericComponentType()  :  cls;	  Type    toComponentType    =(toGenericArrayType    ==    null)?    cls.getGenericComponentType()    :    type;    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	110	None	replace
156	[BUG]  [BUGGY]  Type  toComponentType  =(cls  ==  null)?  toComponentType.getGenericComponentType()  :  type;  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toComponentType  =(cls  ==  null)?  toComponentType.getGenericComponentType()  :  type;  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =(cls  ==  null)?  toComponentType.getGenericComponentType()  :  type;	  Type    toComponentType    =(toGenericArrayType    ==    null)?    cls.getGenericComponentType()    :    type;    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	110	None	replace
157	[BUG]  [BUGGY]  Type  toComponentType  =(cls  ==  null)?  cls.getGenericComponentType()  :  type;  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toComponentType  =(cls  ==  null)?  cls.getGenericComponentType()  :  type;  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =(cls  ==  null)?  cls.getGenericComponentType()  :  type;	  Type    toComponentType    =(toGenericArrayType    ==    null)?    cls.getGenericComponentType()    :    type;    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	110	None	replace
158	[BUG]  [BUGGY]  Constructor  <?>  bound  =  type.getRawClass();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Constructor  <?>  bound  =  type.getRawClass();  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Constructor  <?>  bound  =  type.getRawClass();	  Constructor    <?>    bound    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
159	[BUG]  [BUGGY]  Constructor  <?>  bound  =  toGenericArrayType,  toComponentType.getRawClass();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Constructor  <?>  bound  =  toGenericArrayType,  toComponentType.getRawClass();  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Constructor  <?>  bound  =  toGenericArrayType,  toComponentType.getRawClass();	  Constructor    <?>    bound    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  ';'  expected	46	None	replace
160	[BUG]  [BUGGY]  Constructor  <?>  bound  =  toGenericArrayType.getRawClass()  ||  toGenericArrayType.getRawClass();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Constructor  <?>  bound  =  toGenericArrayType.getRawClass()  ||  toGenericArrayType.getRawClass();  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Constructor  <?>  bound  =  toGenericArrayType.getRawClass()  ||  toGenericArrayType.getRawClass();	  Constructor    <?>    bound    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
161	[BUG]  [BUGGY]  Type  toGenericArrayType  =  cls.getboundType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toGenericArrayType  =  cls.getboundType();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  cls.getboundType();	  Type    toGenericArrayType    =    toGenericArrayType.getboundType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	9	None	replace
162	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getboundType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toGenericArrayType  =  type.getboundType();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  type.getboundType();	  Type    toGenericArrayType    =    toGenericArrayType.getboundType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	9	None	replace
163	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getFunctionType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getFunctionType();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getFunctionType();	  Type    toGenericArrayType    =    toGenericArrayType.getboundType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	9	None	replace
164	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getRawType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getRawType();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getRawType();	  Type    toGenericArrayType    =    toGenericArrayType.getboundType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	9	None	replace
165	[BUG]  [BUGGY]  return  toComponentType.isAssignable()  &&  isAssignable(cls,  toComponentType.getComponentType(),  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  toComponentType.isAssignable()  &&  isAssignable(cls,  toComponentType.getComponentType(),  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toComponentType.isAssignable()  &&  isAssignable(cls,  toComponentType.getComponentType(),  typeVarAssigns);	  return    toComponentType.isArray()    &&    isAssignable(cls,    toComponentType.getComponentType(),    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
166	[BUG]  [BUGGY]  return  toComponentType.isArray()  &&  isAssignable(cls,  toComponentType.getComponentType(),  typeVarAssigns,  toGenericArrayType);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  toComponentType.isArray()  &&  isAssignable(cls,  toComponentType.getComponentType(),  typeVarAssigns,  toGenericArrayType);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toComponentType.isArray()  &&  isAssignable(cls,  toComponentType.getComponentType(),  typeVarAssigns,  toGenericArrayType);	  return    toComponentType.isArray()    &&    isAssignable(cls,    toComponentType.getComponentType(),    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
167	[BUG]  [BUGGY]  &&  isAssignable(cls.getComponentType(),  toComponentType,  toGenericArrayType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  isAssignable(cls.getComponentType(),  toComponentType,  toGenericArrayType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isAssignable(cls.getComponentType(),  toComponentType,  toGenericArrayType,  typeVarAssigns);	  &&    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
168	[BUG]  [BUGGY]  &&  isAssignable(toGenericArrayType.getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  isAssignable(toGenericArrayType.getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isAssignable(toGenericArrayType.getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);	  &&    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
169	[BUG]  [BUGGY]  &&  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);	  &&    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
170	[BUG]  [BUGGY]  &&  isAssignable(toGenericArrayType.getComponentType(),  toGenericArrayType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  isAssignable(toGenericArrayType.getComponentType(),  toGenericArrayType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isAssignable(toGenericArrayType.getComponentType(),  toGenericArrayType,  typeVarAssigns);	  &&    isAssignable(cls.getComponentType(),    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
171	[BUG]  [BUGGY]  &&  isAssignable(toGenericArrayType.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  isAssignable(toGenericArrayType.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isAssignable(toGenericArrayType.getComponentType(),  toComponentType,  typeVarAssigns);	  &&    isAssignable(cls.getComponentType(),    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
172	[BUG]  [BUGGY]  Type  bound  toComponentType  =  toComponentType.getRawClass();  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  bound  toComponentType  =  toComponentType.getRawClass();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  bound  toComponentType  =  toComponentType.getRawClass();	  Type    bound    toComponentType    =    type.getRawClass();    	non-compiled	[CE]  ';'  expected	12	None	replace
173	[BUG]  [BUGGY]  Type  toComponentType  =  toComponentType.getRawClass();  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toComponentType  =  toComponentType.getRawClass();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =  toComponentType.getRawClass();	  Type    bound    toComponentType    =    type.getRawClass();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	12	None	replace
174	[BUG]  [BUGGY]  Class  <?>  bound  =  type.toGenericArrayType.getRawClass();  [CE]  cannot  find  symbol  toGenericArrayType  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Class  <?>  bound  =  type.toGenericArrayType.getRawClass();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Class  <?>  bound  =  type.toGenericArrayType.getRawClass();	  Class    <?>    bound    =    this.toGenericArrayType.getRawClass();    	non-compiled	[CE]  cannot  find  symbol  toGenericArrayType	80	None	replace
175	[BUG]  [BUGGY]  &&  isGenericArrayType(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  isGenericArrayType(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isGenericArrayType(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);	  &&    isGenericArrayType(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
176	[BUG]  [BUGGY]  &&  isGenericArrayType(cls.getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  isGenericArrayType(cls.getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isGenericArrayType(cls.getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);	  &&    isGenericArrayType(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
177	[BUG]  [BUGGY]  Type  toComponentType  =  type.getGenericComponentType();  if(toGenericArrayType.equals(type))  {  return  true;  }  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toComponentType  =  type.getGenericComponentType();  if(toGenericArrayType.equals(type))  {  return  true;  }  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =  type.getGenericComponentType();  if(toGenericArrayType.equals(type))  {  return  true;  }	  Type    toComponentType    =    cls.getGenericComponentType();    if(toGenericArrayType.equals(type))    {    return    true;    }    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	93	None	replace
178	[BUG]  [BUGGY]  return  cls.isArray()  ||  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  cls.isArray()  ||  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  cls.isArray()  ||  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);	  return    toComponentType.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
179	[BUG]  [BUGGY]  return  toComponentType.isArray()  ||  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  toComponentType.isArray()  ||  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toComponentType.isArray()  ||  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);	  return    toComponentType.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
180	[BUG]  [BUGGY]  Type  bound  =  cls.toGenericArrayType.getboundType();  [CE]  cannot  find  symbol  toGenericArrayType  [FE]                  AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  bound  =  cls.toGenericArrayType.getboundType();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  bound  =  cls.toGenericArrayType.getboundType();	  Type    bound    =    this.toGenericArrayType.getboundType();    	non-compiled	[CE]  cannot  find  symbol  toGenericArrayType	102	None	replace
181	[BUG]  [BUGGY]  Type  toComponentType  =  cls.getConstructor();  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toComponentType  =  cls.getConstructor();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =  cls.getConstructor();	  Type    toComponentType    =    cls.getRawClass();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	11	None	replace
182	[BUG]  [BUGGY]  &&  toGenericArrayType.isAssignableFrom(cls))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toGenericArrayType.isAssignableFrom(cls))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toGenericArrayType.isAssignableFrom(cls))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
183	[BUG]  [BUGGY]  Type  bounds  =  toGenericArrayType.getBounds();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  bounds  =  toGenericArrayType.getBounds();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  bounds  =  toGenericArrayType.getBounds();	  Type    bound    =    cls.getBounds();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
184	[BUG]  [BUGGY]  if(cls.isAssignable())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isAssignable())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isAssignable())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    types);    }    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
185	[BUG]  [BUGGY]  if(toGenericArrayType.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(toGenericArrayType.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(toGenericArrayType.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    types);    }    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
186	[BUG]  [BUGGY]  If(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  If(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	If(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    types);    }    	non-compiled	[CE]  ';'  expected	66	None	replace
187	[BUG]  [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  }	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	42	None	replace
188	[BUG]  [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
189	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericComponentType();  if(toGenericArrayType.equals(type))  {  return  true;  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toGenericArrayType  =  type.getGenericComponentType();  if(toGenericArrayType.equals(type))  {  return  true;  }  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  type.getGenericComponentType();  if(toGenericArrayType.equals(type))  {  return  true;  }	  Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    if(toGenericArrayType.equals(type))    {    return    true;    }    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	88	None	replace
190	[BUG]  [BUGGY]  &&  toGenericArrayType.equals(cls))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toGenericArrayType.equals(cls))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toGenericArrayType.equals(cls))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    toGenericArrayType.equals(type))    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
191	[BUG]  [BUGGY]  return  isAssignable(cls.getComponentType(),  toComponentType,  toGenericArrayType,  typeVarAssigns);  [CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls.getComponentType(),  toComponentType,  toGenericArrayType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  isAssignable(cls.getComponentType(),  toComponentType,  toGenericArrayType,  typeVarAssigns);	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Type,GenericArrayType,Map<TypeVariable<?>,Type>)	27	None	replace
192	[BUG]  [BUGGY]  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  toGenericArrayType);  [CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Type,Map<TypeVariable<?>,Type>,GenericArrayType,GenericArrayType)  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  toGenericArrayType);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  toGenericArrayType);	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Type,Map<TypeVariable<?>,Type>,GenericArrayType,GenericArrayType)	27	None	replace
193	[BUG]  [BUGGY]  return  toGenericArrayType.isArray()  &&  isAssignable(cls,  toComponentType.getComponentType(),  typeVarAssigns,  toGenericArrayType);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  toGenericArrayType.isArray()  &&  isAssignable(cls,  toComponentType.getComponentType(),  typeVarAssigns,  toGenericArrayType);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toGenericArrayType.isArray()  &&  isAssignable(cls,  toComponentType.getComponentType(),  typeVarAssigns,  toGenericArrayType);	  return    toGenericArrayType.isArray()    &&    isAssignable(cls,    toComponentType.getComponentType(),    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
194	[BUG]  [BUGGY]  &&  toGenericArrayType.equals(cls.getComponentType()))  {  return  true;  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toGenericArrayType.equals(cls.getComponentType()))  {  return  true;  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toGenericArrayType.equals(cls.getComponentType()))  {  return  true;	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    toGenericArrayType.equals(type))    {    return    true;    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
195	[BUG]  [BUGGY]  &&  toGenericArrayType.equals(type))  {  return  true;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toGenericArrayType.equals(type))  {  return  true;  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toGenericArrayType.equals(type))  {  return  true;	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    toGenericArrayType.equals(type))    {    return    true;    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
196	[BUG]  [BUGGY]  Class  <?>  cls  =  toGenericArrayType.getClass();  [CE]  variable  cls  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Class  <?>  cls  =  toGenericArrayType.getClass();  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Class  <?>  cls  =  toGenericArrayType.getClass();	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class    <?>    cls    =    toGenericArrayType.getClass();    	non-compiled	[CE]  variable  cls  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	44	None	replace
197	[BUG]  [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Class  <?>  cls  =  toGenericArrayType.getClass();  }  [CE]  variable  cls  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Class  <?>  cls  =  toGenericArrayType.getClass();  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Class  <?>  cls  =  toGenericArrayType.getClass();  }	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class    <?>    cls    =    toGenericArrayType.getClass();    	non-compiled	[CE]  variable  cls  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	44	None	replace
198	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(type  instanceof  Class  <?>)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	add	if(type  instanceof  Class  <?>)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class    <?>    cls    =    toGenericArrayType.getClass();    	compilable	  [FE]  AssertionError  	44	2	replace
199	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(type  instanceof  Class  <?>)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(type  instanceof  Class  <?>)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class    <?>    cls    =    toGenericArrayType.getClass();    	compilable	  [FE]  AssertionError  	44	2	replace
200	[BUG]  [BUGGY]  Type  toComponentType  =  cls.getGenericComponentType()  ||  type  instanceof  WildcardType;  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toComponentType  =  cls.getGenericComponentType()  ||  type  instanceof  WildcardType;  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =  cls.getGenericComponentType()  ||  type  instanceof  WildcardType;	  Type    toComponentType    =    cls.getGenericComponentType();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	19	None	replace
201	[BUG]  [BUGGY]  Type  toComponentType  =  cls.getGenericComponentType()  ||  cls.getGenericComponentType()!=  type;  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toComponentType  =  cls.getGenericComponentType()  ||  cls.getGenericComponentType()!=  type;  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =  cls.getGenericComponentType()  ||  cls.getGenericComponentType()!=  type;	  Type    toComponentType    =    cls.getGenericComponentType();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	19	None	replace
202	[BUG]  [BUGGY]  return  toGenericArrayType.isArray()  ||  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  toGenericArrayType.isArray()  ||  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toGenericArrayType.isArray()  ||  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);	  return    toGenericArrayType.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
203	[BUG]  [BUGGY]  return  toComponentType.isArray()  &&  isAssignable(type.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  toComponentType.isArray()  &&  isAssignable(type.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toComponentType.isArray()  &&  isAssignable(type.getComponentType(),  toComponentType,  typeVarAssigns);	  return    toComponentType.isArray()    &&    isAssignable(toComponentType.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
204	[BUG]  [BUGGY]  return  toComponentType.isAssignable()  &&  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  toComponentType.isAssignable()  &&  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toComponentType.isAssignable()  &&  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);	  return    toComponentType.isArray()    &&    isAssignable(toComponentType.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
205	[BUG]  [BUGGY]  if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGeneric();  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGeneric();  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGeneric();  }	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Type    toGenericArrayType    =    toGenericArrayType.getGeneric();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	78	None	replace
206	[BUG]  [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGeneric();  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGeneric();  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGeneric();  }	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Type    toGenericArrayType    =    toGenericArrayType.getGeneric();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	78	None	replace
207	[BUG]  [BUGGY]  return  toComponentType.isArray()  &&  isAssignable(toComponentType,  cls.getComponentType(),  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  toComponentType.isArray()  &&  isAssignable(toComponentType,  cls.getComponentType(),  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toComponentType.isArray()  &&  isAssignable(toComponentType,  cls.getComponentType(),  typeVarAssigns);	  return    toComponentType.isArray()    &&    isAssignable(cls,    toComponentType.getComponentType(),    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
208	[BUG]  [BUGGY]  return  toComponentType.isArray()  &&  isAssignable(cls,  type.getComponentType(),  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  toComponentType.isArray()  &&  isAssignable(cls,  type.getComponentType(),  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toComponentType.isArray()  &&  isAssignable(cls,  type.getComponentType(),  typeVarAssigns);	  return    toComponentType.isArray()    &&    isAssignable(cls,    toComponentType.getComponentType(),    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
209	[BUG]  [BUGGY]  Type  toGenericArrayType  =  cls.getGenericParameterType(0);  if(toGenericArrayType  ==  null)  {  return  false;  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toGenericArrayType  =  cls.getGenericParameterType(0);  if(toGenericArrayType  ==  null)  {  return  false;  }  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  cls.getGenericParameterType(0);  if(toGenericArrayType  ==  null)  {  return  false;  }	  Type    toGenericArrayType    =    cls.getGenericComponentType();    if(toGenericArrayType    ==    null)    {    return    false;    }    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	53	None	replace
210	[BUG]  [BUGGY]  Type  bound  =  type.toGenericArrayType.getBounds();  [CE]  cannot  find  symbol  toGenericArrayType  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  bound  =  type.toGenericArrayType.getBounds();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  bound  =  type.toGenericArrayType.getBounds();	  Type    bound    =    this.toGenericArrayType.getBounds();    	non-compiled	[CE]  cannot  find  symbol  toGenericArrayType	94	None	replace
211	[BUG]  [BUGGY]  Type  bound  =  type.toGenericArrayType.getboundType();  [CE]  cannot  find  symbol  toGenericArrayType  [FE]                  AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  bound  =  type.toGenericArrayType.getboundType();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  bound  =  type.toGenericArrayType.getboundType();	  Type    bound    =    this.toGenericArrayType.getboundType();    	non-compiled	[CE]  cannot  find  symbol  toGenericArrayType	102	None	replace
212	[BUG]  [BUGGY]  Type  toComponentType  =  cls.getGenericComponentType(type);  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toComponentType  =  cls.getGenericComponentType(type);  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =  cls.getGenericComponentType(type);	  Type    toComponentType    =    cls.getGenericComponentType();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	19	None	replace
213	[BUG]  [BUGGY]  Type  toComponentType  =  cls.getGenericComponentType(0);  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toComponentType  =  cls.getGenericComponentType(0);  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =  cls.getGenericComponentType(0);	  Type    toComponentType    =    cls.getGenericComponentType();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	19	None	replace
214	[BUG]  [BUGGY]  if(type  instanceof  WildcardType)  {  if(toGenericArrayType!=  null)  {  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(type  instanceof  WildcardType)  {  if(toGenericArrayType!=  null)  {  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(type  instanceof  WildcardType)  {  if(toGenericArrayType!=  null)  {  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  if(toGenericArrayType!=    null)    {    if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
215	[BUG]  [BUGGY]  &&  toGenericArrayType!=  null)  {  if(toGenericArrayType.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toGenericArrayType!=  null)  {  if(toGenericArrayType.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toGenericArrayType!=  null)  {  if(toGenericArrayType.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  if(toGenericArrayType!=    null)    {    if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
216	[BUG]  [BUGGY]  return  toComponentType.isArray()  &&  isAssignable(cls,  type.getComponentType(),  toGenericArrayType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  toComponentType.isArray()  &&  isAssignable(cls,  type.getComponentType(),  toGenericArrayType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toComponentType.isArray()  &&  isAssignable(cls,  type.getComponentType(),  toGenericArrayType,  typeVarAssigns);	  return    toComponentType.isArray()    &&    isAssignable(cls.getComponentType(),    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
217	[BUG]  [BUGGY]  return  cls.isArray()  &&  isAssignable(toGenericArrayType.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  cls.isArray()  &&  isAssignable(toGenericArrayType.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  cls.isArray()  &&  isAssignable(toGenericArrayType.getComponentType(),  toComponentType,  typeVarAssigns);	  return    toComponentType.isArray()    &&    isAssignable(cls.getComponentType(),    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
218	[BUG]  [BUGGY]  return  toComponentType.isArray()  &&  isAssignable(toGenericArrayType.getComponentType(),  toGenericArrayType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  toComponentType.isArray()  &&  isAssignable(toGenericArrayType.getComponentType(),  toGenericArrayType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toComponentType.isArray()  &&  isAssignable(toGenericArrayType.getComponentType(),  toGenericArrayType,  typeVarAssigns);	  return    toComponentType.isArray()    &&    isAssignable(cls.getComponentType(),    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
219	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(toGenericArrayType!=  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	add	if(toGenericArrayType!=  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    toGenericArrayType.equals(type))    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	24	2	replace
220	[BUG]  [BUGGY]  if(toGenericArrayType!=  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(toGenericArrayType!=  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(toGenericArrayType!=  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    toGenericArrayType.equals(type))    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	24	2	replace
221	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(toGenericArrayType.equals(cls))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	add	if(toGenericArrayType.equals(cls))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    toGenericArrayType.equals(type))    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	24	2	replace
222	[BUG]  [BUGGY]  if(toGenericArrayType.equals(cls))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(toGenericArrayType.equals(cls))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(toGenericArrayType.equals(cls))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    toGenericArrayType.equals(type))    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	24	2	replace
223	[BUG]  [BUGGY]  Class  <?>  bound  =  toGeometricArrayType.getRawClass();  [CE]  cannot  find  symbol  toGeometricArrayType  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Class  <?>  bound  =  toGeometricArrayType.getRawClass();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Class  <?>  bound  =  toGeometricArrayType.getRawClass();	  Class    <?>    bound    =    type.getRawClass();    	non-compiled	[CE]  cannot  find  symbol  toGeometricArrayType	4	None	replace
224	[BUG]  [BUGGY]  Type  bound  =  cls!=  null?  toComponentType.getRawClass()  :  cls.getRawClass();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  bound  =  cls!=  null?  toComponentType.getRawClass()  :  cls.getRawClass();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  bound  =  cls!=  null?  toComponentType.getRawClass()  :  cls.getRawClass();	  Type    bound    =    cls.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
225	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(type  instanceof  GenericArrayType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	add	if(type  instanceof  GenericArrayType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    toComponentType.equals(type))    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	compilable	  [FE]  AssertionError  	103	2	replace
226	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(type  instanceof  GenericArrayType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(type  instanceof  GenericArrayType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    toComponentType.equals(type))    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	compilable	  [FE]  AssertionError  	103	2	replace
227	[BUG]  [BUGGY]  Class  <?>  toComponentType  =  cls.isArray()  ||  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Class  <?>  toComponentType  =  cls.isArray()  ||  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Class  <?>  toComponentType  =  cls.isArray()  ||  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Type    bound    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	43	None	replace
228	[BUG]  [BUGGY]  Class  <?>  toComponentType  =  cls.isArray()  ||  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  Type  bound  =  toGenericArrayType.getRawClass();  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Class  <?>  toComponentType  =  cls.isArray()  ||  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  Type  bound  =  toGenericArrayType.getRawClass();  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Class  <?>  toComponentType  =  cls.isArray()  ||  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  Type  bound  =  toGenericArrayType.getRawClass();	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Type    bound    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	43	None	replace
229	[BUG]  [BUGGY]  return  toComponentType.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Type  bound  =  toGenericArrayType.getRawClass();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  toComponentType.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Type  bound  =  toGenericArrayType.getRawClass();  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toComponentType.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Type  bound  =  toGenericArrayType.getRawClass();	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Type    bound    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
230	[BUG]  [BUGGY]  if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  cls.isArray()  ||  isAssignable(cls.getComponentType()  [CE]  ')'  expected  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  cls.isArray()  ||  isAssignable(cls.getComponentType()  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  cls.isArray()  ||  isAssignable(cls.getComponentType()	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  ')'  expected	40	None	replace
231	[BUG]  [BUGGY]  if(toGenericArrayType!=  null)  {  return  toGenericArrayType.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(toGenericArrayType!=  null)  {  return  toGenericArrayType.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(toGenericArrayType!=  null)  {  return  toGenericArrayType.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
232	[BUG]  [BUGGY]  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  not  a  statement	40	None	replace
233	[BUG]  [BUGGY]  Constructor  <?>  bound  =  cls.getRawClass();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Constructor  <?>  bound  =  cls.getRawClass();  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Constructor  <?>  bound  =  cls.getRawClass();	  Constructor    <?>    bound    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
234	[BUG]  [BUGGY]  Constructor  <?>  bound  =  fromGenericArrayType.getRawClass();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Constructor  <?>  bound  =  fromGenericArrayType.getRawClass();  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Constructor  <?>  bound  =  fromGenericArrayType.getRawClass();	  Constructor    <?>    bound    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
235	[BUG]  [BUGGY]  if(type.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(type.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(type.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())    {    return    isAssigned(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
236	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType)  {  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(type  instanceof  GenericArrayType)  {  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(type  instanceof  GenericArrayType)  {  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    If(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
237	[BUG]  [BUGGY]  return  isAssignable(toComponentType.getDeclaredClass(),  cls,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(toComponentType.getDeclaredClass(),  cls,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  isAssignable(toComponentType.getDeclaredClass(),  cls,  typeVarAssigns);	  return    isAssignable(cls.getDeclaredClass(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
238	[BUG]  [BUGGY]  return  isAssignable(cls,  toComponentType.getDeclaredClass(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls,  toComponentType.getDeclaredClass(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  isAssignable(cls,  toComponentType.getDeclaredClass(),  toComponentType,  typeVarAssigns);	  return    isAssignable(cls.getDeclaredClass(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
239	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(toComponentType!=  null)  {  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	add	if(toComponentType!=  null)  {  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);  }	  return    isAssignable(cls.getClass(),    toComponentType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	107	2	replace
240	[BUG]  [BUGGY]  if(toComponentType!=  null)  {  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(toComponentType!=  null)  {  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(toComponentType!=  null)  {  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);  }	  return    isAssignable(cls.getClass(),    toComponentType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	107	2	replace
241	[BUG]  [BUGGY]  return  isAssignable(cls.getClass(),  toComponentType,  type);  [CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Type,Type)  [FE]      AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls.getClass(),  toComponentType,  type);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  isAssignable(cls.getClass(),  toComponentType,  type);	  return    isAssignable(cls.getClass(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Type,Type)	107	None	replace
242	[BUG]  [BUGGY]  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    isAssignable(cls.getComponentType(),    toGenericArrayType,    typeVarAssigns);    Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();	  	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	29	None	add
243	[BUG]  [BUGGY]  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  Class  <?>  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  Class  <?>  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    isAssignable(cls.getComponentType(),    toGenericArrayType,    typeVarAssigns);    Class  <?>  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();	  	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	29	None	add
244	[BUG]  [BUGGY]  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    isAssignable(cls.getComponentType(),    toGenericArrayType,    typeVarAssigns);    Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type);	  	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	29	None	add
245	[BUG]  [BUGGY]  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  &&  toGenericArrayType.equals(type))  {  return  true;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  &&  toGenericArrayType.equals(type))  {  return  true;  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    isAssignable(cls.getComponentType(),    toGenericArrayType,    typeVarAssigns);    &&  toGenericArrayType.equals(type))  {  return  true;	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
246	[BUG]  [BUGGY]  Type  toComponentType  =(toGenericArrayType!=  null)?  cls.getGenericComponentType()  :  type;  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toComponentType  =(toGenericArrayType!=  null)?  cls.getGenericComponentType()  :  type;  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =(toGenericArrayType!=  null)?  cls.getGenericComponentType()  :  type;	  Type    toComponentType    =(toGenericArrayType    ==    null)?    cls.getGenericComponentType()    :    type;    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	110	None	replace
247	[BUG]  [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  }	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	42	None	replace
248	[BUG]  [BUGGY]  if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  }	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	42	None	replace
249	[BUG]  [BUGGY]  return  toComponentType.getComponentType(),  isAssignable(toComponentType,  typeVarAssigns);  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  toComponentType.getComponentType(),  isAssignable(toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toComponentType.getComponentType(),  isAssignable(toComponentType,  typeVarAssigns);	  return    isAssignable(toComponentType.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  ';'  expected	28	None	replace
250	[BUG]  [BUGGY]  return  isAssignable(type.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(type.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  isAssignable(type.getComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(toComponentType.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
251	[BUG]  [BUGGY]  return  isAssignable(cls,  toComponentType.getGenericComponentType(),  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls,  toComponentType.getGenericComponentType(),  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  isAssignable(cls,  toComponentType.getGenericComponentType(),  typeVarAssigns);	  return    isAssignable(cls.getGenericComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
252	[BUG]  [BUGGY]  return  toGenericArrayType.isArray()  ||  isAssignable(cls,  type.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  toGenericArrayType.isArray()  ||  isAssignable(cls,  type.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toGenericArrayType.isArray()  ||  isAssignable(cls,  type.getComponentType(),  toComponentType,  typeVarAssigns);	  return    toGenericArrayType.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
253	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getDeclaredType(type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getDeclaredType(type);  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getDeclaredType(type);	  Type    toGenericArrayType    =    toGenericArrayType.getBounds();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	56	None	replace
254	[BUG]  [BUGGY]  Type  toComponentType  =  toComponentType.getGenericComponentType();  if(toGenericArrayType.equals(cls))  {  return  true;  }  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toComponentType  =  toComponentType.getGenericComponentType();  if(toGenericArrayType.equals(cls))  {  return  true;  }  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =  toComponentType.getGenericComponentType();  if(toGenericArrayType.equals(cls))  {  return  true;  }	  Type    toComponentType    =    type.getGenericComponentType();    if(toGenericArrayType.equals(cls))    {    return    true;    }    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	36	None	replace
255	[BUG]  [BUGGY]  Type  toGenericArrayType  =  types.getGenericArrayType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toGenericArrayType  =  types.getGenericArrayType();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  types.getGenericArrayType();	  Type    toGenericArrayType    =    types.getGenericConstructor();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	39	None	replace
256	[BUG]  [BUGGY]  if(toGenericArrayType!=  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Class  <?>  bound  =  toGenericArrayType.getRawClass();  return  is  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(toGenericArrayType!=  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Class  <?>  bound  =  toGenericArrayType.getRawClass();  return  is  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(toGenericArrayType!=  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Class  <?>  bound  =  toGenericArrayType.getRawClass();  return  is	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class    <?>    bound    =    toGenericArrayType.getRawClass();    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  ';'  expected	26	None	replace
257	[BUG]  [BUGGY]  &&  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns,  toComponentType);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns,  toComponentType);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns,  toComponentType);	  &&    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
258	[BUG]  [BUGGY]  Type  bound  =  cls,  toGenericArrayType.getRawClass();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  bound  =  cls,  toGenericArrayType.getRawClass();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  bound  =  cls,  toGenericArrayType.getRawClass();	  Type    bound    =    toGenericArrayType,    cls.getRawClass();    	non-compiled	[CE]  ';'  expected	96	None	replace
259	[BUG]  [BUGGY]  Type  bound  =  toGenericArrayType,  cls.getDeclaredType(type);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  bound  =  toGenericArrayType,  cls.getDeclaredType(type);  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  bound  =  toGenericArrayType,  cls.getDeclaredType(type);	  Type    bound    =    toGenericArrayType,    cls.getRawClass();    	non-compiled	[CE]  ';'  expected	96	None	replace
260	[BUG]  [BUGGY]  &&  isAssignable(cls.getGenericParameterType(),  toComponentType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  isAssignable(cls.getGenericParameterType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isAssignable(cls.getGenericParameterType(),  toComponentType,  typeVarAssigns);	  &&    isAssignable(cls.getGenericComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
261	[BUG]  [BUGGY]  &&  isAssignable(cls,  toComponentType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  isAssignable(cls,  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isAssignable(cls,  toComponentType,  typeVarAssigns);	  &&    isAssignable(cls.getGenericComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
262	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(toGenericArrayType  ==  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	add	if(toGenericArrayType  ==  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	22	2	replace
263	[BUG]  [BUGGY]  if(toGenericArrayType  ==  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(toGenericArrayType  ==  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(toGenericArrayType  ==  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	22	2	replace
264	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toComponentType.getGenericArrayType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toGenericArrayType  =  toComponentType.getGenericArrayType();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  toComponentType.getGenericArrayType();	  Type    toGenericArrayType    =    type.getGenericArrayType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	111	None	replace
265	[BUG]  [BUGGY]  return  toComponentType.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  bound  =  toGenericArrayType.getRawClass();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  toComponentType.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  bound  =  toGenericArrayType.getRawClass();  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toComponentType.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  bound  =  toGenericArrayType.getRawClass();	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class    <?>    bound    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
266	[BUG]  [BUGGY]  &&  isGenericArrayType(toComponentType.getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  isGenericArrayType(toComponentType.getGenericComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isGenericArrayType(toComponentType.getGenericComponentType(),  toComponentType,  typeVarAssigns);	  &&    isAssignable(toComponentType.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
267	[BUG]  [BUGGY]  Type  bound  =  cls!=  null?  toComponentType.getboundType()  :  cls;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  bound  =  cls!=  null?  toComponentType.getboundType()  :  cls;  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  bound  =  cls!=  null?  toComponentType.getboundType()  :  cls;	  Type    bound    =    cls.getboundType();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
268	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  if(toGenericArrayType.equals(type))  {  return  true;  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  if(toGenericArrayType.equals(type))  {  return  true;  }  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  if(toGenericArrayType.equals(type))  {  return  true;  }	  Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    if(toGenericArrayType.equals(type))    {    return    true;    }    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	88	None	replace
269	[BUG]  [BUGGY]  Type  toGenericArrayType  =  types.getRawClass();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toGenericArrayType  =  types.getRawClass();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  types.getRawClass();	  Type    toGenericArrayType    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	68	None	replace
270	[BUG]  [BUGGY]  if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  cls.isArray()  ||  isAssignable(cls.getCOMponentType()  [CE]  ')'  expected  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  cls.isArray()  ||  isAssignable(cls.getCOMponentType()  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  cls.isArray()  ||  isAssignable(cls.getCOMponentType()	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    cls.isArray()    ||    isAssignable(cls.getCOMponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  ')'  expected	100	None	replace
271	[BUG]  [BUGGY]  if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  cls.isArray()  ||  isAssignable(cls.getCOMponentType  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  cls.isArray()  ||  isAssignable(cls.getCOMponentType  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  cls.isArray()  ||  isAssignable(cls.getCOMponentType	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    cls.isArray()    ||    isAssignable(cls.getCOMponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  ')'  expected	100	None	replace
272	[BUG]  [BUGGY]  if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  cls.isArray()  ||  isAssignable(cls.getCOM  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  cls.isArray()  ||  isAssignable(cls.getCOM  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  cls.isArray()  ||  isAssignable(cls.getCOM	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    cls.isArray()    ||    isAssignable(cls.getCOMponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  ')'  expected	100	None	replace
273	[BUG]  [BUGGY]  if(cls!=  null)  {  Type  toComponentType  =  cls.getGenericComponentType();  if(toGenericArrayType.equals(type))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls!=  null)  {  Type  toComponentType  =  cls.getGenericComponentType();  if(toGenericArrayType.equals(type))  {  return  true;  }  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls!=  null)  {  Type  toComponentType  =  cls.getGenericComponentType();  if(toGenericArrayType.equals(type))  {  return  true;  }	  Type    toComponentType    =    cls.getGenericComponentType();    if(toGenericArrayType.equals(type))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
274	[BUG]  [BUGGY]  Type  bound  =  cls!=  null?  toComponentType.getBounds()  :  cls.getBounds();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  bound  =  cls!=  null?  toComponentType.getBounds()  :  cls.getBounds();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  bound  =  cls!=  null?  toComponentType.getBounds()  :  cls.getBounds();	  Type    bound    =    cls.getBounds();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
275	[BUG]  [BUGGY]  &&  toComponentType!=  null)  {  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toComponentType!=  null)  {  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toComponentType!=  null)  {  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  if(cls!=    null)    {    if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
276	[BUG]  [BUGGY]  &&  toGenericArrayType  ==  null)  {  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toGenericArrayType  ==  null)  {  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toGenericArrayType  ==  null)  {  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  if(cls!=    null)    {    if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
277	[BUG]  [BUGGY]  return  isAssignable(cls,  toComponentType,  typeVarAssigns,  toGenericArrayType);  [CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Type,Map<TypeVariable<?>,Type>,GenericArrayType)  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls,  toComponentType,  typeVarAssigns,  toGenericArrayType);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  isAssignable(cls,  toComponentType,  typeVarAssigns,  toGenericArrayType);	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Type,Map<TypeVariable<?>,Type>,GenericArrayType)	27	None	replace
278	[BUG]  [BUGGY]  return  toComponentType.isArray()  ||  isAssignable(cls,  toComponentType.getComponentType(),  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  toComponentType.isArray()  ||  isAssignable(cls,  toComponentType.getComponentType(),  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toComponentType.isArray()  ||  isAssignable(cls,  toComponentType.getComponentType(),  typeVarAssigns);	  return    toComponentType.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
279	[BUG]  [BUGGY]  return  toComponentType.isArray()  &&  isAssignable(toComponentType.getComponentType(),  type,  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  toComponentType.isArray()  &&  isAssignable(toComponentType.getComponentType(),  type,  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toComponentType.isArray()  &&  isAssignable(toComponentType.getComponentType(),  type,  toComponentType,  typeVarAssigns);	  return    toComponentType.isArray()    &&    isAssignable(toComponentType.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
280	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls!=  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	add	if(cls!=  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    toGenericArrayType.equals(type))    {    return    true;    }    	compilable	  [FE]  AssertionError  	74	2	replace
281	[BUG]  [BUGGY]  if(cls!=  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls!=  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls!=  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    toGenericArrayType.equals(type))    {    return    true;    }    	compilable	  [FE]  AssertionError  	74	2	replace
282	[BUG]  [BUGGY]  &&  isAssignable(cls.getGenericComponentType(),  toGenericArrayType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  isAssignable(cls.getGenericComponentType(),  toGenericArrayType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isAssignable(cls.getGenericComponentType(),  toGenericArrayType,  typeVarAssigns);	  &&    isAssignable(cls.getComponentType(),    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
283	[BUG]  [BUGGY]  &&  isAssignable(cls.getComponentType(),  toGenericArrayType,  type);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  isAssignable(cls.getComponentType(),  toGenericArrayType,  type);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isAssignable(cls.getComponentType(),  toGenericArrayType,  type);	  &&    isAssignable(cls.getComponentType(),    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
284	[BUG]  [BUGGY]  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    isAssignable(cls.getClass(),    toComponentType,    typeVarAssigns);    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();	  	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	106	None	add
285	[BUG]  [BUGGY]  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);  Class  <?>  toComponentType  =  toGenericArrayType.getGenericComponentType();  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);  Class  <?>  toComponentType  =  toGenericArrayType.getGenericComponentType();  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    isAssignable(cls.getClass(),    toComponentType,    typeVarAssigns);    Class  <?>  toComponentType  =  toGenericArrayType.getGenericComponentType();	  	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	106	None	add
286	[BUG]  [BUGGY]  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);  &&  toGenericArrayType.equals(type))  {  return  true;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);  &&  toGenericArrayType.equals(type))  {  return  true;  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    isAssignable(cls.getClass(),    toComponentType,    typeVarAssigns);    &&  toGenericArrayType.equals(type))  {  return  true;	  	non-compiled	[CE]  illegal  start  of  expression	106	None	add
287	[BUG]  [BUGGY]  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);  &&  toGenericArrayType.equals(type))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);  &&  toGenericArrayType.equals(type))  {  return  true;  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    isAssignable(cls.getClass(),    toComponentType,    typeVarAssigns);    &&  toGenericArrayType.equals(type))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	106	None	add
288	[BUG]  [BUGGY]  if(cls.isArray()  ||  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  Type  bound  =  toGenericArrayType.getBounds();  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray()  ||  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  Type  bound  =  toGenericArrayType.getBounds();  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray()  ||  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  Type  bound  =  toGenericArrayType.getBounds();	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Type    bound    =    toGenericArrayType.getBounds();    	non-compiled	[CE]  ')'  expected	101	None	replace
289	[BUG]  [BUGGY]  if(cls.isArray()  ||  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  Type  bound  =  toGenericArrayType.getBounds();  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray()  ||  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  Type  bound  =  toGenericArrayType.getBounds();  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray()  ||  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  Type  bound  =  toGenericArrayType.getBounds();  }	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Type    bound    =    toGenericArrayType.getBounds();    	non-compiled	[CE]  ')'  expected	101	None	replace
290	[BUG]  [BUGGY]  if(cls.getComponentType()!=  toComponentType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  bound  =  toGenericArrayType.getRawClass();  }  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.getComponentType()!=  toComponentType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  bound  =  toGenericArrayType.getRawClass();  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.getComponentType()!=  toComponentType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  bound  =  toGenericArrayType.getRawClass();  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class    <?>    bound    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
291	[BUG]  [BUGGY]  return  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  bound  =  toGenericArrayType.getRawClass();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  bound  =  toGenericArrayType.getRawClass();  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  bound  =  toGenericArrayType.getRawClass();	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class    <?>    bound    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
292	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(toGenericArrayType!=  null)  {  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	add	if(toGenericArrayType!=  null)  {  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  }	  return    isAssignable(cls.getComponentType(),    toGenericArrayType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	30	2	replace
293	[BUG]  [BUGGY]  if(toGenericArrayType!=  null)  {  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(toGenericArrayType!=  null)  {  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(toGenericArrayType!=  null)  {  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  }	  return    isAssignable(cls.getComponentType(),    toGenericArrayType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	30	2	replace
294	[BUG]  [BUGGY]  Type  toGenericArrayType  =  cls.getGenericRawClass();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toGenericArrayType  =  cls.getGenericRawClass();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  cls.getGenericRawClass();	  Type    toGenericArrayType    =    cls.getRawClass();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	15	None	replace
295	[BUG]  [BUGGY]  &&  isGenericArrayType(cls.getComponentType(),  toComponentType,  typesVarAssigns);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  isGenericArrayType(cls.getComponentType(),  toComponentType,  typesVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isGenericArrayType(cls.getComponentType(),  toComponentType,  typesVarAssigns);	  &&    isGenericArrayType(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
296	[BUG]  [BUGGY]  &&  isGenericArrayType(cls.getComponentType(),  toComponentType,  types);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  isGenericArrayType(cls.getComponentType(),  toComponentType,  types);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isGenericArrayType(cls.getComponentType(),  toComponentType,  types);	  &&    isGenericArrayType(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
297	[BUG]  [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  }  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  }	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Type    toComponentType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	76	None	replace
298	[BUG]  [BUGGY]  if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  }  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  }	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Type    toComponentType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	76	None	replace
299	[BUG]  [BUGGY]  if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Type  toComponentType  =  toGenericArrayType.getGenericComponentType()  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Type  toComponentType  =  toGenericArrayType.getGenericComponentType()  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Type  toComponentType  =  toGenericArrayType.getGenericComponentType()	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Type    toComponentType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  ';'  expected	76	None	replace
300	[BUG]  [BUGGY]  return  type.isAssignable()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  type.isAssignable()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  type.isAssignable()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);	  return    cls.isAssignable()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
301	[BUG]  [BUGGY]  Class  <?>  bound  =  toGenericArrayType,  cls.getParameterType(0);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Class  <?>  bound  =  toGenericArrayType,  cls.getParameterType(0);  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Class  <?>  bound  =  toGenericArrayType,  cls.getParameterType(0);	  Class    <?>    bound    =    toGenericArrayType,    cls.getRawClass();    	non-compiled	[CE]  ';'  expected	97	None	replace
302	[BUG]  [BUGGY]  Class  <?>  bound  =  toGenericArrayType,  cls.getDeclaredClass();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Class  <?>  bound  =  toGenericArrayType,  cls.getDeclaredClass();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Class  <?>  bound  =  toGenericArrayType,  cls.getDeclaredClass();	  Class    <?>    bound    =    toGenericArrayType,    cls.getRawClass();    	non-compiled	[CE]  ';'  expected	97	None	replace
303	[BUG]  [BUGGY]  Type  bound  =  toGeometricArrayType.getBounds();  [CE]  cannot  find  symbol  toGeometricArrayType  [FE]                  AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  bound  =  toGeometricArrayType.getBounds();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  bound  =  toGeometricArrayType.getBounds();	  Type    bound    =    type.getBounds();    	non-compiled	[CE]  cannot  find  symbol  toGeometricArrayType	55	None	replace
304	[BUG]  [BUGGY]  &&  toGenericArrayType!=  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toGenericArrayType!=  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toGenericArrayType!=  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
305	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toComponentType.getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toGenericArrayType  =  toComponentType.getGenericComponentType();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  toComponentType.getGenericComponentType();	  Type    toGenericArrayType    =    type.getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	2	None	replace
306	[BUG]  [BUGGY]  Type  bound  toComponentType  =  cls.getGenericComponentType();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  bound  toComponentType  =  cls.getGenericComponentType();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  bound  toComponentType  =  cls.getGenericComponentType();	  Type    bound    toComponentType    =    cls.getRawClass();    	non-compiled	[CE]  ';'  expected	10	None	replace
307	[BUG]  [BUGGY]  Type  toComponentType  =  types.getGenericComponentType(cls);  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toComponentType  =  types.getGenericComponentType(cls);  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =  types.getGenericComponentType(cls);	  Type    toComponentType    =    types.getGenericComponentType();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	87	None	replace
308	[BUG]  [BUGGY]  &&  isAssignable(cls,  type.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  isAssignable(cls,  type.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isAssignable(cls,  type.getComponentType(),  toComponentType,  typeVarAssigns);	  return    toComponentType.isArray()    &&    isAssignable(cls,    type.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
309	[BUG]  [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  toComponentType  =  toGenericArrayType.getGenericComponentType();  }  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  toComponentType  =  toGenericArrayType.getGenericComponentType();  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  toComponentType  =  toGenericArrayType.getGenericComponentType();  }	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class    <?>    toComponentType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	77	None	replace
310	[BUG]  [BUGGY]  if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  toComponentType  =  toGenericArrayType.getGen  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  toComponentType  =  toGenericArrayType.getGen  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  toComponentType  =  toGenericArrayType.getGen	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class    <?>    toComponentType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  ';'  expected	77	None	replace
311	[BUG]  [BUGGY]  if(toComponentType!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  toComponentType  =  toGenericArrayType.getGen  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(toComponentType!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  toComponentType  =  toGenericArrayType.getGen  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(toComponentType!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  toComponentType  =  toGenericArrayType.getGen	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class    <?>    toComponentType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  ';'  expected	77	None	replace
312	[BUG]  [BUGGY]  Type  bound  =  toGericArrayType.getboundType();  [CE]  cannot  find  symbol  toGericArrayType  [FE]                    AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  bound  =  toGericArrayType.getboundType();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  bound  =  toGericArrayType.getboundType();	  Type    bound    =    type.getboundType();    	non-compiled	[CE]  cannot  find  symbol  toGericArrayType	8	None	replace
313	[BUG]  [BUGGY]  if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  cls  =  toGenericArrayType.getClass();  }  [CE]  variable  cls  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  cls  =  toGenericArrayType.getClass();  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  cls  =  toGenericArrayType.getClass();  }	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class    <?>    cls    =    toGenericArrayType.getClass();    	non-compiled	[CE]  variable  cls  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	44	None	replace
314	[BUG]  [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  cls  =  toGenericArrayType.getClass();  }  [CE]  variable  cls  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  cls  =  toGenericArrayType.getClass();  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  cls  =  toGenericArrayType.getClass();  }	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class    <?>    cls    =    toGenericArrayType.getClass();    	non-compiled	[CE]  variable  cls  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	44	None	replace
315	[BUG]  [BUGGY]  if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  cls  =  toGenericArrayType.getClass()  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  cls  =  toGenericArrayType.getClass()  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  cls  =  toGenericArrayType.getClass()	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class    <?>    cls    =    toGenericArrayType.getClass();    	non-compiled	[CE]  ';'  expected	44	None	replace
316	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType)  {  if(isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(type  instanceof  GenericArrayType)  {  if(isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(type  instanceof  GenericArrayType)  {  if(isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  if(cls!=    null)    {    if(isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns))    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
317	[BUG]  [BUGGY]  &&  toGenericArrayType!=  null)  {  if(isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns))  {  return  isAssignable(cls.getComponentType(),  toCom  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toGenericArrayType!=  null)  {  if(isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns))  {  return  isAssignable(cls.getComponentType(),  toCom  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toGenericArrayType!=  null)  {  if(isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns))  {  return  isAssignable(cls.getComponentType(),  toCom	  if(cls!=    null)    {    if(isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns))    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
318	[BUG]  [BUGGY]  if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  cls  =  toGenericArrayType.getRa  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  cls  =  toGenericArrayType.getRa  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  cls  =  toGenericArrayType.getRa	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class    <?>    cls    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  ';'  expected	41	None	replace
319	[BUG]  [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  cls  =  toGenericArrayType.getRawClass();  }  [CE]  variable  cls  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  cls  =  toGenericArrayType.getRawClass();  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  cls  =  toGenericArrayType.getRawClass();  }	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class    <?>    cls    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  variable  cls  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	41	None	replace
320	[BUG]  [BUGGY]  if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  cls  =  toGenericArrayType.getRawClass()  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  cls  =  toGenericArrayType.getRawClass()  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  cls  =  toGenericArrayType.getRawClass()	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class    <?>    cls    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  ';'  expected	41	None	replace
321	[BUG]  [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Class  <?>  toComponentType  =  toGenericArrayType.getGenericComponentType();  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Class  <?>  toComponentType  =  toGenericArrayType.getGenericComponentType();  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Class  <?>  toComponentType  =  toGenericArrayType.getGenericComponentType();	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class    <?>    toComponentType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
322	[BUG]  [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Class  <?>  toComponentType  =  toGenericArrayType.getGenericComponentType()  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Class  <?>  toComponentType  =  toGenericArrayType.getGenericComponentType()  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  Class  <?>  toComponentType  =  toGenericArrayType.getGenericComponentType()	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class    <?>    toComponentType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  ';'  expected	77	None	replace
323	[BUG]  [BUGGY]  &&  toComponentType!=  null)  {  if(isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toComponentType!=  null)  {  if(isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toComponentType!=  null)  {  if(isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns))  {  return  isAssignable(cls.getComponentType(),  toComponentType,	  if(cls!=    null)    {    if(isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns))    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
324	[BUG]  [BUGGY]  return  isAssignable(toGenericArrayType.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  bound  =  toGenericArrayType.getRawClass();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(toGenericArrayType.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  bound  =  toGenericArrayType.getRawClass();  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  isAssignable(toGenericArrayType.getComponentType(),  toComponentType,  typeVarAssigns);  Class  <?>  bound  =  toGenericArrayType.getRawClass();	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class    <?>    bound    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
325	[BUG]  [BUGGY]  return  isAssignable(cls.getClass(),  toComponentType,  toGenericArrayType,  typeVarAssigns);  [CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls.getClass(),  toComponentType,  toGenericArrayType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  isAssignable(cls.getClass(),  toComponentType,  toGenericArrayType,  typeVarAssigns);	  return    isAssignable(cls.getClass(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Type,GenericArrayType,Map<TypeVariable<?>,Type>)	107	None	replace
326	[BUG]  [BUGGY]  return  isAssignable(cls.getClass(),  toComponentType,  toGenericArrayType);  [CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Type,GenericArrayType)  [FE]      AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls.getClass(),  toComponentType,  toGenericArrayType);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  isAssignable(cls.getClass(),  toComponentType,  toGenericArrayType);	  return    isAssignable(cls.getClass(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Type,GenericArrayType)	107	None	replace
327	[BUG]  [BUGGY]  &&  type  instanceof  GenericArrayType)  {  if(cls!=  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  type  instanceof  GenericArrayType)  {  if(cls!=  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  type  instanceof  GenericArrayType)  {  if(cls!=  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  if(cls!=    null)    {    if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
328	[BUG]  [BUGGY]  Type  toGenericArrayType  =  cls.getGenericParameterType(1);  if(toGenericArrayType!=  null)  {  return  false;  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toGenericArrayType  =  cls.getGenericParameterType(1);  if(toGenericArrayType!=  null)  {  return  false;  }  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  cls.getGenericParameterType(1);  if(toGenericArrayType!=  null)  {  return  false;  }	  Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(0);    if(toGenericArrayType!=    null)    {    return    false;    }    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	79	None	replace
329	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(toComponentType  instanceof  GenericArrayType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	add	if(toComponentType  instanceof  GenericArrayType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	22	2	replace
330	[BUG]  [BUGGY]  if(toComponentType  instanceof  GenericArrayType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(toComponentType  instanceof  GenericArrayType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(toComponentType  instanceof  GenericArrayType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	22	2	replace
331	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(toComponentType  instanceof  Class  <?>)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	add	if(toComponentType  instanceof  Class  <?>)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	22	2	replace
332	[BUG]  [BUGGY]  if(toComponentType  instanceof  Class  <?>)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(toComponentType  instanceof  Class  <?>)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(toComponentType  instanceof  Class  <?>)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	22	2	replace
333	[BUG]  [BUGGY]  &&  cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())    {    return    isAssigned(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
334	[BUG]  [BUGGY]  &&  isAssignable(cls.getDeclaredClass(),  toComponentType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  isAssignable(cls.getDeclaredClass(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isAssignable(cls.getDeclaredClass(),  toComponentType,  typeVarAssigns);	  &&    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
335	[BUG]  [BUGGY]  Class  <?>  bound  =  cls,  toComponentType.getRawClass();  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Class  <?>  bound  =  cls,  toComponentType.getRawClass();  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Class  <?>  bound  =  cls,  toComponentType.getRawClass();	  Class    <?>    bound    =    cls.getRawClass();    	non-compiled	[CE]  ';'  expected	92	None	replace
336	[BUG]  [BUGGY]  Class  <?>  bound  =  cls,  type.getRawClass();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Class  <?>  bound  =  cls,  type.getRawClass();  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Class  <?>  bound  =  cls,  type.getRawClass();	  Class    <?>    bound    =    cls.getRawClass();    	non-compiled	[CE]  ';'  expected	92	None	replace
337	[BUG]  [BUGGY]  if(cls.isArray())  {  Type  toGenericArrayType  =  cls.getGenericComponentType();  if(toGenericArrayType!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())  {  Type  toGenericArrayType  =  cls.getGenericComponentType();  if(toGenericArrayType!=  null)  {  return  false;  }  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())  {  Type  toGenericArrayType  =  cls.getGenericComponentType();  if(toGenericArrayType!=  null)  {  return  false;  }	  Type    toGenericArrayType    =    cls.getGenericComponentType();    if(toGenericArrayType!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
338	[BUG]  [BUGGY]  Type  bound  =  cls,  toComponentType.getBounds();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  bound  =  cls,  toComponentType.getBounds();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  bound  =  cls,  toComponentType.getBounds();	  Type    bound    =    cls.getBounds();    	non-compiled	[CE]  ';'  expected	54	None	replace
339	[BUG]  [BUGGY]  Type  toComponentType  =  cls.getGenericComponentType();  if(toGenericArrayType  ==  null)  {  return  false;  }  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toComponentType  =  cls.getGenericComponentType();  if(toGenericArrayType  ==  null)  {  return  false;  }  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =  cls.getGenericComponentType();  if(toGenericArrayType  ==  null)  {  return  false;  }	  Type    toGenericArrayType    =    cls.getGenericComponentType();    if(toGenericArrayType    ==    null)    {    return    false;    }    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	53	None	replace
340	[BUG]  [BUGGY]  &&  toComponentType!=  null  &&  isAssignable(cls.getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toComponentType!=  null  &&  isAssignable(cls.getGenericComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toComponentType!=  null  &&  isAssignable(cls.getGenericComponentType(),  toComponentType,  typeVarAssigns);	  &&    isAssignable(cls.getGenericComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
341	[BUG]  [BUGGY]  &&  isAssignable(cls.getGenericComponentType(),  toComponentType,  typeVarAssigns,  toComponentType);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  isAssignable(cls.getGenericComponentType(),  toComponentType,  typeVarAssigns,  toComponentType);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isAssignable(cls.getGenericComponentType(),  toComponentType,  typeVarAssigns,  toComponentType);	  &&    isAssignable(cls.getGenericComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
342	[BUG]  [BUGGY]  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  toComponentType);  [CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Type,Map<TypeVariable<?>,Type>,GenericArrayType,Type)  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  toComponentType);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  toComponentType);	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Type,Map<TypeVariable<?>,Type>,GenericArrayType,Type)	27	None	replace
343	[BUG]  [BUGGY]  return  toGenericArrayType.isArray()  ||  isAssignable(cls,  cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  toGenericArrayType.isArray()  ||  isAssignable(cls,  cls.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toGenericArrayType.isArray()  ||  isAssignable(cls,  cls.getComponentType(),  toComponentType,  typeVarAssigns);	  return    toGenericArrayType.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
344	[BUG]  [BUGGY]  if(cls.isArray())  {  Type  toComponentType  =  cls.getGenericComponentType();  if(toGenericArrayType.equals(cls))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())  {  Type  toComponentType  =  cls.getGenericComponentType();  if(toGenericArrayType.equals(cls))  {  return  true;  }  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())  {  Type  toComponentType  =  cls.getGenericComponentType();  if(toGenericArrayType.equals(cls))  {  return  true;  }	  Type    toComponentType    =    cls.getGenericComponentType();    if(toGenericArrayType.equals(cls))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
345	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  Type  toComponentType  =  cls.getGenericComponentType();  if(toGenericArrayType.equals(cls))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(type  instanceof  Class  <?>)  {  Type  toComponentType  =  cls.getGenericComponentType();  if(toGenericArrayType.equals(cls))  {  return  true;  }  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(type  instanceof  Class  <?>)  {  Type  toComponentType  =  cls.getGenericComponentType();  if(toGenericArrayType.equals(cls))  {  return  true;  }	  Type    toComponentType    =    cls.getGenericComponentType();    if(toGenericArrayType.equals(cls))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
346	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.getComponentType()!=  toComponentType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	add	if(cls.getComponentType()!=  toComponentType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Type    toComponentType    =    toGenericArrayType.getGenericComponentType();    	compilable	  [FE]  AssertionError  	72	2	replace
347	[BUG]  [BUGGY]  if(cls.getComponentType()!=  toComponentType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.getComponentType()!=  toComponentType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.getComponentType()!=  toComponentType)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Type    toComponentType    =    toGenericArrayType.getGenericComponentType();    	compilable	  [FE]  AssertionError  	72	2	replace
348	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(1);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(1);  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(1);	  Type    toGenericArrayType    =    type.getGenericParameterType(0);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	58	None	replace
349	[BUG]  [BUGGY]  return  toGenericArrayType.isArray()  &&  isAssignable(cls,  toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  toGenericArrayType.isArray()  &&  isAssignable(cls,  toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toGenericArrayType.isArray()  &&  isAssignable(cls,  toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);	  return    toGenericArrayType.isArray()    &&    isAssignable(cls,    type.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
350	[BUG]  [BUGGY]  &&  isAssignable(cls,  toComponentType.getComponentType(),  toGenericArrayType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  isAssignable(cls,  toComponentType.getComponentType(),  toGenericArrayType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isAssignable(cls,  toComponentType.getComponentType(),  toGenericArrayType,  typeVarAssigns);	  return    toGenericArrayType.isArray()    &&    isAssignable(cls,    type.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
351	[BUG]  [BUGGY]  &&  toGenericArrayType.equals(cls.getComponentType()))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toGenericArrayType.equals(cls.getComponentType()))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toGenericArrayType.equals(cls.getComponentType()))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    toGenericArrayType.equals(type))    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
352	[BUG]  [BUGGY]  if(cls.isArray())  {  Type  toGenericArrayType  =  cls.getGenericComponentType();  if(toGenericArrayType.equals(type))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())  {  Type  toGenericArrayType  =  cls.getGenericComponentType();  if(toGenericArrayType.equals(type))  {  return  true;  }  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())  {  Type  toGenericArrayType  =  cls.getGenericComponentType();  if(toGenericArrayType.equals(type))  {  return  true;  }	  Type    toGenericArrayType    =    cls.getGenericComponentType();    if(toGenericArrayType.equals(type))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
353	[BUG]  [BUGGY]  &&  toGenericArrayType.isAssignableFrom(cls))  {  return  true;  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toGenericArrayType.isAssignableFrom(cls))  {  return  true;  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toGenericArrayType.isAssignableFrom(cls))  {  return  true;	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    toGenericArrayType.equals(type))    {    return    true;    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
354	[BUG]  [BUGGY]  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if(toGenericArrayType.equals(type))  {  return  true;  }  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if(toGenericArrayType.equals(type))  {  return  true;  }  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if(toGenericArrayType.equals(type))  {  return  true;  }	  Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    if(toGenericArrayType.equals(type))    {    return    true;    }    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	88	None	replace
355	[BUG]  [BUGGY]  return  toComponentType.isArray()  ||  isAssignable(cls,  cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  toComponentType.isArray()  ||  isAssignable(cls,  cls.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toComponentType.isArray()  ||  isAssignable(cls,  cls.getComponentType(),  toComponentType,  typeVarAssigns);	  return    toComponentType.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
356	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	add	if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class    <?>    cls    =    toGenericArrayType.getRawClass();    	compilable	  [FE]  AssertionError  	41	2	replace
357	[BUG]  [BUGGY]  if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls!=  null)  {  return  cls.isArray()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Class    <?>    cls    =    toGenericArrayType.getRawClass();    	compilable	  [FE]  AssertionError  	41	2	replace
358	[BUG]  [BUGGY]  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  &&  toGenericArrayType.equals(type))  {  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  &&  toGenericArrayType.equals(type))  {  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    isAssignable(cls.getComponentType(),    toGenericArrayType,    typeVarAssigns);    &&  toGenericArrayType.equals(type))  {  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
359	[BUG]  [BUGGY]  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  &&  toGenericArrayType.getGenericComponentType()  instanceof  Class  <?>)  {  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  &&  toGenericArrayType.getGenericComponentType()  instanceof  Class  <?>)  {  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    isAssignable(cls.getComponentType(),    toGenericArrayType,    typeVarAssigns);    &&  toGenericArrayType.getGenericComponentType()  instanceof  Class  <?>)  {  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
360	[BUG]  [BUGGY]  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  &&  toGenericArrayType.equals(type))  {  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  &&  toGenericArrayType.equals(type))  {  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    isAssignable(cls.getComponentType(),    toGenericArrayType,    typeVarAssigns);    &&  toGenericArrayType.equals(type))  {  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  }	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
361	[BUG]  [BUGGY]  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  &&  toGenericArrayType.getGenericComponentType()  instanceof  Class  <?>)  {  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  &&  toGenericArrayType.getGenericComponentType()  instanceof  Class  <?>)  {  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    isAssignable(cls.getComponentType(),    toGenericArrayType,    typeVarAssigns);    &&  toGenericArrayType.getGenericComponentType()  instanceof  Class  <?>)  {  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  typeVarAssigns);  }	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
362	[BUG]  [BUGGY]  Constructor  <?>  bound  =  toGenericArrayType,  cls.getRawClass();  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Constructor  <?>  bound  =  toGenericArrayType,  cls.getRawClass();  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Constructor  <?>  bound  =  toGenericArrayType,  cls.getRawClass();	  Constructor    <?>    bound    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  ';'  expected	46	None	replace
363	[BUG]  [BUGGY]  Type  toGenericArrayType  =(toGenericArrayType  ==  null)?  null  :  toGenericArrayType.getRawClass();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toGenericArrayType  =(toGenericArrayType  ==  null)?  null  :  toGenericArrayType.getRawClass();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =(toGenericArrayType  ==  null)?  null  :  toGenericArrayType.getRawClass();	  Type    toGenericArrayType    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	68	None	replace
364	[BUG]  [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getCOMponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getCOMponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())  {  return  isAssignable(cls.getCOMponentType(),  toComponentType,  typeVarAssigns);  }	  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())    {    return    isAssignable(cls.getCOMponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
365	[BUG]  [BUGGY]  &&  isAssignable(cls,  toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  isAssignable(cls,  toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isAssignable(cls,  toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);	  return    toComponentType.isArray()    &&    isAssignable(cls,    type.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
366	[BUG]  [BUGGY]  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  toVarAssigns);  [CE]  cannot  find  symbol  toVarAssigns  [FE]    AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls.getComponentType(),  toGenericArrayType,  toVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  isAssignable(cls.getComponentType(),  toGenericArrayType,  toVarAssigns);	  return    isAssignable(cls.getComponentType(),    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  toVarAssigns	30	None	replace
367	[BUG]  [BUGGY]  &&  isAssignable(toComponentType.getSimpleName(),  toComponentType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  isAssignable(toComponentType.getSimpleName(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isAssignable(toComponentType.getSimpleName(),  toComponentType,  typeVarAssigns);	  &&    isAssignable(toComponentType.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
368	[BUG]  [BUGGY]  &&  isAssignable(toComponentType.getGenericParameterType(),  toComponentType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  isAssignable(toComponentType.getGenericParameterType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isAssignable(toComponentType.getGenericParameterType(),  toComponentType,  typeVarAssigns);	  &&    isAssignable(toComponentType.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
369	[BUG]  [BUGGY]  cls.isArray()  ||  isAssignable(cls.getCOMponentType(),  toComponentType,  typeVarAssigns);  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  cls.isArray()  ||  isAssignable(cls.getCOMponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	cls.isArray()  ||  isAssignable(cls.getCOMponentType(),  toComponentType,  typeVarAssigns);	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    cls.isArray()    ||    isAssignable(cls.getCOMponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  not  a  statement	100	None	replace
370	[BUG]  [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  cls.isArray()  ||  isAssignable(cls.getCOMponentType()  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  cls.isArray()  ||  isAssignable(cls.getCOMponentType()  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  cls.isArray()  ||  isAssignable(cls.getCOMponentType()	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    cls.isArray()    ||    isAssignable(cls.getCOMponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  ')'  expected	100	None	replace
371	[BUG]  [BUGGY]  return  isAssignable(toComponentType,  cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  no  suitable  method  found  for  isAssignable(Type,Class<CAP#1>,Type,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(toComponentType,  cls.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  isAssignable(toComponentType,  cls.getComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(toComponentType.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Class<CAP#1>,Type,Map<TypeVariable<?>,Type>)	28	None	replace
372	[BUG]  [BUGGY]  return  isAssignable(toComponentType,  toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(toComponentType,  toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  isAssignable(toComponentType,  toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(toComponentType.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
373	[BUG]  [BUGGY]  if(cls.isArray())  {  Type  toComponentType  =  cls.getGenericComponentType();  if(toGenericArrayType!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())  {  Type  toComponentType  =  cls.getGenericComponentType();  if(toGenericArrayType!=  null)  {  return  false;  }  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())  {  Type  toComponentType  =  cls.getGenericComponentType();  if(toGenericArrayType!=  null)  {  return  false;  }	  Type    toComponentType    =    cls.getGenericComponentType();    if(toGenericArrayType!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
374	[BUG]  [BUGGY]  if(cls!=  null)  {  Type  toComponentType  =  cls.getGenericComponentType();  if(toGenericArrayType!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls!=  null)  {  Type  toComponentType  =  cls.getGenericComponentType();  if(toGenericArrayType!=  null)  {  return  false;  }  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls!=  null)  {  Type  toComponentType  =  cls.getGenericComponentType();  if(toGenericArrayType!=  null)  {  return  false;  }	  Type    toComponentType    =    cls.getGenericComponentType();    if(toGenericArrayType!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
375	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toComponentType.getGenericConstructor();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toGenericArrayType  =  toComponentType.getGenericConstructor();  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toGenericArrayType  =  toComponentType.getGenericConstructor();	  Type    toGenericArrayType    =    type.getGenericConstructor();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	38	None	replace
376	[BUG]  [BUGGY]  return  isAssignable(cls.getGenericComponentType(),  toComponentType,  typeVarAssigns,  toComponentType);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls.getGenericComponentType(),  toComponentType,  typeVarAssigns,  toComponentType);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  isAssignable(cls.getGenericComponentType(),  toComponentType,  typeVarAssigns,  toComponentType);	  return    isAssignable(cls.getGenericComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
377	[BUG]  [BUGGY]  if(cls.isArray()  ||  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  Type  bound  =  toGenericArrayType.getRawClass();  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray()  ||  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  Type  bound  =  toGenericArrayType.getRawClass();  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray()  ||  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  Type  bound  =  toGenericArrayType.getRawClass();	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    Type    bound    =    toGenericArrayType.getRawClass();    	non-compiled	[CE]  ')'  expected	43	None	replace
378	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  Type  toGenericArrayType  =  type.getGenericComponentType();  if(toGenericArrayType.equals(cls))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(type  instanceof  Class  <?>)  {  Type  toGenericArrayType  =  type.getGenericComponentType();  if(toGenericArrayType.equals(cls))  {  return  true;  }  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(type  instanceof  Class  <?>)  {  Type  toGenericArrayType  =  type.getGenericComponentType();  if(toGenericArrayType.equals(cls))  {  return  true;  }	  Type    toGenericArrayType    =    type.getGenericComponentType();    if(toGenericArrayType.equals(cls))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
379	[BUG]  [BUGGY]  return  toGenericArrayType.isArray()  &&  isAssignable(toComponentType,  cls.getComponentType(),  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  toGenericArrayType.isArray()  &&  isAssignable(toComponentType,  cls.getComponentType(),  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  toGenericArrayType.isArray()  &&  isAssignable(toComponentType,  cls.getComponentType(),  typeVarAssigns);	  return    toGenericArrayType.isArray()    &&    isAssignable(cls,    toComponentType.getComponentType(),    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
380	[BUG]  [BUGGY]  Type  toComponentType  =(toComponentType  ==  null)?  type.getGenericComponentType()  :  cls;  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toComponentType  =(toComponentType  ==  null)?  type.getGenericComponentType()  :  cls;  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =(toComponentType  ==  null)?  type.getGenericComponentType()  :  cls;	  Type    toComponentType    =    type.getGenericComponentType();    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	20	None	replace
381	[BUG]  [BUGGY]  &&  toComponentType.equals(cls.getComponentType()))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toComponentType.equals(cls.getComponentType()))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toComponentType.equals(cls.getComponentType()))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    toComponentType.equals(type))    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
382	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(toComponentType.equals(cls))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	add	if(toComponentType.equals(cls))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    toComponentType.equals(type))    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	compilable	  [FE]  AssertionError  	103	2	replace
383	[BUG]  [BUGGY]  if(toComponentType.equals(cls))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(toComponentType.equals(cls))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(toComponentType.equals(cls))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    toComponentType.equals(type))    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	compilable	  [FE]  AssertionError  	103	2	replace
384	[BUG]  [BUGGY]  &&  toComponentType!=  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toComponentType!=  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toComponentType!=  null)  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }	  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
385	[BUG]  [BUGGY]  Type  toComponentType  =  cls.getGenericComponentType(),  type);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  Type  toComponentType  =  cls.getGenericComponentType(),  type);  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	Type  toComponentType  =  cls.getGenericComponentType(),  type);	  Type    toComponentType    =    toGenericArrayType.getGenericComponentType(),    cls);    	non-compiled	[CE]  ';'  expected	21	None	replace
386	[BUG]  [BUGGY]  &&  toComponentType.equals(cls.getComponentType()))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toComponentType.equals(cls.getComponentType()))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toComponentType.equals(cls.getComponentType()))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    toComponentType.equals(type))    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
387	[BUG]  [BUGGY]  return  cls.isAssignable()  ||  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  cls.isAssignable()  ||  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  cls.isAssignable()  ||  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);	  return    cls.isAssignable()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
388	[BUG]  [BUGGY]  return  typeVarAssigns.isAssignable()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  typeVarAssigns.isAssignable()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return  typeVarAssigns.isAssignable()  ||  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);	  return    cls.isAssignable()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
389	[BUG]  [BUGGY]  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);  &&  toComponentType.equals(type))  {  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);  &&  toComponentType.equals(type))  {  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);  }  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    isAssignable(cls.getClass(),    toComponentType,    typeVarAssigns);    &&  toComponentType.equals(type))  {  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);  }	  	non-compiled	[CE]  illegal  start  of  expression	106	None	add
390	[BUG]  [BUGGY]  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);  &&  toComponentType.equals(type))  {  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);  &&  toComponentType.equals(type))  {  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    isAssignable(cls.getClass(),    toComponentType,    typeVarAssigns);    &&  toComponentType.equals(type))  {  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);	  	non-compiled	[CE]  illegal  start  of  expression	106	None	add
391	[BUG]  [BUGGY]  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);  &&  toComponentType.getGenericComponentType()  ==  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  return  isAssignable(cls.getClass(),  toComponentType,  typeVarAssigns);  &&  toComponentType.getGenericComponentType()  ==  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	return    isAssignable(cls.getClass(),    toComponentType,    typeVarAssigns);    &&  toComponentType.getGenericComponentType()  ==  typeVarAssigns);	  	non-compiled	[CE]  illegal  start  of  expression	106	None	add
392	[BUG]  [BUGGY]  &&  isAssignable(cls,  toComponentType.getComponentType(),  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  isAssignable(cls,  toComponentType.getComponentType(),  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isAssignable(cls,  toComponentType.getComponentType(),  typeVarAssigns);	  return    toComponentType.isArray()    &&    isAssignable(cls,    toComponentType.getComponentType(),    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
393	[BUG]  [BUGGY]  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  [CE]  '('  expected  [FE]    AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())        {        return        isAssignable(cls.getComponentType(),        toComponentType,        typeVarAssigns);        }        if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if	  	non-compiled	[CE]  '('  expected	62	None	add
394	[BUG]  [BUGGY]  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())        {        return        isAssignable(cls.getComponentType(),        toComponentType,        typeVarAssigns);        }        if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType	  	non-compiled	[CE]  ')'  expected	62	None	add
395	[BUG]  [BUGGY]  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())        {        return        isAssignable(cls.getComponentType(),        toComponentType,        typeVarAssigns);        }        if(cls.isArray())    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    }    if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
396	[BUG]  [BUGGY]  if(cls.isArray())  {  Type  toGenericArrayType  =  cls.getGenericComponentType();  if(toGenericArrayType.equals(cls))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())  {  Type  toGenericArrayType  =  cls.getGenericComponentType();  if(toGenericArrayType.equals(cls))  {  return  true;  }  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())  {  Type  toGenericArrayType  =  cls.getGenericComponentType();  if(toGenericArrayType.equals(cls))  {  return  true;  }	  Type    toGenericArrayType    =    cls.getGenericComponentType();    if(toGenericArrayType.equals(cls))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
397	[BUG]  [BUGGY]  &&  toGenericArrayType.equals(cls.getComponentType()))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  toGenericArrayType.equals(cls.getComponentType()))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  toGenericArrayType.equals(cls.getComponentType()))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    &&    toGenericArrayType.equals(type))    {    return    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
398	[BUG]  [BUGGY]  if(cls.isArray())  {  Type  toComponentType  =  cls.getGenericComponentType();  if(toGenericArrayType.equals(type))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())  {  Type  toComponentType  =  cls.getGenericComponentType();  if(toGenericArrayType.equals(type))  {  return  true;  }  [BUGGY]      return  cls.isArray()      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())  {  Type  toComponentType  =  cls.getGenericComponentType();  if(toGenericArrayType.equals(type))  {  return  true;  }	  Type    toComponentType    =    cls.getGenericComponentType();    if(toGenericArrayType.equals(type))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
399	[BUG]  [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  cls.isArray()  ||  isAssignable(cls.getComponentType()  [CE]  ')'  expected  [FE]        AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  cls.isArray()  ||  isAssignable(cls.getComponentType()  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	if(cls.isArray())  {  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  else  {  cls.isArray()  ||  isAssignable(cls.getComponentType()	  return    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    cls.isArray()    ||    isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  ')'  expected	40	None	replace
400	[BUG]  [BUGGY]  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  type  }  ')'  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (toGenericArrayType.equals(type))  {  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;        [BUGGY]  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  type  }  ')'  [BUGGY]      &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	283	284	2	replace	&&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns))  {  return  isAssignable(cls.getComponentType(),  toComponentType,  type  }  ')'	  if(cls!=    null)    {    if(isAssignable(cls.getComponentType(),    toComponentType,    typeVarAssigns))    {    return    isAssignable(cls.getComponentType(),    toComponentType,    type    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
