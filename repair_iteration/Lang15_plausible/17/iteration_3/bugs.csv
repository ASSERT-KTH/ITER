bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return  toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  toComponentType,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return  toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  toComponentType,  typeVarAssigns);	  return!toGenericArrayType.isEmpty()    &&    isAssignable(toGenericArrayType,    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
2	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericArray();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericArray();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericArray();	  return    false;    GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericArray();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	108	None	replace
3	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(type  instanceof  Class  <?>)  {  return  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericArray();  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(type  instanceof  Class  <?>)  {  return  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericArray();  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(type  instanceof  Class  <?>)  {  return  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericArray();  }	  return    false;    GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericArray();    	non-compiled	[CE]  ';'  expected	108	None	replace
4	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericArray();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericArray();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericArray();	  return    false;    GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericArray();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	108	None	replace
5	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(type  instanceof  Class  <?>)  {  return  GenericArrayType  toGenericArrayType  =  (Class  <?>)type;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(type  instanceof  Class  <?>)  {  return  GenericArrayType  toGenericArrayType  =  (Class  <?>)type;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(type  instanceof  Class  <?>)  {  return  GenericArrayType  toGenericArrayType  =  (Class  <?>)type;  }	  return    false;    GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericArray();    	non-compiled	[CE]  ';'  expected	108	None	replace
6	[BUG]  [BUGGY]  ||  type  instanceof  GenericArrayType  ==  false)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  ||  type  instanceof  GenericArrayType  ==  false)  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	||  type  instanceof  GenericArrayType  ==  false)  {  return  false;  }	  if(type    instanceof    GenericArrayType    ==    false)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
7	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ==  null)  {  return  false;  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]      AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  GenericArrayType  ==  null)  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  GenericArrayType  ==  null)  {  return  false;  }	  if(type    instanceof    GenericArrayType    ==    false)    {    return    false;    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	148	None	replace
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  GenericArrayType  ==  false)  {  return  true;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	if(type  instanceof  GenericArrayType  ==  false)  {  return  true;  }	  if(type    instanceof    GenericArrayType    ==    false)    {    return    false;    }    	compilable	  [FE]  AssertionError  	148	2	replace
9	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ==  false)  {  return  true;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  GenericArrayType  ==  false)  {  return  true;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  GenericArrayType  ==  false)  {  return  true;  }	  if(type    instanceof    GenericArrayType    ==    false)    {    return    false;    }    	compilable	  [FE]  AssertionError  	148	2	replace
10	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  throw  new  IllegalStateException( "   ");  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  throw  new  IllegalStateException(   "   ");  throw  new  IllegalStateException( "   ");  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	throw    new    IllegalStateException(   "   ");    throw  new  IllegalStateException( "   ");	  	non-compiled	[CE]  unreachable  statement	121	None	add
11	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  Throw  new  IllegalStateException( "   ");  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  throw  new  IllegalStateException(   "   ");  Throw  new  IllegalStateException( "   ");  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	throw    new    IllegalStateException(   "   ");    Throw  new  IllegalStateException( "   ");	  	non-compiled	[CE]  not  a  statement	121	None	add
12	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  Throwables.throw  new  IllegalStateException( "   ");  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  throw  new  IllegalStateException(   "   ");  Throwables.throw  new  IllegalStateException( "   ");  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	throw    new    IllegalStateException(   "   ");    Throwables.throw  new  IllegalStateException( "   ");	  	non-compiled	[CE]  <identifier>  expected	121	None	add
13	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericArrayType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericArrayType();  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericArrayType();	  Type    toGenericArrayType    =    type.getGenericArrayType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	151	None	replace
14	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( " ");  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Throw  new  IllegalArgumentException( " ");  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(       "       ");    Throw    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  not  a  statement	79	None	replace
15	[BUG]  [BUGGY]  Throw  new  IllegalStateException( " ");  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Throw  new  IllegalStateException( " ");  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Throw  new  IllegalStateException( " ");	  throw    new    IllegalArgumentException(       "       ");    Throw    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  not  a  statement	79	None	replace
16	[BUG]  [BUGGY]  }  else  if(!toGenericArrayType.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(!toGenericArrayType.isAssignableFrom(type))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(!toGenericArrayType.isAssignableFrom(type))  {	  }    else    if(!toGenericArrayType.equals(type))    {    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.getGenericComponentType()  ==  type)  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	}  else  if(toGenericArrayType.getGenericComponentType()  ==  type)  {	  }    else    if(!toGenericArrayType.equals(type))    {    	compilable	  [FE]  AssertionError  	73	2	replace
18	[BUG]  [BUGGY]  }  else  if(toGenericArrayType.getGenericComponentType()  ==  type)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.getGenericComponentType()  ==  type)  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(toGenericArrayType.getGenericComponentType()  ==  type)  {	  }    else    if(!toGenericArrayType.equals(type))    {    	compilable	  [FE]  AssertionError  	73	2	replace
19	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.getGenericComponentType()!=  type)  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	}  else  if(toGenericArrayType.getGenericComponentType()!=  type)  {	  }    else    if(!toGenericArrayType.equals(type))    {    	compilable	  [FE]  AssertionError  	73	2	replace
20	[BUG]  [BUGGY]  }  else  if(toGenericArrayType.getGenericComponentType()!=  type)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.getGenericComponentType()!=  type)  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(toGenericArrayType.getGenericComponentType()!=  type)  {	  }    else    if(!toGenericArrayType.equals(type))    {    	compilable	  [FE]  AssertionError  	73	2	replace
21	[BUG]  [BUGGY]  }  else  if(toGenericArrayType.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.isAssignableFrom(type))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(toGenericArrayType.isAssignableFrom(type))  {	  }    else    if(!toGenericArrayType.equals(type))    {    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
22	[BUG]  [BUGGY]  Class  <?>  toComponentType  =  toGenericArrayType.getGenericComponentType();  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Class  <?>  toComponentType  =  toGenericArrayType.getGenericComponentType();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Class  <?>  toComponentType  =  toGenericArrayType.getGenericComponentType();	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    Class    <?>    type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  incompatible  types	98	None	replace
23	[BUG]  [BUGGY]  Class  <?>  bound  =  toGenericArrayType.getRawClass();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Class  <?>  bound  =  toGenericArrayType.getRawClass();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Class  <?>  bound  =  toGenericArrayType.getRawClass();	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    Class    <?>    type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
24	[BUG]  [BUGGY]  return(toGenericArrayType!=  null)?  null  :  toGenericArrayType.getGenericComponentType();  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return(toGenericArrayType!=  null)?  null  :  toGenericArrayType.getGenericComponentType();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return(toGenericArrayType!=  null)?  null  :  toGenericArrayType.getGenericComponentType();	  return(toGenericArrayType    ==    null)?    null    :    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  incompatible  types	134	None	replace
25	[BUG]  [BUGGY]  return(type  ==  null)?  null  :  toGenericArrayType.getGenericComponentType();  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return(type  ==  null)?  null  :  toGenericArrayType.getGenericComponentType();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return(type  ==  null)?  null  :  toGenericArrayType.getGenericComponentType();	  return(toGenericArrayType    ==    null)?    null    :    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  incompatible  types	134	None	replace
26	[BUG]  [BUGGY]  return(toGenericArrayType  ==  null)?  null  :  type.getGenericComponentType();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return(toGenericArrayType  ==  null)?  null  :  type.getGenericComponentType();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return(toGenericArrayType  ==  null)?  null  :  type.getGenericComponentType();	  return(toGenericArrayType    ==    null)?    null    :    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
27	[BUG]  [BUGGY]  Type  toGenericArrayType  =  types.getGenericParameterType(type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Type  toGenericArrayType  =  types.getGenericParameterType(type);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  types.getGenericParameterType(type);	  Type    toGenericArrayType    =    types.getGenericParameterType(0);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	149	None	replace
28	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getClass().getName();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getClass().getName();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  toGenericArrayType.getClass().getName();	  aughtExceptionHandler.throwAssertionError(   "Unable    toGeneric    array    type:   "+toGenericArrayType.getClass().getName());    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	45	None	replace
29	[BUG]  [BUGGY]  Context.throwAssertionError( "Unable  toGeneric  array  type: "+toGenericArrayType.getClass().getName());  [CE]  cannot  find  symbol  Context  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Context.throwAssertionError( "Unable  toGeneric  array  type: "+toGenericArrayType.getClass().getName());  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Context.throwAssertionError( "Unable  toGeneric  array  type: "+toGenericArrayType.getClass().getName());	  aughtExceptionHandler.throwAssertionError(   "Unable    toGeneric    array    type:   "+toGenericArrayType.getClass().getName());    	non-compiled	[CE]  cannot  find  symbol  Context	45	None	replace
30	[BUG]  [BUGGY]  GenericArrayType.throwAssertionError( "Unable  toGeneric  array  type: "+toGenericArrayType.getClass().getName());  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType.throwAssertionError( "Unable  toGeneric  array  type: "+toGenericArrayType.getClass().getName());  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType.throwAssertionError( "Unable  toGeneric  array  type: "+toGenericArrayType.getClass().getName());	  aughtExceptionHandler.throwAssertionError(   "Unable    toGeneric    array    type:   "+toGenericArrayType.getClass().getName());    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
31	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getClass().getName();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getClass().getName();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getClass().getName();	  aughtExceptionHandler.throwAssertionError(   "Unable    toGeneric    array    type:   "+toGenericArrayType.getClass().getName());    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	45	None	replace
32	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(type  instanceof  GenericArrayType)  {  if(toGenericArrayType  instanceof  GenericArrayType)  {  return  true;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	}  else  if(type  instanceof  GenericArrayType)  {  if(toGenericArrayType  instanceof  GenericArrayType)  {  return  true;  }	  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type    instanceof    GenericArrayType)    {    return    true;    	compilable	  [FE]  AssertionError  	113	2	replace
33	[BUG]  [BUGGY]  }  else  if(type  instanceof  GenericArrayType)  {  if(toGenericArrayType  instanceof  GenericArrayType)  {  return  true;  }  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(type  instanceof  GenericArrayType)  {  if(toGenericArrayType  instanceof  GenericArrayType)  {  return  true;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(type  instanceof  GenericArrayType)  {  if(toGenericArrayType  instanceof  GenericArrayType)  {  return  true;  }	  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type    instanceof    GenericArrayType)    {    return    true;    	compilable	  [FE]  AssertionError  	113	2	replace
34	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(type  instanceof  GenericArrayType)  {  if(!toGenericArrayType.equals(type))  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	}  else  if(type  instanceof  GenericArrayType)  {  if(!toGenericArrayType.equals(type))  {  return  false;  }	  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type    instanceof    GenericArrayType)    {    return    true;    	compilable	  [FE]  AssertionError  	113	2	replace
35	[BUG]  [BUGGY]  }  else  if(type  instanceof  GenericArrayType)  {  if(!toGenericArrayType.equals(type))  {  return  false;  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(type  instanceof  GenericArrayType)  {  if(!toGenericArrayType.equals(type))  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(type  instanceof  GenericArrayType)  {  if(!toGenericArrayType.equals(type))  {  return  false;  }	  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type    instanceof    GenericArrayType)    {    return    true;    	compilable	  [FE]  AssertionError  	113	2	replace
36	[BUG]  [BUGGY]  }  else  if(type  instanceof  GenericArrayType)  {  if(!toGenericArrayType.isEmpty())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(type  instanceof  GenericArrayType)  {  if(!toGenericArrayType.isEmpty())  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(type  instanceof  GenericArrayType)  {  if(!toGenericArrayType.isEmpty())  {  return  false;  }	  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type    instanceof    GenericArrayType)    {    return    true;    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
37	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(type  instanceof  GenericArrayType)  {  if(!toGenericArrayType.equals(type))  {  return  true;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	}  else  if(type  instanceof  GenericArrayType)  {  if(!toGenericArrayType.equals(type))  {  return  true;  }	  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type    instanceof    GenericArrayType)    {    return    true;    	compilable	  [FE]  AssertionError  	113	2	replace
38	[BUG]  [BUGGY]  }  else  if(type  instanceof  GenericArrayType)  {  if(!toGenericArrayType.equals(type))  {  return  true;  }  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(type  instanceof  GenericArrayType)  {  if(!toGenericArrayType.equals(type))  {  return  true;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(type  instanceof  GenericArrayType)  {  if(!toGenericArrayType.equals(type))  {  return  true;  }	  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type    instanceof    GenericArrayType)    {    return    true;    	compilable	  [FE]  AssertionError  	113	2	replace
39	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(!toGenericArrayType.equals(type))  {  }  else  if(!toGenericArrayType.equals(type))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	}    else    if(!toGenericArrayType.equals(type))    {    }  else  if(!toGenericArrayType.equals(type))  {	  	compilable	  [FE]  AssertionError  	72	2	add
40	[BUG]  [BUGGY]  }  else  if(!toGenericArrayType.equals(type))  {  }  else  if(!toGenericArrayType.equals(type))  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(!toGenericArrayType.equals(type))  {  }  else  if(!toGenericArrayType.equals(type))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}    else    if(!toGenericArrayType.equals(type))    {    }  else  if(!toGenericArrayType.equals(type))  {	  	compilable	  [FE]  AssertionError  	72	2	add
41	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(!toGenericArrayType.equals(type))  {  }  else  if(!toGenericArrayType.equals(type)  ||  toGenericArrayType.getGenericComponentType()!=  typeVarAssigns)  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	}    else    if(!toGenericArrayType.equals(type))    {    }  else  if(!toGenericArrayType.equals(type)  ||  toGenericArrayType.getGenericComponentType()!=  typeVarAssigns)  {	  	compilable	  [FE]  AssertionError  	72	2	add
42	[BUG]  [BUGGY]  }  else  if(!toGenericArrayType.equals(type))  {  }  else  if(!toGenericArrayType.equals(type)  ||  toGenericArrayType.getGenericComponentType()!=  typeVarAssigns)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(!toGenericArrayType.equals(type))  {  }  else  if(!toGenericArrayType.equals(type)  ||  toGenericArrayType.getGenericComponentType()!=  typeVarAssigns)  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}    else    if(!toGenericArrayType.equals(type))    {    }  else  if(!toGenericArrayType.equals(type)  ||  toGenericArrayType.getGenericComponentType()!=  typeVarAssigns)  {	  	compilable	  [FE]  AssertionError  	72	2	add
43	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(!toGenericArrayType.equals(type))  {  }  else  if(!toGenericArrayType.equals(type)||!toGenericArrayType.equals(type))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	}    else    if(!toGenericArrayType.equals(type))    {    }  else  if(!toGenericArrayType.equals(type)||!toGenericArrayType.equals(type))  {	  	compilable	  [FE]  AssertionError  	72	2	add
44	[BUG]  [BUGGY]  }  else  if(!toGenericArrayType.equals(type))  {  }  else  if(!toGenericArrayType.equals(type)||!toGenericArrayType.equals(type))  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(!toGenericArrayType.equals(type))  {  }  else  if(!toGenericArrayType.equals(type)||!toGenericArrayType.equals(type))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}    else    if(!toGenericArrayType.equals(type))    {    }  else  if(!toGenericArrayType.equals(type)||!toGenericArrayType.equals(type))  {	  	compilable	  [FE]  AssertionError  	72	2	add
45	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(!toGenericArrayType.equals(type))  {  }  else  if(!toGenericArrayType.equals(type)  ||  toGenericArrayType.getGenericComponentType()  ==  typeVarAssigns)  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	}    else    if(!toGenericArrayType.equals(type))    {    }  else  if(!toGenericArrayType.equals(type)  ||  toGenericArrayType.getGenericComponentType()  ==  typeVarAssigns)  {	  	compilable	  [FE]  AssertionError  	72	2	add
46	[BUG]  [BUGGY]  }  else  if(!toGenericArrayType.equals(type))  {  }  else  if(!toGenericArrayType.equals(type)  ||  toGenericArrayType.getGenericComponentType()  ==  typeVarAssigns)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(!toGenericArrayType.equals(type))  {  }  else  if(!toGenericArrayType.equals(type)  ||  toGenericArrayType.getGenericComponentType()  ==  typeVarAssigns)  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}    else    if(!toGenericArrayType.equals(type))    {    }  else  if(!toGenericArrayType.equals(type)  ||  toGenericArrayType.getGenericComponentType()  ==  typeVarAssigns)  {	  	compilable	  [FE]  AssertionError  	72	2	add
47	[BUG]  [BUGGY]  return  toGenericArrayType.isAssignableFrom(toGenericArrayType);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return  toGenericArrayType.isAssignableFrom(toGenericArrayType);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return  toGenericArrayType.isAssignableFrom(toGenericArrayType);	  ==    [Delete]    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
48	[BUG]  [BUGGY]  return  toGenericArrayType.getGenericComponentType();  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return  toGenericArrayType.getGenericComponentType();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return  toGenericArrayType.getGenericComponentType();	  ==    [Delete]    	non-compiled	[CE]  incompatible  types	34	None	replace
49	[BUG]  [BUGGY]  return  toGenericArrayType.getGeneric();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return  toGenericArrayType.getGeneric();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return  toGenericArrayType.getGeneric();	  ==    [Delete]    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
50	[BUG]  [BUGGY]  return  toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return  toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return  toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  typeVarAssigns);	  return!toGenericArrayType.isEmpty()    &&    isAssignable(toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
51	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  type.toGenericArray();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  type.toGenericArray();  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  type.toGenericArray();	  GenericArrayType    toGenericArrayType    =    type.getGenericArray();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	137	None	replace
52	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  Class  <?>)  {  return  false;  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  }	  return    false;    Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	12	None	replace
53	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  type  =  toGenericArrayType.getGenericComponentType();  }  [CE]  unreachable  statement  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  type  =  toGenericArrayType.getGenericComponentType();  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  Class  <?>)  {  return  false;  type  =  toGenericArrayType.getGenericComponentType();  }	  return    false;    Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  unreachable  statement	12	None	replace
54	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(type  instanceof  Class  <?>)  {  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(type  instanceof  Class  <?>)  {  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(type  instanceof  Class  <?>)  {  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  }	  return    false;    Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	12	None	replace
55	[BUG]  [BUGGY]  }  else  if(toGenericArrayType.contains(type))  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.contains(type))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(toGenericArrayType.contains(type))  {	  [Delete]    else    if(typeVarAssigns.contains(toGenericArrayType))    {    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
56	[BUG]  [BUGGY]  }  else  if(toGenericArrayType.contains(typeVarAssigns))  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.contains(typeVarAssigns))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(toGenericArrayType.contains(typeVarAssigns))  {	  [Delete]    else    if(typeVarAssigns.contains(toGenericArrayType))    {    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
57	[BUG]  [BUGGY]  }  else  if(typeVarAssigns.contains(toGenericArrayType))  {  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(typeVarAssigns.contains(toGenericArrayType))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(typeVarAssigns.contains(toGenericArrayType))  {	  [Delete]    else    if(typeVarAssigns.contains(toGenericArrayType))    {    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
58	[BUG]  [BUGGY]  }  else  if(typeVarAssigns.contains(toGenericArrayType)||  toGenericArrayType.equals(type))  {  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(typeVarAssigns.contains(toGenericArrayType)||  toGenericArrayType.equals(type))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(typeVarAssigns.contains(toGenericArrayType)||  toGenericArrayType.equals(type))  {	  [Delete]    else    if(typeVarAssigns.contains(toGenericArrayType))    {    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
59	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	if(type        instanceof        GenericArrayType)        {        return        false;        }        if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }	  	compilable	  [FE]  AssertionError  	63	2	add
60	[BUG]  [BUGGY]  if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type        instanceof        GenericArrayType)        {        return        false;        }        if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }	  	compilable	  [FE]  AssertionError  	63	2	add
61	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	if(type        instanceof        GenericArrayType)        {        return        false;        }        if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }	  	compilable	  [FE]  AssertionError  	63	2	add
62	[BUG]  [BUGGY]  if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type        instanceof        GenericArrayType)        {        return        false;        }        if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }	  	compilable	  [FE]  AssertionError  	63	2	add
63	[BUG]  [BUGGY]  if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type        instanceof        GenericArrayType)        {        return        false;        }        if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false	  	non-compiled	[CE]  ';'  expected	63	None	add
64	[BUG]  [BUGGY]  if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type        instanceof        GenericArrayType)        {        return        false;        }        if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof	  	non-compiled	[CE]  illegal  start  of  type	63	None	add
65	[BUG]  [BUGGY]  if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type        instanceof        GenericArrayType)        {        return        false;        }        if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType	  	non-compiled	[CE]  ')'  expected	63	None	add
66	[BUG]  [BUGGY]  }  else  if(type.equals(toGenericArrayType))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(type.equals(toGenericArrayType))  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(type.equals(toGenericArrayType))  {  return  false;  }	  [Delete]    else    if(toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
67	[BUG]  [BUGGY]  }  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.equals(typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.equals(typeVarAssigns))  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.equals(typeVarAssigns))  {  return  false;  }	  [Delete]    else    if(toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
68	[BUG]  [BUGGY]  }  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.isInterface())  {  return  false;  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.isInterface())  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.isInterface())  {  return  false;  }	  [Delete]    else    if(toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
69	[BUG]  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!typeVarAssigns.isEmpty()    &&    isAssignable(toGenericArrayType,    toGenericArrayType,    typeVarAssigns);    return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);	  	non-compiled	[CE]  unreachable  statement	87	None	add
70	[BUG]  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!typeVarAssigns.isEmpty()    &&    isAssignable(toGenericArrayType,    toGenericArrayType,    typeVarAssigns);    if(!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);	  	non-compiled	[CE]  ')'  expected	87	None	add
71	[BUG]  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!typeVarAssigns.isEmpty()    &&    isAssignable(toGenericArrayType,    toGenericArrayType,    typeVarAssigns);    Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);	  	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	87	None	add
72	[BUG]  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  }  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!typeVarAssigns.isEmpty()    &&    isAssignable(toGenericArrayType,    toGenericArrayType,    typeVarAssigns);    if(!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  }	  	non-compiled	[CE]  ')'  expected	87	None	add
73	[BUG]  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns))  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGene  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns))  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGene  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!typeVarAssigns.isEmpty()    &&    isAssignable(toGenericArrayType,    toGenericArrayType,    typeVarAssigns);    if(!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns))  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGene	  	non-compiled	[CE]  ')'  expected	87	None	add
74	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  types.getGeneric();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  types.getGeneric();  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  types.getGeneric();	  GenericArrayType    toGenericArrayType    =    typeVarAssigns.getGeneric();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	25	None	replace
75	[BUG]  [BUGGY]  return  toGenericArrayType.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGene  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return  toGenericArrayType.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGene  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return  toGenericArrayType.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGene	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    if(!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    }    	non-compiled	[CE]  ')'  expected	69	None	replace
76	[BUG]  [BUGGY]  if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGene  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGene  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGene	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    if(!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    }    	non-compiled	[CE]  ')'  expected	69	None	replace
77	[BUG]  [BUGGY]  if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  }	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    if(!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    }    	non-compiled	[CE]  ')'  expected	69	None	replace
78	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(!toGenericArrayType.equals(typeVarAssigns))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	}  else  if(!toGenericArrayType.equals(typeVarAssigns))  {	  [Delete]    else    if(!toGenericArrayType.equals(type))    {    	compilable	  [FE]  AssertionError  	153	2	replace
79	[BUG]  [BUGGY]  }  else  if(!toGenericArrayType.equals(typeVarAssigns))  {  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(!toGenericArrayType.equals(typeVarAssigns))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(!toGenericArrayType.equals(typeVarAssigns))  {	  [Delete]    else    if(!toGenericArrayType.equals(type))    {    	compilable	  [FE]  AssertionError  	153	2	replace
80	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(!toGenericArrayType.equals(type)&&  toGenericArrayType.getGenericComponentType()!=  typeVarAssigns)  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	}  else  if(!toGenericArrayType.equals(type)&&  toGenericArrayType.getGenericComponentType()!=  typeVarAssigns)  {	  [Delete]    else    if(!toGenericArrayType.equals(type))    {    	compilable	  [FE]  AssertionError  	153	2	replace
81	[BUG]  [BUGGY]  }  else  if(!toGenericArrayType.equals(type)&&  toGenericArrayType.getGenericComponentType()!=  typeVarAssigns)  {  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(!toGenericArrayType.equals(type)&&  toGenericArrayType.getGenericComponentType()!=  typeVarAssigns)  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(!toGenericArrayType.equals(type)&&  toGenericArrayType.getGenericComponentType()!=  typeVarAssigns)  {	  [Delete]    else    if(!toGenericArrayType.equals(type))    {    	compilable	  [FE]  AssertionError  	153	2	replace
82	[BUG]  [BUGGY]  }  else  if(!toGenericArrayType.equals(type)||  toGenericArrayType.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(!toGenericArrayType.equals(type)||  toGenericArrayType.isAssignableFrom(type))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(!toGenericArrayType.equals(type)||  toGenericArrayType.isAssignableFrom(type))  {	  [Delete]    else    if(!toGenericArrayType.equals(type))    {    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
83	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(type.equals(toGenericArrayType))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	}  else  if(type.equals(toGenericArrayType))  {	  [Delete]    else    if(!toGenericArrayType.equals(type))    {    	compilable	  [FE]  AssertionError  	153	2	replace
84	[BUG]  [BUGGY]  }  else  if(type.equals(toGenericArrayType))  {  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(type.equals(toGenericArrayType))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(type.equals(toGenericArrayType))  {	  [Delete]    else    if(!toGenericArrayType.equals(type))    {    	compilable	  [FE]  AssertionError  	153	2	replace
85	[BUG]  [BUGGY]  return  toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return  toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return  toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);	  return!toGenericArrayType.isEmpty()    &&    isAssignable(toGenericArrayType,    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
86	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.equals(type))  {  }  else  if(toGenericArrayType.equals(type))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	}    else    if(toGenericArrayType.equals(type))    {    }  else  if(toGenericArrayType.equals(type))  {	  	compilable	  [FE]  AssertionError  	48	2	add
87	[BUG]  [BUGGY]  }  else  if(toGenericArrayType.equals(type))  {  }  else  if(toGenericArrayType.equals(type))  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.equals(type))  {  }  else  if(toGenericArrayType.equals(type))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}    else    if(toGenericArrayType.equals(type))    {    }  else  if(toGenericArrayType.equals(type))  {	  	compilable	  [FE]  AssertionError  	48	2	add
88	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.equals(type))  {  }  else  if(type.equals(toGenericArrayType))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	}    else    if(toGenericArrayType.equals(type))    {    }  else  if(type.equals(toGenericArrayType))  {	  	compilable	  [FE]  AssertionError  	48	2	add
89	[BUG]  [BUGGY]  }  else  if(toGenericArrayType.equals(type))  {  }  else  if(type.equals(toGenericArrayType))  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.equals(type))  {  }  else  if(type.equals(toGenericArrayType))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}    else    if(toGenericArrayType.equals(type))    {    }  else  if(type.equals(toGenericArrayType))  {	  	compilable	  [FE]  AssertionError  	48	2	add
90	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.equals(type))  {  }  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.equals(type))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	}    else    if(toGenericArrayType.equals(type))    {    }  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.equals(type))  {	  	compilable	  [FE]  AssertionError  	48	2	add
91	[BUG]  [BUGGY]  }  else  if(toGenericArrayType.equals(type))  {  }  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.equals(type))  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.equals(type))  {  }  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.equals(type))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}    else    if(toGenericArrayType.equals(type))    {    }  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.equals(type))  {	  	compilable	  [FE]  AssertionError  	48	2	add
92	[BUG]  [BUGGY]  }  else  if(toGenericArrayType.equals(type))  {  }  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.equals(type))  {  }  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.isAssignableFrom(type))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}    else    if(toGenericArrayType.equals(type))    {    }  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.isAssignableFrom(type))  {	  	non-compiled	[CE]  cannot  find  symbol	48	None	add
93	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.equals(type))  {  }  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.getGenericComponentType()!=  type)  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	}    else    if(toGenericArrayType.equals(type))    {    }  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.getGenericComponentType()!=  type)  {	  	compilable	  [FE]  AssertionError  	48	2	add
94	[BUG]  [BUGGY]  }  else  if(toGenericArrayType.equals(type))  {  }  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.getGenericComponentType()!=  type)  {  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.equals(type))  {  }  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.getGenericComponentType()!=  type)  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}    else    if(toGenericArrayType.equals(type))    {    }  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.getGenericComponentType()!=  type)  {	  	compilable	  [FE]  AssertionError  	48	2	add
95	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getGenericArrayType(0);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  getGenericArrayType(0);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  getGenericArrayType(0);	  GenericArrayType    toGenericArrayType    =    getGenericArrayType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	101	None	replace
96	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getGenericArrayType().getGenericParameterTypes();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  getGenericArrayType().getGenericParameterTypes();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  getGenericArrayType().getGenericParameterTypes();	  GenericArrayType    toGenericArrayType    =    getGenericArrayType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	101	None	replace
97	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  type;  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  type;  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  type;	  GenericArrayType    toGenericArrayType    =    null;    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	103	None	replace
98	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  new  GenericArrayType(type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  new  GenericArrayType(type);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  new  GenericArrayType(type);	  GenericArrayType    toGenericArrayType    =    null;    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	103	None	replace
99	[BUG]  [BUGGY]  if(toGenericArrayType.isEmpty())  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  }  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(toGenericArrayType.isEmpty())  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(toGenericArrayType.isEmpty())  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  }	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
100	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(typeVarAssigns.isEmpty())  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	if(typeVarAssigns.isEmpty())  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  }	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	68	2	replace
101	[BUG]  [BUGGY]  if(typeVarAssigns.isEmpty())  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  }  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(typeVarAssigns.isEmpty())  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(typeVarAssigns.isEmpty())  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  }	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	68	2	replace
102	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	68	None	replace
103	[BUG]  [BUGGY]  Class  <?>  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Class  <?>  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Class  <?>  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(ToGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	9	None	replace
104	[BUG]  [BUGGY]  return  toGenericArrayType.isArray()  &&  isAssignable(toGenericArrayType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return  toGenericArrayType.isArray()  &&  isAssignable(toGenericArrayType,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return  toGenericArrayType.isArray()  &&  isAssignable(toGenericArrayType,  typeVarAssigns);	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(ToGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
105	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(type  instanceof  GenericArrayType)  {  if(toGenericArrayType  instanceof  GenericArrayType)  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	}  else  if(type  instanceof  GenericArrayType)  {  if(toGenericArrayType  instanceof  GenericArrayType)  {  return  false;  }	  if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type    instanceof    GenericArrayType)    <    return    false;    }    	compilable	  [FE]  AssertionError  	132	2	replace
106	[BUG]  [BUGGY]  }  else  if(type  instanceof  GenericArrayType)  {  if(toGenericArrayType  instanceof  GenericArrayType)  {  return  false;  }  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(type  instanceof  GenericArrayType)  {  if(toGenericArrayType  instanceof  GenericArrayType)  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(type  instanceof  GenericArrayType)  {  if(toGenericArrayType  instanceof  GenericArrayType)  {  return  false;  }	  if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type    instanceof    GenericArrayType)    <    return    false;    }    	compilable	  [FE]  AssertionError  	132	2	replace
107	[BUG]  [BUGGY]  return!toComponentType.isEmpty()  &&  isAssignable(type,  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  toComponentType  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return!toComponentType.isEmpty()  &&  isAssignable(type,  toComponentType,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!toComponentType.isEmpty()  &&  isAssignable(type,  toComponentType,  typeVarAssigns);	  return!toComponentType.isEmpty()    &&    isAssignable(toGenericArrayType,    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  toComponentType	115	None	replace
108	[BUG]  [BUGGY]  return!type.isEmpty()  &&  isAssignable(toGenericArrayType,  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return!type.isEmpty()  &&  isAssignable(toGenericArrayType,  toComponentType,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!type.isEmpty()  &&  isAssignable(toGenericArrayType,  toComponentType,  typeVarAssigns);	  return!toComponentType.isEmpty()    &&    isAssignable(toGenericArrayType,    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
109	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(type  instanceof  Class  <?>)  {  return  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(type  instanceof  Class  <?>)  {  return  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(type  instanceof  Class  <?>)  {  return  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  }	  return    false;    GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericParameterType();    	non-compiled	[CE]  ';'  expected	14	None	replace
110	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(type  instanceof  Class  <?>)  {  return  toGenericArrayType.getGenericParameterType();  }  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(type  instanceof  Class  <?>)  {  return  toGenericArrayType.getGenericParameterType();  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(type  instanceof  Class  <?>)  {  return  toGenericArrayType.getGenericParameterType();  }	  return    false;    GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericParameterType();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
111	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  return  false;  }  if(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	if(type    instanceof    GenericArrayType    ||    type    instanceof    Class    <?>)    {    return    false;    }    if(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  return  false;  }	  	compilable	  [FE]  AssertionError  	145	2	add
112	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  return  false;  }  if(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  return  false;  }  if(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type    instanceof    GenericArrayType    ||    type    instanceof    Class    <?>)    {    return    false;    }    if(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  return  false;  }	  	compilable	  [FE]  AssertionError  	145	2	add
113	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  return  false;  }  If(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  return  false;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  return  false;  }  If(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type    instanceof    GenericArrayType    ||    type    instanceof    Class    <?>)    {    return    false;    }    If(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	145	None	add
114	[BUG]  [BUGGY]  Class  <?>  type  =  toGenericArrayType.getGenericParameterType(typeVarAssigns);  [CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Class  <?>  type  =  toGenericArrayType.getGenericParameterType(typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Class  <?>  type  =  toGenericArrayType.getGenericParameterType(typeVarAssigns);	  Class    <?>    type    =    toGenericArrayType.getGenericParameterType(type);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	107	None	replace
115	[BUG]  [BUGGY]  Class  <?>  type  =  toGenericArrayType.getGenericParameterType(type,  toComponentType);  [CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Class  <?>  type  =  toGenericArrayType.getGenericParameterType(type,  toComponentType);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Class  <?>  type  =  toGenericArrayType.getGenericParameterType(type,  toComponentType);	  Class    <?>    type    =    toGenericArrayType.getGenericParameterType(type);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	107	None	replace
116	[BUG]  [BUGGY]  Class  <?>  type  =  toGenericArrayType.getGenericParameterType(toComponentType);  [CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Class  <?>  type  =  toGenericArrayType.getGenericParameterType(toComponentType);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Class  <?>  type  =  toGenericArrayType.getGenericParameterType(toComponentType);	  Class    <?>    type    =    toGenericArrayType.getGenericParameterType(type);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	107	None	replace
117	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericArrayType(0);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericArrayType(0);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericArrayType(0);	  GenericArrayType    toGenericArrayType    =    typeVarAssigns.getGenericArrayType(0);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	144	None	replace
118	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericArrayType(type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericArrayType(type);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericArrayType(type);	  GenericArrayType    toGenericArrayType    =    typeVarAssigns.getGenericArrayType(0);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	144	None	replace
119	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	if(type        instanceof        Class        <?>)        {        return        false;        }        else        if(!toGenericArrayType.equals(type))        {        return        false;        }        if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	40	2	add
120	[BUG]  [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type        instanceof        Class        <?>)        {        return        false;        }        else        if(!toGenericArrayType.equals(type))        {        return        false;        }        if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	40	2	add
121	[BUG]  [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  Class  <?>  type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  Class  <?>  type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type        instanceof        Class        <?>)        {        return        false;        }        else        if(!toGenericArrayType.equals(type))        {        return        false;        }        if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    Class  <?>  type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	40	None	add
122	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  true;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	if(type        instanceof        Class        <?>)        {        return        false;        }        else        if(!toGenericArrayType.equals(type))        {        return        false;        }        if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	40	2	add
123	[BUG]  [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  true;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  true;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type        instanceof        Class        <?>)        {        return        false;        }        else        if(!toGenericArrayType.equals(type))        {        return        false;        }        if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	40	2	add
124	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.throwAssertionError( "Unable  toGeneric  array  type: "  +  toGenericArrayType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.throwAssertionError( "Unable  toGeneric  array  type: "  +  toGenericArrayType);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  toGenericArrayType.throwAssertionError( "Unable  toGeneric  array  type: "  +  toGenericArrayType);	  aughtExceptionHandler.throwAssertionError(   "Unable    toGeneric    array    type:   "    +    toGenericArrayType);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	2	None	replace
125	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.throwAssertionError( "Unable  toGeneric  array  type: "  +  toGenericArrayType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.throwAssertionError( "Unable  toGeneric  array  type: "  +  toGenericArrayType);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  toGenericArrayType.throwAssertionError( "Unable  toGeneric  array  type: "  +  toGenericArrayType);	  aughtExceptionHandler.throwAssertionError(   "Unable    toGeneric    array    type:   "    +    toGenericArrayType);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	2	None	replace
126	[BUG]  [BUGGY]  toGenericArrayType.throwAssertionError( "Unable  toGeneric  array  type: "  +  toGenericArrayType);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  toGenericArrayType.throwAssertionError( "Unable  toGeneric  array  type: "  +  toGenericArrayType);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	toGenericArrayType.throwAssertionError( "Unable  toGeneric  array  type: "  +  toGenericArrayType);	  aughtExceptionHandler.throwAssertionError(   "Unable    toGeneric    array    type:   "    +    toGenericArrayType);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
127	[BUG]  [BUGGY]  return  type.isAssignableFrom(toGenericArrayType);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return  type.isAssignableFrom(toGenericArrayType);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return  type.isAssignableFrom(toGenericArrayType);	          return    toGenericArrayType.isAssignableFrom(type);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
128	[BUG]  [BUGGY]  return  toGenericArrayType.isAssignableFrom(type,  toGenericArrayType);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return  toGenericArrayType.isAssignableFrom(type,  toGenericArrayType);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return  toGenericArrayType.isAssignableFrom(type,  toGenericArrayType);	          return    toGenericArrayType.isAssignableFrom(type);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
129	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  GenericArrayType  ==  false)  {  return  false;  }  if(type  instanceof  GenericArrayType  ==  false)  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	if(type    instanceof    GenericArrayType    ==    false)    {    return    false;    }    if(type  instanceof  GenericArrayType  ==  false)  {  return  false;  }	  	compilable	  [FE]  AssertionError  	147	2	add
130	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ==  false)  {  return  false;  }  if(type  instanceof  GenericArrayType  ==  false)  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  GenericArrayType  ==  false)  {  return  false;  }  if(type  instanceof  GenericArrayType  ==  false)  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type    instanceof    GenericArrayType    ==    false)    {    return    false;    }    if(type  instanceof  GenericArrayType  ==  false)  {  return  false;  }	  	compilable	  [FE]  AssertionError  	147	2	add
131	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  GenericArrayType  ==  false)  {  return  false;  }  if(type  instanceof  GenericArrayType!=  false)  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	if(type    instanceof    GenericArrayType    ==    false)    {    return    false;    }    if(type  instanceof  GenericArrayType!=  false)  {  return  false;  }	  	compilable	  [FE]  AssertionError  	147	2	add
132	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ==  false)  {  return  false;  }  if(type  instanceof  GenericArrayType!=  false)  {  return  false;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  GenericArrayType  ==  false)  {  return  false;  }  if(type  instanceof  GenericArrayType!=  false)  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type    instanceof    GenericArrayType    ==    false)    {    return    false;    }    if(type  instanceof  GenericArrayType!=  false)  {  return  false;  }	  	compilable	  [FE]  AssertionError  	147	2	add
133	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ==  false)  {  return  false;  }  if(type  instanceof  GenericArrayType  >=  false)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  GenericArrayType  ==  false)  {  return  false;  }  if(type  instanceof  GenericArrayType  >=  false)  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type    instanceof    GenericArrayType    ==    false)    {    return    false;    }    if(type  instanceof  GenericArrayType  >=  false)  {  return  false;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	147	None	add
134	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ==  false)  {  return  false;  }  if(type  instanceof  GenericArrayType  {  false)  {  return  false;  }  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  GenericArrayType  ==  false)  {  return  false;  }  if(type  instanceof  GenericArrayType  {  false)  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type    instanceof    GenericArrayType    ==    false)    {    return    false;    }    if(type  instanceof  GenericArrayType  {  false)  {  return  false;  }	  	non-compiled	[CE]  ')'  expected	147	None	add
135	[BUG]  [BUGGY]  Class  <?>  toComponentType  =  typeVarAssigns.get(type);  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Class  <?>  toComponentType  =  typeVarAssigns.get(type);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Class  <?>  toComponentType  =  typeVarAssigns.get(type);	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    If(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  incompatible  types	10	None	replace
136	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(1);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(1);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(1);	  return    false;    Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(0);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	109	None	replace
137	[BUG]  [BUGGY]  return  type.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return  type.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return  type.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);	  return    toGenericArrayType.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
138	[BUG]  [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGenericParameterType(type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGenericParameterType(type);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  typeVarAssigns.getGenericParameterType(type);	  Type    toGenericArrayType    =    typeVarAssigns.getGenericParameterType(0);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	95	None	replace
139	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(type  instanceof  Class  <?>)  {  return  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  }  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(type  instanceof  Class  <?>)  {  return  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(type  instanceof  Class  <?>)  {  return  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  }	  return    false;    GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  ';'  expected	126	None	replace
140	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(type  instanceof  Class  <?>)  {  return  toGenericArrayType.getGenericComponentType();  }  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(type  instanceof  Class  <?>)  {  return  toGenericArrayType.getGenericComponentType();  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(type  instanceof  Class  <?>)  {  return  toGenericArrayType.getGenericComponentType();  }	  return    false;    GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  incompatible  types	126	None	replace
141	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  cls,  type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  cls,  type);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  cls,  type);	  Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type,    cls);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	83	None	replace
142	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType,  cls);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType,  cls);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType,  cls);	  Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type,    cls);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	83	None	replace
143	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	if(type        instanceof        Class        <?>)        {        return        false;        }        else        if(toGenericArrayType.equals(type))        {        return        false;        }        if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	7	2	add
144	[BUG]  [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type        instanceof        Class        <?>)        {        return        false;        }        else        if(toGenericArrayType.equals(type))        {        return        false;        }        if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	7	2	add
145	[BUG]  [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  Class  <?>  type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  Class  <?>  type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type        instanceof        Class        <?>)        {        return        false;        }        else        if(toGenericArrayType.equals(type))        {        return        false;        }        if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    Class  <?>  type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	7	None	add
146	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	if(type        instanceof        Class        <?>)        {        return        false;        }        else        if(toGenericArrayType.equals(type))        {        return        false;        }        if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	7	2	add
147	[BUG]  [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type        instanceof        Class        <?>)        {        return        false;        }        else        if(toGenericArrayType.equals(type))        {        return        false;        }        if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	7	2	add
148	[BUG]  [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(ToGenericArrayType.equals(type))  {  return  false;  }  [CE]  cannot  find  symbol  ToGenericArrayType  [FE]          AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(ToGenericArrayType.equals(type))  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type        instanceof        Class        <?>)        {        return        false;        }        else        if(toGenericArrayType.equals(type))        {        return        false;        }        if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(ToGenericArrayType.equals(type))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol  ToGenericArrayType	7	None	add
149	[BUG]  [BUGGY]  return!toGenericArrayType.isEmpty()  &&  isAssignable(toComponentType,  toGenericArrayType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return!toGenericArrayType.isEmpty()  &&  isAssignable(toComponentType,  toGenericArrayType,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!toGenericArrayType.isEmpty()  &&  isAssignable(toComponentType,  toGenericArrayType,  typeVarAssigns);	  return!typeVarAssigns.isEmpty()    &&    isAssignable(toComponentType,    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
150	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(type);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  type.getGenericParameterType(type);	  Type    toGenericArrayType    =    type.getGenericParameterType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	21	None	replace
151	[BUG]  [BUGGY]  Type  toGenericArrayType  =  types.getGenericArrayType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Type  toGenericArrayType  =  types.getGenericArrayType();  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  types.getGenericArrayType();	  Type    toGenericArrayType    =    types.getGenericConstructor();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	6	None	replace
152	[BUG]  [BUGGY]  Throwable  throw  new  IllegalArgumentException( " ");  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Throwable  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Throwable  throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(       "       ");    Throwable    throw    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  not  a  statement	111	None	replace
153	[BUG]  [BUGGY]  Throwable  throw  new  IllegalArgumentException( " ".equals(toGenericArrayType));  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Throwable  throw  new  IllegalArgumentException( " ".equals(toGenericArrayType));  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Throwable  throw  new  IllegalArgumentException( " ".equals(toGenericArrayType));	  throw    new    IllegalArgumentException(       "       ");    Throwable    throw    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  not  a  statement	111	None	replace
154	[BUG]  [BUGGY]  Throwable  throw  new  IllegalArgumentException( " ".equals(type));  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Throwable  throw  new  IllegalArgumentException( " ".equals(type));  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Throwable  throw  new  IllegalArgumentException( " ".equals(type));	  throw    new    IllegalArgumentException(       "       ");    Throwable    throw    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  not  a  statement	111	None	replace
155	[BUG]  [BUGGY]  Class  <?>  type  =  toGenericArrayType.getGenericReferenceType();  [CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Class  <?>  type  =  toGenericArrayType.getGenericReferenceType();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Class  <?>  type  =  toGenericArrayType.getGenericReferenceType();	  Class    <?>    type    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	105	None	replace
156	[BUG]  [BUGGY]  Class  <?>  type  =  toGenericArrayType.getGenericComponentType()  ||  toGenericArrayType.isAssignableFrom(type);  [CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Class  <?>  type  =  toGenericArrayType.getGenericComponentType()  ||  toGenericArrayType.isAssignableFrom(type);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Class  <?>  type  =  toGenericArrayType.getGenericComponentType()  ||  toGenericArrayType.isAssignableFrom(type);	  Class    <?>    type    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	105	None	replace
157	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  Class  <?>)  {  return  false;  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  }	  return    false;    Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	15	None	replace
158	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  type  =  toGenericArrayType.getGenericParameterType();  }  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  type  =  toGenericArrayType.getGenericParameterType();  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  Class  <?>)  {  return  false;  type  =  toGenericArrayType.getGenericParameterType();  }	  return    false;    Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
159	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(type  instanceof  Class  <?>)  {  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(type  instanceof  Class  <?>)  {  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(type  instanceof  Class  <?>)  {  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  }	  return    false;    Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	15	None	replace
160	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGenericParameterTypes();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGenericParameterTypes();  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  type.getGenericParameterTypes();	  GenericArrayType    toGenericArrayType    =    type.getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	84	None	replace
161	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(type  instanceof  Class  <?>)  {  if(type  instanceof  GenericArrayType)  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	}  else  if(type  instanceof  Class  <?>)  {  if(type  instanceof  GenericArrayType)  {  return  false;  }	  if(type    instanceof    GenericArrayType)    {    return    true;    }    If(type    instanceof    GenericArrayType)    {    return    true;    }    	compilable	  [FE]  AssertionError  	38	2	replace
162	[BUG]  [BUGGY]  }  else  if(type  instanceof  Class  <?>)  {  if(type  instanceof  GenericArrayType)  {  return  false;  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(type  instanceof  Class  <?>)  {  if(type  instanceof  GenericArrayType)  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(type  instanceof  Class  <?>)  {  if(type  instanceof  GenericArrayType)  {  return  false;  }	  if(type    instanceof    GenericArrayType)    {    return    true;    }    If(type    instanceof    GenericArrayType)    {    return    true;    }    	compilable	  [FE]  AssertionError  	38	2	replace
163	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(type  instanceof  Class  <?>)  {  if(type  instanceof  GenericArrayType)  {  return  true;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	}  else  if(type  instanceof  Class  <?>)  {  if(type  instanceof  GenericArrayType)  {  return  true;  }	  if(type    instanceof    GenericArrayType)    {    return    true;    }    If(type    instanceof    GenericArrayType)    {    return    true;    }    	compilable	  [FE]  AssertionError  	38	2	replace
164	[BUG]  [BUGGY]  }  else  if(type  instanceof  Class  <?>)  {  if(type  instanceof  GenericArrayType)  {  return  true;  }  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(type  instanceof  Class  <?>)  {  if(type  instanceof  GenericArrayType)  {  return  true;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(type  instanceof  Class  <?>)  {  if(type  instanceof  GenericArrayType)  {  return  true;  }	  if(type    instanceof    GenericArrayType)    {    return    true;    }    If(type    instanceof    GenericArrayType)    {    return    true;    }    	compilable	  [FE]  AssertionError  	38	2	replace
165	[BUG]  [BUGGY]  if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [CE]  ')'  expected  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    if(!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  ')'  expected	67	None	replace
166	[BUG]  [BUGGY]  if(toGenericArrayType.isEmpty())  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGen  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(toGenericArrayType.isEmpty())  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGen  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(toGenericArrayType.isEmpty())  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGen	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    if(!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  ')'  expected	67	None	replace
167	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  GenericArrayType)  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	if(type  instanceof  Class  <?>  ||  type  instanceof  GenericArrayType)  {  return  false;  }	  if(type    instanceof    GenericArrayType    ||    type    instanceof    Class    <?>)    {    return    false;    }    	compilable	  [FE]  AssertionError  	146	2	replace
168	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  GenericArrayType)  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  GenericArrayType)  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  Class  <?>  ||  type  instanceof  GenericArrayType)  {  return  false;  }	  if(type    instanceof    GenericArrayType    ||    type    instanceof    Class    <?>)    {    return    false;    }    	compilable	  [FE]  AssertionError  	146	2	replace
169	[BUG]  [BUGGY]  Class  <?>  toGenericArrayType  ||  type  instanceof  GenericArrayType)  {  return  false;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Class  <?>  toGenericArrayType  ||  type  instanceof  GenericArrayType)  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Class  <?>  toGenericArrayType  ||  type  instanceof  GenericArrayType)  {  return  false;  }	  if(type    instanceof    GenericArrayType    ||    type    instanceof    Class    <?>)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	146	None	replace
170	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getGenericArrayType(type,  typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  getGenericArrayType(type,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  getGenericArrayType(type,  typeVarAssigns);	  GenericArrayType    toGenericArrayType    =    getGenericArrayType(type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	100	None	replace
171	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getGenericArrayType(type,  toComponentType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  getGenericArrayType(type,  toComponentType);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  getGenericArrayType(type,  toComponentType);	  GenericArrayType    toGenericArrayType    =    getGenericArrayType(type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	100	None	replace
172	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getGenericArrayType(type,  type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  getGenericArrayType(type,  type);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  getGenericArrayType(type,  type);	  GenericArrayType    toGenericArrayType    =    getGenericArrayType(type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	100	None	replace
173	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getGenericArrayType(type,  cls);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  getGenericArrayType(type,  cls);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  getGenericArrayType(type,  cls);	  GenericArrayType    toGenericArrayType    =    getGenericArrayType(type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	100	None	replace
174	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	if(type        instanceof        Class        <?>)        {        return        false;        }        else        if(toGenericArrayType.equals(type))        {        return        true;        }        if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	56	2	add
175	[BUG]  [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type        instanceof        Class        <?>)        {        return        false;        }        else        if(toGenericArrayType.equals(type))        {        return        true;        }        if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	56	2	add
176	[BUG]  [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(ToGenericArrayType.equals(type))  {  return  true;  }  [CE]  cannot  find  symbol  ToGenericArrayType  [FE]      AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(ToGenericArrayType.equals(type))  {  return  true;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type        instanceof        Class        <?>)        {        return        false;        }        else        if(toGenericArrayType.equals(type))        {        return        true;        }        if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(ToGenericArrayType.equals(type))  {  return  true;  }	  	non-compiled	[CE]  cannot  find  symbol  ToGenericArrayType	56	None	add
177	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  true;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	if(type        instanceof        Class        <?>)        {        return        false;        }        else        if(toGenericArrayType.equals(type))        {        return        true;        }        if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	56	2	add
178	[BUG]  [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  true;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  true;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type        instanceof        Class        <?>)        {        return        false;        }        else        if(toGenericArrayType.equals(type))        {        return        true;        }        if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	56	2	add
179	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  typeVarAssigns,  toComponentType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  typeVarAssigns,  toComponentType);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  typeVarAssigns,  toComponentType);	  GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type,    typeVarAssigns);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	143	None	replace
180	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType,  typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType,  typeVarAssigns);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType,  typeVarAssigns);	  GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type,    typeVarAssigns);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	143	None	replace
181	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  toGenericArrayType.getName());  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  toGenericArrayType.getName());  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Throwables.throw  new  IllegalArgumentException( " "  +  toGenericArrayType.getName());	  Throwables.throw    new    IllegalArgumentException(   "   ".equals(toGenericArrayType));    	non-compiled	[CE]  <identifier>  expected	76	None	replace
182	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(toGenericArrayType));  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(toGenericArrayType));  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Throwables.throw  new  IllegalArgumentException( " ").equals(toGenericArrayType));	  Throwables.throw    new    IllegalArgumentException(   "   ".equals(toGenericArrayType));    	non-compiled	[CE]  <identifier>  expected	76	None	replace
183	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  toGenericArrayType.equals(toGenericArrayType));  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  toGenericArrayType.equals(toGenericArrayType));  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Throwables.throw  new  IllegalArgumentException( " "  +  toGenericArrayType.equals(toGenericArrayType));	  Throwables.throw    new    IllegalArgumentException(   "   ".equals(toGenericArrayType));    	non-compiled	[CE]  <identifier>  expected	76	None	replace
184	[BUG]  [BUGGY]  AssertionError.throwAssertionError( "Unable  toGeneric  array  type: "  +  toGenericArrayType.getName());  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  AssertionError.throwAssertionError( "Unable  toGeneric  array  type: "  +  toGenericArrayType.getName());  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	AssertionError.throwAssertionError( "Unable  toGeneric  array  type: "  +  toGenericArrayType.getName());	  aughtExceptionHandler.throwAssertionError(   "Unable    toGeneric    array    type:   "    +    toGenericArrayType.getName());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
185	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.throwAssertionError( "Unable  toGeneric  array  type: "  +  toGenericArrayType.getName());  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.throwAssertionError( "Unable  toGeneric  array  type: "  +  toGenericArrayType.getName());  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  toGenericArrayType.throwAssertionError( "Unable  toGeneric  array  type: "  +  toGenericArrayType.getName());	  aughtExceptionHandler.throwAssertionError(   "Unable    toGeneric    array    type:   "    +    toGenericArrayType.getName());    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	3	None	replace
186	[BUG]  [BUGGY]  return  toGenericArrayType.isEmpty()  &&  isAssignable(type,  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return  toGenericArrayType.isEmpty()  &&  isAssignable(type,  toComponentType,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return  toGenericArrayType.isEmpty()  &&  isAssignable(type,  toComponentType,  typeVarAssigns);	  return!toGenericArrayType.isEmpty()    &&    isAssignable(type,    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
187	[BUG]  [BUGGY]  return!toGenericArrayType.isEmpty()  &&  isAssignable(type,  toComponentType,  typeVarAssigns,  toGenericArrayType);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return!toGenericArrayType.isEmpty()  &&  isAssignable(type,  toComponentType,  typeVarAssigns,  toGenericArrayType);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!toGenericArrayType.isEmpty()  &&  isAssignable(type,  toComponentType,  typeVarAssigns,  toGenericArrayType);	  return!toGenericArrayType.isEmpty()    &&    isAssignable(type,    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
188	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  types.getGenericArrayType(type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  types.getGenericArrayType(type);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  types.getGenericArrayType(type);	  GenericArrayType    toGenericArrayType    =    types.getGenericArrayType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	119	None	replace
189	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  types.toGenericArrayType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  types.toGenericArrayType();  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  types.toGenericArrayType();	  GenericArrayType    toGenericArrayType    =    types.getGenericArrayType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	119	None	replace
190	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  types.getGenericParameterTypes();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  types.getGenericParameterTypes();  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  types.getGenericParameterTypes();	  GenericArrayType    toGenericArrayType    =    types.getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	86	None	replace
191	[BUG]  [BUGGY]  Class  <?>  type  =  toGenericArrayType.getGenericParameterType();  [CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Class  <?>  type  =  toGenericArrayType.getGenericParameterType();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Class  <?>  type  =  toGenericArrayType.getGenericParameterType();	  Class    <?>    type    =    toGenericArrayType.getGenericParameterType(0);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	106	None	replace
192	[BUG]  [BUGGY]  Class  <?>  type  =  toGenericArrayType.getGenericParameterType(1);  [CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Class  <?>  type  =  toGenericArrayType.getGenericParameterType(1);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Class  <?>  type  =  toGenericArrayType.getGenericParameterType(1);	  Class    <?>    type    =    toGenericArrayType.getGenericParameterType(0);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	106	None	replace
193	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(1);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(1);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(1);	  GenericArrayType    toGenericArrayType    =    type.getGenericParameterType(0);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	27	None	replace
194	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGenericParameterType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGenericParameterType();  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  type.getGenericParameterType();	  GenericArrayType    toGenericArrayType    =    type.getGenericParameterType(0);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	27	None	replace
195	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  map);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  map);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  map);	  Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type,    typeVarAssigns);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	110	None	replace
196	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType,  typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType,  typeVarAssigns);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType,  typeVarAssigns);	  Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type,    typeVarAssigns);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	110	None	replace
197	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericExceptionHandler();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericExceptionHandler();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericExceptionHandler();	  aughtExceptionHandler(toGenericArrayType);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	125	None	replace
198	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGenericParameterType(2);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGenericParameterType(2);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  type.getGenericParameterType(2);	  GenericArrayType    toGenericArrayType    =    type.getGenericParameterType(1);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	28	None	replace
199	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")&&  toGenericArrayType.equals(type);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")&&  toGenericArrayType.equals(type);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Throwables.throw  new  IllegalArgumentException( " ")&&  toGenericArrayType.equals(type);	  throw    new    IllegalArgumentException(   "   ")    &&    toGenericArrayType.equals(type);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
200	[BUG]  [BUGGY]  Throwable  toGenericArrayType  =  new  IllegalArgumentException( " ")  &&  toGenericArrayType.equals(type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Throwable  toGenericArrayType  =  new  IllegalArgumentException( " ")  &&  toGenericArrayType.equals(type);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Throwable  toGenericArrayType  =  new  IllegalArgumentException( " ")  &&  toGenericArrayType.equals(type);	  throw    new    IllegalArgumentException(   "   ")    &&    toGenericArrayType.equals(type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	77	None	replace
201	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ")  &&  toGenericArrayType.equals(type,  toGenericArrayType);  [CE]  method  equals  in  class  Object  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  throw  new  IllegalArgumentException( " ")  &&  toGenericArrayType.equals(type,  toGenericArrayType);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	throw  new  IllegalArgumentException( " ")  &&  toGenericArrayType.equals(type,  toGenericArrayType);	  throw    new    IllegalArgumentException(   "   ")    &&    toGenericArrayType.equals(type);    	non-compiled	[CE]  method  equals  in  class  Object  cannot  be  applied  to  given  types;	77	None	replace
202	[BUG]  [BUGGY]  Class  <?>  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Class  <?>  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Class  <?>  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();	  if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type    instanceof    GenericArrayType)    {    return    false;    }    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	64	None	replace
203	[BUG]  [BUGGY]  Class  <?>  toGenericArrayType  =  toGenericArrayType.getGenericClass();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Class  <?>  toGenericArrayType  =  toGenericArrayType.getGenericClass();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Class  <?>  toGenericArrayType  =  toGenericArrayType.getGenericClass();	  if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type    instanceof    GenericArrayType)    {    return    false;    }    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	64	None	replace
204	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  true;  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  true;  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  true;	  GenericArrayType    toGenericArrayType    =    false;    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	102	None	replace
205	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericArrayType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericArrayType();  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericArrayType();	  GenericArrayType    toGenericArrayType    =    typeVarAssigns.getGenericArrayType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	94	None	replace
206	[BUG]  [BUGGY]  Class  <?>  toComponentType  =  typeVarAssigns.get(0);  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Class  <?>  toComponentType  =  typeVarAssigns.get(0);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Class  <?>  toComponentType  =  typeVarAssigns.get(0);	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  incompatible  types	41	None	replace
207	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(2);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(2);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  type.getGenericParameterType(2);	  Type    toGenericArrayType    =    type.getGenericParameterType(1);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	44	None	replace
208	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.toGeneric();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Type  toGenericArrayType  =  type.toGeneric();  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  type.toGeneric();	  Type    toGenericArrayType    =    type.getGeneric();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	50	None	replace
209	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(toGenericArrayType.equals(type))  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	if(toGenericArrayType.equals(type))  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  }	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    if(typeVarAssigns!=    null)    {    return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    }    	compilable	  [FE]  AssertionError  	128	2	replace
210	[BUG]  [BUGGY]  if(toGenericArrayType.equals(type))  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  }  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(toGenericArrayType.equals(type))  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(toGenericArrayType.equals(type))  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  }	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    if(typeVarAssigns!=    null)    {    return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    }    	compilable	  [FE]  AssertionError  	128	2	replace
211	[BUG]  [BUGGY]  return  new  IllegalArgumentException( " ")  &&  toGenericArrayType.isAssignableFrom(type);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return  new  IllegalArgumentException( " ")  &&  toGenericArrayType.isAssignableFrom(type);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return  new  IllegalArgumentException( " ")  &&  toGenericArrayType.isAssignableFrom(type);	  return    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
212	[BUG]  [BUGGY]  return  new  IllegalArgumentException( "Unknown  type: "  +  toGenericArrayType);  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return  new  IllegalArgumentException( "Unknown  type: "  +  toGenericArrayType);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return  new  IllegalArgumentException( "Unknown  type: "  +  toGenericArrayType);	  return    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  incompatible  types	150	None	replace
213	[BUG]  [BUGGY]  return  new  IllegalArgumentException( " ")  &&  toGenericArrayType.equals(type);  [CE]  bad  operand  types  for  binary  operator  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return  new  IllegalArgumentException( " ")  &&  toGenericArrayType.equals(type);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return  new  IllegalArgumentException( " ")  &&  toGenericArrayType.equals(type);	  return    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  bad  operand  types  for  binary  operator  	150	None	replace
214	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.toGenericArrayType.getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Type  toGenericArrayType  =  type.toGenericArrayType.getGenericComponentType();  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  type.toGenericArrayType.getGenericComponentType();	  Type    toGenericArrayType    =    type.toGenericArrayType.getGeneric();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	114	None	replace
215	[BUG]  [BUGGY]  return  toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  typeVarAssigns,  toGenericArrayType);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return  toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  typeVarAssigns,  toGenericArrayType);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return  toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  typeVarAssigns,  toGenericArrayType);	  return    toGenericArrayType.isEmpty()    &&    isAssignable(type,    typeVarAssigns,    toGenericArrayType);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
216	[BUG]  [BUGGY]  return  type.isEmpty()  &&  isAssignable(toGenericArrayType,  typeVarAssigns,  toGenericArrayType);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return  type.isEmpty()  &&  isAssignable(toGenericArrayType,  typeVarAssigns,  toGenericArrayType);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return  type.isEmpty()  &&  isAssignable(toGenericArrayType,  typeVarAssigns,  toGenericArrayType);	  return    toGenericArrayType.isEmpty()    &&    isAssignable(type,    typeVarAssigns,    toGenericArrayType);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
217	[BUG]  [BUGGY]  return  toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return  toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return  toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);	  return!typeVarAssigns.isEmpty()    &&    isAssignable(toGenericArrayType,    type,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
218	[BUG]  [BUGGY]  return!toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return!toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);	  return!typeVarAssigns.isEmpty()    &&    isAssignable(toGenericArrayType,    type,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
219	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(toGenericArrayType);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  aughtExceptionHandler.handleMissingClass(toGenericArrayType);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	aughtExceptionHandler.handleMissingClass(toGenericArrayType);	  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type    instanceof    GenericArrayType)    ==    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	123	None	replace
220	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.unknown.type ",  type);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.unknown.type ",  type);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	aughtExceptionHandler.throwAssertionError( "msg.unknown.type ",  type);	  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type    instanceof    GenericArrayType)    ==    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	123	None	replace
221	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.no.generic.ArrayType ");  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.no.generic.ArrayType ");  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	aughtExceptionHandler.throwAssertionError( "msg.no.generic.ArrayType ");	  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type    instanceof    GenericArrayType)    ==    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	123	None	replace
222	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.bad.type.generic.ArrayType ");  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.bad.type.generic.ArrayType ");  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	aughtExceptionHandler.throwAssertionError( "msg.bad.type.generic.ArrayType ");	  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type    instanceof    GenericArrayType)    ==    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	123	None	replace
223	[BUG]  [BUGGY]  aughtExceptionHandler(type,  toGenericArrayType);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  aughtExceptionHandler(type,  toGenericArrayType);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	aughtExceptionHandler(type,  toGenericArrayType);	  aughtExceptionHandler(toGenericArrayType,    type);    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
224	[BUG]  [BUGGY]  aughtExceptionHandler(toGenericArrayType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  aughtExceptionHandler(toGenericArrayType,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	aughtExceptionHandler(toGenericArrayType,  typeVarAssigns);	  aughtExceptionHandler(toGenericArrayType,    type);    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
225	[BUG]  [BUGGY]  aughtExceptionHandler(toGenericArrayType,  toGenericArrayType);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  aughtExceptionHandler(toGenericArrayType,  toGenericArrayType);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	aughtExceptionHandler(toGenericArrayType,  toGenericArrayType);	  aughtExceptionHandler(toGenericArrayType,    type);    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
226	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  toGenericArrayType  =  toGenericArrayType.getGeneric();  }  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  toGenericArrayType  =  toGenericArrayType.getGeneric();  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  Class  <?>)  {  return  false;  toGenericArrayType  =  toGenericArrayType.getGeneric();  }	  return    false;    GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGeneric();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
227	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(type  instanceof  Class  <?>)  {  return  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGeneric();  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(type  instanceof  Class  <?>)  {  return  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGeneric();  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(type  instanceof  Class  <?>)  {  return  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGeneric();  }	  return    false;    GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGeneric();    	non-compiled	[CE]  ';'  expected	13	None	replace
228	[BUG]  [BUGGY]  Class  <?>  toGenericArrayType  =  toGenericArrayType.getGenericParameterTypes();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Class  <?>  toGenericArrayType  =  toGenericArrayType.getGenericParameterTypes();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Class  <?>  toGenericArrayType  =  toGenericArrayType.getGenericParameterTypes();	  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type    instanceof    GenericArrayType)    {    return    true;    }    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	37	None	replace
229	[BUG]  [BUGGY]  }  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.isAssignableFrom(type))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.isAssignableFrom(type))  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.isAssignableFrom(type))  {  return  false;  }	  }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
230	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.isAssignableFrom(type))  {  return  true;  }  [CE]  inconvertible  types  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(toGenericArrayType  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.isAssignableFrom(type))  {  return  true;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(toGenericArrayType  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.isAssignableFrom(type))  {  return  true;  }	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.isAssignableFrom(type))    {    return    true;    }    	non-compiled	[CE]  inconvertible  types	16	None	replace
231	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  Class  <?>)  {  return  false;  }  else  if(type.isAssignableFrom(toGenericArrayType))  {  return  true;  }  [CE]  inconvertible  types  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(toGenericArrayType  instanceof  Class  <?>)  {  return  false;  }  else  if(type.isAssignableFrom(toGenericArrayType))  {  return  true;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(toGenericArrayType  instanceof  Class  <?>)  {  return  false;  }  else  if(type.isAssignableFrom(toGenericArrayType))  {  return  true;  }	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.isAssignableFrom(type))    {    return    true;    }    	non-compiled	[CE]  inconvertible  types	16	None	replace
232	[BUG]  [BUGGY]  Class  <?>  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Class  <?>  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Class  <?>  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    Class    <?>    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	70	None	replace
233	[BUG]  [BUGGY]  typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(0);    return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  not  a  statement	116	None	replace
234	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(0);    return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	116	None	replace
235	[BUG]  [BUGGY]  }  else  if(!toGenericArrayType.isAssignableFrom(typeVarAssigns))  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(!toGenericArrayType.isAssignableFrom(typeVarAssigns))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(!toGenericArrayType.isAssignableFrom(typeVarAssigns))  {	  [Delete]    else    if(!toGenericArrayType.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
236	[BUG]  [BUGGY]  }  else  if(toGenericArrayType.isAssignableFrom(type)||  toGenericArrayType.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.isAssignableFrom(type)||  toGenericArrayType.isAssignableFrom(type))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(toGenericArrayType.isAssignableFrom(type)||  toGenericArrayType.isAssignableFrom(type))  {	  [Delete]    else    if(!toGenericArrayType.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
237	[BUG]  [BUGGY]  }  else  if(!toGenericArrayType.isAssignableFrom(type,  toComponentType))  {  [CE]  cannot  find  symbol  toComponentType  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(!toGenericArrayType.isAssignableFrom(type,  toComponentType))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(!toGenericArrayType.isAssignableFrom(type,  toComponentType))  {	  [Delete]    else    if(!toGenericArrayType.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  toComponentType	154	None	replace
238	[BUG]  [BUGGY]  }  else  if(!toGenericArrayType.isAssignableFrom(type)||  toGenericArrayType.isInterface())  {  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(!toGenericArrayType.isAssignableFrom(type)||  toGenericArrayType.isInterface())  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(!toGenericArrayType.isAssignableFrom(type)||  toGenericArrayType.isInterface())  {	  [Delete]    else    if(!toGenericArrayType.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
239	[BUG]  [BUGGY]  if(toGenericArrayType.isArray())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(toGenericArrayType.isArray())  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(toGenericArrayType.isArray())  {  return  false;  }	  if(type.isArray())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
240	[BUG]  [BUGGY]  if(type.isArray()  ||  toGenericArrayType.isAssignableFrom(type))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type.isArray()  ||  toGenericArrayType.isAssignableFrom(type))  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type.isArray()  ||  toGenericArrayType.isAssignableFrom(type))  {  return  false;  }	  if(type.isArray())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
241	[BUG]  [BUGGY]  if(type.isArray()  ||  toGenericArrayType.isInterface())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type.isArray()  ||  toGenericArrayType.isInterface())  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type.isArray()  ||  toGenericArrayType.isInterface())  {  return  false;  }	  if(type.isArray())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
242	[BUG]  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!typeVarAssigns.isEmpty()    &&    isAssignable(toGenericArrayType,    type,    typeVarAssigns);    return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);	  	non-compiled	[CE]  unreachable  statement	130	None	add
243	[BUG]  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  }  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!typeVarAssigns.isEmpty()    &&    isAssignable(toGenericArrayType,    type,    typeVarAssigns);    if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  }	  	non-compiled	[CE]  unreachable  statement	130	None	add
244	[BUG]  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!typeVarAssigns.isEmpty()    &&    isAssignable(toGenericArrayType,    type,    typeVarAssigns);    Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);	  	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	130	None	add
245	[BUG]  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!typeVarAssigns.isEmpty()    &&    isAssignable(toGenericArrayType,    type,    typeVarAssigns);    Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();	  	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	130	None	add
246	[BUG]  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGeneric();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGeneric();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!typeVarAssigns.isEmpty()    &&    isAssignable(toGenericArrayType,    type,    typeVarAssigns);    Type  toGenericArrayType  =  toGenericArrayType.getGeneric();	  	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	130	None	add
247	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(type));  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(type));  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(type));	  throw    new    IllegalArgumentException(       "       ");    Throwables.throw    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
248	[BUG]  [BUGGY]  Class  <?>  toComponentType  =  toGenericArrayType.getParameterTypes();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Class  <?>  toComponentType  =  toGenericArrayType.getParameterTypes();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Class  <?>  toComponentType  =  toGenericArrayType.getParameterTypes();	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    If(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
249	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGenericParameterType(type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGenericParameterType(type);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  type.getGenericParameterType(type);	  GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type,    type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	18	None	replace
250	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  type.toGenericArrayType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  type.toGenericArrayType();  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  type.toGenericArrayType();	  GenericArrayType    toGenericArrayType    =    type.getGenericArrayType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	136	None	replace
251	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericParameterType(type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericParameterType(type);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericParameterType(type);	  GenericArrayType    toGenericArrayType    =    typeVarAssigns.getGenericParameterType(0);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	120	None	replace
252	[BUG]  [BUGGY]  if(typeVarAssigns.isEmpty())  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGen  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(typeVarAssigns.isEmpty())  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGen  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(typeVarAssigns.isEmpty())  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGen	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  ';'  expected	118	None	replace
253	[BUG]  [BUGGY]  typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  not  a  statement	118	None	replace
254	[BUG]  [BUGGY]  if(typeVarAssigns.isEmpty())  {  return  typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGen  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(typeVarAssigns.isEmpty())  {  return  typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGen  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(typeVarAssigns.isEmpty())  {  return  typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGen	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  ';'  expected	118	None	replace
255	[BUG]  [BUGGY]  }  else  if(type.equals(toGenericArrayType)||  toGenericArrayType.equals(type))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(type.equals(toGenericArrayType)||  toGenericArrayType.equals(type))  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(type.equals(toGenericArrayType)||  toGenericArrayType.equals(type))  {  return  false;  }	  }    else    if(toGenericArrayType.equals(type)||    toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
256	[BUG]  [BUGGY]  }  else  if(toGenericArrayType.equals(type)&&  toGenericArrayType.equals(type))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.equals(type)&&  toGenericArrayType.equals(type))  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(toGenericArrayType.equals(type)&&  toGenericArrayType.equals(type))  {  return  false;  }	  }    else    if(toGenericArrayType.equals(type)||    toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
257	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGenericParameterType(typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGenericParameterType(typeVarAssigns);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  type.getGenericParameterType(typeVarAssigns);	  GenericArrayType    toGenericArrayType    =    type.getGenericParameterType(toGenericArrayType);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	19	None	replace
258	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Throwable  throwable  =  new  IllegalArgumentException( " ");  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	Throwable  throwable  =  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(       "       ");    throw    new    IllegalArgumentException(   "       ");    	compilable	  [FE]  AssertionError  	78	2	replace
259	[BUG]  [BUGGY]  Throwable  throwable  =  new  IllegalArgumentException( " ");  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Throwable  throwable  =  new  IllegalArgumentException( " ");  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Throwable  throwable  =  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(       "       ");    throw    new    IllegalArgumentException(   "       ");    	compilable	  [FE]  AssertionError  	78	2	replace
260	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  TypeUtils.getGenericArrayType(type,  toGenericArrayType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  TypeUtils.getGenericArrayType(type,  toGenericArrayType);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  TypeUtils.getGenericArrayType(type,  toGenericArrayType);	  GenericArrayType    toGenericArrayType    =    TypeUtils.getGenericArrayType(type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	26	None	replace
261	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  TypeUtils.getGenericArrayType(toGenericArrayType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  TypeUtils.getGenericArrayType(toGenericArrayType);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  TypeUtils.getGenericArrayType(toGenericArrayType);	  GenericArrayType    toGenericArrayType    =    TypeUtils.getGenericArrayType(type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	26	None	replace
262	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  TypeUtils.getGenericArrayType(type,  toComponentType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  TypeUtils.getGenericArrayType(type,  toComponentType);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  TypeUtils.getGenericArrayType(type,  toComponentType);	  GenericArrayType    toGenericArrayType    =    TypeUtils.getGenericArrayType(type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	26	None	replace
263	[BUG]  [BUGGY]  Constructor  <?>  toGenericArrayType  =  toGenericArrayType.getGenericConstructor();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Constructor  <?>  toGenericArrayType  =  toGenericArrayType.getGenericConstructor();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Constructor  <?>  toGenericArrayType  =  toGenericArrayType.getGenericConstructor();	  [Delete]    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	152	None	replace
264	[BUG]  [BUGGY]  Constructor  <?>  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Constructor  <?>  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Constructor  <?>  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();	  [Delete]    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	152	None	replace
265	[BUG]  [BUGGY]  Constructor  <?>  toGenericArrayType  =  toGenericArrayType.getGeneric();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Constructor  <?>  toGenericArrayType  =  toGenericArrayType.getGeneric();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Constructor  <?>  toGenericArrayType  =  toGenericArrayType.getGeneric();	  [Delete]    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	152	None	replace
266	[BUG]  [BUGGY]  Constructor  <?>  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Constructor  <?>  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Constructor  <?>  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type);	  [Delete]    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	152	None	replace
267	[BUG]  [BUGGY]  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(toGenericArrayType.equals(type))  {  return  true;  }	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(ToGenericArrayType.equals(type))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
268	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Throwables.throw  new  IllegalStateException( " ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	122	None	replace
269	[BUG]  [BUGGY]  return  new  IllegalStateException( " ");  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return  new  IllegalStateException( " ");  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return  new  IllegalStateException( " ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  incompatible  types	122	None	replace
270	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGenericParameterType(cls);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGenericParameterType(cls);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  type.getGenericParameterType(cls);	  GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type,    cls);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	20	None	replace
271	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  cls,  type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  cls,  type);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  cls,  type);	  GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type,    cls);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	20	None	replace
272	[BUG]  [BUGGY]  }  else  if(!toGenericArrayType.equals(typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(!toGenericArrayType.equals(typeVarAssigns))  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(!toGenericArrayType.equals(typeVarAssigns))  {  return  false;  }	  }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
273	[BUG]  [BUGGY]  }  else  if(!toGenericArrayType.isAssignableFrom(type))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(!toGenericArrayType.isAssignableFrom(type))  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(!toGenericArrayType.isAssignableFrom(type))  {  return  false;  }	  }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
274	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(typeVarAssigns);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  type.getGenericParameterType(typeVarAssigns);	  Type    toGenericArrayType    =    type.getGenericParameterType(toGenericArrayType);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	82	None	replace
275	[BUG]  [BUGGY]  if(type.isAssignableFrom(toGenericArrayType))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type.isAssignableFrom(toGenericArrayType))  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type.isAssignableFrom(toGenericArrayType))  {  return  false;  }	  return    false;    return    false;    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
276	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericParameterType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericParameterType();  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericParameterType();	  GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericParameterType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	29	None	replace
277	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  types.getGenericParameterType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  types.getGenericParameterType();  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  types.getGenericParameterType();	  GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericParameterType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	29	None	replace
278	[BUG]  [BUGGY]  AnnotationType  toGenericArrayType  =  type.getAnnotationType();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  AnnotationType  toGenericArrayType  =  type.getAnnotationType();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	AnnotationType  toGenericArrayType  =  type.getAnnotationType();	  AnnotationType    toGenericArrayType    =    toGenericArrayType.getAnnotationType();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
279	[BUG]  [BUGGY]  AnnotationType  toGenericArrayType  =  TypeUtils.getAnnotationType(toGenericArrayType);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  AnnotationType  toGenericArrayType  =  TypeUtils.getAnnotationType(toGenericArrayType);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	AnnotationType  toGenericArrayType  =  TypeUtils.getAnnotationType(toGenericArrayType);	  AnnotationType    toGenericArrayType    =    toGenericArrayType.getAnnotationType();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
280	[BUG]  [BUGGY]  AnnotationType  toGenericArrayType  =  types.getAnnotationType();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  AnnotationType  toGenericArrayType  =  types.getAnnotationType();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	AnnotationType  toGenericArrayType  =  types.getAnnotationType();	  AnnotationType    toGenericArrayType    =    toGenericArrayType.getAnnotationType();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
281	[BUG]  [BUGGY]  }  else  if(!toGenericArrayType.contains(typeVarAssigns))  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(!toGenericArrayType.contains(typeVarAssigns))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(!toGenericArrayType.contains(typeVarAssigns))  {	  }    else    if(!typeVarAssigns.contains(toGenericArrayType))    {    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
282	[BUG]  [BUGGY]  }  else  if(!toGenericArrayType.contains(type))  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(!toGenericArrayType.contains(type))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(!toGenericArrayType.contains(type))  {	  }    else    if(!typeVarAssigns.contains(toGenericArrayType))    {    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
283	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.equals(typeVarAssigns))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	}  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.equals(typeVarAssigns))  {	  [Delete]    else    if(toGenericArrayType.equals(type))    {    	compilable	  [FE]  AssertionError  	139	2	replace
284	[BUG]  [BUGGY]  }  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.equals(typeVarAssigns))  {  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.equals(typeVarAssigns))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.equals(typeVarAssigns))  {	  [Delete]    else    if(toGenericArrayType.equals(type))    {    	compilable	  [FE]  AssertionError  	139	2	replace
285	[BUG]  [BUGGY]  }  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.isAssignableFrom(type))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.isAssignableFrom(type))  {	  [Delete]    else    if(toGenericArrayType.equals(type))    {    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
286	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType();    return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	117	None	replace
287	[BUG]  [BUGGY]  if(toGenericArrayType.isAssignableFrom(type)||  toGenericArrayType.isAssignableFrom(type))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(toGenericArrayType.isAssignableFrom(type)||  toGenericArrayType.isAssignableFrom(type))  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(toGenericArrayType.isAssignableFrom(type)||  toGenericArrayType.isAssignableFrom(type))  {  return  false;  }	  if(toGenericArrayType.isAssignableFrom(type))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
288	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.isAssignableFrom(type))  {  return  false;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.isAssignableFrom(type))  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  toGenericArrayType.isAssignableFrom(type))  {  return  false;  }	  if(toGenericArrayType.isAssignableFrom(type))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	17	None	replace
289	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "));  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "));  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Throwables.throw  new  IllegalArgumentException( " "));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	75	None	replace
290	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	if(type        instanceof        GenericArrayType)        {        return        true;        }        if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }	  	compilable	  [FE]  AssertionError  	36	2	add
291	[BUG]  [BUGGY]  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type        instanceof        GenericArrayType)        {        return        true;        }        if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }	  	compilable	  [FE]  AssertionError  	36	2	add
292	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	if(type        instanceof        GenericArrayType)        {        return        true;        }        if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }	  	compilable	  [FE]  AssertionError  	36	2	add
293	[BUG]  [BUGGY]  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type        instanceof        GenericArrayType)        {        return        true;        }        if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }	  	compilable	  [FE]  AssertionError  	36	2	add
294	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	if(type        instanceof        GenericArrayType)        {        return        true;        }        if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }	  	compilable	  [FE]  AssertionError  	36	2	add
295	[BUG]  [BUGGY]  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type        instanceof        GenericArrayType)        {        return        true;        }        if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }	  	compilable	  [FE]  AssertionError  	36	2	add
296	[BUG]  [BUGGY]  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type        instanceof        GenericArrayType)        {        return        true;        }        if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true	  	non-compiled	[CE]  ';'  expected	36	None	add
297	[BUG]  [BUGGY]  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type        instanceof        GenericArrayType)        {        return        true;        }        if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
298	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getGenericArrayType(typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  getGenericArrayType(typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  getGenericArrayType(typeVarAssigns);	  GenericArrayType    toGenericArrayType    =    getGenericArrayType(type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	100	None	replace
299	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getGenericArrayType(type,  toGenericArrayType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  getGenericArrayType(type,  toGenericArrayType);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  getGenericArrayType(type,  toGenericArrayType);	  GenericArrayType    toGenericArrayType    =    getGenericArrayType(type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	100	None	replace
300	[BUG]  [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  Type  type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  Type  type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type        instanceof        Class        <?>)        {        return        false;        }        else        if(toGenericArrayType.equals(type))        {        return        false;        }        if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    Type  type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	7	None	add
301	[BUG]  [BUGGY]  }  else  if(type.isAssignableFrom(toGenericArrayType))  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(type.isAssignableFrom(toGenericArrayType))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(type.isAssignableFrom(toGenericArrayType))  {	  [Delete]    else    if(!toGenericArrayType.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
302	[BUG]  [BUGGY]  }  else  if(toGenericArrayType.isAssignableFrom(type)||  toGenericArrayType.isAssignableFrom(typeVarAssigns))  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.isAssignableFrom(type)||  toGenericArrayType.isAssignableFrom(typeVarAssigns))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(toGenericArrayType.isAssignableFrom(type)||  toGenericArrayType.isAssignableFrom(typeVarAssigns))  {	  [Delete]    else    if(!toGenericArrayType.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
303	[BUG]  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!typeVarAssigns.isEmpty()    &&    isAssignable(toGenericArrayType,    type,    typeVarAssigns);    Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);	  	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	130	None	add
304	[BUG]  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  Class  <?>  typeVarAssigns  =  toGenericArrayType.getGenericParameterTypes();  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  Class  <?>  typeVarAssigns  =  toGenericArrayType.getGenericParameterTypes();  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!typeVarAssigns.isEmpty()    &&    isAssignable(toGenericArrayType,    type,    typeVarAssigns);    Class  <?>  typeVarAssigns  =  toGenericArrayType.getGenericParameterTypes();  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);	  	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	130	None	add
305	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType,  type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType,  type);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType,  type);	  GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type,    type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	18	None	replace
306	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  types.getGenericArrayType(0);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  types.getGenericArrayType(0);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  types.getGenericArrayType(0);	  GenericArrayType    toGenericArrayType    =    types.getGenericArrayType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	119	None	replace
307	[BUG]  [BUGGY]  if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGen  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGen  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGen	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(0);    return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  ';'  expected	116	None	replace
308	[BUG]  [BUGGY]  if(toGenericArrayType!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGen  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(toGenericArrayType!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGen  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(toGenericArrayType!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGen	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(0);    return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  ';'  expected	116	None	replace
309	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  }  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  Class  <?>)  {  return  false;  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  }	  return    false;    GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericParameterType();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
310	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	if(type  instanceof  Class  <?>)  {  return  false;  }	  return    false;    GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericParameterType();    	compilable	  [FE]  AssertionError  	14	2	replace
311	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  Class  <?>)  {  return  false;  }	  return    false;    GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericParameterType();    	compilable	  [FE]  AssertionError  	14	2	replace
312	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericArrayType(1);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericArrayType(1);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericArrayType(1);	  GenericArrayType    toGenericArrayType    =    typeVarAssigns.getGenericArrayType(0);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	144	None	replace
313	[BUG]  [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGeneric(toGenericArrayType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGeneric(toGenericArrayType);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  typeVarAssigns.getGeneric(toGenericArrayType);	  Type    toGenericArrayType    =    typeVarAssigns.getGeneric();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	51	None	replace
314	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  new  GenericArrayType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  new  GenericArrayType();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  new  GenericArrayType();	  GenericArrayType    toGenericArrayType    =    null;    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	103	None	replace
315	[BUG]  [BUGGY]  [Delete]  else  if(toGenericArrayType.contains(typeVarAssigns))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  [Delete]  else  if(toGenericArrayType.contains(typeVarAssigns))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	[Delete]  else  if(toGenericArrayType.contains(typeVarAssigns))  {	  [Delete]    else    if(typeVarAssigns.contains(toGenericArrayType))    {    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
316	[BUG]  [BUGGY]  }  else  if(typeVarAssigns.contains(toGenericArrayType)||  toGenericArrayType.getGenericComponentType()!=  null)  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(typeVarAssigns.contains(toGenericArrayType)||  toGenericArrayType.getGenericComponentType()!=  null)  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(typeVarAssigns.contains(toGenericArrayType)||  toGenericArrayType.getGenericComponentType()!=  null)  {	  [Delete]    else    if(typeVarAssigns.contains(toGenericArrayType))    {    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
317	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(toGenericArrayType));  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(toGenericArrayType));  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	throw  new  IllegalArgumentException( " ".equals(toGenericArrayType));	  throw    new    IllegalArgumentException(       "       ");    Throwable    throw    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)	111	None	replace
318	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  toGenericArrayType  =  toGenericArrayType.getGenericArray();  }  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  toGenericArrayType  =  toGenericArrayType.getGenericArray();  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  Class  <?>)  {  return  false;  toGenericArrayType  =  toGenericArrayType.getGenericArray();  }	  return    false;    GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericArray();    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
319	[BUG]  [BUGGY]  return  false;  toGenericArrayType  =  toGenericArrayType.getGenericArray();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return  false;  toGenericArrayType  =  toGenericArrayType.getGenericArray();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return  false;  toGenericArrayType  =  toGenericArrayType.getGenericArray();	  return    false;    GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericArray();    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
320	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  }	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	68	2	replace
321	[BUG]  [BUGGY]  if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  }  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  }	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	68	2	replace
322	[BUG]  [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGenericParameterType(1);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGenericParameterType(1);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  typeVarAssigns.getGenericParameterType(1);	  Type    toGenericArrayType    =    typeVarAssigns.getGenericParameterType(0);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	95	None	replace
323	[BUG]  [BUGGY]  return  false;  toGenericArrayType  =  toGenericArrayType.getGeneric();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return  false;  toGenericArrayType  =  toGenericArrayType.getGeneric();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return  false;  toGenericArrayType  =  toGenericArrayType.getGeneric();	  return    false;    GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGeneric();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
324	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGenericArrayType(type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGenericArrayType(type);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  type.getGenericArrayType(type);	  GenericArrayType    toGenericArrayType    =    type.getGenericArrayType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	136	None	replace
325	[BUG]  [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  Class  <?>  type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  Class  <?>  type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type        instanceof        Class        <?>)        {        return        false;        }        else        if(toGenericArrayType.equals(type))        {        return        true;        }        if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    Class  <?>  type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }	  	non-compiled	[CE]  ';'  expected	56	None	add
326	[BUG]  [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  Type  type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  Type  type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type        instanceof        Class        <?>)        {        return        false;        }        else        if(toGenericArrayType.equals(type))        {        return        true;        }        if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    Type  type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }	  	non-compiled	[CE]  ';'  expected	56	None	add
327	[BUG]  [BUGGY]  return  types.isAssignableFrom(toGenericArrayType);  [CE]  cannot  find  symbol  types  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return  types.isAssignableFrom(toGenericArrayType);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return  types.isAssignableFrom(toGenericArrayType);	          return    toGenericArrayType.isAssignableFrom(type);    	non-compiled	[CE]  cannot  find  symbol  types	39	None	replace
328	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getGenericArrayType().getGenericParameterType(0);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  getGenericArrayType().getGenericParameterType(0);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  getGenericArrayType().getGenericParameterType(0);	  GenericArrayType    toGenericArrayType    =    getGenericArrayType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	101	None	replace
329	[BUG]  [BUGGY]  Type  toGenericArrayType  =  types.getGenericArrayType(0);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Type  toGenericArrayType  =  types.getGenericArrayType(0);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  types.getGenericArrayType(0);	  Type    toGenericArrayType    =    types.getGenericParameterType(0);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	149	None	replace
330	[BUG]  [BUGGY]  Class  <?>  type  =  toGenericArrayType.getGenericPropertyType(type);  [CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Class  <?>  type  =  toGenericArrayType.getGenericPropertyType(type);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Class  <?>  type  =  toGenericArrayType.getGenericPropertyType(type);	  Class    <?>    type    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	105	None	replace
331	[BUG]  [BUGGY]  Class  <?>  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Class  <?>  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Class  <?>  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);	  if(type    instanceof    GenericArrayType)    {    return    false;    }    If(type    instanceof    GenericArrayType)    {    return    false;    }    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	65	None	replace
332	[BUG]  [BUGGY]  return  new  IllegalArgumentException( " ")  &&  typeVarAssigns.contains(toGenericArrayType);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return  new  IllegalArgumentException( " ")  &&  typeVarAssigns.contains(toGenericArrayType);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return  new  IllegalArgumentException( " ")  &&  typeVarAssigns.contains(toGenericArrayType);	  return    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
333	[BUG]  [BUGGY]  return  new  IllegalArgumentException( " ")  &&  typeVarAssigns.containsKey(toGenericArrayType);  [CE]  bad  operand  types  for  binary  operator  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return  new  IllegalArgumentException( " ")  &&  typeVarAssigns.containsKey(toGenericArrayType);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return  new  IllegalArgumentException( " ")  &&  typeVarAssigns.containsKey(toGenericArrayType);	  return    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  bad  operand  types  for  binary  operator  	150	None	replace
334	[BUG]  [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  Type  type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  Type  type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type        instanceof        Class        <?>)        {        return        false;        }        else        if(!toGenericArrayType.equals(type))        {        return        false;        }        if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    Type  type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	40	None	add
335	[BUG]  [BUGGY]  return!toComponentType.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [CE]  cannot  find  symbol  toComponentType  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return!toComponentType.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!toComponentType.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);	  return!toComponentType.isEmpty()    &&    isAssignable(toGenericArrayType,    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  toComponentType	115	None	replace
336	[BUG]  [BUGGY]  if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGene  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGene  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGene	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  ';'  expected	118	None	replace
337	[BUG]  [BUGGY]  if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  }	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	118	None	replace
338	[BUG]  [BUGGY]  return!toComponentType.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  [CE]  cannot  find  symbol  toComponentType  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return!toComponentType.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!toComponentType.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);	  return!typeVarAssigns.isEmpty()    &&    isAssignable(toComponentType,    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  toComponentType	61	None	replace
339	[BUG]  [BUGGY]  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}	  }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
340	[BUG]  [BUGGY]  }  else  if(toGenericArrayType.getGenericComponentType()  ==  type)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.getGenericComponentType()  ==  type)  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(toGenericArrayType.getGenericComponentType()  ==  type)  {  return  false;  }	  }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
341	[BUG]  [BUGGY]  }  else  if(toGenericArrayType.isArray())  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.isArray())  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(toGenericArrayType.isArray())  {	  }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
342	[BUG]  [BUGGY]  }  else  if(toGenericArrayType.getGenericComponentType()!=  type)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.getGenericComponentType()!=  type)  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(toGenericArrayType.getGenericComponentType()!=  type)  {  return  false;  }	  }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
343	[BUG]  [BUGGY]  return(toGenericArrayType  ==  null)?  null  :  type.getGeneric();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return(toGenericArrayType  ==  null)?  null  :  type.getGeneric();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return(toGenericArrayType  ==  null)?  null  :  type.getGeneric();	  return(toGenericArrayType    ==    null)?    null    :    toGenericArrayType.getGeneric();    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
344	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(type  instanceof  GenericArrayType)  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	}  else  if(type  instanceof  GenericArrayType)  {	  if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type    instanceof    GenericArrayType)    <    return    false;    }    	compilable	  [FE]  AssertionError  	132	2	replace
345	[BUG]  [BUGGY]  }  else  if(type  instanceof  GenericArrayType)  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(type  instanceof  GenericArrayType)  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(type  instanceof  GenericArrayType)  {	  if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type    instanceof    GenericArrayType)    <    return    false;    }    	compilable	  [FE]  AssertionError  	132	2	replace
346	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(type  instanceof  GenericArrayType)  {  if(toGenericArrayType  ==  null)  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	}  else  if(type  instanceof  GenericArrayType)  {  if(toGenericArrayType  ==  null)  {  return  false;  }	  if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type    instanceof    GenericArrayType)    <    return    false;    }    	compilable	  [FE]  AssertionError  	132	2	replace
347	[BUG]  [BUGGY]  }  else  if(type  instanceof  GenericArrayType)  {  if(toGenericArrayType  ==  null)  {  return  false;  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(type  instanceof  GenericArrayType)  {  if(toGenericArrayType  ==  null)  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(type  instanceof  GenericArrayType)  {  if(toGenericArrayType  ==  null)  {  return  false;  }	  if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type    instanceof    GenericArrayType)    <    return    false;    }    	compilable	  [FE]  AssertionError  	132	2	replace
348	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType;  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType;  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  toGenericArrayType;	  aughtExceptionHandler(toGenericArrayType);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	125	None	replace
349	[BUG]  [BUGGY]  Type  toGenericArrayType  =  types.getGenericArrayType(type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Type  toGenericArrayType  =  types.getGenericArrayType(type);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  types.getGenericArrayType(type);	  Type    toGenericArrayType    =    types.getGenericParameterType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	23	None	replace
350	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionError( "Unable  toGeneric  array  type: "  +  toGenericArrayType,  type.getName());  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  aughtExceptionHandler.throwAssertionError( "Unable  toGeneric  array  type: "  +  toGenericArrayType,  type.getName());  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	aughtExceptionHandler.throwAssertionError( "Unable  toGeneric  array  type: "  +  toGenericArrayType,  type.getName());	  aughtExceptionHandler.throwAssertionError(   "Unable    toGeneric    array    type:   "    +    toGenericArrayType.getName());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
351	[BUG]  [BUGGY]  return!toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericAssigns);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return!toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericAssigns);	  return!toGenericArrayType.isEmpty()    &&    isAssignable(toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
352	[BUG]  [BUGGY]  return!toGenericArrayType.isEmpty()  &&  isAssignable(type,  toGenericArrayType);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return!toGenericArrayType.isEmpty()  &&  isAssignable(type,  toGenericArrayType);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!toGenericArrayType.isEmpty()  &&  isAssignable(type,  toGenericArrayType);	  return!toGenericArrayType.isEmpty()    &&    isAssignable(toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
353	[BUG]  [BUGGY]  return!toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  toVarAssigns);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return!toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  toVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  toVarAssigns);	  return!toGenericArrayType.isEmpty()    &&    isAssignable(toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
354	[BUG]  [BUGGY]  if(toGenericArrayType.equals(type))  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(typeVarAssigns!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(toGenericArrayType.equals(type))  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(typeVarAssigns!=  null)  {  return  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(toGenericArrayType.equals(type))  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(typeVarAssigns!=  null)  {  return	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    if(typeVarAssigns!=    null)    {    return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
355	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(toGenericArrayType!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	if(toGenericArrayType!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  }	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    if(typeVarAssigns!=    null)    {    return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    }    	compilable	  [FE]  AssertionError  	128	2	replace
356	[BUG]  [BUGGY]  if(toGenericArrayType!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(toGenericArrayType!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(toGenericArrayType!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  }	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    if(typeVarAssigns!=    null)    {    return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    }    	compilable	  [FE]  AssertionError  	128	2	replace
357	[BUG]  [BUGGY]  }  else  if(toGenericArrayType.isAssignableFrom(type))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.isAssignableFrom(type))  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(toGenericArrayType.isAssignableFrom(type))  {  return  false;  }	  [Delete]    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
358	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericArray();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericArray();  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericArray();	  GenericArrayType    toGenericArrayType    =    type.getGenericArray();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	137	None	replace
359	[BUG]  [BUGGY]  if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  is  [CE]  ')'  expected  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  is  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  is	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    if(!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  ')'  expected	67	None	replace
360	[BUG]  [BUGGY]  if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    if(!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
361	[BUG]  [BUGGY]  if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Class  <?>  toGenericArrayType  =  toGenericArrayType.getGen  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Class  <?>  toGenericArrayType  =  toGenericArrayType.getGen  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Class  <?>  toGenericArrayType  =  toGenericArrayType.getGen	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    Class    <?>    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  ';'  expected	70	None	replace
362	[BUG]  [BUGGY]  if(toGenericArrayType!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Class  <?>  toGenericArrayType  =  toGenericArrayType.getGen  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(toGenericArrayType!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Class  <?>  toGenericArrayType  =  toGenericArrayType.getGen  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(toGenericArrayType!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Class  <?>  toGenericArrayType  =  toGenericArrayType.getGen	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    Class    <?>    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  ';'  expected	70	None	replace
363	[BUG]  [BUGGY]  if(typeVarAssigns.isAssignableFrom(toGenericArrayType))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(typeVarAssigns.isAssignableFrom(toGenericArrayType))  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(typeVarAssigns.isAssignableFrom(toGenericArrayType))  {  return  false;  }	  if(toGenericArrayType.isAssignableFrom(type))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
364	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.getGenericComponentType()  ==  null)  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	}  else  if(toGenericArrayType.getGenericComponentType()  ==  null)  {	  [Delete]    else    if(!toGenericArrayType.equals(type))    {    	compilable	  [FE]  AssertionError  	153	2	replace
365	[BUG]  [BUGGY]  }  else  if(toGenericArrayType.getGenericComponentType()  ==  null)  {  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.getGenericComponentType()  ==  null)  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(toGenericArrayType.getGenericComponentType()  ==  null)  {	  [Delete]    else    if(!toGenericArrayType.equals(type))    {    	compilable	  [FE]  AssertionError  	153	2	replace
366	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  toComponentType.getGenericParameterType(type,  toGenericArrayType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  toComponentType.getGenericParameterType(type,  toGenericArrayType);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  toComponentType.getGenericParameterType(type,  toGenericArrayType);	  GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type,    toComponentType);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	142	None	replace
367	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericParameterType(1);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericParameterType(1);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericParameterType(1);	  GenericArrayType    toGenericArrayType    =    typeVarAssigns.getGenericParameterType(0);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	120	None	replace
368	[BUG]  [BUGGY]  if(toGenericArrayType!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(toGenericArrayType!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(toGenericArrayType!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    if(!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
369	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType,  cls);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType,  cls);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType,  cls);	  GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type,    cls);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	20	None	replace
370	[BUG]  [BUGGY]  return  toGenericArrayType.isArray()  &&  isAssignable(type,  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return  toGenericArrayType.isArray()  &&  isAssignable(type,  toComponentType,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return  toGenericArrayType.isArray()  &&  isAssignable(type,  toComponentType,  typeVarAssigns);	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(ToGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
371	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  TypeUtils.getGenericArrayType(typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  TypeUtils.getGenericArrayType(typeVarAssigns);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  TypeUtils.getGenericArrayType(typeVarAssigns);	  GenericArrayType    toGenericArrayType    =    TypeUtils.getGenericArrayType(type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	26	None	replace
372	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.getGenericComponentType()!=  null)  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	}  else  if(toGenericArrayType.getGenericComponentType()!=  null)  {	  }    else    if(toGenericArrayType.equals(type))    {    	compilable	  [FE]  AssertionError  	49	2	replace
373	[BUG]  [BUGGY]  }  else  if(toGenericArrayType.getGenericComponentType()!=  null)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.getGenericComponentType()!=  null)  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(toGenericArrayType.getGenericComponentType()!=  null)  {	  }    else    if(toGenericArrayType.equals(type))    {    	compilable	  [FE]  AssertionError  	49	2	replace
374	[BUG]  [BUGGY]  Type  toGenericArrayType  =  types.getGenericArray();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Type  toGenericArrayType  =  types.getGenericArray();  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  types.getGenericArray();	  Type    toGenericArrayType    =    types.getGenericConstructor();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	6	None	replace
375	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.equals(typeVarAssigns))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	}  else  if(toGenericArrayType.equals(typeVarAssigns))  {	  [Delete]    else    if(toGenericArrayType.equals(type))    {    	compilable	  [FE]  AssertionError  	139	2	replace
376	[BUG]  [BUGGY]  }  else  if(toGenericArrayType.equals(typeVarAssigns))  {  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.equals(typeVarAssigns))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(toGenericArrayType.equals(typeVarAssigns))  {	  [Delete]    else    if(toGenericArrayType.equals(type))    {    	compilable	  [FE]  AssertionError  	139	2	replace
377	[BUG]  [BUGGY]  }  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.isInterface())  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.isInterface())  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.isInterface())  {	  [Delete]    else    if(toGenericArrayType.equals(type))    {    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
378	[BUG]  [BUGGY]  return!toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  typeVarAssigns,  toComponentType);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return!toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  typeVarAssigns,  toComponentType);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  typeVarAssigns,  toComponentType);	  return!toGenericArrayType.isEmpty()    &&    isAssignable(toGenericArrayType,    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
379	[BUG]  [BUGGY]  if(type.isArray()  ||  toGenericArrayType.isArray())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type.isArray()  ||  toGenericArrayType.isArray())  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type.isArray()  ||  toGenericArrayType.isArray())  {  return  false;  }	  if(type.isArray())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
380	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  }  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  Class  <?>)  {  return  false;  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  }	  return    false;    GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(0);    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
381	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(1);  }  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(1);  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  Class  <?>)  {  return  false;  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(1);  }	  return    false;    GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(0);    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
382	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericParameterType(toGenericArrayType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericParameterType(toGenericArrayType);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericParameterType(toGenericArrayType);	  GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type,    typeVarAssigns);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	143	None	replace
383	[BUG]  [BUGGY]  }  else  if(toGenericArrayType.equals(typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.equals(typeVarAssigns))  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(toGenericArrayType.equals(typeVarAssigns))  {  return  false;  }	  [Delete]    else    if(toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
384	[BUG]  [BUGGY]  }  else  if(typeVarAssigns.equals(toGenericArrayType))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(typeVarAssigns.equals(toGenericArrayType))  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(typeVarAssigns.equals(toGenericArrayType))  {  return  false;  }	  }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
385	[BUG]  [BUGGY]  if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type        instanceof        GenericArrayType)        {        return        false;        }        if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false	  	non-compiled	[CE]  ';'  expected	63	None	add
386	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  }  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  Class  <?>)  {  return  false;  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  }	  return    false;    GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  incompatible  types	126	None	replace
387	[BUG]  [BUGGY]  }  else  if(typeVarAssigns.equals(toGenericArrayType)||  typeVarAssigns.equals(toGenericArrayType))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(typeVarAssigns.equals(toGenericArrayType)||  typeVarAssigns.equals(toGenericArrayType))  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(typeVarAssigns.equals(toGenericArrayType)||  typeVarAssigns.equals(toGenericArrayType))  {  return  false;  }	  }    else    if(toGenericArrayType.equals(type)||    toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
388	[BUG]  [BUGGY]  }  else  if(toGenericArrayType.equals(type)&&  toGenericArrayType.equals(typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.equals(type)&&  toGenericArrayType.equals(typeVarAssigns))  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(toGenericArrayType.equals(type)&&  toGenericArrayType.equals(typeVarAssigns))  {  return  false;  }	  }    else    if(toGenericArrayType.equals(type)||    toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
389	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(type));  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(type));  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Throwables.throw  new  IllegalArgumentException( " ").equals(type));	  Throwables.throw    new    IllegalArgumentException(   "   ".equals(toGenericArrayType));    	non-compiled	[CE]  <identifier>  expected	76	None	replace
390	[BUG]  [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGenericArrayType(type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGenericArrayType(type);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  typeVarAssigns.getGenericArrayType(type);	  Type    toGenericArrayType    =    typeVarAssigns.getGenericArrayType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	97	None	replace
391	[BUG]  [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGenericArrayType(toGenericArrayType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGenericArrayType(toGenericArrayType);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  typeVarAssigns.getGenericArrayType(toGenericArrayType);	  Type    toGenericArrayType    =    typeVarAssigns.getGenericArrayType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	97	None	replace
392	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(type  instanceof  Class  <?>)  {  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  if(toGene  [CE]  ')'  expected  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(type  instanceof  Class  <?>)  {  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  if(toGene  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(type  instanceof  Class  <?>)  {  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  if(toGene	  return    false;    Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  ')'  expected	12	None	replace
393	[BUG]  [BUGGY]  return!toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  typeVarAssigns,  toGenericArrayType);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return!toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  typeVarAssigns,  toGenericArrayType);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  typeVarAssigns,  toGenericArrayType);	  return!toGenericArrayType.isEmpty()    &&    isAssignable(toGenericArrayType,    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
394	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  toGenericArrayType);  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  toGenericArrayType);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Throwables.throw  new  IllegalArgumentException( " "  +  toGenericArrayType);	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	75	None	replace
395	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType,  type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType,  type);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType,  type);	  Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type,    type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	81	None	replace
396	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  Throwable  throw  new  IllegalStateException( "   ");  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  throw  new  IllegalStateException(   "   ");  Throwable  throw  new  IllegalStateException( "   ");  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	throw    new    IllegalStateException(   "   ");    Throwable  throw  new  IllegalStateException( "   ");	  	non-compiled	[CE]  not  a  statement	121	None	add
397	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  Class  <?>)  {  return  false;  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  }	  return    false;    Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(0);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	109	None	replace
398	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(1);  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(1);  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  Class  <?>)  {  return  false;  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(1);  }	  return    false;    Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(0);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	109	None	replace
399	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.toGenericArrayType.getGenericParameterType(0);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Type  toGenericArrayType  =  type.toGenericArrayType.getGenericParameterType(0);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  type.toGenericArrayType.getGenericParameterType(0);	  Type    toGenericArrayType    =    type.toGenericArrayType.getGenericConstructor();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	93	None	replace
400	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.equals(type))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	}  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.equals(type))  {	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    	compilable	  [FE]  AssertionError  	8	2	replace
401	[BUG]  [BUGGY]  }  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.equals(type))  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.equals(type))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.equals(type))  {	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    	compilable	  [FE]  AssertionError  	8	2	replace
402	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.toGenericArrayType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Type  toGenericArrayType  =  type.toGenericArrayType();  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  type.toGenericArrayType();	  Type    toGenericArrayType    =    type.getGenericArrayType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	151	None	replace
403	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericArrayType(type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Type  toGenericArrayType  =  type.getGenericArrayType(type);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  type.getGenericArrayType(type);	  Type    toGenericArrayType    =    type.getGenericArrayType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	151	None	replace
404	[BUG]  [BUGGY]  ExceptionHandler.throwAssertionError( "Unable  toGeneric  array  type: "+toGenericArrayType.getClass().getName());  [CE]  cannot  find  symbol  ExceptionHandler  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  ExceptionHandler.throwAssertionError( "Unable  toGeneric  array  type: "+toGenericArrayType.getClass().getName());  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	ExceptionHandler.throwAssertionError( "Unable  toGeneric  array  type: "+toGenericArrayType.getClass().getName());	  aughtExceptionHandler.throwAssertionError(   "Unable    toGeneric    array    type:   "+toGenericArrayType.getClass().getName());    	non-compiled	[CE]  cannot  find  symbol  ExceptionHandler	45	None	replace
405	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType:   "+toGenericArrayType.getClass().getName());  [CE]  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType:   "+toGenericArrayType.getClass().getName());  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType:   "+toGenericArrayType.getClass().getName());	  aughtExceptionHandler.throwAssertionError(   "Unable    toGeneric    array    type:   "+toGenericArrayType.getClass().getName());    	non-compiled	[CE]  	45	None	replace
406	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(toGenericArrayType,  toGenericArrayType);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  aughtExceptionHandler.handleMissingName(toGenericArrayType,  toGenericArrayType);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	aughtExceptionHandler.handleMissingName(toGenericArrayType,  toGenericArrayType);	  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type    instanceof    GenericArrayType)    ==    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	123	None	replace
407	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(toGenericArrayType);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  aughtExceptionHandler.handleMissingName(toGenericArrayType);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	aughtExceptionHandler.handleMissingName(toGenericArrayType);	  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type    instanceof    GenericArrayType)    ==    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	123	None	replace
408	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	aughtExceptionHandler.handleMissingException( " ");	  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type    instanceof    GenericArrayType)    ==    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	123	None	replace
409	[BUG]  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!typeVarAssigns.isEmpty()    &&    isAssignable(toGenericArrayType,    toGenericArrayType,    typeVarAssigns);    Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);	  	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	87	None	add
410	[BUG]  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  Class  <?>  typeVarAssigns  =  toGenericArrayType.getGenericParameterTypes();  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  Class  <?>  typeVarAssigns  =  toGenericArrayType.getGenericParameterTypes();  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!typeVarAssigns.isEmpty()    &&    isAssignable(toGenericArrayType,    toGenericArrayType,    typeVarAssigns);    Class  <?>  typeVarAssigns  =  toGenericArrayType.getGenericParameterTypes();  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);	  	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	87	None	add
411	[BUG]  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!typeVarAssigns.isEmpty()    &&    isAssignable(toGenericArrayType,    toGenericArrayType,    typeVarAssigns);    Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();	  	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	87	None	add
412	[BUG]  [BUGGY]  return  type.isEmpty()  &&  isAssignable(toGenericArrayType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return  type.isEmpty()  &&  isAssignable(toGenericArrayType,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return  type.isEmpty()  &&  isAssignable(toGenericArrayType,  typeVarAssigns);	  return    toGenericArrayType.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
413	[BUG]  [BUGGY]  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type        instanceof        GenericArrayType)        {        return        true;        }        if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true	  	non-compiled	[CE]  ';'  expected	36	None	add
414	[BUG]  [BUGGY]  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type        instanceof        GenericArrayType)        {        return        true;        }        if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
415	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  toGenericArrayType.getGenericParameterTypes();  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Class  <?>  typeVarAssigns  =  toGenericArrayType.getGenericParameterTypes();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Class  <?>  typeVarAssigns  =  toGenericArrayType.getGenericParameterTypes();	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	41	None	replace
416	[BUG]  [BUGGY]  return  typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  typeVarAssigns,  toGenericArrayType);  [CE]  no  suitable  method  found  for  isAssignable(GenericArrayType,Map<TypeVariable<?>,Type>,GenericArrayType)  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return  typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  typeVarAssigns,  toGenericArrayType);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return  typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  typeVarAssigns,  toGenericArrayType);	  return    toGenericArrayType.isEmpty()    &&    isAssignable(type,    typeVarAssigns,    toGenericArrayType);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(GenericArrayType,Map<TypeVariable<?>,Type>,GenericArrayType)	99	None	replace
417	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ")  &&  toGenericArrayType.equals(type);  [CE]  bad  operand  types  for  binary  operator  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  throw  new  IllegalStateException( " ")  &&  toGenericArrayType.equals(type);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	throw  new  IllegalStateException( " ")  &&  toGenericArrayType.equals(type);	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  bad  operand  types  for  binary  operator  	122	None	replace
418	[BUG]  [BUGGY]  }  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.equals(type))  {  return  true;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.equals(type))  {  return  true;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.equals(type))  {  return  true;  }	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
419	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(toComponentType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(toComponentType);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  type.getGenericParameterType(toComponentType);	  Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type,    toComponentType);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	141	None	replace
420	[BUG]  [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGenericParameterType(toGenericArrayType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGenericParameterType(toGenericArrayType);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  typeVarAssigns.getGenericParameterType(toGenericArrayType);	  Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type,    typeVarAssigns);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	110	None	replace
421	[BUG]  [BUGGY]  if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(toGenericArrayType.equals(type))  {  return  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(toGenericArrayType.equals(type))  {  return  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(toGenericArrayType.equals(type))  {  return	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    if(toGenericArrayType.equals(type))    {    return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
422	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return  typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	return  typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    if(toGenericArrayType.equals(type))    {    return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    }    	compilable	  [FE]  AssertionError  	129	2	replace
423	[BUG]  [BUGGY]  return  typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return  typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return  typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    if(toGenericArrayType.equals(type))    {    return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    }    	compilable	  [FE]  AssertionError  	129	2	replace
424	[BUG]  [BUGGY]  }  else  if(toGenericArrayType.equals(type))  {  }  else  if(typeVarAssigns.contains(toGenericArrayType))  {  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.equals(type))  {  }  else  if(typeVarAssigns.contains(toGenericArrayType))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}    else    if(toGenericArrayType.equals(type))    {    }  else  if(typeVarAssigns.contains(toGenericArrayType))  {	  	non-compiled	[CE]  cannot  find  symbol	48	None	add
425	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.equals(type))  {  }  else  if(typeVarAssigns.equals(toGenericArrayType))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	}    else    if(toGenericArrayType.equals(type))    {    }  else  if(typeVarAssigns.equals(toGenericArrayType))  {	  	compilable	  [FE]  AssertionError  	48	2	add
426	[BUG]  [BUGGY]  }  else  if(toGenericArrayType.equals(type))  {  }  else  if(typeVarAssigns.equals(toGenericArrayType))  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.equals(type))  {  }  else  if(typeVarAssigns.equals(toGenericArrayType))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}    else    if(toGenericArrayType.equals(type))    {    }  else  if(typeVarAssigns.equals(toGenericArrayType))  {	  	compilable	  [FE]  AssertionError  	48	2	add
427	[BUG]  [BUGGY]  AnnotationType  toGenericArrayType  =  this.toGenericArrayType.getAnnotationType();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  AnnotationType  toGenericArrayType  =  this.toGenericArrayType.getAnnotationType();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	AnnotationType  toGenericArrayType  =  this.toGenericArrayType.getAnnotationType();	  AnnotationType    toGenericArrayType    =    toGenericArrayType.getAnnotationType();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
428	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericArray();  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericArray();  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  Class  <?>)  {  return  false;  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericArray();  }	  return    false;    GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericArray();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	108	None	replace
429	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType)  {  return  false;  }  else  {  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericArray();  if(toGenericArrayType.equals(type))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  GenericArrayType)  {  return  false;  }  else  {  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericArray();  if(toGenericArrayType.equals(type))  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  GenericArrayType)  {  return  false;  }  else  {  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericArray();  if(toGenericArrayType.equals(type))  {  return  false;  }	  return    false;    GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericArray();    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
430	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(2);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(2);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(2);	  GenericArrayType    toGenericArrayType    =    type.getGenericParameterType(1);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	28	None	replace
431	[BUG]  [BUGGY]  !=  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  !=  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	!=	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
432	[BUG]  [BUGGY]  Constructor  <?>  toGenericArrayType  =  createExceptionHandler(toGenericArrayType);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Constructor  <?>  toGenericArrayType  =  createExceptionHandler(toGenericArrayType);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Constructor  <?>  toGenericArrayType  =  createExceptionHandler(toGenericArrayType);	  aughtExceptionHandler(toGenericArrayType);    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
433	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  Class  <?>)  {  return  false;  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  }	  return    false;    GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(0);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	127	None	replace
434	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(1);  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(1);  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  Class  <?>)  {  return  false;  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(1);  }	  return    false;    GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(0);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	127	None	replace
435	[BUG]  [BUGGY]  Class  <?>  bound  =  toGenericArrayType.getRawParameterType(0);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Class  <?>  bound  =  toGenericArrayType.getRawParameterType(0);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Class  <?>  bound  =  toGenericArrayType.getRawParameterType(0);	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    If(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
436	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(type  instanceof  GenericArrayType)  {  if(type  instanceof  GenericArrayType)  {  return  true;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	}  else  if(type  instanceof  GenericArrayType)  {  if(type  instanceof  GenericArrayType)  {  return  true;  }	  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type    instanceof    GenericArrayType)    {    return    true;    	compilable	  [FE]  AssertionError  	113	2	replace
437	[BUG]  [BUGGY]  }  else  if(type  instanceof  GenericArrayType)  {  if(type  instanceof  GenericArrayType)  {  return  true;  }  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(type  instanceof  GenericArrayType)  {  if(type  instanceof  GenericArrayType)  {  return  true;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(type  instanceof  GenericArrayType)  {  if(type  instanceof  GenericArrayType)  {  return  true;  }	  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type    instanceof    GenericArrayType)    {    return    true;    	compilable	  [FE]  AssertionError  	113	2	replace
438	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(type  instanceof  GenericArrayType)  {  if(type  instanceof  GenericArrayType)  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	}  else  if(type  instanceof  GenericArrayType)  {  if(type  instanceof  GenericArrayType)  {  return  false;  }	  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type    instanceof    GenericArrayType)    {    return    true;    	compilable	  [FE]  AssertionError  	113	2	replace
439	[BUG]  [BUGGY]  }  else  if(type  instanceof  GenericArrayType)  {  if(type  instanceof  GenericArrayType)  {  return  false;  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(type  instanceof  GenericArrayType)  {  if(type  instanceof  GenericArrayType)  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(type  instanceof  GenericArrayType)  {  if(type  instanceof  GenericArrayType)  {  return  false;  }	  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type    instanceof    GenericArrayType)    {    return    true;    	compilable	  [FE]  AssertionError  	113	2	replace
440	[BUG]  [BUGGY]  }  else  if(type  instanceof  GenericArrayType)  {  if(!toGenericArrayType.isEmpty())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(type  instanceof  GenericArrayType)  {  if(!toGenericArrayType.isEmpty())  {  return  true;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(type  instanceof  GenericArrayType)  {  if(!toGenericArrayType.isEmpty())  {  return  true;  }	  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type    instanceof    GenericArrayType)    {    return    true;    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
441	[BUG]  [BUGGY]  }  else  if(!toGenericArrayType.isArray())  {  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(!toGenericArrayType.isArray())  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(!toGenericArrayType.isArray())  {	  }    else    if(!toGenericArrayType.equals(type))    {    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
442	[BUG]  [BUGGY]  }  else  if(type.isArray()  ||!toGenericArrayType.equals(type))  {  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(type.isArray()  ||!toGenericArrayType.equals(type))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(type.isArray()  ||!toGenericArrayType.equals(type))  {	  }    else    if(!toGenericArrayType.equals(type))    {    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
443	[BUG]  [BUGGY]  if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGen  [CE]  ')'  expected  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGen  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGen	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    if(!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  ')'  expected	67	None	replace
444	[BUG]  [BUGGY]  if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGene  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGene  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGene	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    if(!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  ')'  expected	67	None	replace
445	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	if(type        instanceof        Class        <?>)        {        return        false;        }        else        if(!toGenericArrayType.equals(type))        {        return        false;        }        if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }	  	compilable	  [FE]  AssertionError  	40	2	add
446	[BUG]  [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type        instanceof        Class        <?>)        {        return        false;        }        else        if(!toGenericArrayType.equals(type))        {        return        false;        }        if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }	  	compilable	  [FE]  AssertionError  	40	2	add
447	[BUG]  [BUGGY]  Class  <?>  type  =  toGenericArrayType.getGenericStaticComponentType();  [CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Class  <?>  type  =  toGenericArrayType.getGenericStaticComponentType();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Class  <?>  type  =  toGenericArrayType.getGenericStaticComponentType();	  Class    <?>    type    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	105	None	replace
448	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionError( "Unable  toGeneric  array  type: "  +  toGenericArrayType.toString());  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  aughtExceptionHandler.throwAssertionError( "Unable  toGeneric  array  type: "  +  toGenericArrayType.toString());  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	aughtExceptionHandler.throwAssertionError( "Unable  toGeneric  array  type: "  +  toGenericArrayType.toString());	  aughtExceptionHandler.throwAssertionError(   "Unable    toGeneric    array    type:   "    +    toGenericArrayType.getName());    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	3	None	replace
449	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType,  toComponentType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType,  toComponentType);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType,  toComponentType);	  Type    toGenericArrayType    =    type.getGenericParameterType(toGenericArrayType);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	82	None	replace
450	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	if(type        instanceof        GenericArrayType)        {        return        false;        }        if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }	  	compilable	  [FE]  AssertionError  	63	2	add
451	[BUG]  [BUGGY]  if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type        instanceof        GenericArrayType)        {        return        false;        }        if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }	  	compilable	  [FE]  AssertionError  	63	2	add
452	[BUG]  [BUGGY]  AssertionError.throwAssertionError( "Unable  toGeneric  array  type: "+toGenericArrayType.getClass().getName());  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  AssertionError.throwAssertionError( "Unable  toGeneric  array  type: "+toGenericArrayType.getClass().getName());  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	AssertionError.throwAssertionError( "Unable  toGeneric  array  type: "+toGenericArrayType.getClass().getName());	  aughtExceptionHandler.throwAssertionError(   "Unable    toGeneric    array    type:   "+toGenericArrayType.getClass().getName());    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
453	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  cls,  typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  cls,  typeVarAssigns);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  cls,  typeVarAssigns);	  GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type,    cls);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	20	None	replace
454	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	if(type        instanceof        Class        <?>)        {        return        false;        }        else        if(toGenericArrayType.equals(type))        {        return        true;        }        if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  if(type  instanceof  Class  <?>)  {  return  false;  }	  	compilable	  [FE]  AssertionError  	56	2	add
455	[BUG]  [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type        instanceof        Class        <?>)        {        return        false;        }        else        if(toGenericArrayType.equals(type))        {        return        true;        }        if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  if(type  instanceof  Class  <?>)  {  return  false;  }	  	compilable	  [FE]  AssertionError  	56	2	add
456	[BUG]  [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(fromGenericArrayType.equals(type))  {  return  true;  }  [CE]  cannot  find  symbol  fromGenericArrayType  [FE]      AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(fromGenericArrayType.equals(type))  {  return  true;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type        instanceof        Class        <?>)        {        return        false;        }        else        if(toGenericArrayType.equals(type))        {        return        true;        }        if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(fromGenericArrayType.equals(type))  {  return  true;  }	  	non-compiled	[CE]  cannot  find  symbol  fromGenericArrayType	56	None	add
457	[BUG]  [BUGGY]  return  null;  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return  null;  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return  null;  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();	  return    false;    Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType();    	non-compiled	[CE]  incompatible  types	15	None	replace
458	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  type  =  toGenericArrayType.getGenericParameterType(0);  }  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  type  =  toGenericArrayType.getGenericParameterType(0);  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  Class  <?>)  {  return  false;  type  =  toGenericArrayType.getGenericParameterType(0);  }	  return    false;    Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(0);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
459	[BUG]  [BUGGY]  else  if(toGenericArrayType.contains(type))  {  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  else  if(toGenericArrayType.contains(type))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	else  if(toGenericArrayType.contains(type))  {	  [Delete]    else    if(typeVarAssigns.contains(toGenericArrayType))    {    	non-compiled	[CE]  'else'  without  'if'	140	None	replace
460	[BUG]  [BUGGY]  else  if(typeVarAssigns.contains(toGenericArrayType)||  toGenericArrayType.equals(type))  {  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  else  if(typeVarAssigns.contains(toGenericArrayType)||  toGenericArrayType.equals(type))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	else  if(typeVarAssigns.contains(toGenericArrayType)||  toGenericArrayType.equals(type))  {	  [Delete]    else    if(typeVarAssigns.contains(toGenericArrayType))    {    	non-compiled	[CE]  'else'  without  'if'	140	None	replace
461	[BUG]  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  }  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!typeVarAssigns.isEmpty()    &&    isAssignable(toGenericArrayType,    toGenericArrayType,    typeVarAssigns);    if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  }	  	non-compiled	[CE]  unreachable  statement	87	None	add
462	[BUG]  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  Class  <?>  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  Class  <?>  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!typeVarAssigns.isEmpty()    &&    isAssignable(toGenericArrayType,    toGenericArrayType,    typeVarAssigns);    Class  <?>  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);	  	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	87	None	add
463	[BUG]  [BUGGY]  if(typeVarAssigns.isEmpty())  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGene  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(typeVarAssigns.isEmpty())  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGene  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(typeVarAssigns.isEmpty())  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGene	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  ';'  expected	118	None	replace
464	[BUG]  [BUGGY]  Object  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Object  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Object  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();	  aughtExceptionHandler(toGenericArrayType,    type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	124	None	replace
465	[BUG]  [BUGGY]  return(toGenericArrayType  ==  null)?  null  :  toGenericArrayType.getGenericParameterTypes();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return(toGenericArrayType  ==  null)?  null  :  toGenericArrayType.getGenericParameterTypes();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return(toGenericArrayType  ==  null)?  null  :  toGenericArrayType.getGenericParameterTypes();	  return(toGenericArrayType    ==    null)?    null    :    toGenericArrayType.getGeneric();    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
466	[BUG]  [BUGGY]  return(toGenericArrayType  ==  null)?  null  :  toGenericArrayType.getGenericParameterType(0);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return(toGenericArrayType  ==  null)?  null  :  toGenericArrayType.getGenericParameterType(0);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return(toGenericArrayType  ==  null)?  null  :  toGenericArrayType.getGenericParameterType(0);	  return(toGenericArrayType    ==    null)?    null    :    toGenericArrayType.getGeneric();    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
467	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(2);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(2);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(2);	  Type    toGenericArrayType    =    type.getGenericParameterType(1);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	44	None	replace
468	[BUG]  [BUGGY]  AnnotationType  toGenericArrayType  =  toGenericArrayType.getGenericAnnotationType();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  AnnotationType  toGenericArrayType  =  toGenericArrayType.getGenericAnnotationType();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	AnnotationType  toGenericArrayType  =  toGenericArrayType.getGenericAnnotationType();	  AnnotationType    toGenericArrayType    =    toGenericArrayType.getAnnotationType();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
469	[BUG]  [BUGGY]  AnnotationType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  AnnotationType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	AnnotationType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);	  AnnotationType    toGenericArrayType    =    toGenericArrayType.getAnnotationType();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
470	[BUG]  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGene  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGene  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGene	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    if(!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    }    	non-compiled	[CE]  ')'  expected	69	None	replace
471	[BUG]  [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(fromGenericArrayType.equals(type))  {  return  false;  }  [CE]  cannot  find  symbol  fromGenericArrayType  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(fromGenericArrayType.equals(type))  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type        instanceof        Class        <?>)        {        return        false;        }        else        if(toGenericArrayType.equals(type))        {        return        false;        }        if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(fromGenericArrayType.equals(type))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol  fromGenericArrayType	7	None	add
472	[BUG]  [BUGGY]  Class  <?>  type  =  toGenericArrayType.getGenericClass();  [CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Class  <?>  type  =  toGenericArrayType.getGenericClass();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Class  <?>  type  =  toGenericArrayType.getGenericClass();	  if(type    instanceof    GenericArrayType)    {    return    false;    }    If(type    instanceof    GenericArrayType)    {    return    false;    }    	non-compiled	[CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	65	None	replace
473	[BUG]  [BUGGY]  else  if(type.equals(toGenericArrayType))  {  [CE]  'else'  without  'if'  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  else  if(type.equals(toGenericArrayType))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	else  if(type.equals(toGenericArrayType))  {	  [Delete]    else    if(toGenericArrayType.equals(type))    {    	non-compiled	[CE]  'else'  without  'if'	139	None	replace
474	[BUG]  [BUGGY]  aughtExceptionHandler(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  aughtExceptionHandler(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	aughtExceptionHandler(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);	  if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type    instanceof    GenericArrayType)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
475	[BUG]  [BUGGY]  Throwable  throw  new  IllegalStateException( " ");  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Throwable  throw  new  IllegalStateException( " ");  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Throwable  throw  new  IllegalStateException( " ");	  throw    new    IllegalArgumentException(       "       ");    Throwable    throw    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  not  a  statement	111	None	replace
476	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericArrayType(toGenericArrayType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericArrayType(toGenericArrayType);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericArrayType(toGenericArrayType);	  GenericArrayType    toGenericArrayType    =    typeVarAssigns.getGenericArrayType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	94	None	replace
477	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  Class  <?>)  {  return  false;  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  }	  return    false;    GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	126	None	replace
478	[BUG]  [BUGGY]  }  else  if(typeVarAssigns.contains(toGenericArrayType))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(typeVarAssigns.contains(toGenericArrayType))  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(typeVarAssigns.contains(toGenericArrayType))  {  return  false;  }	  }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
479	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericArrayType(1);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericArrayType(1);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericArrayType(1);	  GenericArrayType    toGenericArrayType    =    typeVarAssigns.getGenericArrayType(0);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	144	None	replace
480	[BUG]  [BUGGY]  return!toGenericArrayType.isEmpty()  ||  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return!toGenericArrayType.isEmpty()  ||  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!toGenericArrayType.isEmpty()  ||  isAssignable(type,  toGenericArrayType,  typeVarAssigns);	  return!toGenericArrayType.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
481	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  return  false;  }  if(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  return  false;  }  if(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type    instanceof    GenericArrayType    ||    type    instanceof    Class    <?>)    {    return    false;    }    if(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  return  false;  }	  	non-compiled	[CE]  illegal  start  of  type	145	None	add
482	[BUG]  [BUGGY]  }  else  if(!toGenericArrayType.isAssignableFrom(type)||  toGenericArrayType.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(!toGenericArrayType.isAssignableFrom(type)||  toGenericArrayType.isAssignableFrom(type))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(!toGenericArrayType.isAssignableFrom(type)||  toGenericArrayType.isAssignableFrom(type))  {	  [Delete]    else    if(!toGenericArrayType.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
483	[BUG]  [BUGGY]  }  else  if(!toGenericArrayType.equals(type))  {  }  else  if(!toGenericArrayType.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(!toGenericArrayType.equals(type))  {  }  else  if(!toGenericArrayType.isAssignableFrom(type))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}    else    if(!toGenericArrayType.equals(type))    {    }  else  if(!toGenericArrayType.isAssignableFrom(type))  {	  	non-compiled	[CE]  cannot  find  symbol	72	None	add
484	[BUG]  [BUGGY]  }  else  if(!toGenericArrayType.equals(type))  {  }  else  if(!toGenericArrayType.getGenericComponentType())  {  [CE]  bad  operand  type  Type  for  unary  operator  '!'  [FE]      AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(!toGenericArrayType.equals(type))  {  }  else  if(!toGenericArrayType.getGenericComponentType())  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}    else    if(!toGenericArrayType.equals(type))    {    }  else  if(!toGenericArrayType.getGenericComponentType())  {	  	non-compiled	[CE]  bad  operand  type  Type  for  unary  operator  '!'	72	None	add
485	[BUG]  [BUGGY]  }  else  if(!toGenericArrayType.equals(type))  {  }  else  if(!toGenericArrayType.isEmpty())  {  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(!toGenericArrayType.equals(type))  {  }  else  if(!toGenericArrayType.isEmpty())  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}    else    if(!toGenericArrayType.equals(type))    {    }  else  if(!toGenericArrayType.isEmpty())  {	  	non-compiled	[CE]  cannot  find  symbol	72	None	add
486	[BUG]  [BUGGY]  }  else  if(!toGenericArrayType.isArray())  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(!toGenericArrayType.isArray())  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(!toGenericArrayType.isArray())  {  return  false;  }	  [Delete]    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
487	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  Type  toGenericArrayType  =  (Type)type;  if(toGenericArrayType.getGenericComponentType()!=  type)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  Type  toGenericArrayType  =  (Type)type;  if(toGenericArrayType.getGenericComponentType()!=  type)  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  Class  <?>)  {  return  false;  Type  toGenericArrayType  =  (Type)type;  if(toGenericArrayType.getGenericComponentType()!=  type)  {  return  false;  }	  return    false;    Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
488	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType,  toComponentType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType,  toComponentType);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType,  toComponentType);	  GenericArrayType    toGenericArrayType    =    type.getGenericParameterType(toGenericArrayType);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	19	None	replace
489	[BUG]  [BUGGY]  AssertionError.throwAssertionError( "Unable  toGeneric  array  type: "  +  toGenericArrayType);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  AssertionError.throwAssertionError( "Unable  toGeneric  array  type: "  +  toGenericArrayType);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	AssertionError.throwAssertionError( "Unable  toGeneric  array  type: "  +  toGenericArrayType);	  aughtExceptionHandler.throwAssertionError(   "Unable    toGeneric    array    type:   "    +    toGenericArrayType);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
490	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType:  throw  new  AssertionError( "Unable  toGeneric  array  type: "  +  toGenericArrayType);  [CE]  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType:  throw  new  AssertionError( "Unable  toGeneric  array  type: "  +  toGenericArrayType);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType:  throw  new  AssertionError( "Unable  toGeneric  array  type: "  +  toGenericArrayType);	  aughtExceptionHandler.throwAssertionError(   "Unable    toGeneric    array    type:   "    +    toGenericArrayType);    	non-compiled	[CE]  	2	None	replace
491	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType:   "  +  toGenericArrayType);  [CE]  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  GenericArrayType  toGenericArrayType:   "  +  toGenericArrayType);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType:   "  +  toGenericArrayType);	  aughtExceptionHandler.throwAssertionError(   "Unable    toGeneric    array    type:   "    +    toGenericArrayType);    	non-compiled	[CE]  	2	None	replace
492	[BUG]  [BUGGY]  }  else  if(type.isArray()  ||!toGenericArrayType.equals(typeVarAssigns))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(type.isArray()  ||!toGenericArrayType.equals(typeVarAssigns))  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(type.isArray()  ||!toGenericArrayType.equals(typeVarAssigns))  {  return  false;  }	  }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
493	[BUG]  [BUGGY]  }  else  if(type.isArray()  ||!toGenericArrayType.equals(type))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(type.isArray()  ||!toGenericArrayType.equals(type))  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(type.isArray()  ||!toGenericArrayType.equals(type))  {  return  false;  }	  }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
494	[BUG]  [BUGGY]  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type        instanceof        GenericArrayType)        {        return        true;        }        if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
495	[BUG]  [BUGGY]  [Delete]  else  if(toGenericArrayType.equals(type))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  [Delete]  else  if(toGenericArrayType.equals(type))  {  return  true;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	[Delete]  else  if(toGenericArrayType.equals(type))  {  return  true;  }	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    Class    <?>    type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
496	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  Class  <?>)  {  return  false;  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  }	  return    false;    GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericParameterType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	14	None	replace
497	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType)  {  return  false;  }  else  {  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  if(toGenericArrayType.equals(type))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  GenericArrayType)  {  return  false;  }  else  {  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  if(toGenericArrayType.equals(type))  {  return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  GenericArrayType)  {  return  false;  }  else  {  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  if(toGenericArrayType.equals(type))  {  return  false;  }	  return    false;    GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericParameterType();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
498	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType)  {  return  false;  }  else  {  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  if(toGenericArrayType.equals(type))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  GenericArrayType)  {  return  false;  }  else  {  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  if(toGenericArrayType.equals(type))  {  return  true;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  GenericArrayType)  {  return  false;  }  else  {  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  if(toGenericArrayType.equals(type))  {  return  true;  }	  return    false;    GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericParameterType();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
499	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)return  false;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)return  false;  }	  if(type    instanceof    GenericArrayType    ||    type    instanceof    Class    <?>)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
500	[BUG]  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!typeVarAssigns.isEmpty()    &&    isAssignable(toGenericArrayType,    type,    typeVarAssigns);    if(!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);	  	non-compiled	[CE]  ')'  expected	130	None	add
501	[BUG]  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  if(toGenericArrayType.isEmpty())  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  }  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  if(toGenericArrayType.isEmpty())  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!typeVarAssigns.isEmpty()    &&    isAssignable(toGenericArrayType,    type,    typeVarAssigns);    if(toGenericArrayType.isEmpty())  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  }	  	non-compiled	[CE]  cannot  find  symbol	130	None	add
502	[BUG]  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  if(!typeVarAssigns.isEmpty())  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  }  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  if(!typeVarAssigns.isEmpty())  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!typeVarAssigns.isEmpty()    &&    isAssignable(toGenericArrayType,    type,    typeVarAssigns);    if(!typeVarAssigns.isEmpty())  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  }	  	non-compiled	[CE]  unreachable  statement	130	None	add
503	[BUG]  [BUGGY]  return!toGenericArrayType.isEmpty()  ||  isAssignable(type,  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return!toGenericArrayType.isEmpty()  ||  isAssignable(type,  toComponentType,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!toGenericArrayType.isEmpty()  ||  isAssignable(type,  toComponentType,  typeVarAssigns);	  return!toGenericArrayType.isEmpty()    &&    isAssignable(type,    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
504	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  this.typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  this.typeVarAssigns);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  this.typeVarAssigns);	  Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type,    typeVarAssigns);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	110	None	replace
505	[BUG]  [BUGGY]  return(toGenericArrayType!=  null)?  null  :  toGenericArrayType.getGenericParameterTypes();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  return(toGenericArrayType!=  null)?  null  :  toGenericArrayType.getGenericParameterTypes();  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return(toGenericArrayType!=  null)?  null  :  toGenericArrayType.getGenericParameterTypes();	  return(toGenericArrayType!=    null)?    null    :    toGenericArrayType.getGeneric();    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
506	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(type);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  aughtExceptionHandler.handleMissingClass(type);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	aughtExceptionHandler.handleMissingClass(type);	  if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type    instanceof    GenericArrayType)    ==    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	123	None	replace
507	[BUG]  [BUGGY]  aughtExceptionHandler(toGenericArrayType,  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  toComponentType  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  aughtExceptionHandler(toGenericArrayType,  toComponentType,  typeVarAssigns);  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	aughtExceptionHandler(toGenericArrayType,  toComponentType,  typeVarAssigns);	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(ToGenericArrayType.equals(type))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  toComponentType	58	None	replace
508	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.equals(type))  {  return  true;  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	}  else  if(toGenericArrayType.equals(type))  {  return  true;	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(ToGenericArrayType.equals(type))    {    return    true;    }    	compilable	  [FE]  AssertionError  	58	2	replace
509	[BUG]  [BUGGY]  }  else  if(toGenericArrayType.equals(type))  {  return  true;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(toGenericArrayType.equals(type))  {  return  true;  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(toGenericArrayType.equals(type))  {  return  true;	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(ToGenericArrayType.equals(type))    {    return    true;    }    	compilable	  [FE]  AssertionError  	58	2	replace
510	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Throwables.throw  new  IllegalArgumentException( " ")	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	75	None	replace
511	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( ", ");  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( ", ");  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Throwables.throw  new  IllegalArgumentException( ", ");	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	75	None	replace
512	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  return  new  IllegalStateException( "   ");  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  throw  new  IllegalStateException(   "   ");  return  new  IllegalStateException( "   ");  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	throw    new    IllegalStateException(   "   ");    return  new  IllegalStateException( "   ");	  	non-compiled	[CE]  incompatible  types	121	None	add
513	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.isAssignableFrom(type)||  toGenericArrayType.isAssignableFrom(type))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.isAssignableFrom(type)||  toGenericArrayType.isAssignableFrom(type))  {  return  true;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.isAssignableFrom(type)||  toGenericArrayType.isAssignableFrom(type))  {  return  true;  }	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.isAssignableFrom(type))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
514	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.isAssignableFrom(type))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.isAssignableFrom(type))  {  return  true;  }  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.isAssignableFrom(type))  {  return  true;  }	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.isAssignableFrom(type))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
515	[BUG]  [BUGGY]  }  else  if(!typeVarAssigns.contains(toGenericArrayType)||  toGenericArrayType.equals(type))  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(!typeVarAssigns.contains(toGenericArrayType)||  toGenericArrayType.equals(type))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(!typeVarAssigns.contains(toGenericArrayType)||  toGenericArrayType.equals(type))  {	  }    else    if(!typeVarAssigns.contains(toGenericArrayType))    {    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
516	[BUG]  [BUGGY]  }  else  if(!typeVarAssigns.contains(toGenericArrayType)&&  toGenericArrayType.equals(type))  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  }  else  if(!typeVarAssigns.contains(toGenericArrayType)&&  toGenericArrayType.equals(type))  {  [BUGGY]      }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(!typeVarAssigns.contains(toGenericArrayType)&&  toGenericArrayType.equals(type))  {	  }    else    if(!typeVarAssigns.contains(toGenericArrayType))    {    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
517	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  cls,  typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {      [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  cls,  typeVarAssigns);  [BUGGY]      return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  cls,  typeVarAssigns);	  Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type,    cls);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	83	None	replace
