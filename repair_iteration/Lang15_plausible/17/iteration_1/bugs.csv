bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {  [BUGGY]  return  false;  [BUGGY]  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	return  false;	return  true;  	compilable	  [FE]  AssertionError  	33	2	replace
2	[BUG]  [BUGGY]  return  false;  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {  [BUGGY]  return  false;  [BUGGY]  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return  false;	return  true;  	compilable	  [FE]  AssertionError  	33	2	replace
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  [BUGGY]  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }	return  true;  	compilable	  [FE]  AssertionError  	33	2	replace
4	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  [BUGGY]  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }	return  true;  	compilable	  [FE]  AssertionError  	33	2	replace
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  [BUGGY]  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }	return  true;  	compilable	  [FE]  AssertionError  	33	2	replace
6	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  [BUGGY]  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }	return  true;  	compilable	  [FE]  AssertionError  	33	2	replace
7	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  [BUGGY]  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }	return  true;  	compilable	  [FE]  AssertionError  	33	2	replace
8	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  [BUGGY]  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }	return  true;  	compilable	  [FE]  AssertionError  	33	2	replace
9	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError  [CONTEXT]  }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {  [BUGGY]    [BUGGY]  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	  	return  true;  	compilable	  [FE]  AssertionError  	33	2	replace
10	[BUG]  [BUGGY]    [FE]  AssertionError  [FE]            AssertionError  [CONTEXT]  }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {  [BUGGY]    [BUGGY]  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	  	return  true;  	compilable	  [FE]  AssertionError  	33	2	replace
11	[BUG]  [BUGGY]    Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError  [CONTEXT]  }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {  [BUGGY]    Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [BUGGY]  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	    Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();		non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	34	None	add
12	[BUG]  [BUGGY]    GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGeneric();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError  [CONTEXT]  }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {  [BUGGY]    GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGeneric();  [BUGGY]  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	    GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGeneric();		non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	34	None	add
13	[BUG]  [BUGGY]    Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError  [CONTEXT]  }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {  [BUGGY]    Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type);  [BUGGY]  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	    Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type);		non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	34	None	add
14	[BUG]  [BUGGY]    Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError  [CONTEXT]  }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {  [BUGGY]    Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  [BUGGY]  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	    Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();		non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	34	None	add
15	[BUG]  [BUGGY]    Type  toGenericArrayType  =  toGenericArrayType.getGenericConstructor();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError  [CONTEXT]  }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {  [BUGGY]    Type  toGenericArrayType  =  toGenericArrayType.getGenericConstructor();  [BUGGY]  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	    Type  toGenericArrayType  =  toGenericArrayType.getGenericConstructor();		non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	34	None	add
16	[BUG]  [BUGGY]    Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError  [CONTEXT]  }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {  [BUGGY]    Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  [BUGGY]  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	    Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);		non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	34	None	add
17	[BUG]  [BUGGY]    Type  toGenericArrayType  =  toGenericArrayType.getGeneric();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError  [CONTEXT]  }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {  [BUGGY]    Type  toGenericArrayType  =  toGenericArrayType.getGeneric();  [BUGGY]  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	    Type  toGenericArrayType  =  toGenericArrayType.getGeneric();		non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	34	None	add
18	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {  [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	throw  new  IllegalArgumentException( " ");	return  true;  	compilable	  [FE]  AssertionError  	33	2	replace
19	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {  [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	throw  new  IllegalArgumentException( " ");	return  true;  	compilable	  [FE]  AssertionError  	33	2	replace
20	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {  [BUGGY]  if(type  instanceof  GenericArrayType)  {  return  true;  }  [BUGGY]  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	if(type  instanceof  GenericArrayType)  {  return  true;  }	return  true;  	compilable	  [FE]  AssertionError  	33	2	replace
21	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType)  {  return  true;  }  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {  [BUGGY]  if(type  instanceof  GenericArrayType)  {  return  true;  }  [BUGGY]  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  GenericArrayType)  {  return  true;  }	return  true;  	compilable	  [FE]  AssertionError  	33	2	replace
22	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {  [BUGGY]  if(type  instanceof  GenericArrayType)  {  return  false;  }  [BUGGY]  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	if(type  instanceof  GenericArrayType)  {  return  false;  }	return  true;  	compilable	  [FE]  AssertionError  	33	2	replace
23	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType)  {  return  false;  }  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {  [BUGGY]  if(type  instanceof  GenericArrayType)  {  return  false;  }  [BUGGY]  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  GenericArrayType)  {  return  false;  }	return  true;  	compilable	  [FE]  AssertionError  	33	2	replace
24	[BUG]  [BUGGY]    GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError  [CONTEXT]  }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {  [BUGGY]    GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [BUGGY]  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	    GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();		non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	34	None	add
25	[BUG]  [BUGGY]    GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError  [CONTEXT]  }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {  [BUGGY]    GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  [BUGGY]  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	    GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);		non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	34	None	add
26	[BUG]  [BUGGY]    GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError  [CONTEXT]  }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {  [BUGGY]    GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type);  [BUGGY]  return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	    GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type);		non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	34	None	add
27	[BUG]  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  toComponentType  [FE]    AssertionError  [CONTEXT]  }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toComponentType,  typeVarAssigns);  [BUGGY]  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toComponentType,  typeVarAssigns);	return  true;  	non-compiled	[CE]  cannot  find  symbol  toComponentType	33	None	replace
28	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [BUGGY]  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);	return  true;  	compilable	  [FE]  AssertionError  	33	2	replace
29	[BUG]  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [BUGGY]  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);	return  true;  	compilable	  [FE]  AssertionError  	33	2	replace
30	[BUG]  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  typeVarAssigns);  [CE]  no  suitable  method  found  for  isAssignable(GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError  [CONTEXT]  }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  typeVarAssigns);  [BUGGY]  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  typeVarAssigns);	return  true;  	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(GenericArrayType,Map<TypeVariable<?>,Type>)	33	None	replace
