bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  AnnotationType  toGenericArrayType  =  toGenericArrayType.getAnnotationType();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  AnnotationType  toGenericArrayType  =  toGenericArrayType.getAnnotationType();  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	AnnotationType  toGenericArrayType  =  toGenericArrayType.getAnnotationType();	  if(type    instanceof    GenericArrayType)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
2	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionError( "Unable  toGeneric  array  type: "  +  toGenericArrayType);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]      AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  aughtExceptionHandler.throwAssertionError( "Unable  toGeneric  array  type: "  +  toGenericArrayType);  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	aughtExceptionHandler.throwAssertionError( "Unable  toGeneric  array  type: "  +  toGenericArrayType);	  if(type    instanceof    GenericArrayType)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	21	None	replace
3	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionError( "Unable  toGeneric  array  type: "  +  toGenericArrayType.getName());  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  aughtExceptionHandler.throwAssertionError( "Unable  toGeneric  array  type: "  +  toGenericArrayType.getName());  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	aughtExceptionHandler.throwAssertionError( "Unable  toGeneric  array  type: "  +  toGenericArrayType.getName());	  if(type    instanceof    GenericArrayType)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
4	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericConstructor();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  Type  toGenericArrayType  =  type.getGenericConstructor();  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  type.getGenericConstructor();	      Type    toGenericArrayType    =    toGenericArrayType.getGenericConstructor();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	15	None	replace
5	[BUG]  [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGenericConstructor();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGenericConstructor();  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  typeVarAssigns.getGenericConstructor();	      Type    toGenericArrayType    =    toGenericArrayType.getGenericConstructor();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	15	None	replace
6	[BUG]  [BUGGY]  Type  toGenericArrayType  =  types.getGenericConstructor();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  Type  toGenericArrayType  =  types.getGenericConstructor();  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  types.getGenericConstructor();	      Type    toGenericArrayType    =    toGenericArrayType.getGenericConstructor();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	15	None	replace
7	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	3	2	add
8	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	3	2	add
9	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(ToGenericArrayType.equals(type))  {  return  false;  }  [CE]  cannot  find  symbol  ToGenericArrayType  [FE]      AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(ToGenericArrayType.equals(type))  {  return  false;  }  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(ToGenericArrayType.equals(type))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol  ToGenericArrayType	3	None	add
10	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  If(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  If(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    If(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	3	None	add
11	[BUG]  [BUGGY]  return  false;  return  false;  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  return  false;  return  false;  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return    false;    return  false;	  	non-compiled	[CE]  unreachable  statement	1	None	add
12	[BUG]  [BUGGY]  return  false;  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  return  false;  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return    false;    Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();	  	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	1	None	add
13	[BUG]  [BUGGY]  return  false;  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGeneric();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  return  false;  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGeneric();  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return    false;    GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGeneric();	  	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	1	None	add
14	[BUG]  [BUGGY]  return  false;  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  return  false;  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return    false;    GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();	  	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	1	None	add
15	[BUG]  [BUGGY]  return  false;  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  return  false;  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return    false;    Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();	  	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	1	None	add
16	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.isAssignableFrom(type))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.isAssignableFrom(type))  {  return  true;  }  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.isAssignableFrom(type))  {  return  true;  }	  return    false;    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
17	[BUG]  [BUGGY]  if(toGenericArrayType.isAssignableFrom(type))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  if(toGenericArrayType.isAssignableFrom(type))  {  return  false;  }  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(toGenericArrayType.isAssignableFrom(type))  {  return  false;  }	  return    false;    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
18	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  type);  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  type);	      GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	26	None	replace
19	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType);  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType);	      GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	26	None	replace
20	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  cls);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  cls);  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  cls);	      GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	26	None	replace
21	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType();  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  type.getGenericParameterType();	      Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	14	None	replace
22	[BUG]  [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGenericParameterType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGenericParameterType();  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  typeVarAssigns.getGenericParameterType();	      Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	14	None	replace
23	[BUG]  [BUGGY]  Type  toGenericArrayType  =  types.getGenericParameterType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  Type  toGenericArrayType  =  types.getGenericParameterType();  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  types.getGenericParameterType();	      Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	14	None	replace
24	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGeneric();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGeneric();  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  type.getGeneric();	      GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGeneric();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	12	None	replace
25	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGeneric();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGeneric();  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGeneric();	      GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGeneric();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	12	None	replace
26	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  TypeUtils.getGenericArrayType(type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  GenericArrayType  toGenericArrayType  =  TypeUtils.getGenericArrayType(type);  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  TypeUtils.getGenericArrayType(type);	      GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGeneric();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	12	None	replace
27	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGenericParameterType(0);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGenericParameterType(0);  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  type.getGenericParameterType(0);	      GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(0);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	25	None	replace
28	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGenericParameterType(1);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGenericParameterType(1);  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  type.getGenericParameterType(1);	      GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(0);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	25	None	replace
29	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();	      GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(0);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	25	None	replace
30	[BUG]  [BUGGY]  return  toGenericArrayType.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  return  toGenericArrayType.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return  toGenericArrayType.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
31	[BUG]  [BUGGY]  return!toGenericArrayType.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  return!toGenericArrayType.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!toGenericArrayType.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
32	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  [Delete]  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	[Delete]	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
33	[BUG]  [BUGGY]  >>  [Delete]  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  >>  [Delete]  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	>>  [Delete]	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
34	[BUG]  [BUGGY]  ==  [Delete]  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  ==  [Delete]  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	==  [Delete]	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
35	[BUG]  [BUGGY]  !=  [Delete]  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  !=  [Delete]  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	!=  [Delete]	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
36	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type  instanceof  GenericArrayType)  {  return  true;  }	  	compilable	  [FE]  AssertionError  	20	2	add
37	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  }  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type  instanceof  GenericArrayType)  {  return  true;  }	  	compilable	  [FE]  AssertionError  	20	2	add
38	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType)  {  return  true;  }  If(type  instanceof  GenericArrayType)  {  return  true;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  if(type  instanceof  GenericArrayType)  {  return  true;  }  If(type  instanceof  GenericArrayType)  {  return  true;  }  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type    instanceof    GenericArrayType)    {    return    true;    }    If(type  instanceof  GenericArrayType)  {  return  true;  }	  	non-compiled	[CE]  ';'  expected	20	None	add
39	[BUG]  [BUGGY]      return  toGenericArrayType.isAssignableFrom(type);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]      return  toGenericArrayType.isAssignableFrom(type);  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	        return  toGenericArrayType.isAssignableFrom(type);	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
40	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	5	2	add
41	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	5	2	add
42	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  If(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  If(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    If(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	5	None	add
43	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(0);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(0);  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  type.getGenericParameterType(0);	      Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(0);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	16	None	replace
44	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(1);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(1);  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  type.getGenericParameterType(1);	      Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(0);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	16	None	replace
45	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionError( "Unable  toGeneric  array  type: "+toGenericArrayType.getClass().getName());  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  aughtExceptionHandler.throwAssertionError( "Unable  toGeneric  array  type: "+toGenericArrayType.getClass().getName());  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	aughtExceptionHandler.throwAssertionError( "Unable  toGeneric  array  type: "+toGenericArrayType.getClass().getName());	  if(type    instanceof    GenericArrayType)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	23	None	replace
46	[BUG]  [BUGGY]  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(toGenericArrayType.equals(type))  {  return  false;  }	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
47	[BUG]  [BUGGY]  }  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.equals(type))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  }  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.equals(type))  {  return  false;  }  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(toGenericArrayType.equals(type)||  toGenericArrayType.equals(type))  {  return  false;  }	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
48	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  }  else  if(toGenericArrayType.equals(type))  {  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	}  else  if(toGenericArrayType.equals(type))  {	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    	compilable	  [FE]  AssertionError  	4	2	replace
49	[BUG]  [BUGGY]  }  else  if(toGenericArrayType.equals(type))  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  }  else  if(toGenericArrayType.equals(type))  {  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(toGenericArrayType.equals(type))  {	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    	compilable	  [FE]  AssertionError  	4	2	replace
50	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGeneric();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  Type  toGenericArrayType  =  type.getGeneric();  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  type.getGeneric();	      Type    toGenericArrayType    =    toGenericArrayType.getGeneric();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	17	None	replace
51	[BUG]  [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGeneric();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGeneric();  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  typeVarAssigns.getGeneric();	      Type    toGenericArrayType    =    toGenericArrayType.getGeneric();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	17	None	replace
52	[BUG]  [BUGGY]  Type  toGenericArrayType  =  types.getGeneric();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  Type  toGenericArrayType  =  types.getGeneric();  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  types.getGeneric();	      Type    toGenericArrayType    =    toGenericArrayType.getGeneric();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	17	None	replace
53	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  Type  toGenericArrayType  =  type.getGenericComponentType();  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  type.getGenericComponentType();	      Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	11	None	replace
54	[BUG]  [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGenericComponentType();  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  typeVarAssigns.getGenericComponentType();	      Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	11	None	replace
55	[BUG]  [BUGGY]  Type  toGenericArrayType  =  types.getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  Type  toGenericArrayType  =  types.getGenericComponentType();  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  types.getGenericComponentType();	      Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	11	None	replace
56	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	7	2	add
57	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }	  	compilable	  [FE]  AssertionError  	7	2	add
58	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(ToGenericArrayType.equals(type))  {  return  true;  }  [CE]  cannot  find  symbol  ToGenericArrayType  [FE]      AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(ToGenericArrayType.equals(type))  {  return  true;  }  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(ToGenericArrayType.equals(type))  {  return  true;  }	  	non-compiled	[CE]  cannot  find  symbol  ToGenericArrayType	7	None	add
59	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  If(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  If(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    If(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }	  	non-compiled	[CE]  ';'  expected	7	None	add
60	[BUG]  [BUGGY]  return!toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  return!toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  toComponentType,  typeVarAssigns);  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  toComponentType,  typeVarAssigns);	  return!typeVarAssigns.isEmpty()    &&    isAssignable(toGenericArrayType,    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
61	[BUG]  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toComponentType,  toGenericArrayType,  typeVarAssigns);  [CE]  cannot  find  symbol  toComponentType  [FE]          AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toComponentType,  toGenericArrayType,  typeVarAssigns);  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!typeVarAssigns.isEmpty()  &&  isAssignable(toComponentType,  toGenericArrayType,  typeVarAssigns);	  return!typeVarAssigns.isEmpty()    &&    isAssignable(toGenericArrayType,    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  toComponentType	27	None	replace
62	[BUG]  [BUGGY]  return!toGenericArrayType.isEmpty()  &&  isAssignable(type,  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  return!toGenericArrayType.isEmpty()  &&  isAssignable(type,  toComponentType,  typeVarAssigns);  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!toGenericArrayType.isEmpty()  &&  isAssignable(type,  toComponentType,  typeVarAssigns);	  return!typeVarAssigns.isEmpty()    &&    isAssignable(toGenericArrayType,    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
63	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type  instanceof  GenericArrayType)  {  return  false;  }	  	compilable	  [FE]  AssertionError  	22	2	add
64	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  {  return  false;  }  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type  instanceof  GenericArrayType)  {  return  false;  }	  	compilable	  [FE]  AssertionError  	22	2	add
65	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType)  {  return  false;  }  If(type  instanceof  GenericArrayType)  {  return  false;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  if(type  instanceof  GenericArrayType)  {  return  false;  }  If(type  instanceof  GenericArrayType)  {  return  false;  }  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type    instanceof    GenericArrayType)    {    return    false;    }    If(type  instanceof  GenericArrayType)  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	22	None	add
66	[BUG]  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);	  	non-compiled	[CE]  unreachable  statement	28	None	add
67	[BUG]  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);	  	non-compiled	[CE]  ')'  expected	28	None	add
68	[BUG]  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);	  	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	28	None	add
69	[BUG]  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  }  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  }  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    if(!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  }	  	non-compiled	[CE]  ')'  expected	28	None	add
70	[BUG]  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Class  <?>  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Class  <?>  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    Class  <?>  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);	  	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	28	None	add
71	[BUG]  [BUGGY]  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(!toGenericArrayType.equals(type))  {  return  false;  }	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
72	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  }  else  if(!toGenericArrayType.equals(type))  {  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	}  else  if(!toGenericArrayType.equals(type))  {	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    	compilable	  [FE]  AssertionError  	6	2	replace
73	[BUG]  [BUGGY]  }  else  if(!toGenericArrayType.equals(type))  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  }  else  if(!toGenericArrayType.equals(type))  {  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(!toGenericArrayType.equals(type))  {	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    	compilable	  [FE]  AssertionError  	6	2	replace
74	[BUG]  [BUGGY]  }  else  if(!typeVarAssigns.contains(toGenericArrayType))  {  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  }  else  if(!typeVarAssigns.contains(toGenericArrayType))  {  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	}  else  if(!typeVarAssigns.contains(toGenericArrayType))  {	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
75	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Throwables.throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	19	None	replace
76	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(toGenericArrayType));  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(toGenericArrayType));  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(toGenericArrayType));	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	19	None	replace
77	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ")  &&  toGenericArrayType.equals(type);  [CE]  bad  operand  types  for  binary  operator  [FE]        AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  throw  new  IllegalArgumentException( " ")  &&  toGenericArrayType.equals(type);  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	throw  new  IllegalArgumentException( " ")  &&  toGenericArrayType.equals(type);	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  bad  operand  types  for  binary  operator  	19	None	replace
78	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException( "   ");  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException( "   ");  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	throw    new    IllegalArgumentException(   "   ");    throw  new  IllegalArgumentException( "   ");	  	non-compiled	[CE]  unreachable  statement	18	None	add
79	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throw  new  IllegalArgumentException( "   ");  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throw  new  IllegalArgumentException( "   ");  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	throw    new    IllegalArgumentException(   "   ");    Throw  new  IllegalArgumentException( "   ");	  	non-compiled	[CE]  not  a  statement	18	None	add
80	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwables.throw  new  IllegalArgumentException( "   ");  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwables.throw  new  IllegalArgumentException( "   ");  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	throw    new    IllegalArgumentException(   "   ");    Throwables.throw  new  IllegalArgumentException( "   ");	  	non-compiled	[CE]  <identifier>  expected	18	None	add
81	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  type);  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  type);	      Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	13	None	replace
82	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType);  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType);	      Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	13	None	replace
83	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  cls);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  cls);  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  cls);	      Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	13	None	replace
84	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGenericComponentType();  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  type.getGenericComponentType();	      GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	24	None	replace
85	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericComponentType();  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericComponentType();	      GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	24	None	replace
86	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  types.getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  GenericArrayType  toGenericArrayType  =  types.getGenericComponentType();  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  types.getGenericComponentType();	      GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	24	None	replace
87	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);	  return!typeVarAssigns.isEmpty()    &&    isAssignable(toGenericArrayType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	30	2	replace
88	[BUG]  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);	  return!typeVarAssigns.isEmpty()    &&    isAssignable(toGenericArrayType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	30	2	replace
89	[BUG]  [BUGGY]  return!toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  return!toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  toGenericArrayType,  typeVarAssigns);	  return!typeVarAssigns.isEmpty()    &&    isAssignable(toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
90	[BUG]  [BUGGY]  return!toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  return!toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  typeVarAssigns);  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!toGenericArrayType.isEmpty()  &&  isAssignable(toGenericArrayType,  typeVarAssigns);	  return!typeVarAssigns.isEmpty()    &&    isAssignable(toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
91	[BUG]  [BUGGY]  >=  [Delete]  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  >=  [Delete]  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	>=  [Delete]	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
92	[BUG]  [BUGGY]  >>  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  >>  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	>>	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
93	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.toGenericArrayType.getGenericConstructor();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  Type  toGenericArrayType  =  type.toGenericArrayType.getGenericConstructor();  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  type.toGenericArrayType.getGenericConstructor();	      Type    toGenericArrayType    =    toGenericArrayType.getGenericConstructor();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	15	None	replace
94	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericArrayType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericArrayType();  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericArrayType();	      GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	24	None	replace
95	[BUG]  [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGenericParameterType(0);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGenericParameterType(0);  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  typeVarAssigns.getGenericParameterType(0);	      Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(0);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	16	None	replace
96	[BUG]  [BUGGY]  if(type.isArray())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  if(type.isArray())  {  return  false;  }  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type.isArray())  {  return  false;  }	  return    false;    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
97	[BUG]  [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGenericArrayType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGenericArrayType();  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  typeVarAssigns.getGenericArrayType();	      Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	11	None	replace
98	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  Class  <?>  type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  Class  <?>  type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    Class  <?>  type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	3	None	add
99	[BUG]  [BUGGY]  return  toGenericArrayType.isEmpty()  &&  isAssignable(type,  typeVarAssigns,  toGenericArrayType);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  return  toGenericArrayType.isEmpty()  &&  isAssignable(type,  typeVarAssigns,  toGenericArrayType);  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return  toGenericArrayType.isEmpty()  &&  isAssignable(type,  typeVarAssigns,  toGenericArrayType);	  return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
100	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getGenericArrayType(type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  GenericArrayType  toGenericArrayType  =  getGenericArrayType(type);  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  getGenericArrayType(type);	  if(type    instanceof    GenericArrayType)    {    return    false;    }    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	23	None	replace
101	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getGenericArrayType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  GenericArrayType  toGenericArrayType  =  getGenericArrayType();  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  getGenericArrayType();	  if(type    instanceof    GenericArrayType)    {    return    false;    }    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	23	None	replace
102	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  false;  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  GenericArrayType  toGenericArrayType  =  false;  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  false;	  if(type    instanceof    GenericArrayType)    {    return    false;    }    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	23	None	replace
103	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  null;  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  GenericArrayType  toGenericArrayType  =  null;  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  null;	  if(type    instanceof    GenericArrayType)    {    return    false;    }    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	23	None	replace
104	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  Class  <?>  type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  Class  <?>  type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    Class  <?>  type  instanceof  Class  <?>)  {  return  false;  }  else  if(!toGenericArrayType.equals(type))  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	5	None	add
105	[BUG]  [BUGGY]  Class  <?>  type  =  toGenericArrayType.getGenericComponentType();  [CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  Class  <?>  type  =  toGenericArrayType.getGenericComponentType();  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Class  <?>  type  =  toGenericArrayType.getGenericComponentType();	  if(type    instanceof    GenericArrayType)    {    return    true;    }    	non-compiled	[CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	21	None	replace
106	[BUG]  [BUGGY]  Class  <?>  type  =  toGenericArrayType.getGenericParameterType(0);  [CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  Class  <?>  type  =  toGenericArrayType.getGenericParameterType(0);  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Class  <?>  type  =  toGenericArrayType.getGenericParameterType(0);	  if(type    instanceof    GenericArrayType)    {    return    true;    }    	non-compiled	[CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	21	None	replace
107	[BUG]  [BUGGY]  Class  <?>  type  =  toGenericArrayType.getGenericParameterType(type);  [CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  Class  <?>  type  =  toGenericArrayType.getGenericParameterType(type);  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Class  <?>  type  =  toGenericArrayType.getGenericParameterType(type);	  if(type    instanceof    GenericArrayType)    {    return    true;    }    	non-compiled	[CE]  variable  type  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	21	None	replace
108	[BUG]  [BUGGY]  return  false;  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericArray();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  return  false;  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericArray();  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return    false;    GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericArray();	  	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	1	None	add
109	[BUG]  [BUGGY]  return  false;  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  return  false;  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return    false;    Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);	  	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	1	None	add
110	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  typeVarAssigns);  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  typeVarAssigns);	      Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	13	None	replace
111	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwable  throw  new  IllegalArgumentException( "   ");  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwable  throw  new  IllegalArgumentException( "   ");  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	throw    new    IllegalArgumentException(   "   ");    Throwable  throw  new  IllegalArgumentException( "   ");	  	non-compiled	[CE]  not  a  statement	18	None	add
112	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  Class  <?>  type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  if(type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  Class  <?>  type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    true;    }    Class  <?>  type  instanceof  Class  <?>)  {  return  false;  }  else  if(toGenericArrayType.equals(type))  {  return  true;  }	  	non-compiled	[CE]  ';'  expected	7	None	add
113	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  {  return  true;  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type  instanceof  GenericArrayType)  {  return  true;	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
114	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.toGenericArrayType.getGeneric();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  Type  toGenericArrayType  =  type.toGenericArrayType.getGeneric();  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  type.toGenericArrayType.getGeneric();	      Type    toGenericArrayType    =    toGenericArrayType.getGeneric();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	17	None	replace
115	[BUG]  [BUGGY]  return!toComponentType.isEmpty()  &&  isAssignable(toGenericArrayType,  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  toComponentType  [FE]        AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  return!toComponentType.isEmpty()  &&  isAssignable(toGenericArrayType,  toComponentType,  typeVarAssigns);  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!toComponentType.isEmpty()  &&  isAssignable(toGenericArrayType,  toComponentType,  typeVarAssigns);	  return!typeVarAssigns.isEmpty()    &&    isAssignable(toGenericArrayType,    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  toComponentType	27	None	replace
116	[BUG]  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);	  	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	28	None	add
117	[BUG]  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);	  	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	28	None	add
118	[BUG]  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();	  	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	28	None	add
119	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  types.getGenericArrayType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  GenericArrayType  toGenericArrayType  =  types.getGenericArrayType();  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  types.getGenericArrayType();	      GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGeneric();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	12	None	replace
120	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericParameterType(0);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericParameterType(0);  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericParameterType(0);	      GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(0);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	25	None	replace
121	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	throw  new  IllegalStateException( " ");	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  AssertionError  	19	2	replace
122	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	throw  new  IllegalStateException( " ");	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  AssertionError  	19	2	replace
123	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  ==  return  true;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  if(type  instanceof  GenericArrayType)  {  return  true;  }  if(type  instanceof  GenericArrayType)  ==  return  true;  }  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type    instanceof    GenericArrayType)    {    return    true;    }    if(type  instanceof  GenericArrayType)  ==  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
124	[BUG]  [BUGGY]  aughtExceptionHandler(toGenericArrayType,  type);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  aughtExceptionHandler(toGenericArrayType,  type);  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	aughtExceptionHandler(toGenericArrayType,  type);	  if(type    instanceof    GenericArrayType)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
125	[BUG]  [BUGGY]  aughtExceptionHandler(toGenericArrayType);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  aughtExceptionHandler(toGenericArrayType);  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	aughtExceptionHandler(toGenericArrayType);	  if(type    instanceof    GenericArrayType)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
126	[BUG]  [BUGGY]  return  false;  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  return  false;  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return    false;    GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();	  	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	1	None	add
127	[BUG]  [BUGGY]  return  false;  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  return  false;  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return    false;    GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);	  	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	1	None	add
128	[BUG]  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  }  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  }  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    if(typeVarAssigns!=  null)  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  }	  	non-compiled	[CE]  unreachable  statement	28	None	add
129	[BUG]  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(toGenericArrayType.equals(type))  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  }  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  if(toGenericArrayType.equals(type))  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  }  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!typeVarAssigns.isEmpty()    &&    isAssignable(type,    toGenericArrayType,    typeVarAssigns);    if(toGenericArrayType.equals(type))  {  return!typeVarAssigns.isEmpty()  &&  isAssignable(type,  toGenericArrayType,  typeVarAssigns);  }	  	non-compiled	[CE]  unreachable  statement	28	None	add
130	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);	  return!typeVarAssigns.isEmpty()    &&    isAssignable(toGenericArrayType,    toComponentType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	27	2	replace
131	[BUG]  [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return!typeVarAssigns.isEmpty()  &&  isAssignable(toGenericArrayType,  type,  typeVarAssigns);	  return!typeVarAssigns.isEmpty()    &&    isAssignable(toGenericArrayType,    toComponentType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	27	2	replace
132	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  <  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  if(type  instanceof  GenericArrayType)  {  return  false;  }  if(type  instanceof  GenericArrayType)  <  return  false;  }  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type    instanceof    GenericArrayType)    {    return    false;    }    if(type  instanceof  GenericArrayType)  <  return  false;  }	  	non-compiled	[CE]  illegal  start  of  type	22	None	add
133	[BUG]  [BUGGY]  return(toGenericArrayType  ==  null)?  null  :  toGenericArrayType.getGeneric();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  return(toGenericArrayType  ==  null)?  null  :  toGenericArrayType.getGeneric();  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return(toGenericArrayType  ==  null)?  null  :  toGenericArrayType.getGeneric();	  return    false;    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
134	[BUG]  [BUGGY]  return(toGenericArrayType  ==  null)?  null  :  toGenericArrayType.getGenericComponentType();  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  return(toGenericArrayType  ==  null)?  null  :  toGenericArrayType.getGenericComponentType();  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return(toGenericArrayType  ==  null)?  null  :  toGenericArrayType.getGenericComponentType();	  return    false;    	non-compiled	[CE]  incompatible  types	2	None	replace
135	[BUG]  [BUGGY]  return(toGenericArrayType!=  null)?  null  :  toGenericArrayType.getGeneric();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  return(toGenericArrayType!=  null)?  null  :  toGenericArrayType.getGeneric();  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return(toGenericArrayType!=  null)?  null  :  toGenericArrayType.getGeneric();	  return    false;    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
136	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGenericArrayType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGenericArrayType();  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  type.getGenericArrayType();	      GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGeneric();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	12	None	replace
137	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGenericArray();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGenericArray();  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  type.getGenericArray();	      GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGeneric();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	12	None	replace
138	[BUG]  [BUGGY]  [Delete]  else  if(toGenericArrayType.equals(type))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  [Delete]  else  if(toGenericArrayType.equals(type))  {  return  false;  }  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	[Delete]  else  if(toGenericArrayType.equals(type))  {  return  false;  }	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
139	[BUG]  [BUGGY]  [Delete]  else  if(toGenericArrayType.equals(type))  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  [Delete]  else  if(toGenericArrayType.equals(type))  {  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	[Delete]  else  if(toGenericArrayType.equals(type))  {	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
140	[BUG]  [BUGGY]  [Delete]  else  if(typeVarAssigns.contains(toGenericArrayType))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  [Delete]  else  if(typeVarAssigns.contains(toGenericArrayType))  {  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	[Delete]  else  if(typeVarAssigns.contains(toGenericArrayType))  {	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
141	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  toComponentType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  toComponentType);  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  toComponentType);	      Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	13	None	replace
142	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  toComponentType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  toComponentType);  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  toComponentType);	      GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	26	None	replace
143	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  typeVarAssigns);  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  typeVarAssigns);	      GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	26	None	replace
144	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericArrayType(0);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericArrayType(0);  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericArrayType(0);	      GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(0);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	25	None	replace
145	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  if(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  return  false;  }  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	if(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  return  false;  }	  if(type    instanceof    GenericArrayType)    {    return    false;    }    	compilable	  [FE]  AssertionError  	23	2	replace
146	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  if(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  return  false;  }  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  return  false;  }	  if(type    instanceof    GenericArrayType)    {    return    false;    }    	compilable	  [FE]  AssertionError  	23	2	replace
147	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  if(type  instanceof  GenericArrayType  ==  false)  {  return  false;  }  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	add	if(type  instanceof  GenericArrayType  ==  false)  {  return  false;  }	  if(type    instanceof    GenericArrayType)    {    return    false;    }    	compilable	  [FE]  AssertionError  	23	2	replace
148	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ==  false)  {  return  false;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  if(type  instanceof  GenericArrayType  ==  false)  {  return  false;  }  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	if(type  instanceof  GenericArrayType  ==  false)  {  return  false;  }	  if(type    instanceof    GenericArrayType)    {    return    false;    }    	compilable	  [FE]  AssertionError  	23	2	replace
149	[BUG]  [BUGGY]  Type  toGenericArrayType  =  types.getGenericParameterType(0);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  Type  toGenericArrayType  =  types.getGenericParameterType(0);  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  types.getGenericParameterType(0);	      Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(0);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	16	None	replace
150	[BUG]  [BUGGY]  return  new  IllegalArgumentException( " ");  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  return  new  IllegalArgumentException( " ");  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	return  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  incompatible  types	19	None	replace
151	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericArrayType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  Type  toGenericArrayType  =  type.getGenericArrayType();  [BUGGY]    return  true;  }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	Type  toGenericArrayType  =  type.getGenericArrayType();	      Type    toGenericArrayType    =    toGenericArrayType.getGeneric();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	17	None	replace
152	[BUG]  [BUGGY]  [Delete]  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  [Delete]  else  if(!toGenericArrayType.equals(type))  {  return  false;  }  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	[Delete]  else  if(!toGenericArrayType.equals(type))  {  return  false;  }	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
153	[BUG]  [BUGGY]  [Delete]  else  if(!toGenericArrayType.equals(type))  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  [Delete]  else  if(!toGenericArrayType.equals(type))  {  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	[Delete]  else  if(!toGenericArrayType.equals(type))  {	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
154	[BUG]  [BUGGY]  [Delete]  else  if(!toGenericArrayType.isAssignableFrom(type))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }    if  (toGenericArrayType  ==  null)  {  return  false;  }  if  (toGenericArrayType.equals(type))  {    [BUGGY]  [Delete]  else  if(!toGenericArrayType.isAssignableFrom(type))  {  [BUGGY]    }  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	274	274	2	replace	[Delete]  else  if(!toGenericArrayType.isAssignableFrom(type))  {	  if(type    instanceof    Class    <?>)    {    return    false;    }    else    if(!toGenericArrayType.equals(type))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
