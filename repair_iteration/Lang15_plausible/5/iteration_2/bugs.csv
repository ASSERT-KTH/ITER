bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Type  toType  =(GenericArrayType)typeVarAssigns;  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Type  toType  =(GenericArrayType)typeVarAssigns;  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =(GenericArrayType)typeVarAssigns;	      Type    toType    =(GenericArrayType)toType;    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	3	None	replace
2	[BUG]  [BUGGY]  Type  toType  =(GenericArrayType)toType.cloneTree();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Type  toType  =(GenericArrayType)toType.cloneTree();  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =(GenericArrayType)toType.cloneTree();	      Type    toType    =(GenericArrayType)toType;    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	3	None	replace
3	[BUG]  [BUGGY]  Type  toType  =  type.getGenericParameterType(0);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Type  toType  =  type.getGenericParameterType(0);  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  type.getGenericParameterType(0);	      Type    toType    =    toType.getGenericParameterType(0);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	15	None	replace
4	[BUG]  [BUGGY]  Type  toType  =  type.getGenericParameterType(1);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Type  toType  =  type.getGenericParameterType(1);  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  type.getGenericParameterType(1);	      Type    toType    =    toType.getGenericParameterType(0);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	15	None	replace
5	[BUG]  [BUGGY]  Type  toType  =  toType.getGenericParameterType(typeVarAssigns);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Type  toType  =  toType.getGenericParameterType(typeVarAssigns);  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  toType.getGenericParameterType(typeVarAssigns);	      Type    toType    =    toType.getGenericParameterType(0);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	15	None	replace
6	[BUG]  [BUGGY]  Type  toType  =(GenericArrayType)typeVarAssigns.clone();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Type  toType  =(GenericArrayType)typeVarAssigns.clone();  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =(GenericArrayType)typeVarAssigns.clone();	      Type    toType    =(GenericArrayType)toType.clone();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	2	None	replace
7	[BUG]  [BUGGY]  Type  toType  =(GenericArrayType)type.clone();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Type  toType  =(GenericArrayType)type.clone();  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =(GenericArrayType)type.clone();	      Type    toType    =(GenericArrayType)toType.clone();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	2	None	replace
8	[BUG]  [BUGGY]  return  isAssignable(type,  toType,  typeVarAssigns);  return  isAssignable(type,  toType,  typeVarAssigns);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  return  isAssignable(type,  toType,  typeVarAssigns);  return  isAssignable(type,  toType,  typeVarAssigns);  [BUGGY]    }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	return    isAssignable(type,    toType,    typeVarAssigns);    return  isAssignable(type,  toType,  typeVarAssigns);	  	non-compiled	[CE]  unreachable  statement	6	None	add
9	[BUG]  [BUGGY]  return  isAssignable(type,  toType,  typeVarAssigns);  Return  isAssignable(type,  toType,  typeVarAssigns);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  return  isAssignable(type,  toType,  typeVarAssigns);  Return  isAssignable(type,  toType,  typeVarAssigns);  [BUGGY]    }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	return    isAssignable(type,    toType,    typeVarAssigns);    Return  isAssignable(type,  toType,  typeVarAssigns);	  	non-compiled	[CE]  ';'  expected	6	None	add
10	[BUG]  [BUGGY]  return  isAssignable(type,  toType,  typeVarAssigns);  return  getAssignable(type,  toType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  return  isAssignable(type,  toType,  typeVarAssigns);  return  getAssignable(type,  toType,  typeVarAssigns);  [BUGGY]    }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	return    isAssignable(type,    toType,    typeVarAssigns);    return  getAssignable(type,  toType,  typeVarAssigns);	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
11	[BUG]  [BUGGY]  return  isAssignable(type,  toType,  typeVarAssigns);  return  hasAssignable(type,  toType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  return  isAssignable(type,  toType,  typeVarAssigns);  return  hasAssignable(type,  toType,  typeVarAssigns);  [BUGGY]    }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	return    isAssignable(type,    toType,    typeVarAssigns);    return  hasAssignable(type,  toType,  typeVarAssigns);	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
12	[BUG]  [BUGGY]  Type  toType  =  toType.getGenericParameterType();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Type  toType  =  toType.getGenericParameterType();  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  toType.getGenericParameterType();	      Type    toType    =    toType.getGenericArrayType();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	10	None	replace
13	[BUG]  [BUGGY]  Type  toType  =  getGenericArrayType(type);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Type  toType  =  getGenericArrayType(type);  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  getGenericArrayType(type);	      Type    toType    =    getGenericArrayType(toType);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	5	None	replace
14	[BUG]  [BUGGY]  Type  toType  =  getGenericArrayType(toType,  typeVarAssigns);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Type  toType  =  getGenericArrayType(toType,  typeVarAssigns);  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  getGenericArrayType(toType,  typeVarAssigns);	      Type    toType    =    getGenericArrayType(toType);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	5	None	replace
15	[BUG]  [BUGGY]  Type  toType  =  getGenericArrayType(typeVarAssigns);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Type  toType  =  getGenericArrayType(typeVarAssigns);  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  getGenericArrayType(typeVarAssigns);	      Type    toType    =    getGenericArrayType(toType);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	5	None	replace
16	[BUG]  [BUGGY]  Type  toType  =  getGenericArrayType(toType.type);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Type  toType  =  getGenericArrayType(toType.type);  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  getGenericArrayType(toType.type);	      Type    toType    =    getGenericArrayType(toType);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	5	None	replace
17	[BUG]  [BUGGY]  Type  toType  =  type.getGenericType();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Type  toType  =  type.getGenericType();  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  type.getGenericType();	      Type    toType    =    toType.getGenericType();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	4	None	replace
18	[BUG]  [BUGGY]  Type  toType  =  ArrayType.getGenericType(toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Type  toType  =  ArrayType.getGenericType(toType);  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  ArrayType.getGenericType(toType);	      Type    toType    =    toType.getGenericType();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	4	None	replace
19	[BUG]  [BUGGY]  Type  toType  =  types.getGenericType();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Type  toType  =  types.getGenericType();  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  types.getGenericType();	      Type    toType    =    toType.getGenericType();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	4	None	replace
20	[BUG]  [BUGGY]  Type  toType  =  types.get(toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Type  toType  =  types.get(toType);  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  types.get(toType);	      Type    toType    =    typeVarAssigns.get(toType);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	9	None	replace
21	[BUG]  [BUGGY]  Type  toType  =  typeVarAssigns.get(toType,  toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Type  toType  =  typeVarAssigns.get(toType,  toType);  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  typeVarAssigns.get(toType,  toType);	      Type    toType    =    typeVarAssigns.get(toType);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	9	None	replace
22	[BUG]  [BUGGY]  return  isAssignable(type,  ArrayType,  typeVarAssigns);  [CE]  cannot  find  symbol  ArrayType  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  return  isAssignable(type,  ArrayType,  typeVarAssigns);  [BUGGY]    }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	return  isAssignable(type,  ArrayType,  typeVarAssigns);	  return    isAssignable(type,    toType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  ArrayType	7	None	replace
23	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericArray();  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericArray();  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Class  <?>  typeVarAssigns  =  toType.getGenericArray();	      Class    <?>    typeVarAssigns    =    toType.getRawClass();    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	14	None	replace
24	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericArrayClass();  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericArrayClass();  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Class  <?>  typeVarAssigns  =  toType.getGenericArrayClass();	      Class    <?>    typeVarAssigns    =    toType.getRawClass();    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	14	None	replace
25	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericClass();  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericClass();  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Class  <?>  typeVarAssigns  =  toType.getGenericClass();	      Class    <?>    typeVarAssigns    =    toType.getRawClass();    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	14	None	replace
26	[BUG]  [BUGGY]  Type  toType  =  type.getGenericArrayType(),  toType);  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Type  toType  =  type.getGenericArrayType(),  toType);  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  type.getGenericArrayType(),  toType);	      Type    toType    =    type.getGenericArrayType();    	non-compiled	[CE]  ';'  expected	11	None	replace
27	[BUG]  [BUGGY]  Type  toType  =  type.getGenericArrayType(toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Type  toType  =  type.getGenericArrayType(toType);  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  type.getGenericArrayType(toType);	      Type    toType    =    type.getGenericArrayType();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	11	None	replace
28	[BUG]  [BUGGY]  Type  toType  =  types.get(type);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Type  toType  =  types.get(type);  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  types.get(type);	      Type    toType    =    typeVarAssigns.get(type);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	12	None	replace
29	[BUG]  [BUGGY]  Type  toType  =  type.typeVarAssigns.get(toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Type  toType  =  type.typeVarAssigns.get(toType);  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  type.typeVarAssigns.get(toType);	      Type    toType    =    typeVarAssigns.get(type);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	12	None	replace
30	[BUG]  [BUGGY]  (GenericArrayType)toType,  toType);  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  (GenericArrayType)toType,  toType);  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	(GenericArrayType)toType,  toType);	      (GenericArrayType)toType,    typeVarAssigns);    	non-compiled	[CE]  not  a  statement	1	None	replace
31	[BUG]  [BUGGY]  (GenericArrayType)toType,  toType.typeVarAssigns);  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  (GenericArrayType)toType,  toType.typeVarAssigns);  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	(GenericArrayType)toType,  toType.typeVarAssigns);	      (GenericArrayType)toType,    typeVarAssigns);    	non-compiled	[CE]  not  a  statement	1	None	replace
32	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericArrayTypes();  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericArrayTypes();  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Class  <?>  typeVarAssigns  =  toType.getGenericArrayTypes();	      Class    <?>    typeVarAssigns    =    toType.getGenericParameterTypes();    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	13	None	replace
33	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericArrayParameterTypes();  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericArrayParameterTypes();  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Class  <?>  typeVarAssigns  =  toType.getGenericArrayParameterTypes();	      Class    <?>    typeVarAssigns    =    toType.getGenericParameterTypes();    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	13	None	replace
34	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericParameterTypes(toType);  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericParameterTypes(toType);  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Class  <?>  typeVarAssigns  =  toType.getGenericParameterTypes(toType);	      Class    <?>    typeVarAssigns    =    toType.getGenericParameterTypes();    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	13	None	replace
35	[BUG]  [BUGGY]  return  isAssignable(type,  (GenericArrayType)toType,  toType);  [CE]  no  suitable  method  found  for  isAssignable(Type,GenericArrayType,Type)  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  return  isAssignable(type,  (GenericArrayType)toType,  toType);  [BUGGY]    }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	return  isAssignable(type,  (GenericArrayType)toType,  toType);	  return    isAssignable(type,    (GenericArrayType)toType,    _typeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,GenericArrayType,Type)	8	None	replace
36	[BUG]  [BUGGY]  Type  toType  =  type.getGenericParameterTypes();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Type  toType  =  type.getGenericParameterTypes();  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  type.getGenericParameterTypes();	      Type    toType    =    toType.getGenericParameterTypes();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	16	None	replace
37	[BUG]  [BUGGY]  Type  toType  =  toType.getGenericArrayTypes();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Type  toType  =  toType.getGenericArrayTypes();  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  toType.getGenericArrayTypes();	      Type    toType    =    toType.getGenericParameterTypes();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	16	None	replace
38	[BUG]  [BUGGY]  Type  toType  =  types.getGenericParameterTypes();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Type  toType  =  types.getGenericParameterTypes();  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  types.getGenericParameterTypes();	      Type    toType    =    toType.getGenericParameterTypes();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	16	None	replace
39	[BUG]  [BUGGY]  Type  toType  =  typeVarAssigns.get(totype);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Type  toType  =  typeVarAssigns.get(totype);  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  typeVarAssigns.get(totype);	      Type    toType    =    typeVarAssigns.get(type);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	12	None	replace
40	[BUG]  [BUGGY]  Type  toType  =  type.getGenericArrayType(typeVarAssigns);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Type  toType  =  type.getGenericArrayType(typeVarAssigns);  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  type.getGenericArrayType(typeVarAssigns);	      Type    toType    =    type.getGenericArrayType();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	11	None	replace
41	[BUG]  [BUGGY]  Type  toType  =(GenericArrayType)type;  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Type  toType  =(GenericArrayType)type;  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =(GenericArrayType)type;	      Type    toType    =(GenericArrayType)toType;    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	3	None	replace
42	[BUG]  [BUGGY]  Class  <?>  toType  =  toType.getGenericParameterTypes();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Class  <?>  toType  =  toType.getGenericParameterTypes();  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Class  <?>  toType  =  toType.getGenericParameterTypes();	      Class    <?>    typeVarAssigns    =    toType.getGenericParameterTypes();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	13	None	replace
43	[BUG]  [BUGGY]  Type  toType  =  typeVarAssigns.getGenericArrayType();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Type  toType  =  typeVarAssigns.getGenericArrayType();  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  typeVarAssigns.getGenericArrayType();	      Type    toType    =    toType.getGenericArrayType();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	10	None	replace
44	[BUG]  [BUGGY]  Type  toType  =  toType.getGenericArrayType(typeVarAssigns);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Type  toType  =  toType.getGenericArrayType(typeVarAssigns);  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  toType.getGenericArrayType(typeVarAssigns);	      Type    toType    =    toType.getGenericArrayType();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	10	None	replace
45	[BUG]  [BUGGY]  (GenericArrayType)toType,  toType,  typeVarAssigns);  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  (GenericArrayType)toType,  toType,  typeVarAssigns);  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	(GenericArrayType)toType,  toType,  typeVarAssigns);	      (GenericArrayType)toType,    typeVarAssigns);    	non-compiled	[CE]  not  a  statement	1	None	replace
46	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericArrayType();  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericArrayType();  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Class  <?>  typeVarAssigns  =  toType.getGenericArrayType();	      Class    <?>    typeVarAssigns    =    toType.getRawClass();    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	14	None	replace
47	[BUG]  [BUGGY]  Type  toType  =  getTypeVarAssigns().get(toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Type  toType  =  getTypeVarAssigns().get(toType);  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  getTypeVarAssigns().get(toType);	      Type    toType    =    typeVarAssigns.get(toType);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	9	None	replace
48	[BUG]  [BUGGY]  Type  toType  =  types.getGenericParameterType(0);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Type  toType  =  types.getGenericParameterType(0);  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  types.getGenericParameterType(0);	      Type    toType    =    toType.getGenericParameterType(0);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	15	None	replace
49	[BUG]  [BUGGY]  Type  toType  =(GenericArrayType)fromType.clone();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Type  toType  =(GenericArrayType)fromType.clone();  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =(GenericArrayType)fromType.clone();	      Type    toType    =(GenericArrayType)toType.clone();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	2	None	replace
50	[BUG]  [BUGGY]  Type  toType  =(GenericArrayType)typeVarAssigns.get(toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Type  toType  =(GenericArrayType)typeVarAssigns.get(toType);  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =(GenericArrayType)typeVarAssigns.get(toType);	      Type    toType    =(GenericArrayType)toType;    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	3	None	replace
51	[BUG]  [BUGGY]  Type  toType  =  toType.get(typeVarAssigns);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Type  toType  =  toType.get(typeVarAssigns);  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  toType.get(typeVarAssigns);	      Type    toType    =    typeVarAssigns.get(toType);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	9	None	replace
52	[BUG]  [BUGGY]  Type  toType  =  toType.get(toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Type  toType  =  toType.get(toType);  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  toType.get(toType);	      Type    toType    =    typeVarAssigns.get(toType);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	9	None	replace
53	[BUG]  [BUGGY]  Type  toType  =  getTypeVarAssigns().get(type);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {    [BUGGY]  Type  toType  =  getTypeVarAssigns().get(type);  [BUGGY]    return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  getTypeVarAssigns().get(type);	      Type    toType    =    typeVarAssigns.get(type);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	12	None	replace
