bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Type  toType  =(GenericArrayType)type.cloneTree();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =(GenericArrayType)type.cloneTree();  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =(GenericArrayType)type.cloneTree();	  Type    toType    =(GenericArrayType)type.clone();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	7	None	replace
2	[BUG]  [BUGGY]  Type  toType  =(GenericArrayType)type.getParameterType(0);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =(GenericArrayType)type.getParameterType(0);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =(GenericArrayType)type.getParameterType(0);	  Type    toType    =(GenericArrayType)type.clone();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	7	None	replace
3	[BUG]  [BUGGY]  Type  toType  =  toType.get(toType,  typeVarAssigns);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  toType.get(toType,  typeVarAssigns);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  toType.get(toType,  typeVarAssigns);	  Type    toType    =    typeVarAssigns.get(toType,    toType);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	21	None	replace
4	[BUG]  [BUGGY]  Type  toType  =  typeVarAssigns.get(type,  toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  typeVarAssigns.get(type,  toType);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  typeVarAssigns.get(type,  toType);	  Type    toType    =    typeVarAssigns.get(toType,    toType);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	21	None	replace
5	[BUG]  [BUGGY]  Type  toType  =  types.get(toType,  toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  types.get(toType,  toType);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  types.get(toType,  toType);	  Type    toType    =    typeVarAssigns.get(toType,    toType);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	21	None	replace
6	[BUG]  [BUGGY]  Type  toType  =(GenericArrayType)typeVarAssigns.cloneTree();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =(GenericArrayType)typeVarAssigns.cloneTree();  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =(GenericArrayType)typeVarAssigns.cloneTree();	  Type    toType    =(GenericArrayType)toType.cloneTree();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	2	None	replace
7	[BUG]  [BUGGY]  Type  toType  =(GenericArrayType)toType.cloneParameter();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =(GenericArrayType)toType.cloneParameter();  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =(GenericArrayType)toType.cloneParameter();	  Type    toType    =(GenericArrayType)toType.cloneTree();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	2	None	replace
8	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericReturnType();  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericReturnType();  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Class  <?>  typeVarAssigns  =  toType.getGenericReturnType();	  Class    <?>    typeVarAssigns    =    toType.getGenericArrayClass();    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	24	None	replace
9	[BUG]  [BUGGY]  Type  toType  =  typeVarAssigns.getGenericType();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  typeVarAssigns.getGenericType();  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  typeVarAssigns.getGenericType();	  Type    toType    =    typeVarAssigns.getGenericArrayType();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	43	None	replace
10	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericParameterTypes(type);  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericParameterTypes(type);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Class  <?>  typeVarAssigns  =  toType.getGenericParameterTypes(type);	  Class    <?>    typeVarAssigns    =    toType.getGenericParameterTypes(toType);    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	34	None	replace
11	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericParameterTypes(toType,  toType);  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericParameterTypes(toType,  toType);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Class  <?>  typeVarAssigns  =  toType.getGenericParameterTypes(toType,  toType);	  Class    <?>    typeVarAssigns    =    toType.getGenericParameterTypes(toType);    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	34	None	replace
12	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericArrayTypes(toType);  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericArrayTypes(toType);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Class  <?>  typeVarAssigns  =  toType.getGenericArrayTypes(toType);	  Class    <?>    typeVarAssigns    =    toType.getGenericParameterTypes(toType);    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	34	None	replace
13	[BUG]  [BUGGY]  Type  toType  =  type.getGenericArrayType(0);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  type.getGenericArrayType(0);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  type.getGenericArrayType(0);	  Type    toType    =    type.getGenericParameterType(0);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	3	None	replace
14	[BUG]  [BUGGY]  Type  toType  =  type.getGenericArrayType(1);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  type.getGenericArrayType(1);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  type.getGenericArrayType(1);	  Type    toType    =    type.getGenericParameterType(0);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	3	None	replace
15	[BUG]  [BUGGY]  Type  toType  =  type.getGenericParameterType(toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  type.getGenericParameterType(toType);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  type.getGenericParameterType(toType);	  Type    toType    =    type.getGenericParameterType(0);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	3	None	replace
16	[BUG]  [BUGGY]  Type  toType  =  type.get(type);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  type.get(type);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  type.get(type);	  Type    toType    =    types.get(type);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	28	None	replace
17	[BUG]  [BUGGY]  Type  toType  =  types.get(type,  toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  types.get(type,  toType);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  types.get(type,  toType);	  Type    toType    =    types.get(type);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	28	None	replace
18	[BUG]  [BUGGY]  Type  toType  =  typeVarAssigns.getGenericArrayType(toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  typeVarAssigns.getGenericArrayType(toType);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  typeVarAssigns.getGenericArrayType(toType);	  Type    toType    =    toType.getGenericArrayType(typeVarAssigns);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	44	None	replace
19	[BUG]  [BUGGY]  Type  toType  =  toType.getGenericArrayType(typeVarAssigns,  toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  toType.getGenericArrayType(typeVarAssigns,  toType);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  toType.getGenericArrayType(typeVarAssigns,  toType);	  Type    toType    =    toType.getGenericArrayType(typeVarAssigns);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	44	None	replace
20	[BUG]  [BUGGY]  Type  toType  =  getTypeVarAssigns().get(0);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  getTypeVarAssigns().get(0);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  getTypeVarAssigns().get(0);	  Type    toType    =    getTypeVarAssigns().get(toType);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	47	None	replace
21	[BUG]  [BUGGY]  Type  toType  =  getTypeVarAssigns().get(type,  toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  getTypeVarAssigns().get(type,  toType);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  getTypeVarAssigns().get(type,  toType);	  Type    toType    =    getTypeVarAssigns().get(toType);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	47	None	replace
22	[BUG]  [BUGGY]  Type  toType  =  getGenericArrayType(type,  toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  getGenericArrayType(type,  toType);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  getGenericArrayType(type,  toType);	  Type    toType    =    getGenericArrayType(type);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	13	None	replace
23	[BUG]  [BUGGY]  Type  toType  =  getGenericArrayType(type,  typeVarAssigns);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  getGenericArrayType(type,  typeVarAssigns);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  getGenericArrayType(type,  typeVarAssigns);	  Type    toType    =    getGenericArrayType(type);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	13	None	replace
24	[BUG]  [BUGGY]  (GenericArrayType)toType,  toType.type);  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  (GenericArrayType)toType,  toType.type);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	(GenericArrayType)toType,  toType.type);	  (GenericArrayType)toType,    toType);    	non-compiled	[CE]  not  a  statement	30	None	replace
25	[BUG]  [BUGGY]  (GenericArrayType)toType,  null);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  (GenericArrayType)toType,  null);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	(GenericArrayType)toType,  null);	  (GenericArrayType)toType,    toType);    	non-compiled	[CE]  not  a  statement	30	None	replace
26	[BUG]  [BUGGY]  Type  toType  =  type.get(typeVarAssigns);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  type.get(typeVarAssigns);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  type.get(typeVarAssigns);	  Type    toType    =    toType.get(typeVarAssigns);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	51	None	replace
27	[BUG]  [BUGGY]  Type  toType  =  types.get(typeVarAssigns);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  types.get(typeVarAssigns);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  types.get(typeVarAssigns);	  Type    toType    =    toType.get(typeVarAssigns);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	51	None	replace
28	[BUG]  [BUGGY]  Type  toType  =  toType.get(type);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  toType.get(type);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  toType.get(type);	  Type    toType    =    toType.get(typeVarAssigns);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	51	None	replace
29	[BUG]  [BUGGY]  Type  toType  =  type.getGenericArrayType(toType,  toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  type.getGenericArrayType(toType,  toType);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  type.getGenericArrayType(toType,  toType);	  Type    toType    =    type.getGenericArrayType(toType);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	27	None	replace
30	[BUG]  [BUGGY]  Type  toType  =  toType.getGenericArrayType(type);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  toType.getGenericArrayType(type);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  toType.getGenericArrayType(type);	  Type    toType    =    type.getGenericArrayType(toType);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	27	None	replace
31	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericType();  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericType();  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Class  <?>  typeVarAssigns  =  toType.getGenericType();	  Class    <?>    typeVarAssigns    =    toType.getGenericArrayType();    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	46	None	replace
32	[BUG]  [BUGGY]  Type  toType  =  toType.getGenericArrayType(),  type);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  toType.getGenericArrayType(),  type);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  toType.getGenericArrayType(),  type);	  Type    toType    =    type.getGenericArrayType(),    toType);    	non-compiled	[CE]  ';'  expected	26	None	replace
33	[BUG]  [BUGGY]  Type  toType  =  type.getGenericArrayType(),  toType;  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  type.getGenericArrayType(),  toType;  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  type.getGenericArrayType(),  toType;	  Type    toType    =    type.getGenericArrayType(),    toType);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	26	None	replace
34	[BUG]  [BUGGY]  Type  toType  =  type.getGenericArrayType(),  toType,  toType);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  type.getGenericArrayType(),  toType,  toType);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  type.getGenericArrayType(),  toType,  toType);	  Type    toType    =    type.getGenericArrayType(),    toType);    	non-compiled	[CE]  ';'  expected	26	None	replace
35	[BUG]  [BUGGY]  Type  toType  =(GenericArrayType)typeVarAssigns.get(0);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =(GenericArrayType)typeVarAssigns.get(0);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =(GenericArrayType)typeVarAssigns.get(0);	  Type    toType    =(GenericArrayType)typeVarAssigns.clone();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	6	None	replace
36	[BUG]  [BUGGY]  Type  toType  =  type.get(toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  type.get(toType);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  type.get(toType);	  Type    toType    =    toType.get(toType);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	52	None	replace
37	[BUG]  [BUGGY]  return  isAssignable(type,  GenericArrayType,  typeVarAssigns);  [CE]  cannot  find  symbol  GenericArrayType  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(type,  GenericArrayType,  typeVarAssigns);  [BUGGY]      }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	return  isAssignable(type,  GenericArrayType,  typeVarAssigns);	  return    isAssignable(type,    ArrayType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  GenericArrayType	22	None	replace
38	[BUG]  [BUGGY]  Type  toType  =  ArrayType.getGenericType(type);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  ArrayType.getGenericType(type);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  ArrayType.getGenericType(type);	  Type    toType    =    ArrayType.getGenericType(toType);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	18	None	replace
39	[BUG]  [BUGGY]  Type  toType  =  ArrayType.getGenericType(typeVarAssigns);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  ArrayType.getGenericType(typeVarAssigns);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  ArrayType.getGenericType(typeVarAssigns);	  Type    toType    =    ArrayType.getGenericType(toType);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	18	None	replace
40	[BUG]  [BUGGY]  Type  toType  =  ArrayType.getGenericType(toType,  typeVarAssigns);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  ArrayType.getGenericType(toType,  typeVarAssigns);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  ArrayType.getGenericType(toType,  typeVarAssigns);	  Type    toType    =    ArrayType.getGenericType(toType);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	18	None	replace
41	[BUG]  [BUGGY]  (GenericArrayType)toType,  type.typeVarAssigns);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  (GenericArrayType)toType,  type.typeVarAssigns);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	(GenericArrayType)toType,  type.typeVarAssigns);	  (GenericArrayType)toType,    toType.typeVarAssigns);    	non-compiled	[CE]  not  a  statement	31	None	replace
42	[BUG]  [BUGGY]  Type  toType  =  getGenericArrayType(type.type);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  getGenericArrayType(type.type);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  getGenericArrayType(type.type);	  Type    toType    =    getGenericArrayType(toType.type);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	16	None	replace
43	[BUG]  [BUGGY]  Type  toType  =  getGenericArrayType(toType.type,  typeVarAssigns);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  getGenericArrayType(toType.type,  typeVarAssigns);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  getGenericArrayType(toType.type,  typeVarAssigns);	  Type    toType    =    getGenericArrayType(toType.type);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	16	None	replace
44	[BUG]  [BUGGY]  Type  toType  =  getGenericArrayType(toType.type,  toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  getGenericArrayType(toType.type,  toType);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  getGenericArrayType(toType.type,  toType);	  Type    toType    =    getGenericArrayType(toType.type);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	16	None	replace
45	[BUG]  [BUGGY]  Type  toType  =  getGenericArrayType(type,  toType.type);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  getGenericArrayType(type,  toType.type);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  getGenericArrayType(type,  toType.type);	  Type    toType    =    getGenericArrayType(toType.type);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	16	None	replace
46	[BUG]  [BUGGY]  return  isAssignable(type,  toType,  (GenericArrayType)toType);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,GenericArrayType)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(type,  toType,  (GenericArrayType)toType);  [BUGGY]      }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	return  isAssignable(type,  toType,  (GenericArrayType)toType);	  return    isAssignable(type,    (GenericArrayType)toType,    toType);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,GenericArrayType)	35	None	replace
47	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(toType,  (GenericArrayType)toType,  typeVarAssigns);  [BUGGY]      }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	add	return  isAssignable(toType,  (GenericArrayType)toType,  typeVarAssigns);	  return    isAssignable(type,    (GenericArrayType)toType,    toType);    	compilable	  [FE]  AssertionError  	35	2	replace
48	[BUG]  [BUGGY]  return  isAssignable(toType,  (GenericArrayType)toType,  typeVarAssigns);  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(toType,  (GenericArrayType)toType,  typeVarAssigns);  [BUGGY]      }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	return  isAssignable(toType,  (GenericArrayType)toType,  typeVarAssigns);	  return    isAssignable(type,    (GenericArrayType)toType,    toType);    	compilable	  [FE]  AssertionError  	35	2	replace
49	[BUG]  [BUGGY]  Type  toType  =(GenericArrayType)type.getDeclaredType();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =(GenericArrayType)type.getDeclaredType();  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =(GenericArrayType)type.getDeclaredType();	  Type    toType    =(GenericArrayType)type;    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	41	None	replace
50	[BUG]  [BUGGY]  Type  toType  =  toType.typeVarAssigns.get(type);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  toType.typeVarAssigns.get(type);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  toType.typeVarAssigns.get(type);	  Type    toType    =    type.typeVarAssigns.get(toType);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	29	None	replace
51	[BUG]  [BUGGY]  Type  toType  =  type.typeVarAssigns.get(toType,  toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  type.typeVarAssigns.get(toType,  toType);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  type.typeVarAssigns.get(toType,  toType);	  Type    toType    =    type.typeVarAssigns.get(toType);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	29	None	replace
52	[BUG]  [BUGGY]  Type  toType  =(GenericArrayType)typeVarAssigns.get(toType,  toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =(GenericArrayType)typeVarAssigns.get(toType,  toType);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =(GenericArrayType)typeVarAssigns.get(toType,  toType);	  Type    toType    =(GenericArrayType)typeVarAssigns.get(toType);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	50	None	replace
53	[BUG]  [BUGGY]  Type  toType  =(GenericArrayType)typeVarAssigns.get(toType  -  1);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =(GenericArrayType)typeVarAssigns.get(toType  -  1);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =(GenericArrayType)typeVarAssigns.get(toType  -  1);	  Type    toType    =(GenericArrayType)typeVarAssigns.get(toType);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	50	None	replace
54	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericTypes();  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericTypes();  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Class  <?>  typeVarAssigns  =  toType.getGenericTypes();	  Class    <?>    typeVarAssigns    =    toType.getGenericArrayTypes();    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	32	None	replace
55	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericParameterArrayTypes();  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericParameterArrayTypes();  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Class  <?>  typeVarAssigns  =  toType.getGenericParameterArrayTypes();	  Class    <?>    typeVarAssigns    =    toType.getGenericArrayTypes();    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	32	None	replace
56	[BUG]  [BUGGY]  Class  <?>  toType  =  type.getGenericParameterTypes();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Class  <?>  toType  =  type.getGenericParameterTypes();  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Class  <?>  toType  =  type.getGenericParameterTypes();	  Class    <?>    toType    =    toType.getGenericParameterTypes();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	42	None	replace
57	[BUG]  [BUGGY]  Class  <?>  toType  =  typeVarAssigns.getGenericParameterTypes();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Class  <?>  toType  =  typeVarAssigns.getGenericParameterTypes();  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Class  <?>  toType  =  typeVarAssigns.getGenericParameterTypes();	  Class    <?>    toType    =    toType.getGenericParameterTypes();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	42	None	replace
58	[BUG]  [BUGGY]  Class  <?>  toType  =  types.getGenericParameterTypes();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Class  <?>  toType  =  types.getGenericParameterTypes();  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Class  <?>  toType  =  types.getGenericParameterTypes();	  Class    <?>    toType    =    toType.getGenericParameterTypes();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	42	None	replace
59	[BUG]  [BUGGY]  Class  <?>  toType  =  TypeUtils.getGenericParameterTypes(toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Class  <?>  toType  =  TypeUtils.getGenericParameterTypes(toType);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Class  <?>  toType  =  TypeUtils.getGenericParameterTypes(toType);	  Class    <?>    toType    =    toType.getGenericParameterTypes();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	42	None	replace
60	[BUG]  [BUGGY]  Type  toType  =  types.getGenericArrayTypes();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  types.getGenericArrayTypes();  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  types.getGenericArrayTypes();	  Type    toType    =    types.getGenericParameterTypes();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	38	None	replace
61	[BUG]  [BUGGY]  Type  toType  =  types.getGenericArrayType();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  types.getGenericArrayType();  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  types.getGenericArrayType();	  Type    toType    =    types.getGenericParameterTypes();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	38	None	replace
62	[BUG]  [BUGGY]  Type  toType  =  types.getGenericArrayType(0);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  types.getGenericArrayType(0);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  types.getGenericArrayType(0);	  Type    toType    =    types.getGenericParameterType(0);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	48	None	replace
63	[BUG]  [BUGGY]  Type  toType  =  types.getGenericParameterType(toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  types.getGenericParameterType(toType);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  types.getGenericParameterType(toType);	  Type    toType    =    types.getGenericParameterType(0);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	48	None	replace
64	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericParameterType(0);  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericParameterType(0);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Class  <?>  typeVarAssigns  =  toType.getGenericParameterType(0);	  Class    <?>    typeVarAssigns    =    toType.getGenericClass();    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	25	None	replace
65	[BUG]  [BUGGY]  Type  toType  =  getGenericArrayType(typeVarAssigns,  toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  getGenericArrayType(typeVarAssigns,  toType);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  getGenericArrayType(typeVarAssigns,  toType);	  Type    toType    =    getGenericArrayType(typeVarAssigns);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	15	None	replace
66	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  if(toType  instanceof  GenericArrayType)  {  return  isAssignable(type,  toType,  typeVarAssigns);  }  else  {  return  isAssignable(type,  toType,  typeVarAssigns);  }  [BUGGY]      }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	add	if(toType  instanceof  GenericArrayType)  {  return  isAssignable(type,  toType,  typeVarAssigns);  }  else  {  return  isAssignable(type,  toType,  typeVarAssigns);  }	  return    isAssignable(type,    toType,    typeVarAssigns);    return    isAssignable(type,    toType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	8	2	replace
67	[BUG]  [BUGGY]  if(toType  instanceof  GenericArrayType)  {  return  isAssignable(type,  toType,  typeVarAssigns);  }  else  {  return  isAssignable(type,  toType,  typeVarAssigns);  }  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  if(toType  instanceof  GenericArrayType)  {  return  isAssignable(type,  toType,  typeVarAssigns);  }  else  {  return  isAssignable(type,  toType,  typeVarAssigns);  }  [BUGGY]      }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	if(toType  instanceof  GenericArrayType)  {  return  isAssignable(type,  toType,  typeVarAssigns);  }  else  {  return  isAssignable(type,  toType,  typeVarAssigns);  }	  return    isAssignable(type,    toType,    typeVarAssigns);    return    isAssignable(type,    toType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	8	2	replace
68	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  if(toType  instanceof  GenericArrayType)  {  return  isAssignable(type,  toType,  typeVarAssigns);  }  [BUGGY]      }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	add	if(toType  instanceof  GenericArrayType)  {  return  isAssignable(type,  toType,  typeVarAssigns);  }	  return    isAssignable(type,    toType,    typeVarAssigns);    return    isAssignable(type,    toType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	8	2	replace
69	[BUG]  [BUGGY]  if(toType  instanceof  GenericArrayType)  {  return  isAssignable(type,  toType,  typeVarAssigns);  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  if(toType  instanceof  GenericArrayType)  {  return  isAssignable(type,  toType,  typeVarAssigns);  }  [BUGGY]      }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	if(toType  instanceof  GenericArrayType)  {  return  isAssignable(type,  toType,  typeVarAssigns);  }	  return    isAssignable(type,    toType,    typeVarAssigns);    return    isAssignable(type,    toType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	8	2	replace
70	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  if(toType  instanceof  GenericArrayType)  {  return  isAssignable(type,  toType,  typeVarAssigns);  }  else  {  return  isAssignable(type,  (GenericArrayType)toType,  typeVarAssigns);  }  [BUGGY]      }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	add	if(toType  instanceof  GenericArrayType)  {  return  isAssignable(type,  toType,  typeVarAssigns);  }  else  {  return  isAssignable(type,  (GenericArrayType)toType,  typeVarAssigns);  }	  return    isAssignable(type,    toType,    typeVarAssigns);    return    isAssignable(type,    toType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	8	2	replace
71	[BUG]  [BUGGY]  if(toType  instanceof  GenericArrayType)  {  return  isAssignable(type,  toType,  typeVarAssigns);  }  else  {  return  isAssignable(type,  (GenericArrayType)toType,  typeVarAssigns);  }  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  if(toType  instanceof  GenericArrayType)  {  return  isAssignable(type,  toType,  typeVarAssigns);  }  else  {  return  isAssignable(type,  (GenericArrayType)toType,  typeVarAssigns);  }  [BUGGY]      }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	if(toType  instanceof  GenericArrayType)  {  return  isAssignable(type,  toType,  typeVarAssigns);  }  else  {  return  isAssignable(type,  (GenericArrayType)toType,  typeVarAssigns);  }	  return    isAssignable(type,    toType,    typeVarAssigns);    return    isAssignable(type,    toType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	8	2	replace
72	[BUG]  [BUGGY]  Type  toType  =  type.getGenericParameterType(typeVarAssigns);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  type.getGenericParameterType(typeVarAssigns);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  type.getGenericParameterType(typeVarAssigns);	  Type    toType    =    toType.getGenericParameterType(typeVarAssigns);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	5	None	replace
73	[BUG]  [BUGGY]  Type  toType  =  typeVarAssigns.getGenericParameterType(toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  typeVarAssigns.getGenericParameterType(toType);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  typeVarAssigns.getGenericParameterType(toType);	  Type    toType    =    toType.getGenericParameterType(typeVarAssigns);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	5	None	replace
74	[BUG]  [BUGGY]  Type  toType  =  toType.getGenericParameterType(typeVarAssigns,  toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  toType.getGenericParameterType(typeVarAssigns,  toType);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  toType.getGenericParameterType(typeVarAssigns,  toType);	  Type    toType    =    toType.getGenericParameterType(typeVarAssigns);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	5	None	replace
75	[BUG]  [BUGGY]  Type  toType  =  types.get(totype);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  types.get(totype);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  types.get(totype);	  Type    toType    =    typeVarAssigns.get(totype);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	39	None	replace
76	[BUG]  [BUGGY]  Type  toType  =  type.getGenericArrayTypes();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  type.getGenericArrayTypes();  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  type.getGenericArrayTypes();	  Type    toType    =    type.getGenericParameterTypes();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	36	None	replace
77	[BUG]  [BUGGY]  Type  toType  =  type.getGenericParameterType();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  type.getGenericParameterType();  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  type.getGenericParameterType();	  Type    toType    =    type.getGenericType();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	17	None	replace
78	[BUG]  [BUGGY]  Type  toType  =  types.getGenericType(toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  types.getGenericType(toType);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  types.getGenericType(toType);	  Type    toType    =    types.getGenericType();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	19	None	replace
79	[BUG]  [BUGGY]  Type  toType  =  type.getGenericParameterType(2);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  type.getGenericParameterType(2);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  type.getGenericParameterType(2);	  Type    toType    =    type.getGenericParameterType(1);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	4	None	replace
80	[BUG]  [BUGGY]  return  hasAssignable(type,  toType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  return  hasAssignable(type,  toType,  typeVarAssigns);  [BUGGY]      }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	return  hasAssignable(type,  toType,  typeVarAssigns);	  return    isAssignable(type,    toType,    typeVarAssigns);    return    hasAssignable(type,    toType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
81	[BUG]  [BUGGY]  if(toType  instanceof  GenericArrayType)  {  return  isAssignable(type,  toType,  typeVarAssigns);  }  else  {  return  hasAssignable(type,  toType,  typeVarAssigns);  }  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  if(toType  instanceof  GenericArrayType)  {  return  isAssignable(type,  toType,  typeVarAssigns);  }  else  {  return  hasAssignable(type,  toType,  typeVarAssigns);  }  [BUGGY]      }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	if(toType  instanceof  GenericArrayType)  {  return  isAssignable(type,  toType,  typeVarAssigns);  }  else  {  return  hasAssignable(type,  toType,  typeVarAssigns);  }	  return    isAssignable(type,    toType,    typeVarAssigns);    return    hasAssignable(type,    toType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
82	[BUG]  [BUGGY]  Type  toType  =  types.get(toType,  typeVarAssigns);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  types.get(toType,  typeVarAssigns);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  types.get(toType,  typeVarAssigns);	  Type    toType    =    types.get(toType);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	20	None	replace
83	[BUG]  [BUGGY]  Type  toType  =  getGenericArrayType(toType,  toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  getGenericArrayType(toType,  toType);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  getGenericArrayType(toType,  toType);	  Type    toType    =    getGenericArrayType(toType,    typeVarAssigns);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	14	None	replace
84	[BUG]  [BUGGY]  Type  toType  =  getGenericArrayType(toType,  typeVarAssigns,  toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  getGenericArrayType(toType,  typeVarAssigns,  toType);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  getGenericArrayType(toType,  typeVarAssigns,  toType);	  Type    toType    =    getGenericArrayType(toType,    typeVarAssigns);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	14	None	replace
85	[BUG]  [BUGGY]  return  getAssignable(type,  toType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  return  getAssignable(type,  toType,  typeVarAssigns);  [BUGGY]      }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	return  getAssignable(type,  toType,  typeVarAssigns);	  return    isAssignable(type,    toType,    typeVarAssigns);    return    getAssignable(type,    toType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
86	[BUG]  [BUGGY]  if(toType  instanceof  GenericArrayType)  {  return  isAssignable(type,  toType,  typeVarAssigns);  }  else  {  return  getAssignable(type,  toType,  typeVarAssigns);  }  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  if(toType  instanceof  GenericArrayType)  {  return  isAssignable(type,  toType,  typeVarAssigns);  }  else  {  return  getAssignable(type,  toType,  typeVarAssigns);  }  [BUGGY]      }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	if(toType  instanceof  GenericArrayType)  {  return  isAssignable(type,  toType,  typeVarAssigns);  }  else  {  return  getAssignable(type,  toType,  typeVarAssigns);  }	  return    isAssignable(type,    toType,    typeVarAssigns);    return    getAssignable(type,    toType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
87	[BUG]  [BUGGY]  Type  toType  =  type.getGenericArrayType(typeVarAssigns,  toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  type.getGenericArrayType(typeVarAssigns,  toType);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  type.getGenericArrayType(typeVarAssigns,  toType);	  Type    toType    =    type.getGenericArrayType(typeVarAssigns);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	40	None	replace
88	[BUG]  [BUGGY]  Type  toType  =  type.getGenericArrayType(toType,  typeVarAssigns);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  type.getGenericArrayType(toType,  typeVarAssigns);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  type.getGenericArrayType(toType,  typeVarAssigns);	  Type    toType    =    type.getGenericArrayType(typeVarAssigns);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	40	None	replace
89	[BUG]  [BUGGY]  (GenericArrayType)toType,  null,  typeVarAssigns);  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  (GenericArrayType)toType,  null,  typeVarAssigns);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	(GenericArrayType)toType,  null,  typeVarAssigns);	  (GenericArrayType)toType,    toType,    typeVarAssigns);    	non-compiled	[CE]  not  a  statement	45	None	replace
90	[BUG]  [BUGGY]  (GenericArrayType)type,  toType,  typeVarAssigns);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  (GenericArrayType)type,  toType,  typeVarAssigns);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	(GenericArrayType)type,  toType,  typeVarAssigns);	  (GenericArrayType)toType,    toType,    typeVarAssigns);    	non-compiled	[CE]  not  a  statement	45	None	replace
91	[BUG]  [BUGGY]  (GenericArrayType)toType,  typeVarAssigns,  toType);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  (GenericArrayType)toType,  typeVarAssigns,  toType);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	(GenericArrayType)toType,  typeVarAssigns,  toType);	  (GenericArrayType)toType,    toType,    typeVarAssigns);    	non-compiled	[CE]  not  a  statement	45	None	replace
92	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericArrayParameterTypes(toType);  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericArrayParameterTypes(toType);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Class  <?>  typeVarAssigns  =  toType.getGenericArrayParameterTypes(toType);	  Class    <?>    typeVarAssigns    =    toType.getGenericArrayParameterTypes();    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	33	None	replace
93	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericArrayParameterTypes(type);  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericArrayParameterTypes(type);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Class  <?>  typeVarAssigns  =  toType.getGenericArrayParameterTypes(type);	  Class    <?>    typeVarAssigns    =    toType.getGenericArrayParameterTypes();    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	33	None	replace
94	[BUG]  [BUGGY]  Type  toType  =  types.toArray(new  Type[types.size()  ]);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  types.toArray(new  Type[types.size()  ]);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  types.toArray(new  Type[types.size()  ]);	  Type    toType    =    types.getGenericType();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	19	None	replace
95	[BUG]  [BUGGY]  Type  toType  =  getGenericArrayType(typeVarAssigns,  typeVarAssigns);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  getGenericArrayType(typeVarAssigns,  typeVarAssigns);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  getGenericArrayType(typeVarAssigns,  typeVarAssigns);	  Type    toType    =    getGenericArrayType(typeVarAssigns);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	15	None	replace
96	[BUG]  [BUGGY]  Type  toType  =  getTypeVarAssigns().get(toType,  typeVarAssigns);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  getTypeVarAssigns().get(toType,  typeVarAssigns);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  getTypeVarAssigns().get(toType,  typeVarAssigns);	  Type    toType    =    getTypeVarAssigns().get(toType);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	47	None	replace
97	[BUG]  [BUGGY]  Type  toType  =  types.getGenericArrayType(typeVarAssigns);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  types.getGenericArrayType(typeVarAssigns);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  types.getGenericArrayType(typeVarAssigns);	  Type    toType    =    toType.getGenericArrayType(typeVarAssigns);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	44	None	replace
98	[BUG]  [BUGGY]  Class  <?>  toType  =  toType.getGenericArrayType();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Class  <?>  toType  =  toType.getGenericArrayType();  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Class  <?>  toType  =  toType.getGenericArrayType();	  Class    <?>    typeVarAssigns    =    toType.getGenericArrayType();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	46	None	replace
99	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericArrayType(0);  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericArrayType(0);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Class  <?>  typeVarAssigns  =  toType.getGenericArrayType(0);	  Class    <?>    typeVarAssigns    =    toType.getGenericArrayType();    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	46	None	replace
100	[BUG]  [BUGGY]  Class  <?>  toType  =  toType.getGenericArrayParameterTypes();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Class  <?>  toType  =  toType.getGenericArrayParameterTypes();  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Class  <?>  toType  =  toType.getGenericArrayParameterTypes();	  Class    <?>    typeVarAssigns    =    toType.getGenericArrayParameterTypes();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	33	None	replace
101	[BUG]  [BUGGY]  Type  toType  =(GenericArrayType)fromType;  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =(GenericArrayType)fromType;  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =(GenericArrayType)fromType;	  Type    toType    =(GenericArrayType)type;    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	41	None	replace
102	[BUG]  [BUGGY]  Type  toType  =  getGenericArrayType(toType).getGenericArrayType(),  type);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  getGenericArrayType(toType).getGenericArrayType(),  type);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  getGenericArrayType(toType).getGenericArrayType(),  type);	  Type    toType    =    type.getGenericArrayType(),    toType);    	non-compiled	[CE]  ';'  expected	26	None	replace
103	[BUG]  [BUGGY]  Type  toType  =  toType.getGenericParameterType(typeVarAssigns,  typeVarAssigns);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  toType.getGenericParameterType(typeVarAssigns,  typeVarAssigns);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  toType.getGenericParameterType(typeVarAssigns,  typeVarAssigns);	  Type    toType    =    toType.getGenericParameterType(typeVarAssigns);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	5	None	replace
104	[BUG]  [BUGGY]  Type  toType  =(GenericArrayType)type.getParameterTypes().clone();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =(GenericArrayType)type.getParameterTypes().clone();  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =(GenericArrayType)type.getParameterTypes().clone();	  Type    toType    =(GenericArrayType)type.clone();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	7	None	replace
105	[BUG]  [BUGGY]  Type  toType  =(GenericArrayType)type.assigns.clone();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =(GenericArrayType)type.assigns.clone();  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =(GenericArrayType)type.assigns.clone();	  Type    toType    =(GenericArrayType)type.clone();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	7	None	replace
106	[BUG]  [BUGGY]  Type  toType  =(GenericArrayType)toTypeVarAssigns.clone();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =(GenericArrayType)toTypeVarAssigns.clone();  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =(GenericArrayType)toTypeVarAssigns.clone();	  Type    toType    =(GenericArrayType)typeVarAssigns.clone();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	6	None	replace
107	[BUG]  [BUGGY]  Type  toType  =  typeVarAssigns.get(toType,  null);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  typeVarAssigns.get(toType,  null);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  typeVarAssigns.get(toType,  null);	  Type    toType    =    typeVarAssigns.get(toType,    toType);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	21	None	replace
108	[BUG]  [BUGGY]  Class  <?>  toType  =  toType.getGenericArrayTypes();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Class  <?>  toType  =  toType.getGenericArrayTypes();  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Class  <?>  toType  =  toType.getGenericArrayTypes();	  Class    <?>    typeVarAssigns    =    toType.getGenericArrayTypes();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	32	None	replace
109	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericArrayTypes(typeVarAssigns);  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericArrayTypes(typeVarAssigns);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Class  <?>  typeVarAssigns  =  toType.getGenericArrayTypes(typeVarAssigns);	  Class    <?>    typeVarAssigns    =    toType.getGenericArrayTypes();    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	32	None	replace
110	[BUG]  [BUGGY]  Type  toType  =(GenericArrayType)toTypeVarAssigns.get(toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =(GenericArrayType)toTypeVarAssigns.get(toType);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =(GenericArrayType)toTypeVarAssigns.get(toType);	  Type    toType    =(GenericArrayType)typeVarAssigns.get(toType);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	50	None	replace
111	[BUG]  [BUGGY]  Type  toType  =(GenericArrayType)toTypeAssigns.get(toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =(GenericArrayType)toTypeAssigns.get(toType);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =(GenericArrayType)toTypeAssigns.get(toType);	  Type    toType    =(GenericArrayType)typeVarAssigns.get(toType);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	50	None	replace
112	[BUG]  [BUGGY]  Type  toType  =  typeVarAssigns.getGenericArrayType(type);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  typeVarAssigns.getGenericArrayType(type);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  typeVarAssigns.getGenericArrayType(type);	  Type    toType    =    type.getGenericArrayType(typeVarAssigns);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	40	None	replace
113	[BUG]  [BUGGY]  Type  toType  =  types.getGenericArrayType(1);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  types.getGenericArrayType(1);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  types.getGenericArrayType(1);	  Type    toType    =    types.getGenericParameterType(0);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	48	None	replace
114	[BUG]  [BUGGY]  Type  toType  =  type.getGenericArrayType(2);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  type.getGenericArrayType(2);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  type.getGenericArrayType(2);	  Type    toType    =    type.getGenericParameterType(1);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	4	None	replace
115	[BUG]  [BUGGY]  Class  <?>  toType  =  toType.getGenericArrayClass();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Class  <?>  toType  =  toType.getGenericArrayClass();  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Class  <?>  toType  =  toType.getGenericArrayClass();	  Class    <?>    typeVarAssigns    =    toType.getGenericArrayClass();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	24	None	replace
116	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericArrayClass(type);  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericArrayClass(type);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Class  <?>  typeVarAssigns  =  toType.getGenericArrayClass(type);	  Class    <?>    typeVarAssigns    =    toType.getGenericArrayClass();    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	24	None	replace
117	[BUG]  [BUGGY]  Type  toType  =  typeVarAssigns.getGenericArrayType(0);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  typeVarAssigns.getGenericArrayType(0);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  typeVarAssigns.getGenericArrayType(0);	  Type    toType    =    typeVarAssigns.getGenericArrayType();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	43	None	replace
118	[BUG]  [BUGGY]  Class  <?>  toType  =  toType.getGenericArray();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Class  <?>  toType  =  toType.getGenericArray();  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Class  <?>  toType  =  toType.getGenericArray();	  Class    <?>    typeVarAssigns    =    toType.getGenericArray();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	23	None	replace
119	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericArray(typeVarAssigns);  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericArray(typeVarAssigns);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Class  <?>  typeVarAssigns  =  toType.getGenericArray(typeVarAssigns);	  Class    <?>    typeVarAssigns    =    toType.getGenericArray();    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	23	None	replace
120	[BUG]  [BUGGY]  Type  toType  =  getGenericType(type);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  getGenericType(type);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  getGenericType(type);	  Type    toType    =    type.getGenericType();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	17	None	replace
121	[BUG]  [BUGGY]  Type  toType  =  typeVarAssigns.getGenericArrayTypes();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  typeVarAssigns.getGenericArrayTypes();  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  typeVarAssigns.getGenericArrayTypes();	  Type    toType    =    toType.getGenericArrayTypes();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	37	None	replace
122	[BUG]  [BUGGY]  Type  toType  =  types.typeVarAssigns.get(toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  types.typeVarAssigns.get(toType);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  types.typeVarAssigns.get(toType);	  Type    toType    =    type.typeVarAssigns.get(toType);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	29	None	replace
123	[BUG]  [BUGGY]  Type  toType  =  toType.getGenericArrayType(toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  toType.getGenericArrayType(toType);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  toType.getGenericArrayType(toType);	  Type    toType    =    type.getGenericArrayType(toType);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	27	None	replace
124	[BUG]  [BUGGY]  Type  toType  =(GenericArrayType)totype.clone();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =(GenericArrayType)totype.clone();  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =(GenericArrayType)totype.clone();	  Type    toType    =(GenericArrayType)type.clone();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	7	None	replace
125	[BUG]  [BUGGY]  return  isAssignable(type,  (GenericArrayType)toType,  toType,  typeVarAssigns);  [CE]  no  suitable  method  found  for  isAssignable(Type,GenericArrayType,Type,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(type,  (GenericArrayType)toType,  toType,  typeVarAssigns);  [BUGGY]      }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	return  isAssignable(type,  (GenericArrayType)toType,  toType,  typeVarAssigns);	  return    isAssignable(type,    (GenericArrayType)toType,    toType);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,GenericArrayType,Type,Map<TypeVariable<?>,Type>)	35	None	replace
126	[BUG]  [BUGGY]  return  isAssignable(type,  (GenericArrayType)toType,  toType.type);  [CE]  cannot  find  symbol  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(type,  (GenericArrayType)toType,  toType.type);  [BUGGY]      }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	return  isAssignable(type,  (GenericArrayType)toType,  toType.type);	  return    isAssignable(type,    (GenericArrayType)toType,    toType);    	non-compiled	[CE]  cannot  find  symbol  type	35	None	replace
127	[BUG]  [BUGGY]  Type  toType  =  typeVarAssigns().get(type);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  typeVarAssigns().get(type);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  typeVarAssigns().get(type);	  Type    toType    =    getTypeVarAssigns().get(type);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	53	None	replace
128	[BUG]  [BUGGY]  (GenericArrayType)toType,  new  TypeVariable  <?>(typeVarAssigns));  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  (GenericArrayType)toType,  new  TypeVariable  <?>(typeVarAssigns));  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	(GenericArrayType)toType,  new  TypeVariable  <?>(typeVarAssigns));	  (GenericArrayType)toType,    toType,    typeVarAssigns);    	non-compiled	[CE]  not  a  statement	45	None	replace
129	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericParameterArray();  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericParameterArray();  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Class  <?>  typeVarAssigns  =  toType.getGenericParameterArray();	  Class    <?>    typeVarAssigns    =    toType.getGenericArray();    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	23	None	replace
130	[BUG]  [BUGGY]  Type  toType  =  toType.get(typeVarAssigns,  toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  toType.get(typeVarAssigns,  toType);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  toType.get(typeVarAssigns,  toType);	  Type    toType    =    typeVarAssigns.get(toType,    toType);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	21	None	replace
131	[BUG]  [BUGGY]  Type  toType  =  toType.get(typeVarAssigns,  typeVarAssigns);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  toType.get(typeVarAssigns,  typeVarAssigns);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  toType.get(typeVarAssigns,  typeVarAssigns);	  Type    toType    =    toType.get(typeVarAssigns);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	51	None	replace
132	[BUG]  [BUGGY]  Type  toType  =  toType.getGenericArrayType(typeVarAssigns,  typeVarAssigns);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  toType.getGenericArrayType(typeVarAssigns,  typeVarAssigns);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  toType.getGenericArrayType(typeVarAssigns,  typeVarAssigns);	  Type    toType    =    toType.getGenericArrayType(typeVarAssigns);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	44	None	replace
133	[BUG]  [BUGGY]  Type  toType  =  toType.getGenericArrayType(),  typeVarAssigns);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  toType.getGenericArrayType(),  typeVarAssigns);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  toType.getGenericArrayType(),  typeVarAssigns);	  Type    toType    =    type.getGenericArrayType(),    toType);    	non-compiled	[CE]  ';'  expected	26	None	replace
134	[BUG]  [BUGGY]  Type  toType  =  types.getGenericArrayType(toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  types.getGenericArrayType(toType);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  types.getGenericArrayType(toType);	  Type    toType    =    types.getGenericType();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	19	None	replace
135	[BUG]  [BUGGY]  Type  toType  =(GenericArrayType)toType.cloneChildren();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =(GenericArrayType)toType.cloneChildren();  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =(GenericArrayType)toType.cloneChildren();	  Type    toType    =(GenericArrayType)toType.cloneTree();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	2	None	replace
136	[BUG]  [BUGGY]  Type  toType  =(GenericArrayType)fromTypeVarAssigns.get(toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =(GenericArrayType)fromTypeVarAssigns.get(toType);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =(GenericArrayType)fromTypeVarAssigns.get(toType);	  Type    toType    =(GenericArrayType)typeVarAssigns.get(toType);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	50	None	replace
137	[BUG]  [BUGGY]  Type  toType  =  typeVarAssigns().get(toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  typeVarAssigns().get(toType);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  typeVarAssigns().get(toType);	  Type    toType    =    getTypeVarAssigns().get(toType);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	47	None	replace
138	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericArrayClass(this);  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Class  <?>  typeVarAssigns  =  toType.getGenericArrayClass(this);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Class  <?>  typeVarAssigns  =  toType.getGenericArrayClass(this);	  Class    <?>    typeVarAssigns    =    toType.getGenericArrayClass();    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	24	None	replace
139	[BUG]  [BUGGY]  Type  toType  =  toType.typeVarAssigns.get(toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  toType.typeVarAssigns.get(toType);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  toType.typeVarAssigns.get(toType);	  Type    toType    =    type.typeVarAssigns.get(toType);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	29	None	replace
140	[BUG]  [BUGGY]  Type  toType  =  toType.getGenericArrayTypes()  [0];  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  toType.getGenericArrayTypes()  [0];  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  toType.getGenericArrayTypes()  [0];	  Type    toType    =    toType.getGenericArrayTypes();    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	37	None	replace
141	[BUG]  [BUGGY]  Type  toType  =  toType.getGenericParameterType(1);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  toType.getGenericParameterType(1);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  toType.getGenericParameterType(1);	  Type    toType    =    type.getGenericParameterType(1);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	4	None	replace
142	[BUG]  [BUGGY]  Type  toType  =  toType.get(totype);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {      [BUGGY]  Type  toType  =  toType.get(totype);  [BUGGY]      return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	Type  toType  =  toType.get(totype);	  Type    toType    =    typeVarAssigns.get(totype);    	non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	39	None	replace
