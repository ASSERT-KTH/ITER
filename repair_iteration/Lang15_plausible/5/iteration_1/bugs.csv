bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    (GenericArrayType)toType,  typeVarAssigns);  [CE]  not  a  statement  [FE]    AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {  [BUGGY]    (GenericArrayType)toType,  typeVarAssigns);  [BUGGY]  return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	    (GenericArrayType)toType,  typeVarAssigns);		non-compiled	[CE]  not  a  statement	10	None	add
2	[BUG]  [BUGGY]    Type  toType  =(GenericArrayType)toType.clone();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]      AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {  [BUGGY]    Type  toType  =(GenericArrayType)toType.clone();  [BUGGY]  return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	    Type  toType  =(GenericArrayType)toType.clone();		non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	10	None	add
3	[BUG]  [BUGGY]    Type  toType  =(GenericArrayType)toType;  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]        AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {  [BUGGY]    Type  toType  =(GenericArrayType)toType;  [BUGGY]  return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	    Type  toType  =(GenericArrayType)toType;		non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	10	None	add
4	[BUG]  [BUGGY]    Type  toType  =  toType.getGenericType();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]          AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {  [BUGGY]    Type  toType  =  toType.getGenericType();  [BUGGY]  return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	    Type  toType  =  toType.getGenericType();		non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	10	None	add
5	[BUG]  [BUGGY]    Type  toType  =  getGenericArrayType(toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]            AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {  [BUGGY]    Type  toType  =  getGenericArrayType(toType);  [BUGGY]  return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	    Type  toType  =  getGenericArrayType(toType);		non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	10	None	add
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {  [BUGGY]  return  isAssignable(type,  toType,  typeVarAssigns);  [BUGGY]  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	add	return  isAssignable(type,  toType,  typeVarAssigns);	return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  	compilable	  [FE]  AssertionError  	9	2	replace
7	[BUG]  [BUGGY]  return  isAssignable(type,  toType,  typeVarAssigns);  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {  [BUGGY]  return  isAssignable(type,  toType,  typeVarAssigns);  [BUGGY]  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	return  isAssignable(type,  toType,  typeVarAssigns);	return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  	compilable	  [FE]  AssertionError  	9	2	replace
8	[BUG]  [BUGGY]  return  isAssignable(type,  (GenericArrayType)toType,  _typeVarAssigns);  [CE]  cannot  find  symbol  _typeVarAssigns  [FE]      AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {  [BUGGY]  return  isAssignable(type,  (GenericArrayType)toType,  _typeVarAssigns);  [BUGGY]  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	return  isAssignable(type,  (GenericArrayType)toType,  _typeVarAssigns);	return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  	non-compiled	[CE]  cannot  find  symbol  _typeVarAssigns	9	None	replace
9	[BUG]  [BUGGY]    Type  toType  =  typeVarAssigns.get(toType);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]    AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {  [BUGGY]    Type  toType  =  typeVarAssigns.get(toType);  [BUGGY]  return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	    Type  toType  =  typeVarAssigns.get(toType);		non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	10	None	add
10	[BUG]  [BUGGY]    Type  toType  =  toType.getGenericArrayType();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]      AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {  [BUGGY]    Type  toType  =  toType.getGenericArrayType();  [BUGGY]  return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	    Type  toType  =  toType.getGenericArrayType();		non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	10	None	add
11	[BUG]  [BUGGY]    Type  toType  =  type.getGenericArrayType();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]        AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {  [BUGGY]    Type  toType  =  type.getGenericArrayType();  [BUGGY]  return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	    Type  toType  =  type.getGenericArrayType();		non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	10	None	add
12	[BUG]  [BUGGY]    Type  toType  =  typeVarAssigns.get(type);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]          AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {  [BUGGY]    Type  toType  =  typeVarAssigns.get(type);  [BUGGY]  return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	    Type  toType  =  typeVarAssigns.get(type);		non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	10	None	add
13	[BUG]  [BUGGY]    Class  <?>  typeVarAssigns  =  toType.getGenericParameterTypes();  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]    AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {  [BUGGY]    Class  <?>  typeVarAssigns  =  toType.getGenericParameterTypes();  [BUGGY]  return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	    Class  <?>  typeVarAssigns  =  toType.getGenericParameterTypes();		non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	10	None	add
14	[BUG]  [BUGGY]    Class  <?>  typeVarAssigns  =  toType.getRawClass();  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]      AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {  [BUGGY]    Class  <?>  typeVarAssigns  =  toType.getRawClass();  [BUGGY]  return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	    Class  <?>  typeVarAssigns  =  toType.getRawClass();		non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	10	None	add
15	[BUG]  [BUGGY]    Type  toType  =  toType.getGenericParameterType(0);  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]        AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {  [BUGGY]    Type  toType  =  toType.getGenericParameterType(0);  [BUGGY]  return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	    Type  toType  =  toType.getGenericParameterType(0);		non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	10	None	add
16	[BUG]  [BUGGY]    Type  toType  =  toType.getGenericParameterTypes();  [CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)  [FE]          AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  typeVarAssigns)  {  if  (toType  ==  null  ||  toType  instanceof  Class<?>)  {  return  isAssignable(type,  (Class<?>)  toType);  }  if  (toType  instanceof  ParameterizedType)  {  return  isAssignable(type,  (ParameterizedType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  GenericArrayType)  {  [BUGGY]    Type  toType  =  toType.getGenericParameterTypes();  [BUGGY]  return  isAssignable(type,  (GenericArrayType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  WildcardType)  {  return  isAssignable(type,  (WildcardType)  toType,  typeVarAssigns);  }  if  (toType  instanceof  TypeVariable<?>)  {  return  isAssignable(type,  (TypeVariable<?>)  toType,  typeVarAssigns);  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Type  toType  Type>  typeVarAssigns  [VARIABLES]  Type  toType  type  boolean  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	88	88	2	replace	    Type  toType  =  toType.getGenericParameterTypes();		non-compiled	[CE]  variable  toType  is  already  defined  in  method  isAssignable(Type,Type,Map<TypeVariable<?>,Type>)	10	None	add
