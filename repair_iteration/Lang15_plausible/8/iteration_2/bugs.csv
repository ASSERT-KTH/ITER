bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Class  <?>  toClass  =  type.getParameterizedType();  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)  [FE]                AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Class  <?>  toClass  =  type.getParameterizedType();  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	Class  <?>  toClass  =  type.getParameterizedType();	      Class    <?>    toClass    =    type.getRawType();    	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)	5	None	replace
2	[BUG]  [BUGGY]  Class  <?>  toClass  =  type.getRawType(0);  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)  [FE]                  AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Class  <?>  toClass  =  type.getRawType(0);  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	Class  <?>  toClass  =  type.getRawType(0);	      Class    <?>    toClass    =    type.getRawType();    	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)	5	None	replace
3	[BUG]  [BUGGY]  Class  <?>  toClass  =  type.getRawParameterizedType();  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)  [FE]                    AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Class  <?>  toClass  =  type.getRawParameterizedType();  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	Class  <?>  toClass  =  type.getRawParameterizedType();	      Class    <?>    toClass    =    type.getRawType();    	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)	5	None	replace
4	[BUG]  [BUGGY]      Type  bound  =  getRawType((  ParameterizedType)type);  Type  bound  =  getRawType((  ParameterizedType)type);  [CE]  variable  bound  is  already  defined  in  method  isAssignable(Type,Class<?>)  [FE]    AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]      Type  bound  =  getRawType((  ParameterizedType)type);  Type  bound  =  getRawType((  ParameterizedType)type);  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	        Type    bound    =    getRawType((    ParameterizedType)type);    Type  bound  =  getRawType((  ParameterizedType)type);	  	non-compiled	[CE]  variable  bound  is  already  defined  in  method  isAssignable(Type,Class<?>)	9	None	add
5	[BUG]  [BUGGY]      Type  bound  =  getRawType((  ParameterizedType)type);  Type  bound  =  getRawType((  ParameterizedType),  toClass);  [CE]  variable  bound  is  already  defined  in  method  isAssignable(Type,Class<?>)  [FE]      AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]      Type  bound  =  getRawType((  ParameterizedType)type);  Type  bound  =  getRawType((  ParameterizedType),  toClass);  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	        Type    bound    =    getRawType((    ParameterizedType)type);    Type  bound  =  getRawType((  ParameterizedType),  toClass);	  	non-compiled	[CE]  variable  bound  is  already  defined  in  method  isAssignable(Type,Class<?>)	9	None	add
6	[BUG]  [BUGGY]      Type  bound  =  getRawType((  ParameterizedType)type);  Type  bound  =  getRawType((  ParameterizedType)  types);  [CE]  variable  bound  is  already  defined  in  method  isAssignable(Type,Class<?>)  [FE]        AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]      Type  bound  =  getRawType((  ParameterizedType)type);  Type  bound  =  getRawType((  ParameterizedType)  types);  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	        Type    bound    =    getRawType((    ParameterizedType)type);    Type  bound  =  getRawType((  ParameterizedType)  types);	  	non-compiled	[CE]  variable  bound  is  already  defined  in  method  isAssignable(Type,Class<?>)	9	None	add
7	[BUG]  [BUGGY]  return  isAssignable(getRawType((  Class  <?>)type),  toClass);  [CE]  no  suitable  method  found  for  getRawType(Class<CAP#1>)  [FE]          AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  isAssignable(getRawType((  Class  <?>)type),  toClass);  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	return  isAssignable(getRawType((  Class  <?>)type),  toClass);	      return    isAssignable(getRawType((    ParameterizedType)type),    toClass);    	non-compiled	[CE]  no  suitable  method  found  for  getRawType(Class<CAP#1>)	2	None	replace
8	[BUG]  [BUGGY]  return  isAssignable(getRawType((  ParameterizedType)type),  toClass,  toClass,  toClass);  [CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Class<CAP#2>,Class<CAP#3>,Class<CAP#4>)  [FE]        AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  isAssignable(getRawType((  ParameterizedType)type),  toClass,  toClass,  toClass);  [BUGGY]    }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	return  isAssignable(getRawType((  ParameterizedType)type),  toClass,  toClass,  toClass);	  return    isAssignable(getRawType((    ParameterizedType)type),    toClass,    toClass);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Class<CAP#2>,Class<CAP#3>,Class<CAP#4>)	6	None	replace
9	[BUG]  [BUGGY]  return  isAssignable(getRawType((  ParameterizedType)type),  toClass,  toClass,  type);  [CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Class<CAP#2>,Class<CAP#3>,Type)  [FE]          AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  isAssignable(getRawType((  ParameterizedType)type),  toClass,  toClass,  type);  [BUGGY]    }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	return  isAssignable(getRawType((  ParameterizedType)type),  toClass,  toClass,  type);	  return    isAssignable(getRawType((    ParameterizedType)type),    toClass,    toClass);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Class<CAP#2>,Class<CAP#3>,Type)	6	None	replace
10	[BUG]  [BUGGY]  return  ClassUtils.isAssignable(getRawType((  ParameterizedType)type),  toClass,  toClass);  [CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Class<CAP#2>,Class<CAP#3>)  [FE]    AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  ClassUtils.isAssignable(getRawType((  ParameterizedType)type),  toClass,  toClass);  [BUGGY]    }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	return  ClassUtils.isAssignable(getRawType((  ParameterizedType)type),  toClass,  toClass);	  return    ClassUtils.isAssignable(getRawType((    ParameterizedType)type),    toClass);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Class<CAP#2>,Class<CAP#3>)	14	None	replace
11	[BUG]  [BUGGY]  return  ClassUtils.isAssignable(getRawType(type),  toClass);  [CE]  no  suitable  method  found  for  getRawType(Type)  [FE]      AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  ClassUtils.isAssignable(getRawType(type),  toClass);  [BUGGY]    }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	return  ClassUtils.isAssignable(getRawType(type),  toClass);	  return    ClassUtils.isAssignable(getRawType((    ParameterizedType)type),    toClass);    	non-compiled	[CE]  no  suitable  method  found  for  getRawType(Type)	14	None	replace
12	[BUG]  [BUGGY]  return  ClassUtils.isAssignable(getRawType((  ParameterizedType)type),  toClass,  bound);  [CE]  cannot  find  symbol  bound  [FE]        AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  ClassUtils.isAssignable(getRawType((  ParameterizedType)type),  toClass,  bound);  [BUGGY]    }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	return  ClassUtils.isAssignable(getRawType((  ParameterizedType)type),  toClass,  bound);	  return    ClassUtils.isAssignable(getRawType((    ParameterizedType)type),    toClass);    	non-compiled	[CE]  cannot  find  symbol  bound	14	None	replace
13	[BUG]  [BUGGY]  return  isAssignable(toClass,  getRawType(type),  toClass);  [CE]  no  suitable  method  found  for  getRawType(Type)  [FE]            AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  isAssignable(toClass,  getRawType(type),  toClass);  [BUGGY]    }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	return  isAssignable(toClass,  getRawType(type),  toClass);	  return    isAssignable(getRawType(type),    toClass);    	non-compiled	[CE]  no  suitable  method  found  for  getRawType(Type)	8	None	replace
14	[BUG]  [BUGGY]  return  isAssignable(toClass,  getRawType(type),  type);  [CE]  no  suitable  method  found  for  getRawType(Type)  [FE]              AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  isAssignable(toClass,  getRawType(type),  type);  [BUGGY]    }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	return  isAssignable(toClass,  getRawType(type),  type);	  return    isAssignable(getRawType(type),    toClass);    	non-compiled	[CE]  no  suitable  method  found  for  getRawType(Type)	8	None	replace
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  isAssignable(type,  toClass);  [BUGGY]    }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	add	return  isAssignable(type,  toClass);	  return    isAssignable(getRawType(type),    toClass);    	compilable	  [FE]  AssertionError  	8	2	replace
16	[BUG]  [BUGGY]  return  isAssignable(type,  toClass);  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  isAssignable(type,  toClass);  [BUGGY]    }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	return  isAssignable(type,  toClass);	  return    isAssignable(getRawType(type),    toClass);    	compilable	  [FE]  AssertionError  	8	2	replace
17	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType(type),  toClass);  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Class  <?>  toClass  =  getRawType(type),  toClass);  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	Class  <?>  toClass  =  getRawType(type),  toClass);	      Class    <?>    toClass    =    getRawType(type);    	non-compiled	[CE]  ';'  expected	4	None	replace
18	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType(type,  toClass);  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)  [FE]                AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Class  <?>  toClass  =  getRawType(type,  toClass);  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	Class  <?>  toClass  =  getRawType(type,  toClass);	      Class    <?>    toClass    =    getRawType(type);    	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)	4	None	replace
19	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType(type,  bound);  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)  [FE]                  AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Class  <?>  toClass  =  getRawType(type,  bound);  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	Class  <?>  toClass  =  getRawType(type,  bound);	      Class    <?>    toClass    =    getRawType(type);    	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)	4	None	replace
20	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getRawType((  ParameterizedType)type,  toClass);  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	add	Type  bound  =  getRawType((  ParameterizedType)type,  toClass);	      Type    bound    =    getRawType((    ParameterizedType)type);    	compilable	  [FE]  AssertionError  	10	2	replace
21	[BUG]  [BUGGY]  Type  bound  =  getRawType((  ParameterizedType)type,  toClass);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getRawType((  ParameterizedType)type,  toClass);  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	Type  bound  =  getRawType((  ParameterizedType)type,  toClass);	      Type    bound    =    getRawType((    ParameterizedType)type);    	compilable	  [FE]  AssertionError  	10	2	replace
22	[BUG]  [BUGGY]  Type  bound  =  getRawType((  ParameterizedType)toClass);  [CE]  inconvertible  types  [FE]      AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getRawType((  ParameterizedType)toClass);  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	Type  bound  =  getRawType((  ParameterizedType)toClass);	      Type    bound    =    getRawType((    ParameterizedType)type);    	non-compiled	[CE]  inconvertible  types	10	None	replace
23	[BUG]  [BUGGY]  Type  bound  =  getRawType((  ParameterizedType)type),  toClass);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getRawType((  ParameterizedType)type),  toClass);  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	Type  bound  =  getRawType((  ParameterizedType)type),  toClass);	      Type    bound    =    getRawType((    ParameterizedType)type);    	non-compiled	[CE]  ';'  expected	10	None	replace
24	[BUG]  [BUGGY]  return  getRawType((  ParameterizedType)type,  toClass,  toClass);  [CE]  no  suitable  method  found  for  getRawType(ParameterizedType,Class<CAP#1>,Class<CAP#2>)  [FE]        AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getRawType((  ParameterizedType)type,  toClass,  toClass);  [BUGGY]    }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	return  getRawType((  ParameterizedType)type,  toClass,  toClass);	  return    getRawType((    ParameterizedType)type),    toClass,    toClass);    	non-compiled	[CE]  no  suitable  method  found  for  getRawType(ParameterizedType,Class<CAP#1>,Class<CAP#2>)	11	None	replace
25	[BUG]  [BUGGY]  return  getRawType((  ParameterizedType)type),  toClass,  toClass,  bounds);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getRawType((  ParameterizedType)type),  toClass,  toClass,  bounds);  [BUGGY]    }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	return  getRawType((  ParameterizedType)type),  toClass,  toClass,  bounds);	  return    getRawType((    ParameterizedType)type),    toClass,    toClass);    	non-compiled	[CE]  ';'  expected	11	None	replace
26	[BUG]  [BUGGY]  return  getRawType((  ParameterizedType)type),  toClass,  toClass.getDeclaredTypes());  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getRawType((  ParameterizedType)type),  toClass,  toClass.getDeclaredTypes());  [BUGGY]    }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	return  getRawType((  ParameterizedType)type),  toClass,  toClass.getDeclaredTypes());	  return    getRawType((    ParameterizedType)type),    toClass,    toClass);    	non-compiled	[CE]  ';'  expected	11	None	replace
27	[BUG]  [BUGGY]  ==  ((  ParameterizedType)type).getBounds())  {  return  isAssignable(getRawType((  ParameterizedType)type),  toClass);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  ==  ((  ParameterizedType)type).getBounds())  {  return  isAssignable(getRawType((  ParameterizedType)type),  toClass);  }  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	==  ((  ParameterizedType)type).getBounds())  {  return  isAssignable(getRawType((  ParameterizedType)type),  toClass);  }	      ((    ParameterizedType)type).getBounds())    {    return    isAssignable(getRawType((    ParameterizedType)type),    toClass);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
28	[BUG]  [BUGGY]  >>  ((  ParameterizedType)type).getBounds())  {  return  isAssignable(getRawType((  ParameterizedType)type),  toClass);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  >>  ((  ParameterizedType)type).getBounds())  {  return  isAssignable(getRawType((  ParameterizedType)type),  toClass);  }  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	>>  ((  ParameterizedType)type).getBounds())  {  return  isAssignable(getRawType((  ParameterizedType)type),  toClass);  }	      ((    ParameterizedType)type).getBounds())    {    return    isAssignable(getRawType((    ParameterizedType)type),    toClass);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
29	[BUG]  [BUGGY]  ((  ParameterizedType)type).getDeclaredFields())  {  return  isAssignable(getRawType((  ParameterizedType)type),  toClass);  }  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  ((  ParameterizedType)type).getDeclaredFields())  {  return  isAssignable(getRawType((  ParameterizedType)type),  toClass);  }  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	((  ParameterizedType)type).getDeclaredFields())  {  return  isAssignable(getRawType((  ParameterizedType)type),  toClass);  }	      ((    ParameterizedType)type).getBounds())    {    return    isAssignable(getRawType((    ParameterizedType)type),    toClass);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
30	[BUG]  [BUGGY]  return  ClassUtils.isAssignable(getRawType((  ParameterizedType)type),  toClass);  return  ClassUtils.isAssignable(getRawType((  ParameterizedType)type),  toClass);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  ClassUtils.isAssignable(getRawType((  ParameterizedType)type),  toClass);  return  ClassUtils.isAssignable(getRawType((  ParameterizedType)type),  toClass);  [BUGGY]    }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	return    ClassUtils.isAssignable(getRawType((    ParameterizedType)type),    toClass);    return  ClassUtils.isAssignable(getRawType((  ParameterizedType)type),  toClass);	  	non-compiled	[CE]  unreachable  statement	13	None	add
31	[BUG]  [BUGGY]  return  ClassUtils.isAssignable(getRawType((  ParameterizedType)type),  toClass);  Return  ClassUtils.isAssignable(getRawType((  ParameterizedType)type),  toClass);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  ClassUtils.isAssignable(getRawType((  ParameterizedType)type),  toClass);  Return  ClassUtils.isAssignable(getRawType((  ParameterizedType)type),  toClass);  [BUGGY]    }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	return    ClassUtils.isAssignable(getRawType((    ParameterizedType)type),    toClass);    Return  ClassUtils.isAssignable(getRawType((  ParameterizedType)type),  toClass);	  	non-compiled	[CE]  ';'  expected	13	None	add
32	[BUG]  [BUGGY]  return  ClassUtils.isAssignable(getRawType((  ParameterizedType)type),  toClass);  ClassUtils.isAssignable(getRawType((  ParameterizedType)type),  toClass);  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  ClassUtils.isAssignable(getRawType((  ParameterizedType)type),  toClass);  ClassUtils.isAssignable(getRawType((  ParameterizedType)type),  toClass);  [BUGGY]    }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	return    ClassUtils.isAssignable(getRawType((    ParameterizedType)type),    toClass);    ClassUtils.isAssignable(getRawType((  ParameterizedType)type),  toClass);	  	non-compiled	[CE]  unreachable  statement	13	None	add
33	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType((  ParameterizedType)type,  bound);  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)  [FE]            AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Class  <?>  toClass  =  getRawType((  ParameterizedType)type,  bound);  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	Class  <?>  toClass  =  getRawType((  ParameterizedType)type,  bound);	      Class    <?>    toClass    =    getRawType((    ParameterizedType)type);    	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)	3	None	replace
34	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType((  ParameterizedType)type,  bounds);  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)  [FE]              AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Class  <?>  toClass  =  getRawType((  ParameterizedType)type,  bounds);  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	Class  <?>  toClass  =  getRawType((  ParameterizedType)type,  bounds);	      Class    <?>    toClass    =    getRawType((    ParameterizedType)type);    	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)	3	None	replace
35	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType(type,(  ParameterizedType)type);  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)  [FE]                AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Class  <?>  toClass  =  getRawType(type,(  ParameterizedType)type);  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	Class  <?>  toClass  =  getRawType(type,(  ParameterizedType)type);	      Class    <?>    toClass    =    getRawType((    ParameterizedType)type);    	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)	3	None	replace
36	[BUG]  [BUGGY]  Type  toClass  =  getRawType((  ParameterizedType)type,  bound);  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)  [FE]        AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  toClass  =  getRawType((  ParameterizedType)type,  bound);  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	Type  toClass  =  getRawType((  ParameterizedType)type,  bound);	      Type    toClass    =    getRawType((    ParameterizedType)type);    	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)	1	None	replace
37	[BUG]  [BUGGY]  Type  toClass  =  getRawType((  ParameterizedType)type,  bounds);  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)  [FE]          AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  toClass  =  getRawType((  ParameterizedType)type,  bounds);  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	Type  toClass  =  getRawType((  ParameterizedType)type,  bounds);	      Type    toClass    =    getRawType((    ParameterizedType)type);    	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)	1	None	replace
38	[BUG]  [BUGGY]  Type  toClass  =  getRawType((  ParameterizedType)type,  toClass);  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)  [FE]            AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  toClass  =  getRawType((  ParameterizedType)type,  toClass);  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	Type  toClass  =  getRawType((  ParameterizedType)type,  toClass);	      Type    toClass    =    getRawType((    ParameterizedType)type);    	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)	1	None	replace
39	[BUG]  [BUGGY]  return  isAssignable(getRawType(type),  toClass,  toClass,  toClass);  [CE]  no  suitable  method  found  for  getRawType(Type)  [FE]          AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  isAssignable(getRawType(type),  toClass,  toClass,  toClass);  [BUGGY]    }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	return  isAssignable(getRawType(type),  toClass,  toClass,  toClass);	  return    isAssignable(getRawType(type),    toClass,    toClass);    	non-compiled	[CE]  no  suitable  method  found  for  getRawType(Type)	7	None	replace
40	[BUG]  [BUGGY]  return  isAssignable(getRawType(type),  toClass,  toClass,  bounds);  [CE]  no  suitable  method  found  for  getRawType(Type)  [FE]            AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  isAssignable(getRawType(type),  toClass,  toClass,  bounds);  [BUGGY]    }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	return  isAssignable(getRawType(type),  toClass,  toClass,  bounds);	  return    isAssignable(getRawType(type),    toClass,    toClass);    	non-compiled	[CE]  no  suitable  method  found  for  getRawType(Type)	7	None	replace
41	[BUG]  [BUGGY]  return  ClassUtils.isAssignable(getRawType((  ParameterizedType)type),  toClass,  bounds);  [CE]  cannot  find  symbol  bounds  [FE]    AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  ClassUtils.isAssignable(getRawType((  ParameterizedType)type),  toClass,  bounds);  [BUGGY]    }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	return  ClassUtils.isAssignable(getRawType((  ParameterizedType)type),  toClass,  bounds);	  return    ClassUtils.isAssignable(getRawType((    ParameterizedType)type),    toClass);    	non-compiled	[CE]  cannot  find  symbol  bounds	14	None	replace
42	[BUG]  [BUGGY]  return  getRawType((  Class  <?>)type),  toClass,  toClass);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getRawType((  Class  <?>)type),  toClass,  toClass);  [BUGGY]    }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	return  getRawType((  Class  <?>)type),  toClass,  toClass);	  return    getRawType((    ParameterizedType)type),    toClass,    toClass);    	non-compiled	[CE]  ';'  expected	11	None	replace
43	[BUG]  [BUGGY]  return  ClassUtils.isAssignable(getRawType((  ParameterizedType)type),  toClass);  return  ClassUtils.isAssignable(getRawType((  ParameterizedType)type,  toClass);  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  ClassUtils.isAssignable(getRawType((  ParameterizedType)type),  toClass);  return  ClassUtils.isAssignable(getRawType((  ParameterizedType)type,  toClass);  [BUGGY]    }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	return    ClassUtils.isAssignable(getRawType((    ParameterizedType)type),    toClass);    return  ClassUtils.isAssignable(getRawType((  ParameterizedType)type,  toClass);	  	non-compiled	[CE]  ')'  expected	13	None	add
44	[BUG]  [BUGGY]  return  getRawType((  ParameterizedType)type),  toClass);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getRawType((  ParameterizedType)type),  toClass);  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	return  getRawType((  ParameterizedType)type),  toClass);	      return    isAssignable(getRawType((    ParameterizedType)type),    toClass);    	non-compiled	[CE]  ';'  expected	2	None	replace
45	[BUG]  [BUGGY]  return  isAssignable(getRawType(type,(  ParameterizedType)type),  toClass,  toClass);  [CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Class<CAP#2>,Class<CAP#3>)  [FE]        AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  isAssignable(getRawType(type,(  ParameterizedType)type),  toClass,  toClass);  [BUGGY]    }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	return  isAssignable(getRawType(type,(  ParameterizedType)type),  toClass,  toClass);	  return    isAssignable(getRawType((    ParameterizedType)type),    toClass,    toClass);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Class<CAP#2>,Class<CAP#3>)	6	None	replace
46	[BUG]  [BUGGY]  return  isAssignable(getRawType((  ParameterizedType)type),  toClass,  type);  [CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Class<CAP#2>,Type)  [FE]          AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  isAssignable(getRawType((  ParameterizedType)type),  toClass,  type);  [BUGGY]    }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	return  isAssignable(getRawType((  ParameterizedType)type),  toClass,  type);	  return    isAssignable(getRawType((    ParameterizedType)type),    toClass,    toClass);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Class<CAP#2>,Type)	6	None	replace
47	[BUG]  [BUGGY]  ((  ParameterizedType)type).getBounds())  {  return  isAssignable(getRawType((  ParameterizedType)type,  toClass);  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  ((  ParameterizedType)type).getBounds())  {  return  isAssignable(getRawType((  ParameterizedType)type,  toClass);  }  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	((  ParameterizedType)type).getBounds())  {  return  isAssignable(getRawType((  ParameterizedType)type,  toClass);  }	      ((    ParameterizedType)type).getBounds())    {    return    isAssignable(getRawType((    ParameterizedType)type),    toClass);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
48	[BUG]  [BUGGY]  ((  ParameterizedType)type).getBounds())  {  return  isAssignable(getRawType((  ParameterizedType)type),  toClass,  toClass);  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  ((  ParameterizedType)type).getBounds())  {  return  isAssignable(getRawType((  ParameterizedType)type),  toClass,  toClass);  }  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	((  ParameterizedType)type).getBounds())  {  return  isAssignable(getRawType((  ParameterizedType)type),  toClass,  toClass);  }	      ((    ParameterizedType)type).getBounds())    {    return    isAssignable(getRawType((    ParameterizedType)type),    toClass);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
49	[BUG]  [BUGGY]  return  isAssignable(type,  getRawType(toClass),  toClass);  [CE]  no  suitable  method  found  for  getRawType(Class<CAP#1>)  [FE]          AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  isAssignable(type,  getRawType(toClass),  toClass);  [BUGGY]    }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	return  isAssignable(type,  getRawType(toClass),  toClass);	  return    isAssignable(getRawType(type),    toClass,    toClass);    	non-compiled	[CE]  no  suitable  method  found  for  getRawType(Class<CAP#1>)	7	None	replace
50	[BUG]  [BUGGY]  return  isAssignable(toClass,  toClass,  getRawType(type));  [CE]  no  suitable  method  found  for  getRawType(Type)  [FE]            AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  isAssignable(toClass,  toClass,  getRawType(type));  [BUGGY]    }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	return  isAssignable(toClass,  toClass,  getRawType(type));	  return    isAssignable(getRawType(type),    toClass,    toClass);    	non-compiled	[CE]  no  suitable  method  found  for  getRawType(Type)	7	None	replace
51	[BUG]  [BUGGY]  Type  toClass  =  getRawType(type,(  ParameterizedType)type);  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)  [FE]        AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  toClass  =  getRawType(type,(  ParameterizedType)type);  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	Type  toClass  =  getRawType(type,(  ParameterizedType)type);	      Type    toClass    =    getRawType((    ParameterizedType)type);    	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)	1	None	replace
52	[BUG]  [BUGGY]  Class  <?>  toClass  =  type.getRawParameterType(0);  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)  [FE]                AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Class  <?>  toClass  =  type.getRawParameterType(0);  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	Class  <?>  toClass  =  type.getRawParameterType(0);	      Class    <?>    toClass    =    type.getRawType();    	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)	5	None	replace
53	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType((  ParameterizedType)type,  toClass);  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)  [FE]            AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Class  <?>  toClass  =  getRawType((  ParameterizedType)type,  toClass);  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	Class  <?>  toClass  =  getRawType((  ParameterizedType)type,  toClass);	      Class    <?>    toClass    =    getRawType((    ParameterizedType)type);    	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)	3	None	replace
54	[BUG]  [BUGGY]      Type  bound  =  getRawType((  ParameterizedType)type);  Type  bound  =  getRawType((  ParameterizedType)type;  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]      Type  bound  =  getRawType((  ParameterizedType)type);  Type  bound  =  getRawType((  ParameterizedType)type;  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	        Type    bound    =    getRawType((    ParameterizedType)type);    Type  bound  =  getRawType((  ParameterizedType)type;	  	non-compiled	[CE]  ')'  expected	9	None	add
55	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType(type,  null);  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)  [FE]              AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Class  <?>  toClass  =  getRawType(type,  null);  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	Class  <?>  toClass  =  getRawType(type,  null);	      Class    <?>    toClass    =    getRawType(type);    	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)	4	None	replace
56	[BUG]  [BUGGY]      Type  bound  =  getRawType((  ParameterizedType)type);  Type  bound  =  getRawType((  ParameterizedType)type,  toClass);  [CE]  variable  bound  is  already  defined  in  method  isAssignable(Type,Class<?>)  [FE]    AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]      Type  bound  =  getRawType((  ParameterizedType)type);  Type  bound  =  getRawType((  ParameterizedType)type,  toClass);  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	        Type    bound    =    getRawType((    ParameterizedType)type);    Type  bound  =  getRawType((  ParameterizedType)type,  toClass);	  	non-compiled	[CE]  variable  bound  is  already  defined  in  method  isAssignable(Type,Class<?>)	9	None	add
57	[BUG]  [BUGGY]      Type  bound  =  getRawType((  ParameterizedType)type);  Type  bound  =  getRawType((  ParameterizedType)style);  [CE]  variable  bound  is  already  defined  in  method  isAssignable(Type,Class<?>)  [FE]      AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]      Type  bound  =  getRawType((  ParameterizedType)type);  Type  bound  =  getRawType((  ParameterizedType)style);  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	        Type    bound    =    getRawType((    ParameterizedType)type);    Type  bound  =  getRawType((  ParameterizedType)style);	  	non-compiled	[CE]  variable  bound  is  already  defined  in  method  isAssignable(Type,Class<?>)	9	None	add
58	[BUG]  [BUGGY]  return  isAssignable(getRawType(type),  toClass,  toClass,  type);  [CE]  no  suitable  method  found  for  getRawType(Type)  [FE]          AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  isAssignable(getRawType(type),  toClass,  toClass,  type);  [BUGGY]    }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	return  isAssignable(getRawType(type),  toClass,  toClass,  type);	  return    isAssignable(getRawType(type),    toClass,    toClass);    	non-compiled	[CE]  no  suitable  method  found  for  getRawType(Type)	7	None	replace
59	[BUG]  [BUGGY]  return  isAssignable(getRawType(type),  toClass,  type);  [CE]  no  suitable  method  found  for  getRawType(Type)  [FE]            AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  isAssignable(getRawType(type),  toClass,  type);  [BUGGY]    }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	return  isAssignable(getRawType(type),  toClass,  type);	  return    isAssignable(getRawType(type),    toClass,    toClass);    	non-compiled	[CE]  no  suitable  method  found  for  getRawType(Type)	7	None	replace
60	[BUG]  [BUGGY]  Type  bound  =  findRawType((  ParameterizedType)type);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  findRawType((  ParameterizedType)type);  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	Type  bound  =  findRawType((  ParameterizedType)type);	      Type    bound    =    getRawType((    ParameterizedType)type);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
61	[BUG]  [BUGGY]  return  ClassUtils.isAssignable(getRawType((  ParameterizedType)type),  toClass,  type);  [CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Class<CAP#2>,Type)  [FE]    AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  ClassUtils.isAssignable(getRawType((  ParameterizedType)type),  toClass,  type);  [BUGGY]    }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	return  ClassUtils.isAssignable(getRawType((  ParameterizedType)type),  toClass,  type);	  return    ClassUtils.isAssignable(getRawType((    ParameterizedType)type),    toClass);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Class<CAP#1>,Class<CAP#2>,Type)	14	None	replace
62	[BUG]  [BUGGY]  return  ClassUtils.isAssignable(getRawType((  ParameterizedType)type),  toClass,  this);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]      AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  ClassUtils.isAssignable(getRawType((  ParameterizedType)type),  toClass,  this);  [BUGGY]    }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	return  ClassUtils.isAssignable(getRawType((  ParameterizedType)type),  toClass,  this);	  return    ClassUtils.isAssignable(getRawType((    ParameterizedType)type),    toClass);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	14	None	replace
63	[BUG]  [BUGGY]  (0  <  <  ((  ParameterizedType)type).getBounds())  {  return  isAssignable(getRawType((  ParameterizedType)type),  toClass);  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  (0  <  <  ((  ParameterizedType)type).getBounds())  {  return  isAssignable(getRawType((  ParameterizedType)type),  toClass);  }  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	(0  <  <  ((  ParameterizedType)type).getBounds())  {  return  isAssignable(getRawType((  ParameterizedType)type),  toClass);  }	      ((    ParameterizedType)type).getBounds())    {    return    isAssignable(getRawType((    ParameterizedType)type),    toClass);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
64	[BUG]  [BUGGY]  ((  ParameterizedType)type).getDeclaredTypes())  {  return  isAssignable(getRawType((  ParameterizedType)type),  toClass);  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  ((  ParameterizedType)type).getDeclaredTypes())  {  return  isAssignable(getRawType((  ParameterizedType)type),  toClass);  }  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	((  ParameterizedType)type).getDeclaredTypes())  {  return  isAssignable(getRawType((  ParameterizedType)type),  toClass);  }	      ((    ParameterizedType)type).getBounds())    {    return    isAssignable(getRawType((    ParameterizedType)type),    toClass);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
65	[BUG]  [BUGGY]  Type  toClass  =  getRawType((  ParameterizedType)type,  this);  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)  [FE]        AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  toClass  =  getRawType((  ParameterizedType)type,  this);  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	Type  toClass  =  getRawType((  ParameterizedType)type,  this);	      Type    toClass    =    getRawType((    ParameterizedType)type);    	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)	1	None	replace
66	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType(type).getBounds();  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)  [FE]              AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Class  <?>  toClass  =  getRawType(type).getBounds();  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	Class  <?>  toClass  =  getRawType(type).getBounds();	      Class    <?>    toClass    =    getRawType(type);    	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)	4	None	replace
67	[BUG]  [BUGGY]  Class  <?>  toClass  =  getRawType((  ParameterizedType)type),  toClass);  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Class  <?>  toClass  =  getRawType((  ParameterizedType)type),  toClass);  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	Class  <?>  toClass  =  getRawType((  ParameterizedType)type),  toClass);	      Class    <?>    toClass    =    getRawType((    ParameterizedType)type);    	non-compiled	[CE]  ';'  expected	3	None	replace
68	[BUG]  [BUGGY]  return  getRawType((  ParameterizedType)type),  toClass,  toClass,  type);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getRawType((  ParameterizedType)type),  toClass,  toClass,  type);  [BUGGY]    }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	return  getRawType((  ParameterizedType)type),  toClass,  toClass,  type);	  return    getRawType((    ParameterizedType)type),    toClass,    toClass);    	non-compiled	[CE]  ';'  expected	11	None	replace
69	[BUG]  [BUGGY]  return  getRawType((  ParameterizedType)type),  toClass,  toClass,  isAssignable(toClass);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getRawType((  ParameterizedType)type),  toClass,  toClass,  isAssignable(toClass);  [BUGGY]    }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	return  getRawType((  ParameterizedType)type),  toClass,  toClass,  isAssignable(toClass);	  return    getRawType((    ParameterizedType)type),    toClass,    toClass);    	non-compiled	[CE]  ';'  expected	11	None	replace
70	[BUG]  [BUGGY]  Class  <?>  toClass  =  type  instanceof  ParameterizedType?((  ParameterizedType)type).getRawType()  :  type.getRawType();  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)  [FE]                AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Class  <?>  toClass  =  type  instanceof  ParameterizedType?((  ParameterizedType)type).getRawType()  :  type.getRawType();  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	Class  <?>  toClass  =  type  instanceof  ParameterizedType?((  ParameterizedType)type).getRawType()  :  type.getRawType();	      Class    <?>    toClass    =    type.getRawType();    	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)	5	None	replace
71	[BUG]  [BUGGY]  Class  <?>  toClass  =  type.getRawClass();  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)  [FE]                  AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Class  <?>  toClass  =  type.getRawClass();  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	Class  <?>  toClass  =  type.getRawClass();	      Class    <?>    toClass    =    type.getRawType();    	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)	5	None	replace
72	[BUG]  [BUGGY]  return  isAssignable(getRawType((  ParameterizedType)type),  toClass,  toClass,  CAP#3);  [CE]  illegal  character:  [FE]        AssertionError    [CONTEXT]    return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  isAssignable(getRawType((  ParameterizedType)type),  toClass,  toClass,  CAP#3);  [BUGGY]    }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  return  true;  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	136	136	2	replace	return  isAssignable(getRawType((  ParameterizedType)type),  toClass,  toClass,  CAP#3);	  return    isAssignable(getRawType((    ParameterizedType)type),    toClass,    toClass);    	non-compiled	[CE]  illegal  character:  	6	None	replace
