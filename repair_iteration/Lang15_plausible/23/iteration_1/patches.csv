bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  toComponentType,  typeVarAssigns);  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  toComponentType,  typeVarAssigns);  [BUGGY]    toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	toComponentType,  typeVarAssigns);	      	non-compiled	[CE]  not  a  statement	5	None	replace
2	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType);  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType);	      Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	6	None	replace
3	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls);  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls);	      Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	6	None	replace
4	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound);  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound);	      Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	6	None	replace
5	[BUG]  [BUGGY]  return  isAssignable(type,  toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(type,  toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);  [BUGGY]    toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,  toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);	  return    isAssignable(type,((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>)	13	None	replace
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);  [BUGGY]    toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	add	return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);	  return    isAssignable(type,((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	13	2	replace
7	[BUG]  [BUGGY]  return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);  [BUGGY]    toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);	  return    isAssignable(type,((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns);    	compilable	  [FE]  AssertionError  	13	2	replace
8	[BUG]  [BUGGY]  return  isAssignable(type,  toComponentType.getGenericComponentType(),  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(type,  toComponentType.getGenericComponentType(),  typeVarAssigns);  [BUGGY]    toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,  toComponentType.getGenericComponentType(),  typeVarAssigns);	  return    isAssignable(type,((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
9	[BUG]  [BUGGY]  return  isAssignable(type,  toComponentType.getGenericComponentType(),  typeVarAssigns,((  GenericArrayType)type).getGenericComponentType());  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(type,  toComponentType.getGenericComponentType(),  typeVarAssigns,((  GenericArrayType)type).getGenericComponentType());  [BUGGY]    toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,  toComponentType.getGenericComponentType(),  typeVarAssigns,((  GenericArrayType)type).getGenericComponentType());	  return    isAssignable(type,((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
10	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType);  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType);	      GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	7	None	replace
11	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls);  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls);	      GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	7	None	replace
12	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(type,(GenericArrayType)type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(type,(GenericArrayType)type);  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(type,(GenericArrayType)type);	      GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	7	None	replace
13	[BUG]  [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType);  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType);	      Class    <?>    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	11	None	replace
14	[BUG]  [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds(type,(  GenericArrayType)type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds(type,(  GenericArrayType)type);  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  toGenericArrayType  =  getImplicitUpperBounds(type,(  GenericArrayType)type);	      Class    <?>    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	11	None	replace
15	[BUG]  [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound);  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound);	      Class    <?>    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	11	None	replace
16	[BUG]  [BUGGY]      Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type);  return  isAssignable(toGenericArrayType,  toGenericArrayType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]      Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type);  return  isAssignable(toGenericArrayType,  toGenericArrayType);  [BUGGY]    toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	        Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type);  return  isAssignable(toGenericArrayType,  toGenericArrayType);	  	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	4	None	add
17	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType;  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType;  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType;	      Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type).getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	9	None	replace
18	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType);  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType);  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType);	      Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type).getGenericComponentType();    	non-compiled	[CE]  ';'  expected	9	None	replace
19	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);	      Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type).getGenericComponentType();    	non-compiled	[CE]  ';'  expected	9	None	replace
20	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType);  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType);  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType);	      Class    <?>    typeVarAssigns    =    getImplicitUpperBounds((    GenericArrayType)type);    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	16	None	replace
21	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type,  toGenericArrayType);  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type,  toGenericArrayType);  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type,  toGenericArrayType);	      Class    <?>    typeVarAssigns    =    getImplicitUpperBounds((    GenericArrayType)type);    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	16	None	replace
22	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds(toGenericArrayType,(GenericArrayType)type);  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds(toGenericArrayType,(GenericArrayType)type);  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  typeVarAssigns  =  getImplicitUpperBounds(toGenericArrayType,(GenericArrayType)type);	      Class    <?>    typeVarAssigns    =    getImplicitUpperBounds((    GenericArrayType)type);    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	16	None	replace
23	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =(GenericArrayType)type.getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  GenericArrayType  toGenericArrayType  =(GenericArrayType)type.getGenericComponentType();  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =(GenericArrayType)type.getGenericComponentType();	      GenericArrayType    toGenericArrayType    =(GenericArrayType)type;    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	8	None	replace
24	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =(GenericArrayType)type.clone();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  GenericArrayType  toGenericArrayType  =(GenericArrayType)type.clone();  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =(GenericArrayType)type.clone();	      GenericArrayType    toGenericArrayType    =(GenericArrayType)type;    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	8	None	replace
25	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  bound);  [CE]  cannot  find  symbol  bound  [FE]          AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  bound);  [BUGGY]    toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  bound);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    this);    	non-compiled	[CE]  cannot  find  symbol  bound	15	None	replace
26	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  false);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,boolean)  [FE]            AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  false);  [BUGGY]    toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  false);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    this);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,boolean)	15	None	replace
27	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  bound,  this);  [CE]  cannot  find  symbol  bound  [FE]              AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  bound,  this);  [BUGGY]    toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  bound,  this);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    this);    	non-compiled	[CE]  cannot  find  symbol  bound	15	None	replace
28	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  bound,  null);  [CE]  cannot  find  symbol  bound  [FE]        AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  bound,  null);  [BUGGY]    toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  bound,  null);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    null);    	non-compiled	[CE]  cannot  find  symbol  bound	14	None	replace
29	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null,  toGenericArrayType);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,<null>,GenericArrayType)  [FE]          AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null,  toGenericArrayType);  [BUGGY]    toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null,  toGenericArrayType);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    null);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,<null>,GenericArrayType)	14	None	replace
30	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  map);  [CE]  cannot  find  symbol  map  [FE]            AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  map);  [BUGGY]    toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  map);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    null);    	non-compiled	[CE]  cannot  find  symbol  map	14	None	replace
31	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [BUGGY]    toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);	  return    isAssignable(((GenericArrayType)type).getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
32	[BUG]  [BUGGY]  return  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]    toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(((GenericArrayType)type).getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
33	[BUG]  [BUGGY]  return  isAssignable(toComponentType,((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(toComponentType,((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]    toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(toComponentType,((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(((GenericArrayType)type).getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
34	[BUG]  [BUGGY]  Type  toGenericArrayType  =((  GenericArrayType)type).getGenericComponentType(),  toComponentType;  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  Type  toGenericArrayType  =((  GenericArrayType)type).getGenericComponentType(),  toComponentType;  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =((  GenericArrayType)type).getGenericComponentType(),  toComponentType;	      Type    toGenericArrayType    =((    GenericArrayType)type).getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	12	None	replace
35	[BUG]  [BUGGY]  Type  toGenericArrayType  =((  GenericArrayType)type).getGenericComponentType(),  toComponentType);  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  Type  toGenericArrayType  =((  GenericArrayType)type).getGenericComponentType(),  toComponentType);  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =((  GenericArrayType)type).getGenericComponentType(),  toComponentType);	      Type    toGenericArrayType    =((    GenericArrayType)type).getGenericComponentType();    	non-compiled	[CE]  ';'  expected	12	None	replace
36	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType;  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType;  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType;	      GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type).getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	10	None	replace
37	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType);  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType);  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType);	      GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type).getGenericComponentType();    	non-compiled	[CE]  ';'  expected	10	None	replace
38	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);  [CE]  ';'  expected  [FE]                    AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);	      GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type).getGenericComponentType();    	non-compiled	[CE]  ';'  expected	10	None	replace
39	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  this.typeVarAssigns,  toGenericArrayType);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  this.typeVarAssigns,  toGenericArrayType);  [BUGGY]    toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  this.typeVarAssigns,  toGenericArrayType);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    this.typeVarAssigns);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	3	None	replace
40	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  this.typeVarAssigns);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  this.typeVarAssigns);  [BUGGY]    toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  this.typeVarAssigns);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    this.typeVarAssigns);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	3	None	replace
41	[BUG]  [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  toGenericArrayType);  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  toGenericArrayType);  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  toGenericArrayType);	      Type    toComponentType    =    getImplicitUpperBounds((    GenericArrayType)type);    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	17	None	replace
42	[BUG]  [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls);  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls);  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls);	      Type    toComponentType    =    getImplicitUpperBounds((    GenericArrayType)type);    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	17	None	replace
43	[BUG]  [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound);  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound);  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound);	      Type    toComponentType    =    getImplicitUpperBounds((    GenericArrayType)type);    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	17	None	replace
44	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  bound);  [CE]  cannot  find  symbol  bound  [FE]        AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  bound);  [BUGGY]    toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  bound);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType);    	non-compiled	[CE]  cannot  find  symbol  bound	1	None	replace
45	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  toComponentType);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,GenericArrayType,Type)  [FE]          AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  toComponentType);  [BUGGY]    toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  toComponentType);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,GenericArrayType,Type)	1	None	replace
46	[BUG]  [BUGGY]  return  isAssignable(type,((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>,GenericArrayType)  [FE]            AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(type,((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [BUGGY]    toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>,GenericArrayType)	1	None	replace
47	[BUG]  [BUGGY]      Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type);  if(toGenericArrayType!=  null)  {  return  false;  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]      Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type);  if(toGenericArrayType!=  null)  {  return  false;  }  [BUGGY]    toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	        Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type);  if(toGenericArrayType!=  null)  {  return  false;  }	  	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	4	None	add
48	[BUG]  [BUGGY]  return  isAssignable(type,((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>,<null>)  [FE]        AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(type,((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null);  [BUGGY]    toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    null);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>,<null>)	14	None	replace
49	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds(type,(  GenericArrayType)type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds(type,(  GenericArrayType)type);  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds(type,(  GenericArrayType)type);	      Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	6	None	replace
50	[BUG]  [BUGGY]  return  isAssignable(type,((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(type,((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]    toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(((GenericArrayType)type).getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
51	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typesVarAssigns);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typesVarAssigns);  [BUGGY]    toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typesVarAssigns);	  return    isAssignable(((GenericArrayType)type).getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
52	[BUG]  [BUGGY]  return  isAssignable(cls,((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [CE]  cannot  find  symbol  cls  [FE]        AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(cls,((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [BUGGY]    toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(cls,((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType);    	non-compiled	[CE]  cannot  find  symbol  cls	1	None	replace
53	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType).getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType).getGenericComponentType();  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType).getGenericComponentType();	      GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type).getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	10	None	replace
54	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(type,(  GenericArrayType)type).getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(type,(  GenericArrayType)type).getGenericComponentType();  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(type,(  GenericArrayType)type).getGenericComponentType();	      GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type).getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	10	None	replace
55	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  types);  [CE]  cannot  find  symbol  types  [FE]            AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  types);  [BUGGY]    toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  types);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    this.typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  types	3	None	replace
56	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType).getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType).getGenericComponentType();  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType).getGenericComponentType();	      Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type).getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	9	None	replace
57	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds(type,(  GenericArrayType)type).getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds(type,(  GenericArrayType)type).getGenericComponentType();  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds(type,(  GenericArrayType)type).getGenericComponentType();	      Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type).getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	9	None	replace
58	[BUG]  [BUGGY]  return  isAssignable(type,  toComponentType,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Type,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(type,  toComponentType,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]    toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,  toComponentType,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(type,((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Type,Map<TypeVariable<?>,Type>)	13	None	replace
59	[BUG]  [BUGGY]  return  isAssignable(type,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  bound);  [CE]  cannot  find  symbol  bound  [FE]          AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(type,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  bound);  [BUGGY]    toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  bound);	  return    isAssignable(type,((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  bound	13	None	replace
60	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  fromComponentType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  fromComponentType);  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  fromComponentType);	      GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	7	None	replace
61	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =(GenericArrayType)type.toGenericArrayType;  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  GenericArrayType  toGenericArrayType  =(GenericArrayType)type.toGenericArrayType;  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =(GenericArrayType)type.toGenericArrayType;	      GenericArrayType    toGenericArrayType    =(GenericArrayType)type;    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	8	None	replace
62	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =(GenericArrayType)type.getRawClass();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  GenericArrayType  toGenericArrayType  =(GenericArrayType)type.getRawClass();  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =(GenericArrayType)type.getRawClass();	      GenericArrayType    toGenericArrayType    =(GenericArrayType)type;    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	8	None	replace
63	[BUG]  [BUGGY]  Type  toGenericArrayType  =(type  instanceof  GenericArrayType)?((  GenericArrayType)type).getGenericComponentType()  :  null;  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  Type  toGenericArrayType  =(type  instanceof  GenericArrayType)?((  GenericArrayType)type).getGenericComponentType()  :  null;  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =(type  instanceof  GenericArrayType)?((  GenericArrayType)type).getGenericComponentType()  :  null;	      Type    toGenericArrayType    =((    GenericArrayType)type).getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	12	None	replace
64	[BUG]  [BUGGY]  Type  toGenericArrayType  =(type  instanceof  GenericArrayType)?((  GenericArrayType)type).getGenericComponentType()  :  type;  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  Type  toGenericArrayType  =(type  instanceof  GenericArrayType)?((  GenericArrayType)type).getGenericComponentType()  :  type;  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =(type  instanceof  GenericArrayType)?((  GenericArrayType)type).getGenericComponentType()  :  type;	      Type    toGenericArrayType    =((    GenericArrayType)type).getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	12	None	replace
65	[BUG]  [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType);  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType);  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType);	      Type    toComponentType    =    getImplicitUpperBounds((    GenericArrayType)type);    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	17	None	replace
66	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  bounds,  null);  [CE]  cannot  find  symbol  bounds  [FE]        AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  bounds,  null);  [BUGGY]    toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  bounds,  null);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    null);    	non-compiled	[CE]  cannot  find  symbol  bounds	14	None	replace
67	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type  instanceof  GenericArrayType?((  GenericArrayType)type).getGenericComponentType()  :  null;  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  Type  toGenericArrayType  =  type  instanceof  GenericArrayType?((  GenericArrayType)type).getGenericComponentType()  :  null;  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  type  instanceof  GenericArrayType?((  GenericArrayType)type).getGenericComponentType()  :  null;	      Type    toGenericArrayType    =((    GenericArrayType)type).getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	12	None	replace
68	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  bounds);  [CE]  cannot  find  symbol  bounds  [FE]        AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  bounds);  [BUGGY]    toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  bounds);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType);    	non-compiled	[CE]  cannot  find  symbol  bounds	1	None	replace
69	[BUG]  [BUGGY]  return  isAssignable(type,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toComponentType);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>,Type)  [FE]        AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(type,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toComponentType);  [BUGGY]    toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toComponentType);	  return    isAssignable(type,((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>,Type)	13	None	replace
70	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type),  toComponentType);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type),  toComponentType);  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type),  toComponentType);	      GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type);    	non-compiled	[CE]  ';'  expected	7	None	replace
71	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  null);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  null);  [BUGGY]    toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  null);	  return    isAssignable(((GenericArrayType)type).getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
72	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  hashCode);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  hashCode);  [BUGGY]    toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  hashCode);	  return    isAssignable(((GenericArrayType)type).getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
73	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =(GenericArrayType)type.toArray();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  GenericArrayType  toGenericArrayType  =(GenericArrayType)type.toArray();  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =(GenericArrayType)type.toArray();	      GenericArrayType    toGenericArrayType    =(GenericArrayType)type;    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	8	None	replace
74	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(type);  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(type);	      GenericArrayType    toGenericArrayType    =(GenericArrayType)type;    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	8	None	replace
75	[BUG]  [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  typeVarAssigns);  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  typeVarAssigns);	      Class    <?>    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	11	None	replace
76	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type),  toComponentType);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type),  toComponentType);  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type),  toComponentType);	      Class    <?>    typeVarAssigns    =    getImplicitUpperBounds((    GenericArrayType)type);    	non-compiled	[CE]  ';'  expected	16	None	replace
77	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds(type,(  GenericArrayType)type);  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds(type,(  GenericArrayType)type);  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  typeVarAssigns  =  getImplicitUpperBounds(type,(  GenericArrayType)type);	      Class    <?>    typeVarAssigns    =    getImplicitUpperBounds((    GenericArrayType)type);    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	16	None	replace
78	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typesVarAssigns);  [CE]  cannot  find  symbol  typesVarAssigns  [FE]            AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typesVarAssigns);  [BUGGY]    toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typesVarAssigns);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    this.typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  typesVarAssigns	3	None	replace
79	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  typeVarAssigns);  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  typeVarAssigns);	      Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	6	None	replace
80	[BUG]  [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  typeVarAssigns);  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]    if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {      [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  typeVarAssigns);  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  typeVarAssigns);	      Type    toComponentType    =    getImplicitUpperBounds((    GenericArrayType)type);    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	17	None	replace
