bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  toComponentType,  toGenericArrayType);  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  toComponentType,  toGenericArrayType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	toComponentType,  toGenericArrayType);	  toComponentType,    typeVarAssigns);    	non-compiled	[CE]  not  a  statement	1	None	replace
2	[BUG]  [BUGGY]  toComponentType,  typeVarAssigns,  getImplicitUpperBounds((  GenericArrayType)type));  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  toComponentType,  typeVarAssigns,  getImplicitUpperBounds((  GenericArrayType)type));  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	toComponentType,  typeVarAssigns,  getImplicitUpperBounds((  GenericArrayType)type));	  toComponentType,    typeVarAssigns);    	non-compiled	[CE]  not  a  statement	1	None	replace
3	[BUG]  [BUGGY]  toComponentType,  typeVarAssigns,  getImplicitUpperBounds((  GenericArrayType)type);  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  toComponentType,  typeVarAssigns,  getImplicitUpperBounds((  GenericArrayType)type);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	toComponentType,  typeVarAssigns,  getImplicitUpperBounds((  GenericArrayType)type);	  toComponentType,    typeVarAssigns);    	non-compiled	[CE]  not  a  statement	1	None	replace
4	[BUG]  [BUGGY]  toComponentType,  getImplicitUpperBounds((  GenericArrayType)type));  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  toComponentType,  getImplicitUpperBounds((  GenericArrayType)type));  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	toComponentType,  getImplicitUpperBounds((  GenericArrayType)type));	  toComponentType,    typeVarAssigns);    	non-compiled	[CE]  not  a  statement	1	None	replace
5	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =(GenericArrayType)type.getReturnType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =(GenericArrayType)type.getReturnType();  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =(GenericArrayType)type.getReturnType();	  GenericArrayType    toGenericArrayType    =(GenericArrayType)type.getRawClass();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	62	None	replace
6	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =(GenericArrayType)type.getRawClass(),  toComponentType);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =(GenericArrayType)type.getRawClass(),  toComponentType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =(GenericArrayType)type.getRawClass(),  toComponentType);	  GenericArrayType    toGenericArrayType    =(GenericArrayType)type.getRawClass();    	non-compiled	[CE]  ';'  expected	62	None	replace
7	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type),  toComponentType,  toGenericArrayType);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type),  toComponentType,  toGenericArrayType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type),  toComponentType,  toGenericArrayType);	  Class    <?>    typeVarAssigns    =    getImplicitUpperBounds((    GenericArrayType)type),    toComponentType);    	non-compiled	[CE]  ';'  expected	76	None	replace
8	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type),  toComponentType,  toGenericParameterType);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type),  toComponentType,  toGenericParameterType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type),  toComponentType,  toGenericParameterType);	  Class    <?>    typeVarAssigns    =    getImplicitUpperBounds((    GenericArrayType)type),    toComponentType);    	non-compiled	[CE]  ';'  expected	76	None	replace
9	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  this.typeVarAssigns,  typeVarAssigns);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  this.typeVarAssigns,  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  this.typeVarAssigns,  typeVarAssigns);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    this.typeVarAssigns);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	40	None	replace
10	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  bound,  this.typeVarAssigns);  [CE]  cannot  find  symbol  bound  [FE]                    AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  bound,  this.typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  bound,  this.typeVarAssigns);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    this.typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  bound	40	None	replace
11	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type).getGenericComponentType(),    typeVarAssigns);    	non-compiled	[CE]  ';'  expected	38	None	replace
12	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitLowerBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitLowerBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitLowerBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type).getGenericComponentType(),    typeVarAssigns);    	non-compiled	[CE]  ';'  expected	38	None	replace
13	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CE]  ';'  expected  [FE]                            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type).getGenericComponentType(),    typeVarAssigns);    	non-compiled	[CE]  ';'  expected	38	None	replace
14	[BUG]  [BUGGY]  return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  toGenericArrayType,  typeVarAssigns);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  toGenericArrayType,  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  toGenericArrayType,  typeVarAssigns);	  return    isAssignable(toComponentType,((    GenericArrayType)type).getGenericComponentType(),    typeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,GenericArrayType,Map<TypeVariable<?>,Type>)	7	None	replace
15	[BUG]  [BUGGY]  return  isAssignable(toComponentType,  toGenericArrayType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);  [CE]  no  suitable  method  found  for  isAssignable(Type,GenericArrayType,Type,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(toComponentType,  toGenericArrayType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(toComponentType,  toGenericArrayType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);	  return    isAssignable(toComponentType,((    GenericArrayType)type).getGenericComponentType(),    typeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,GenericArrayType,Type,Map<TypeVariable<?>,Type>)	7	None	replace
16	[BUG]  [BUGGY]  return  isAssignable(type,((  GenericArrayType)type).getGenericComponentType(),  toComponentType);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type)  [FE]        AssertionError    [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,((  GenericArrayType)type).getGenericComponentType(),  toComponentType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,((  GenericArrayType)type).getGenericComponentType(),  toComponentType);	  return    isAssignable(toComponentType,((    GenericArrayType)type).getGenericComponentType(),    typeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type)	7	None	replace
17	[BUG]  [BUGGY]  return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  toGenericArrayType);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,GenericArrayType)  [FE]          AssertionError    [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  toGenericArrayType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  toGenericArrayType);	  return    isAssignable(toComponentType,((    GenericArrayType)type).getGenericComponentType(),    typeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,GenericArrayType)	7	None	replace
18	[BUG]  [BUGGY]  return  isAssignable(toComponentType,  type.getGenericComponentType(),  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(toComponentType,  type.getGenericComponentType(),  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(toComponentType,  type.getGenericComponentType(),  typeVarAssigns);	  return    isAssignable(type,    toComponentType.getGenericComponentType(),    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
19	[BUG]  [BUGGY]  return  isAssignable(type,  toComponentType.getGenericComponentType(),  typeVarAssigns,  toGenericArrayType);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,  toComponentType.getGenericComponentType(),  typeVarAssigns,  toGenericArrayType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,  toComponentType.getGenericComponentType(),  typeVarAssigns,  toGenericArrayType);	  return    isAssignable(type,    toComponentType.getGenericComponentType(),    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
20	[BUG]  [BUGGY]  return  isAssignable(type,  toComponentType.getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,  toComponentType.getGenericComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,  toComponentType.getGenericComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(type,    toComponentType.getGenericComponentType(),    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
21	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  toGenericArrayType);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  toGenericArrayType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  toGenericArrayType);	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type).getGenericComponentType(),    toComponentType);    	non-compiled	[CE]  ';'  expected	37	None	replace
22	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  null);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  null);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  null);	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type).getGenericComponentType(),    toComponentType);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
23	[BUG]  [BUGGY]  return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns,  toGenericArrayType);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,GenericArrayType)  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns,  toGenericArrayType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns,  toGenericArrayType);	  return    isAssignable(type,((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,GenericArrayType)	46	None	replace
24	[BUG]  [BUGGY]  return  isAssignable(type,  toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns,  toGenericArrayType);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>,GenericArrayType)  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,  toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns,  toGenericArrayType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,  toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns,  toGenericArrayType);	  return    isAssignable(type,((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>,GenericArrayType)	46	None	replace
25	[BUG]  [BUGGY]  return  isAssignable(type,  toComponentType.getGenericComponentType(),  typeVarAssigns,  type);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,  toComponentType.getGenericComponentType(),  typeVarAssigns,  type);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,  toComponentType.getGenericComponentType(),  typeVarAssigns,  type);	  return    isAssignable(type,((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
26	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  true);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,boolean)  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  true);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  true);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    false);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,boolean)	26	None	replace
27	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  false,  toGenericArrayType);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,boolean,GenericArrayType)  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  false,  toGenericArrayType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  false,  toGenericArrayType);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    false);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,boolean,GenericArrayType)	26	None	replace
28	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  true,  toGenericArrayType);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,boolean,GenericArrayType)  [FE]                    AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  true,  toGenericArrayType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  true,  toGenericArrayType);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    false);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,boolean,GenericArrayType)	26	None	replace
29	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null,  false);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,<null>,boolean)  [FE]                      AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null,  false);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null,  false);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    false);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,<null>,boolean)	26	None	replace
30	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType).getGenericComponentType(),  typeVarAssigns);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType).getGenericComponentType(),  typeVarAssigns);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType).getGenericComponentType(),  typeVarAssigns);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    toComponentType).getGenericComponentType();    	non-compiled	[CE]  ';'  expected	56	None	replace
31	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType).getGenericComponentType(),  null;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType).getGenericComponentType(),  null;  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType).getGenericComponentType(),  null;	  Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    toComponentType).getGenericComponentType();    	non-compiled	[CE]  <identifier>  expected	56	None	replace
32	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType).getGenericComponentType(),  toComponentType;  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType).getGenericComponentType(),  toComponentType;  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType).getGenericComponentType(),  toComponentType;	  Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    toComponentType).getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	56	None	replace
33	[BUG]  [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  typeVarAssigns);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  typeVarAssigns);	  Class    <?>    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    toComponentType);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	13	None	replace
34	[BUG]  [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  bound);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  bound);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  bound);	  Class    <?>    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    toComponentType);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	13	None	replace
35	[BUG]  [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  null);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  null);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  null);	  Class    <?>    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    toComponentType);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	13	None	replace
36	[BUG]  [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  toGenericArrayType,  typeVarAssigns);  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  toGenericArrayType,  typeVarAssigns);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  toGenericArrayType,  typeVarAssigns);	  Type    toComponentType    =    getImplicitUpperBounds((    GenericArrayType)type,    toGenericArrayType);    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	41	None	replace
37	[BUG]  [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  toGenericArrayType,  cls);  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  toGenericArrayType,  cls);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  toGenericArrayType,  cls);	  Type    toComponentType    =    getImplicitUpperBounds((    GenericArrayType)type,    toGenericArrayType);    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	41	None	replace
38	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType);  if(toGenericArrayType!=  null)  {  return  false;  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType);  if(toGenericArrayType!=  null)  {  return  false;  }  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType);  if(toGenericArrayType!=  null)  {  return  false;  }	          Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type);    if(toGenericArrayType!=    null)    {    return    false;    }    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	47	None	replace
39	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type);  if(toGenericArrayType  ==  null)  {  return  false;  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type);  if(toGenericArrayType  ==  null)  {  return  false;  }  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type);  if(toGenericArrayType  ==  null)  {  return  false;  }	          Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type);    if(toGenericArrayType!=    null)    {    return    false;    }    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	47	None	replace
40	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls);  if(toGenericArrayType!=  null)  {  return  false;  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls);  if(toGenericArrayType!=  null)  {  return  false;  }  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls);  if(toGenericArrayType!=  null)  {  return  false;  }	          Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type);    if(toGenericArrayType!=    null)    {    return    false;    }    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	47	None	replace
41	[BUG]  [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  typeVarAssigns,  toComponentType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  typeVarAssigns,  toComponentType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  typeVarAssigns,  toComponentType);	  Class    <?>    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    typeVarAssigns);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	75	None	replace
42	[BUG]  [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toGenericArrayType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toGenericArrayType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toGenericArrayType);	  Class    <?>    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    typeVarAssigns);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	75	None	replace
43	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  null,  toGenericArrayType);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  null,  toGenericArrayType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  null,  toGenericArrayType);	  return    isAssignable(((GenericArrayType)type).getComponentType(),    toComponentType,    typeVarAssigns,    null);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
44	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  bound,  null);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  bound,  null);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  bound,  null);	  return    isAssignable(((GenericArrayType)type).getComponentType(),    toComponentType,    typeVarAssigns,    null);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
45	[BUG]  [BUGGY]  return  isAssignable(toComponentType,  type.getGenericComponentType(),  typeVarAssigns,((  GenericArrayType)type).getGenericComponentType());  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(toComponentType,  type.getGenericComponentType(),  typeVarAssigns,((  GenericArrayType)type).getGenericComponentType());  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(toComponentType,  type.getGenericComponentType(),  typeVarAssigns,((  GenericArrayType)type).getGenericComponentType());	  return    isAssignable(type,    toComponentType.getGenericComponentType(),    typeVarAssigns,((    GenericArrayType)type).getGenericComponentType());    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
46	[BUG]  [BUGGY]  return  isAssignable(toComponentType,  toComponentType.getGenericComponentType(),  typeVarAssigns,((  GenericArrayType)type).getGenericComponentType());  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(toComponentType,  toComponentType.getGenericComponentType(),  typeVarAssigns,((  GenericArrayType)type).getGenericComponentType());  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(toComponentType,  toComponentType.getGenericComponentType(),  typeVarAssigns,((  GenericArrayType)type).getGenericComponentType());	  return    isAssignable(type,    toComponentType.getGenericComponentType(),    typeVarAssigns,((    GenericArrayType)type).getGenericComponentType());    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
47	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound,  toComponentType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound,  toComponentType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound,  toComponentType);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    bound);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	4	None	replace
48	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound,  toGenericArrayType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound,  toGenericArrayType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound,  toGenericArrayType);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    bound);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	4	None	replace
49	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound,  typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound,  typeVarAssigns);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound,  typeVarAssigns);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    bound);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	4	None	replace
50	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  toGenericArrayType,  typeVarAssigns,  toComponentType);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,GenericArrayType,Map<TypeVariable<?>,Type>,Type)  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  toGenericArrayType,  typeVarAssigns,  toComponentType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  toGenericArrayType,  typeVarAssigns,  toComponentType);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType,    toComponentType);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,GenericArrayType,Map<TypeVariable<?>,Type>,Type)	45	None	replace
51	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toComponentType,  toComponentType);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Type,Type)  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toComponentType,  toComponentType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toComponentType,  toComponentType);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType,    toComponentType);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Type,Type)	45	None	replace
52	[BUG]  [BUGGY]  return  isAssignable(type,((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  toComponentType);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>,GenericArrayType,Type)  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  toComponentType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  toComponentType);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType,    toComponentType);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>,GenericArrayType,Type)	45	None	replace
53	[BUG]  [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds(type,(GenericArrayType)toGenericArrayType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds(type,(GenericArrayType)toGenericArrayType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  toGenericArrayType  =  getImplicitUpperBounds(type,(GenericArrayType)toGenericArrayType);	  Class    <?>    toGenericArrayType    =    getImplicitUpperBounds(type,(    GenericArrayType)type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	14	None	replace
54	[BUG]  [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitLowerBounds(type,(GenericArrayType)type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitLowerBounds(type,(GenericArrayType)type);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  toGenericArrayType  =  getImplicitLowerBounds(type,(GenericArrayType)type);	  Class    <?>    toGenericArrayType    =    getImplicitUpperBounds(type,(    GenericArrayType)type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	14	None	replace
55	[BUG]  [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  typeVarAssigns);  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  typeVarAssigns);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  typeVarAssigns);	  Type    toComponentType    =    getImplicitUpperBounds((    GenericArrayType)type,    typeVarAssigns);    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	80	None	replace
56	[BUG]  [BUGGY]  return  isAssignable(type.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type.getComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(toComponentType.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
57	[BUG]  [BUGGY]  return  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);	  return    isAssignable(toComponentType.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
58	[BUG]  [BUGGY]  return  toComponentType.getComponentType(),  isAssignable(type.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  toComponentType.getComponentType(),  isAssignable(type.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  toComponentType.getComponentType(),  isAssignable(type.getComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(toComponentType.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  ';'  expected	32	None	replace
59	[BUG]  [BUGGY]  Type  toGenericArrayType  =(type  instanceof  GenericArrayType)?((  GenericArrayType)type).getGenericComponentType()  :  typeVarAssigns;  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =(type  instanceof  GenericArrayType)?((  GenericArrayType)type).getGenericComponentType()  :  typeVarAssigns;  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =(type  instanceof  GenericArrayType)?((  GenericArrayType)type).getGenericComponentType()  :  typeVarAssigns;	  Type    toGenericArrayType    =(type    instanceof    GenericArrayType)?((    GenericArrayType)type).getGenericComponentType()    :    type;    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	64	None	replace
60	[BUG]  [BUGGY]  Type  toGenericArrayType  =(type  instanceof  GenericArrayType)?((  GenericArrayType)type).getGenericComponentType()  :  toComponentType;  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =(type  instanceof  GenericArrayType)?((  GenericArrayType)type).getGenericComponentType()  :  toComponentType;  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =(type  instanceof  GenericArrayType)?((  GenericArrayType)type).getGenericComponentType()  :  toComponentType;	  Type    toGenericArrayType    =(type    instanceof    GenericArrayType)?((    GenericArrayType)type).getGenericComponentType()    :    type;    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	64	None	replace
61	[BUG]  [BUGGY]  Type  toGenericArrayType  =(type  instanceof  GenericArrayType)?((  GenericArrayType)type).getGenericComponentType()  :  type.toGenericArrayType;  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =(type  instanceof  GenericArrayType)?((  GenericArrayType)type).getGenericComponentType()  :  type.toGenericArrayType;  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =(type  instanceof  GenericArrayType)?((  GenericArrayType)type).getGenericComponentType()  :  type.toGenericArrayType;	  Type    toGenericArrayType    =(type    instanceof    GenericArrayType)?((    GenericArrayType)type).getGenericComponentType()    :    type;    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	64	None	replace
62	[BUG]  [BUGGY]  Return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    types);    	non-compiled	[CE]  ';'  expected	55	None	replace
63	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  null);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	add	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  null);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    types);    	compilable	  [FE]  AssertionError  	55	2	replace
64	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  null);  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  null);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  null);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    types);    	compilable	  [FE]  AssertionError  	55	2	replace
65	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toComponentType,  this);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toComponentType,  this);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toComponentType,  this);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    bound,    this);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	27	None	replace
66	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  map,  this);  [CE]  cannot  find  symbol  map  [FE]                    AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  map,  this);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  map,  this);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    bound,    this);    	non-compiled	[CE]  cannot  find  symbol  map	27	None	replace
67	[BUG]  [BUGGY]  return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>,GenericArrayType)  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);	  return    isAssignable(cls,((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>,GenericArrayType)	52	None	replace
68	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(type,(GenericArrayType)type).getGenericComponentType(),  toComponentType;  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(type,(GenericArrayType)type).getGenericComponentType(),  toComponentType;  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(type,(GenericArrayType)type).getGenericComponentType(),  toComponentType;	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds(type,(    GenericArrayType)type).getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	54	None	replace
69	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(type,(GenericArrayType)type).getGenericComponentType(),  toComponentType);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(type,(GenericArrayType)type).getGenericComponentType(),  toComponentType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(type,(GenericArrayType)type).getGenericComponentType(),  toComponentType);	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds(type,(    GenericArrayType)type).getGenericComponentType();    	non-compiled	[CE]  ';'  expected	54	None	replace
70	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitLowerBounds(type,(GenericArrayType)type).getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                          AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitLowerBounds(type,(GenericArrayType)type).getGenericComponentType();  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitLowerBounds(type,(GenericArrayType)type).getGenericComponentType();	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds(type,(    GenericArrayType)type).getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	54	None	replace
71	[BUG]  [BUGGY]  return  isAssignable(toComponentType.getComponentType(),  type,  typeVarAssigns,  toGenericArrayType);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(toComponentType.getComponentType(),  type,  typeVarAssigns,  toGenericArrayType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(toComponentType.getComponentType(),  type,  typeVarAssigns,  toGenericArrayType);	  return    isAssignable(((GenericArrayType)type).getComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
72	[BUG]  [BUGGY]  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [CE]  cannot  find  symbol  cls  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);	  return    isAssignable(((GenericArrayType)type).getComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType);    	non-compiled	[CE]  cannot  find  symbol  cls	31	None	replace
73	[BUG]  [BUGGY]  return  isAssignable(type,  toComponentType,  cls.getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  cls  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,  toComponentType,  cls.getGenericComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,  toComponentType,  cls.getGenericComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(type,    toComponentType,((    GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  cls	58	None	replace
74	[BUG]  [BUGGY]  return  isAssignable(toComponentType,  type,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Type,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(toComponentType,  type,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(toComponentType,  type,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(type,    toComponentType,((    GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Type,Map<TypeVariable<?>,Type>)	58	None	replace
75	[BUG]  [BUGGY]  return  isAssignable(type,  toComponentType,  toGenericArrayType,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,GenericArrayType,Type,Type,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,  toComponentType,  toGenericArrayType,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,  toComponentType,  toGenericArrayType,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(type,    toComponentType,((    GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,GenericArrayType,Type,Type,Map<TypeVariable<?>,Type>)	58	None	replace
76	[BUG]  [BUGGY]  return  isAssignable(type,  toComponentType,  toGenericArrayType.getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Type,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,  toComponentType,  toGenericArrayType.getGenericComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,  toComponentType,  toGenericArrayType.getGenericComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(type,    toComponentType,((    GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Type,Map<TypeVariable<?>,Type>)	58	None	replace
77	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toComponentType,  null);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Type,<null>)  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toComponentType,  null);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toComponentType,  null);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    bound,    null);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Type,<null>)	28	None	replace
78	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  map,  null);  [CE]  cannot  find  symbol  map  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  map,  null);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  map,  null);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    bound,    null);    	non-compiled	[CE]  cannot  find  symbol  map	28	None	replace
79	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null,  toComponentType);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,<null>,Type)  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null,  toComponentType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null,  toComponentType);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    bound,    null);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,<null>,Type)	28	None	replace
80	[BUG]  [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound,  toGenericArrayType);  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound,  toGenericArrayType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound,  toGenericArrayType);	  Type    toComponentType    =    getImplicitUpperBounds((    GenericArrayType)type,    bound);    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	43	None	replace
81	[BUG]  [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound,  typeVarAssigns);  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound,  typeVarAssigns);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound,  typeVarAssigns);	  Type    toComponentType    =    getImplicitUpperBounds((    GenericArrayType)type,    bound);    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	43	None	replace
82	[BUG]  [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound,  cls);  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound,  cls);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound,  cls);	  Type    toComponentType    =    getImplicitUpperBounds((    GenericArrayType)type,    bound);    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	43	None	replace
83	[BUG]  [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound,  type);  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                        AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound,  type);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound,  type);	  Type    toComponentType    =    getImplicitUpperBounds((    GenericArrayType)type,    bound);    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	43	None	replace
84	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds(type,(GenericArrayType)type).getGenericComponentType(),  toComponentType;  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds(type,(GenericArrayType)type).getGenericComponentType(),  toComponentType;  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds(type,(GenericArrayType)type).getGenericComponentType(),  toComponentType;	  Type    toGenericArrayType    =    getImplicitUpperBounds(type,(    GenericArrayType)type).getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	57	None	replace
85	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds(type,(GenericArrayType)type).getGenericComponentType(),  toComponentType);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds(type,(GenericArrayType)type).getGenericComponentType(),  toComponentType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds(type,(GenericArrayType)type).getGenericComponentType(),  toComponentType);	  Type    toGenericArrayType    =    getImplicitUpperBounds(type,(    GenericArrayType)type).getGenericComponentType();    	non-compiled	[CE]  ';'  expected	57	None	replace
86	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  typeVarAssigns);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  typeVarAssigns);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    toComponentType);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	2	None	replace
87	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  cls);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  cls);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  cls);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    toComponentType);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	2	None	replace
88	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  bound);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  bound);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  bound);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    toComponentType);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	2	None	replace
89	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  null,  typeVarAssigns,  toGenericArrayType);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,<null>,Map<TypeVariable<?>,Type>,GenericArrayType)  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  null,  typeVarAssigns,  toGenericArrayType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  null,  typeVarAssigns,  toGenericArrayType);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    this.typeVarAssigns,    toGenericArrayType);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,<null>,Map<TypeVariable<?>,Type>,GenericArrayType)	39	None	replace
90	[BUG]  [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls,  toGenericArrayType);  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls,  toGenericArrayType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls,  toGenericArrayType);	  Type    toComponentType    =    getImplicitUpperBounds((    GenericArrayType)type,    cls);    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	42	None	replace
91	[BUG]  [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls,  typeVarAssigns);  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls,  typeVarAssigns);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls,  typeVarAssigns);	  Type    toComponentType    =    getImplicitUpperBounds((    GenericArrayType)type,    cls);    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	42	None	replace
92	[BUG]  [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  type);  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  type);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  type);	  Type    toComponentType    =    getImplicitUpperBounds((    GenericArrayType)type,    cls);    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	42	None	replace
93	[BUG]  [BUGGY]  Type  toGenericArrayType  =((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);	  Type    toGenericArrayType    =((    GenericArrayType)type).getGenericComponentType(),    toComponentType;    	non-compiled	[CE]  ';'  expected	34	None	replace
94	[BUG]  [BUGGY]  Type  toGenericArrayType  =((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns;  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns;  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns;	  Type    toGenericArrayType    =((    GenericArrayType)type).getGenericComponentType(),    toComponentType;    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	34	None	replace
95	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  fromComponentType,  toGenericArrayType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  fromComponentType,  toGenericArrayType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  fromComponentType,  toGenericArrayType);	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    fromComponentType);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	60	None	replace
96	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  typeVarAssigns);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  typeVarAssigns);	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    fromComponentType);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	60	None	replace
97	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  fromComponentType,  typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  fromComponentType,  typeVarAssigns);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  fromComponentType,  typeVarAssigns);	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    fromComponentType);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	60	None	replace
98	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =(GenericArrayType)type.getGenericComponentType(),  toComponentType;  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =(GenericArrayType)type.getGenericComponentType(),  toComponentType;  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =(GenericArrayType)type.getGenericComponentType(),  toComponentType;	  GenericArrayType    toGenericArrayType    =(GenericArrayType)type.getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	23	None	replace
99	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(type,  toComponentType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(type,  toComponentType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(type,  toComponentType);	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds(type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	74	None	replace
100	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(type,  cls);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(type,  cls);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(type,  cls);	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds(type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	74	None	replace
101	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitLowerBounds(type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitLowerBounds(type);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitLowerBounds(type);	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds(type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	74	None	replace
102	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitLowerBounds(type,(GenericArrayType)type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitLowerBounds(type,(GenericArrayType)type);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitLowerBounds(type,(GenericArrayType)type);	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds(type,(GenericArrayType)type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	12	None	replace
103	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(type,(GenericArrayType)toGenericArrayType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(type,(GenericArrayType)toGenericArrayType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(type,(GenericArrayType)toGenericArrayType);	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds(type,(GenericArrayType)type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	12	None	replace
104	[BUG]  [BUGGY]  return  isAssignable(toComponentType.getComponentType(),  toComponentType,  typesVarAssigns);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(toComponentType.getComponentType(),  toComponentType,  typesVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(toComponentType.getComponentType(),  toComponentType,  typesVarAssigns);	  return    isAssignable(((GenericArrayType)type).getComponentType(),    toComponentType,    typesVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
105	[BUG]  [BUGGY]  return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);  return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);  return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return    isAssignable(toComponentType,((    GenericArrayType)type).getGenericComponentType(),    typeVarAssigns);    return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);	  	non-compiled	[CE]  unreachable  statement	6	None	add
106	[BUG]  [BUGGY]  return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);  Class  <?>  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType();  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);  Class  <?>  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType();  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return    isAssignable(toComponentType,((    GenericArrayType)type).getGenericComponentType(),    typeVarAssigns);    Class  <?>  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType();	  	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	6	None	add
107	[BUG]  [BUGGY]  return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);  Class  <?>  toComponentType  =((  GenericArrayType)type).getGenericComponentType();  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);  Class  <?>  toComponentType  =((  GenericArrayType)type).getGenericComponentType();  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return    isAssignable(toComponentType,((    GenericArrayType)type).getGenericComponentType(),    typeVarAssigns);    Class  <?>  toComponentType  =((  GenericArrayType)type).getGenericComponentType();	  	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	6	None	add
108	[BUG]  [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  cls);  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  cls);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  cls);	  Type    toComponentType    =    getImplicitUpperBounds((    GenericArrayType)type,    toComponentType);    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	65	None	replace
109	[BUG]  [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  bound);  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  bound);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  bound);	  Type    toComponentType    =    getImplicitUpperBounds((    GenericArrayType)type,    toComponentType);    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	65	None	replace
110	[BUG]  [BUGGY]  Type  toGenericArrayType  =((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  null);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  null);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  null);	  Type    toGenericArrayType    =((    GenericArrayType)type).getGenericComponentType(),    toComponentType);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
111	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  hashCode,  toGenericArrayType);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  hashCode,  toGenericArrayType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  hashCode,  toGenericArrayType);	  return    isAssignable(((GenericArrayType)type).getComponentType(),    toComponentType,    typeVarAssigns,    hashCode);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
112	[BUG]  [BUGGY]  return  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns,  hashCode);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns,  hashCode);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(toComponentType.getComponentType(),  toComponentType,  typeVarAssigns,  hashCode);	  return    isAssignable(((GenericArrayType)type).getComponentType(),    toComponentType,    typeVarAssigns,    hashCode);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
113	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  bound,  hashCode);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  bound,  hashCode);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  bound,  hashCode);	  return    isAssignable(((GenericArrayType)type).getComponentType(),    toComponentType,    typeVarAssigns,    hashCode);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
114	[BUG]  [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound,  toComponentType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound,  toComponentType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound,  toComponentType);	  Class    <?>    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    bound);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	15	None	replace
115	[BUG]  [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound,  toGenericArrayType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound,  toGenericArrayType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound,  toGenericArrayType);	  Class    <?>    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    bound);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	15	None	replace
116	[BUG]  [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound,  typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound,  typeVarAssigns);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound,  typeVarAssigns);	  Class    <?>    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    bound);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	15	None	replace
117	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type).getGenericComponentType(),    typeVarAssigns);    	non-compiled	[CE]  ';'  expected	19	None	replace
118	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitLowerBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitLowerBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitLowerBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type).getGenericComponentType(),    typeVarAssigns);    	non-compiled	[CE]  ';'  expected	19	None	replace
119	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls,  toComponentType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls,  toComponentType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls,  toComponentType);	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    cls);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	11	None	replace
120	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls,  toGenericArrayType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls,  toGenericArrayType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls,  toGenericArrayType);	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    cls);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	11	None	replace
121	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toGenericArrayType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toGenericArrayType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toGenericArrayType);	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    cls);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	11	None	replace
122	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  toGenericArrayType);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  toGenericArrayType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  toGenericArrayType);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type).getGenericComponentType(),    toComponentType);    	non-compiled	[CE]  ';'  expected	18	None	replace
123	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  bound);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  bound);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  bound);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type).getGenericComponentType(),    toComponentType);    	non-compiled	[CE]  ';'  expected	18	None	replace
124	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns;  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns;  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns;	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type).getGenericComponentType(),    toComponentType;    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	36	None	replace
125	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns,  toComponentType;  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns,  toComponentType;  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns,  toComponentType;	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type).getGenericComponentType(),    toComponentType;    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	36	None	replace
126	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  typeVarAssigns);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  typeVarAssigns);	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    toComponentType);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	10	None	replace
127	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  cls);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  cls);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  cls);	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    toComponentType);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	10	None	replace
128	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  bound);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  bound);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  bound);	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    toComponentType);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	10	None	replace
129	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toComponentType);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Type)  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toComponentType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toComponentType);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    bound);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Type)	25	None	replace
130	[BUG]  [BUGGY]  return  isAssignable(type,  toComponentType,  toGenericArrayType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,GenericArrayType,Type,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,  toComponentType,  toGenericArrayType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,  toComponentType,  toGenericArrayType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);	  return    isAssignable(type,    toComponentType,((    GenericArrayType)type).getGenericComponentType(),    typeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,GenericArrayType,Type,Map<TypeVariable<?>,Type>)	5	None	replace
131	[BUG]  [BUGGY]  return  isAssignable(type,  toComponentType,  cls.getGenericComponentType(),  typeVarAssigns);  [CE]  cannot  find  symbol  cls  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,  toComponentType,  cls.getGenericComponentType(),  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,  toComponentType,  cls.getGenericComponentType(),  typeVarAssigns);	  return    isAssignable(type,    toComponentType,((    GenericArrayType)type).getGenericComponentType(),    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  cls	5	None	replace
132	[BUG]  [BUGGY]  return  isAssignable(toComponentType,  type,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(toComponentType,  type,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(toComponentType,  type,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);	  return    isAssignable(type,    toComponentType,((    GenericArrayType)type).getGenericComponentType(),    typeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>)	5	None	replace
133	[BUG]  [BUGGY]  return  isAssignable(type,  toComponentType,  typeVarAssigns,((  GenericArrayType)type).getGenericComponentType(),  toComponentType);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Type,Type)  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,  toComponentType,  typeVarAssigns,((  GenericArrayType)type).getGenericComponentType(),  toComponentType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,  toComponentType,  typeVarAssigns,((  GenericArrayType)type).getGenericComponentType(),  toComponentType);	  return    isAssignable(type,    toComponentType,((    GenericArrayType)type).getGenericComponentType(),    typeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Type,Type)	5	None	replace
134	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =(GenericArrayType)type.getGenericArrayType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =(GenericArrayType)type.getGenericArrayType();  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =(GenericArrayType)type.getGenericArrayType();	  GenericArrayType    toGenericArrayType    =(GenericArrayType)type.toArray();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	73	None	replace
135	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType()  :  null;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType()  :  null;  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType()  :  null;	  Type    toGenericArrayType    =    type    instanceof    GenericArrayType?((    GenericArrayType)type).getGenericComponentType()    :    null;    	non-compiled	[CE]  ';'  expected	67	None	replace
136	[BUG]  [BUGGY]  return  isAssignable(type,  toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns,  null);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>,<null>)  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,  toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns,  null);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,  toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns,  null);	  return    isAssignable(type,((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    null);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>,<null>)	48	None	replace
137	[BUG]  [BUGGY]  return  isAssignable(type,  toComponentType.getGenericComponentType(),  typeVarAssigns,  null);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,  toComponentType.getGenericComponentType(),  typeVarAssigns,  null);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,  toComponentType.getGenericComponentType(),  typeVarAssigns,  null);	  return    isAssignable(type,((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    null);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
138	[BUG]  [BUGGY]  return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns,  null);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,<null>)  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns,  null);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns,  null);	  return    isAssignable(type,((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    null);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,<null>)	48	None	replace
139	[BUG]  [BUGGY]  return  isAssignable(type,  cls.getGenericComponentType(),  toComponentType,  typeVarAssigns,  null);  [CE]  cannot  find  symbol  cls  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,  cls.getGenericComponentType(),  toComponentType,  typeVarAssigns,  null);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,  cls.getGenericComponentType(),  toComponentType,  typeVarAssigns,  null);	  return    isAssignable(type,((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    null);    	non-compiled	[CE]  cannot  find  symbol  cls	48	None	replace
140	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds(toGenericArrayType,  toComponentType);  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds(toGenericArrayType,  toComponentType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  typeVarAssigns  =  getImplicitUpperBounds(toGenericArrayType,  toComponentType);	  Class    <?>    typeVarAssigns    =    getImplicitUpperBounds(toGenericArrayType,(GenericArrayType)type);    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	22	None	replace
141	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds(type,(GenericArrayType)toGenericArrayType);  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds(type,(GenericArrayType)toGenericArrayType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  typeVarAssigns  =  getImplicitUpperBounds(type,(GenericArrayType)toGenericArrayType);	  Class    <?>    typeVarAssigns    =    getImplicitUpperBounds(toGenericArrayType,(GenericArrayType)type);    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	22	None	replace
142	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds(toGenericArrayType,  toComponentType,(GenericArrayType)type);  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds(toGenericArrayType,  toComponentType,(GenericArrayType)type);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  typeVarAssigns  =  getImplicitUpperBounds(toGenericArrayType,  toComponentType,(GenericArrayType)type);	  Class    <?>    typeVarAssigns    =    getImplicitUpperBounds(toGenericArrayType,(GenericArrayType)type);    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	22	None	replace
143	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds(toComponentType,(GenericArrayType)type);  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds(toComponentType,(GenericArrayType)type);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  typeVarAssigns  =  getImplicitUpperBounds(toComponentType,(GenericArrayType)type);	  Class    <?>    typeVarAssigns    =    getImplicitUpperBounds(type,(    GenericArrayType)type);    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	77	None	replace
144	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds(type,  toComponentType,(GenericArrayType)type);  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds(type,  toComponentType,(GenericArrayType)type);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  typeVarAssigns  =  getImplicitUpperBounds(type,  toComponentType,(GenericArrayType)type);	  Class    <?>    typeVarAssigns    =    getImplicitUpperBounds(type,(    GenericArrayType)type);    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	77	None	replace
145	[BUG]  [BUGGY]  return  isAssignable(toComponentType,  toGenericArrayType.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(toComponentType,  toGenericArrayType.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(toComponentType,  toGenericArrayType.getComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(toComponentType,((GenericArrayType)type).getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
146	[BUG]  [BUGGY]  return  isAssignable(cls,((  GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  cls  [FE]                    AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(cls,((  GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(cls,((  GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(toComponentType,((GenericArrayType)type).getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  cls	33	None	replace
147	[BUG]  [BUGGY]  return  isAssignable(toComponentType,((  GenericArrayType)type).getComponentType(),  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(toComponentType,((  GenericArrayType)type).getComponentType(),  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(toComponentType,((  GenericArrayType)type).getComponentType(),  typeVarAssigns);	  return    isAssignable(type,((GenericArrayType)type).getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
148	[BUG]  [BUGGY]  return  isAssignable(type,  toComponentType.getComponentType(),  typeVarAssigns,((  GenericArrayType)type).getComponentType());  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,  toComponentType.getComponentType(),  typeVarAssigns,((  GenericArrayType)type).getComponentType());  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,  toComponentType.getComponentType(),  typeVarAssigns,((  GenericArrayType)type).getComponentType());	  return    isAssignable(type,((GenericArrayType)type).getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
149	[BUG]  [BUGGY]  return  isAssignable(type,  toComponentType.getComponentType(),  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,  toComponentType.getComponentType(),  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,  toComponentType.getComponentType(),  typeVarAssigns);	  return    isAssignable(type,((GenericArrayType)type).getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
150	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType).getGenericComponentType(),  typeVarAssigns);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType).getGenericComponentType(),  typeVarAssigns);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType).getGenericComponentType(),  typeVarAssigns);	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    toComponentType).getGenericComponentType();    	non-compiled	[CE]  ';'  expected	53	None	replace
151	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType).getGenericComponentType(),  toComponentType;  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType).getGenericComponentType(),  toComponentType;  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType).getGenericComponentType(),  toComponentType;	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    toComponentType).getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	53	None	replace
152	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  typeVarAssigns).getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                        AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  typeVarAssigns).getGenericComponentType();  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  typeVarAssigns).getGenericComponentType();	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    toComponentType).getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	53	None	replace
153	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  this);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  this);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  this);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType,    bound);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	44	None	replace
154	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type),  toComponentType,  typeVarAssigns);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type),  toComponentType,  typeVarAssigns);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type),  toComponentType,  typeVarAssigns);	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type),    toComponentType);    	non-compiled	[CE]  ';'  expected	70	None	replace
155	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type),  toComponentType,  cls);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type),  toComponentType,  cls);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type),  toComponentType,  cls);	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type),    toComponentType);    	non-compiled	[CE]  ';'  expected	70	None	replace
156	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns;  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns;  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns;	  Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type).getGenericComponentType(),    toComponentType;    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	17	None	replace
157	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  null;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  null;  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  null;	  Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type).getGenericComponentType(),    toComponentType;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
158	[BUG]  [BUGGY]  return  isAssignable(type,  toComponentType.getGenericComponentType(),  typeVarAssigns,  toComponentType);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,  toComponentType.getGenericComponentType(),  typeVarAssigns,  toComponentType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,  toComponentType.getGenericComponentType(),  typeVarAssigns,  toComponentType);	  return    isAssignable(type,((    GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    toComponentType);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
159	[BUG]  [BUGGY]  return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns,  toComponentType);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Type)  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns,  toComponentType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns,  toComponentType);	  return    isAssignable(type,((    GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    toComponentType);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Type)	69	None	replace
160	[BUG]  [BUGGY]  return  isAssignable(type,  toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns,  toComponentType);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>,Type)  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,  toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns,  toComponentType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,  toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns,  toComponentType);	  return    isAssignable(type,((    GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    toComponentType);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>,Type)	69	None	replace
161	[BUG]  [BUGGY]  return  isAssignable(type,  toComponentType,  getGenericComponentType(),  typeVarAssigns,  toComponentType);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,  toComponentType,  getGenericComponentType(),  typeVarAssigns,  toComponentType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,  toComponentType,  getGenericComponentType(),  typeVarAssigns,  toComponentType);	  return    isAssignable(type,((    GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    toComponentType);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
162	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds(type,(GenericArrayType)type,  toComponentType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds(type,(GenericArrayType)type,  toComponentType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds(type,(GenericArrayType)type,  toComponentType);	  Type    toGenericArrayType    =    getImplicitUpperBounds(type,(    GenericArrayType)type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	49	None	replace
163	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds(type,(GenericArrayType)typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds(type,(GenericArrayType)typeVarAssigns);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds(type,(GenericArrayType)typeVarAssigns);	  Type    toGenericArrayType    =    getImplicitUpperBounds(type,(    GenericArrayType)type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	49	None	replace
164	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type,  toGenericArrayType,  toComponentType);  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type,  toGenericArrayType,  toComponentType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type,  toGenericArrayType,  toComponentType);	  Class    <?>    typeVarAssigns    =    getImplicitUpperBounds((    GenericArrayType)type,    toGenericArrayType);    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	21	None	replace
165	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls,  toComponentType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls,  toComponentType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls,  toComponentType);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    cls);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	3	None	replace
166	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls,  toGenericArrayType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls,  toGenericArrayType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls,  toGenericArrayType);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    cls);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	3	None	replace
167	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  type);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  type);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    cls);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	3	None	replace
168	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type);  return  isAssignable(toGenericArrayType,  typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type);  return  isAssignable(toGenericArrayType,  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type);  return  isAssignable(toGenericArrayType,  typeVarAssigns);	          Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type);    return    isAssignable(toGenericArrayType,    toGenericArrayType);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	16	None	replace
169	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type);  return  isAssignable(toGenericArrayType,  toGenericArrayType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type);  return  isAssignable(toGenericArrayType,  toGenericArrayType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type);  return  isAssignable(toGenericArrayType,  toGenericArrayType);	          Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type);    return    isAssignable(toGenericArrayType,    toGenericArrayType);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	16	None	replace
170	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  bound,  toGenericArrayType);  [CE]  cannot  find  symbol  bound  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  bound,  toGenericArrayType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  bound,  toGenericArrayType);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    null,    toGenericArrayType);    	non-compiled	[CE]  cannot  find  symbol  bound	29	None	replace
171	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null,  toGenericArrayType,  toGenericBounds);  [CE]  cannot  find  symbol  toGenericBounds  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null,  toGenericArrayType,  toGenericBounds);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null,  toGenericArrayType,  toGenericBounds);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    null,    toGenericArrayType);    	non-compiled	[CE]  cannot  find  symbol  toGenericBounds	29	None	replace
172	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null,  toGenericArrayType,  toGenericLocation);  [CE]  cannot  find  symbol  toGenericLocation  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null,  toGenericArrayType,  toGenericLocation);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null,  toGenericArrayType,  toGenericLocation);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    null,    toGenericArrayType);    	non-compiled	[CE]  cannot  find  symbol  toGenericLocation	29	None	replace
173	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null,  toGenericArrayType,  toGenericDescriptor);  [CE]  cannot  find  symbol  toGenericDescriptor  [FE]                    AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null,  toGenericArrayType,  toGenericDescriptor);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null,  toGenericArrayType,  toGenericDescriptor);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    null,    toGenericArrayType);    	non-compiled	[CE]  cannot  find  symbol  toGenericDescriptor	29	None	replace
174	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  toGenericBounds);  [CE]  cannot  find  symbol  toGenericBounds  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  toGenericBounds);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  toGenericBounds);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType,    bounds);    	non-compiled	[CE]  cannot  find  symbol  toGenericBounds	68	None	replace
175	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =(GenericArrayType)type.cloneTree();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =(GenericArrayType)type.cloneTree();  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =(GenericArrayType)type.cloneTree();	  GenericArrayType    toGenericArrayType    =(GenericArrayType)type.clone();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	24	None	replace
176	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =(GenericArrayType)type.clone()  :  null;  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =(GenericArrayType)type.clone()  :  null;  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =(GenericArrayType)type.clone()  :  null;	  GenericArrayType    toGenericArrayType    =(GenericArrayType)type.clone();    	non-compiled	[CE]  ';'  expected	24	None	replace
177	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toGenericArrayType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toGenericArrayType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toGenericArrayType);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    typeVarAssigns);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	79	None	replace
178	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  typeVarAssigns,  toComponentType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  typeVarAssigns,  toComponentType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  typeVarAssigns,  toComponentType);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    typeVarAssigns);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	79	None	replace
179	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  toGenericArrayType);  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  toGenericArrayType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  toGenericArrayType);	  Class    <?>    typeVarAssigns    =    getImplicitUpperBounds((    GenericArrayType)type,    toComponentType);    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	20	None	replace
180	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  toGenericParameterType);  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  toGenericParameterType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  toGenericParameterType);	  Class    <?>    typeVarAssigns    =    getImplicitUpperBounds((    GenericArrayType)type,    toComponentType);    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	20	None	replace
181	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  toGenericObjectType);  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  toGenericObjectType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  toGenericObjectType);	  Class    <?>    typeVarAssigns    =    getImplicitUpperBounds((    GenericArrayType)type,    toComponentType);    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	20	None	replace
182	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(toComponentType,(GenericArrayType)type).getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(toComponentType,(GenericArrayType)type).getGenericComponentType();  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(toComponentType,(GenericArrayType)type).getGenericComponentType();	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds(type,(    GenericArrayType)type).getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	54	None	replace
183	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType).getGenericParameterType(0);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType).getGenericParameterType(0);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType).getGenericParameterType(0);	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    toComponentType).getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	53	None	replace
184	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType).getGenericVarAssigns();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType).getGenericVarAssigns();  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType).getGenericVarAssigns();	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    toComponentType).getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	53	None	replace
185	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(type,  toComponentType).getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                        AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(type,  toComponentType).getGenericComponentType();  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(type,  toComponentType).getGenericComponentType();	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    toComponentType).getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	53	None	replace
186	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =(GenericArrayType)type.getGenericParameterType(0);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =(GenericArrayType)type.getGenericParameterType(0);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =(GenericArrayType)type.getGenericParameterType(0);	  GenericArrayType    toGenericArrayType    =(GenericArrayType)type.getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	23	None	replace
187	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =(GenericArrayType)type.getGenericComponentType(0);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =(GenericArrayType)type.getGenericComponentType(0);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =(GenericArrayType)type.getGenericComponentType(0);	  GenericArrayType    toGenericArrayType    =(GenericArrayType)type.getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	23	None	replace
188	[BUG]  [BUGGY]  return  isAssignable(type,  type.getGenericComponentType(),  toComponentType,  typeVarAssigns,((  GenericArrayType)type).getGenericComponentType());  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,  type.getGenericComponentType(),  toComponentType,  typeVarAssigns,((  GenericArrayType)type).getGenericComponentType());  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,  type.getGenericComponentType(),  toComponentType,  typeVarAssigns,((  GenericArrayType)type).getGenericComponentType());	  return    isAssignable(type,    toComponentType.getGenericComponentType(),    typeVarAssigns,((    GenericArrayType)type).getGenericComponentType());    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
189	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type),  toComponentType,  toGenericArrayType);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type),  toComponentType,  toGenericArrayType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type),  toComponentType,  toGenericArrayType);	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type),    toComponentType);    	non-compiled	[CE]  ';'  expected	70	None	replace
190	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  fromComponentType,  toComponentType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  fromComponentType,  toComponentType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  fromComponentType,  toComponentType);	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    fromComponentType);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	60	None	replace
191	[BUG]  [BUGGY]  return  isAssignable(toGenericArrayType,((  GenericArrayType)type).getGenericComponentType(),  toComponentType);  [CE]  no  suitable  method  found  for  isAssignable(GenericArrayType,Type,Type)  [FE]    AssertionError    [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(toGenericArrayType,((  GenericArrayType)type).getGenericComponentType(),  toComponentType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(toGenericArrayType,((  GenericArrayType)type).getGenericComponentType(),  toComponentType);	  return    isAssignable(toComponentType,((    GenericArrayType)type).getGenericComponentType(),    typeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(GenericArrayType,Type,Type)	7	None	replace
192	[BUG]  [BUGGY]  return  isAssignable(toGenericArrayType,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CE]  no  suitable  method  found  for  isAssignable(GenericArrayType,Type,Type,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(toGenericArrayType,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(toGenericArrayType,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(toComponentType,((    GenericArrayType)type).getGenericComponentType(),    typeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(GenericArrayType,Type,Type,Map<TypeVariable<?>,Type>)	7	None	replace
193	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null,  this);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null,  this);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null,  this);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    bound,    this);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	27	None	replace
194	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  null);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,GenericArrayType,<null>)  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  null);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  null);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType,    bounds);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,GenericArrayType,<null>)	68	None	replace
195	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  this.bounds);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  this.bounds);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  this.bounds);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType,    bounds);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	68	None	replace
196	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =(GenericArrayType)type.getParameterType(0);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =(GenericArrayType)type.getParameterType(0);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =(GenericArrayType)type.getParameterType(0);	  GenericArrayType    toGenericArrayType    =(GenericArrayType)type.getRawClass();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	62	None	replace
197	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =(GenericArrayType)type.getDeclaredType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =(GenericArrayType)type.getDeclaredType();  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =(GenericArrayType)type.getDeclaredType();	  GenericArrayType    toGenericArrayType    =(GenericArrayType)type.getRawClass();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	62	None	replace
198	[BUG]  [BUGGY]  return  isAssignable(type,  toComponentType,((  GenericArrayType)type).getGenericComponentType(),  toGenericArrayType,  typeVarAssigns);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,  toComponentType,((  GenericArrayType)type).getGenericComponentType(),  toGenericArrayType,  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,  toComponentType,((  GenericArrayType)type).getGenericComponentType(),  toGenericArrayType,  typeVarAssigns);	  return    isAssignable(type,    toComponentType,((    GenericArrayType)type).getGenericComponentType(),    typeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,GenericArrayType,Map<TypeVariable<?>,Type>)	5	None	replace
199	[BUG]  [BUGGY]  return  isAssignable(type,  toComponentType,((  GenericArrayType)type).getGenericComponentType(),  toVarAssigns,  typeVarAssigns);  [CE]  cannot  find  symbol  toVarAssigns  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,  toComponentType,((  GenericArrayType)type).getGenericComponentType(),  toVarAssigns,  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,  toComponentType,((  GenericArrayType)type).getGenericComponentType(),  toVarAssigns,  typeVarAssigns);	  return    isAssignable(type,    toComponentType,((    GenericArrayType)type).getGenericComponentType(),    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  toVarAssigns	5	None	replace
200	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typesVarAssigns,  hashCode);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typesVarAssigns,  hashCode);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typesVarAssigns,  hashCode);	  return    isAssignable(((GenericArrayType)type).getComponentType(),    toComponentType,    typeVarAssigns,    hashCode);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
201	[BUG]  [BUGGY]  return  isAssignable(type,  toGenericArrayType,((  GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,  toGenericArrayType,((  GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,  toGenericArrayType,((  GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(type,((GenericArrayType)type).getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
202	[BUG]  [BUGGY]  return  isAssignable(toComponentType,((  GenericArrayType)type).getComponentType(),  typeVarAssigns,  toGenericArrayType);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(toComponentType,((  GenericArrayType)type).getComponentType(),  typeVarAssigns,  toGenericArrayType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(toComponentType,((  GenericArrayType)type).getComponentType(),  typeVarAssigns,  toGenericArrayType);	  return    isAssignable(type,((GenericArrayType)type).getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
203	[BUG]  [BUGGY]  return  isAssignable(type,  toComponentType,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Type,Map<TypeVariable<?>,Type>,GenericArrayType)  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,  toComponentType,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,  toComponentType,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);	  return    isAssignable(type,    toComponentType,((    GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Type,Map<TypeVariable<?>,Type>,GenericArrayType)	58	None	replace
204	[BUG]  [BUGGY]  return  isAssignable(type,  toComponentType,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  bound);  [CE]  cannot  find  symbol  bound  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,  toComponentType,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  bound);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,  toComponentType,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  bound);	  return    isAssignable(type,    toComponentType,((    GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  bound	58	None	replace
205	[BUG]  [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toGenericArrayType,  typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toGenericArrayType,  typeVarAssigns);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toGenericArrayType,  typeVarAssigns);	  Class    <?>    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    typeVarAssigns);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	75	None	replace
206	[BUG]  [BUGGY]  return  isAssignable(type,  toComponentType.getGenericComponentType(),  toVarAssigns);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,  toComponentType.getGenericComponentType(),  toVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,  toComponentType.getGenericComponentType(),  toVarAssigns);	  return    isAssignable(type,    toComponentType.getGenericComponentType(),    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
207	[BUG]  [BUGGY]  return  isAssignable(type,((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  false);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>,boolean)  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  false);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  false);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    false);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>,boolean)	26	None	replace
208	[BUG]  [BUGGY]  Type  toGenericArrayType  =((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns;  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns;  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns;	  Type    toGenericArrayType    =((    GenericArrayType)type).getGenericComponentType(),    toComponentType;    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	34	None	replace
209	[BUG]  [BUGGY]  Type  toGenericArrayType  =((  GenericArrayType)type).getGenericComponentType(),  toComponentType.restrictByNotNullOrUndefined();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =((  GenericArrayType)type).getGenericComponentType(),  toComponentType.restrictByNotNullOrUndefined();  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =((  GenericArrayType)type).getGenericComponentType(),  toComponentType.restrictByNotNullOrUndefined();	  Type    toGenericArrayType    =((    GenericArrayType)type).getGenericComponentType(),    toComponentType;    	non-compiled	[CE]  ';'  expected	34	None	replace
210	[BUG]  [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  toGenericArrayType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  toGenericArrayType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  toGenericArrayType);	  Class    <?>    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    toComponentType);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	13	None	replace
211	[BUG]  [BUGGY]  return  isAssignable(type,((GenericArrayType)type).getComponentType(),  toComponentType,  typesVarAssigns);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,((GenericArrayType)type).getComponentType(),  toComponentType,  typesVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,((GenericArrayType)type).getComponentType(),  toComponentType,  typesVarAssigns);	  return    isAssignable(((GenericArrayType)type).getComponentType(),    toComponentType,    typesVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
212	[BUG]  [BUGGY]  return  isAssignable(type,  toComponentType,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Type,Map<TypeVariable<?>,Type>,<null>)  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,  toComponentType,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,  toComponentType,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null);	  return    isAssignable(type,((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    null);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Type,Map<TypeVariable<?>,Type>,<null>)	48	None	replace
213	[BUG]  [BUGGY]  return  isAssignable(type,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null,  toGenericArrayType);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>,<null>,GenericArrayType)  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null,  toGenericArrayType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null,  toGenericArrayType);	  return    isAssignable(type,((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    null);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>,<null>,GenericArrayType)	48	None	replace
214	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns,  toComponentType;  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns,  toComponentType;  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns,  toComponentType;	  Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type).getGenericComponentType(),    toComponentType;    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	17	None	replace
215	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds(toComponentType,(GenericArrayType)type).getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds(toComponentType,(GenericArrayType)type).getGenericComponentType();  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds(toComponentType,(GenericArrayType)type).getGenericComponentType();	  Type    toGenericArrayType    =    getImplicitUpperBounds(type,(    GenericArrayType)type).getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	57	None	replace
216	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =(GenericArrayType)type.getRawType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =(GenericArrayType)type.getRawType();  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =(GenericArrayType)type.getRawType();	  GenericArrayType    toGenericArrayType    =(GenericArrayType)type.clone();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	24	None	replace
217	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(type,(GenericArrayType)type.toGenericArrayType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(type,(GenericArrayType)type.toGenericArrayType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(type,(GenericArrayType)type.toGenericArrayType);	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds(type,(GenericArrayType)type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	12	None	replace
218	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(type,(  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(type,(  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(type,(  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type).getGenericComponentType(),    typeVarAssigns);    	non-compiled	[CE]  ';'  expected	38	None	replace
219	[BUG]  [BUGGY]  return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);  Return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);  Return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return    isAssignable(toComponentType,((    GenericArrayType)type).getGenericComponentType(),    typeVarAssigns);    Return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);	  	non-compiled	[CE]  ';'  expected	6	None	add
220	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null,  toGenericArrayType,  bound);  [CE]  cannot  find  symbol  bound  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null,  toGenericArrayType,  bound);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null,  toGenericArrayType,  bound);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    null,    toGenericArrayType);    	non-compiled	[CE]  cannot  find  symbol  bound	29	None	replace
221	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null,  toGenericArrayType,  bounds);  [CE]  cannot  find  symbol  bounds  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null,  toGenericArrayType,  bounds);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null,  toGenericArrayType,  bounds);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    null,    toGenericArrayType);    	non-compiled	[CE]  cannot  find  symbol  bounds	29	None	replace
222	[BUG]  [BUGGY]  return  toComponentType.getComponentType(),  isAssignable(toComponentType,  typeVarAssigns);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  toComponentType.getComponentType(),  isAssignable(toComponentType,  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  toComponentType.getComponentType(),  isAssignable(toComponentType,  typeVarAssigns);	  return    isAssignable(toComponentType.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  ';'  expected	32	None	replace
223	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toGenericArrayType,  typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toGenericArrayType,  typeVarAssigns);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toGenericArrayType,  typeVarAssigns);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    typeVarAssigns);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	79	None	replace
224	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds(type,(GenericArrayType)toGenericArrayType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds(type,(GenericArrayType)toGenericArrayType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds(type,(GenericArrayType)toGenericArrayType);	  Type    toGenericArrayType    =    getImplicitUpperBounds(type,(    GenericArrayType)type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	49	None	replace
225	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds(type,(GenericArrayType)type.toGenericArrayType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds(type,(GenericArrayType)type.toGenericArrayType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds(type,(GenericArrayType)type.toGenericArrayType);	  Type    toGenericArrayType    =    getImplicitUpperBounds(type,(    GenericArrayType)type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	49	None	replace
226	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  this);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  this);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  this);	  return    isAssignable(((GenericArrayType)type).getComponentType(),    toComponentType,    typeVarAssigns,    null);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
227	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  false);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  false);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  false);	  return    isAssignable(((GenericArrayType)type).getComponentType(),    toComponentType,    typeVarAssigns,    null);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
228	[BUG]  [BUGGY]  return  isAssignable(type,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toComponentType,  toGenericArrayType);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>,Type,GenericArrayType)  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toComponentType,  toGenericArrayType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toComponentType,  toGenericArrayType);	  return    isAssignable(type,((    GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    toComponentType);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>,Type,GenericArrayType)	69	None	replace
229	[BUG]  [BUGGY]  return  isAssignable(type,  toComponentType,  getGenericComponentType(),  typeVarAssigns,  type);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,  toComponentType,  getGenericComponentType(),  typeVarAssigns,  type);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,  toComponentType,  getGenericComponentType(),  typeVarAssigns,  type);	  return    isAssignable(type,((    GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    toComponentType);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
230	[BUG]  [BUGGY]  return  isAssignable(type,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toComponentType,  bound);  [CE]  cannot  find  symbol  bound  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toComponentType,  bound);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toComponentType,  bound);	  return    isAssignable(type,((    GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    toComponentType);    	non-compiled	[CE]  cannot  find  symbol  bound	69	None	replace
231	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  bound);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  bound);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  bound);	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type).getGenericComponentType(),    toComponentType);    	non-compiled	[CE]  ';'  expected	37	None	replace
232	[BUG]  [BUGGY]  return  isAssignable(type,((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);	  return    isAssignable(((GenericArrayType)type).getComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
233	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typesVarAssigns,  toGenericArrayType);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typesVarAssigns,  toGenericArrayType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typesVarAssigns,  toGenericArrayType);	  return    isAssignable(((GenericArrayType)type).getComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
234	[BUG]  [BUGGY]  toComponentType,  getImplicitUpperBounds((  GenericArrayType)type);  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  toComponentType,  getImplicitUpperBounds((  GenericArrayType)type);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	toComponentType,  getImplicitUpperBounds((  GenericArrayType)type);	  toComponentType,    typeVarAssigns);    	non-compiled	[CE]  not  a  statement	1	None	replace
235	[BUG]  [BUGGY]  toComponentType,  getImplicitUpperBounds(typeVarAssigns));  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  toComponentType,  getImplicitUpperBounds(typeVarAssigns));  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	toComponentType,  getImplicitUpperBounds(typeVarAssigns));	  toComponentType,    typeVarAssigns);    	non-compiled	[CE]  not  a  statement	1	None	replace
236	[BUG]  [BUGGY]  return  isAssignable(toComponentType,  toGenericArrayType,((  GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(toComponentType,  toGenericArrayType,((  GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(toComponentType,  toGenericArrayType,((  GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(toComponentType,((GenericArrayType)type).getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
237	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds(type,(  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds(type,(  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds(type,(  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type).getGenericComponentType(),    typeVarAssigns);    	non-compiled	[CE]  ';'  expected	19	None	replace
238	[BUG]  [BUGGY]  return  isAssignable(bound,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [CE]  cannot  find  symbol  bound  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(bound,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(bound,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);	  return    isAssignable(cls,((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType);    	non-compiled	[CE]  cannot  find  symbol  bound	52	None	replace
239	[BUG]  [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds(toGenericArrayType,(GenericArrayType)type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds(toGenericArrayType,(GenericArrayType)type);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  toGenericArrayType  =  getImplicitUpperBounds(toGenericArrayType,(GenericArrayType)type);	  Class    <?>    typeVarAssigns    =    getImplicitUpperBounds(toGenericArrayType,(GenericArrayType)type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	22	None	replace
240	[BUG]  [BUGGY]  Class  <?>  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType);  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Class  <?>  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType);	  Class    <?>    typeVarAssigns    =    getImplicitUpperBounds((    GenericArrayType)type,    toComponentType);    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	20	None	replace
241	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  typeVarAssigns);  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  typeVarAssigns);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  typeVarAssigns);	  Class    <?>    typeVarAssigns    =    getImplicitUpperBounds((    GenericArrayType)type,    toComponentType);    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	20	None	replace
242	[BUG]  [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  binding);  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  binding);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  binding);	  Type    toComponentType    =    getImplicitUpperBounds((    GenericArrayType)type,    bound);    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	43	None	replace
243	[BUG]  [BUGGY]  return  isAssignable(type,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  bound);  [CE]  cannot  find  symbol  bound  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  bound);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  bound);	  return    isAssignable(type,((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType);    	non-compiled	[CE]  cannot  find  symbol  bound	46	None	replace
244	[BUG]  [BUGGY]  return  isAssignable(type,  toComponentType,  typeVarAssigns,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Type,Type,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,  toComponentType,  typeVarAssigns,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,  toComponentType,  typeVarAssigns,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(type,((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Type,Type,Map<TypeVariable<?>,Type>)	46	None	replace
245	[BUG]  [BUGGY]  Class  <?>  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type),  toComponentType);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Class  <?>  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type),  toComponentType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type),  toComponentType);	  Class    <?>    typeVarAssigns    =    getImplicitUpperBounds((    GenericArrayType)type),    toComponentType);    	non-compiled	[CE]  ';'  expected	76	None	replace
246	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toComponentType,  toGenericArrayType);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Type,GenericArrayType)  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toComponentType,  toGenericArrayType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toComponentType,  toGenericArrayType);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType,    toComponentType);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Type,GenericArrayType)	45	None	replace
247	[BUG]  [BUGGY]  return  isAssignable(cls,((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  toComponentType);  [CE]  cannot  find  symbol  cls  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(cls,((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  toComponentType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(cls,((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  toComponentType);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType,    toComponentType);    	non-compiled	[CE]  cannot  find  symbol  cls	45	None	replace
248	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toGenericArrayType);  if(toGenericArrayType!=  null)  {  return  false;  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toGenericArrayType);  if(toGenericArrayType!=  null)  {  return  false;  }  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toGenericArrayType);  if(toGenericArrayType!=  null)  {  return  false;  }	          Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type);    if(toGenericArrayType!=    null)    {    return    false;    }    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	47	None	replace
249	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds(type,(  GenericArrayType)type);  if(toGenericArrayType!=  null)  {  return  false;  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds(type,(  GenericArrayType)type);  if(toGenericArrayType!=  null)  {  return  false;  }  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds(type,(  GenericArrayType)type);  if(toGenericArrayType!=  null)  {  return  false;  }	          Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type);    if(toGenericArrayType!=    null)    {    return    false;    }    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	47	None	replace
250	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType).getGenericVarAssigns();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType).getGenericVarAssigns();  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType).getGenericVarAssigns();	  Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    toComponentType).getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	56	None	replace
251	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType).getGenericParameterType(0);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType).getGenericParameterType(0);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType).getGenericParameterType(0);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    toComponentType).getGenericComponentType();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	56	None	replace
252	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType.typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType.typeVarAssigns);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType.typeVarAssigns);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    typeVarAssigns);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	79	None	replace
253	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  havehCode);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  havehCode);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  havehCode);	  return    isAssignable(((GenericArrayType)type).getComponentType(),    toComponentType,    typeVarAssigns,    hashCode);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
254	[BUG]  [BUGGY]  return  isAssignable(class,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(class,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(class,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType);	  return    isAssignable(cls,((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
255	[BUG]  [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls,  toComponentType);  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls,  toComponentType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls,  toComponentType);	  Type    toComponentType    =    getImplicitUpperBounds((    GenericArrayType)type,    cls);    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	42	None	replace
256	[BUG]  [BUGGY]  return  isAssignable(type,  toComponentType,  typeVarAssigns,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Type,Type,Map<TypeVariable<?>,Type>,<null>)  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,  toComponentType,  typeVarAssigns,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,  toComponentType,  typeVarAssigns,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null);	  return    isAssignable(type,((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    null);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Type,Type,Map<TypeVariable<?>,Type>,<null>)	48	None	replace
257	[BUG]  [BUGGY]  return  isAssignable(type,  toComponentType,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toComponentType);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Type,Map<TypeVariable<?>,Type>,Type)  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,  toComponentType,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toComponentType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,  toComponentType,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toComponentType);	  return    isAssignable(type,((    GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    toComponentType);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Type,Map<TypeVariable<?>,Type>,Type)	69	None	replace
258	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType.type);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType.type);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType.type);	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type).getGenericComponentType(),    toComponentType);    	non-compiled	[CE]  ';'  expected	37	None	replace
259	[BUG]  [BUGGY]  toComponentType,  toGenericArrayType,  typeVarAssigns);  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  toComponentType,  toGenericArrayType,  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	toComponentType,  toGenericArrayType,  typeVarAssigns);	  toComponentType,    typeVarAssigns);    	non-compiled	[CE]  not  a  statement	1	None	replace
260	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(type,  typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(type,  typeVarAssigns);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds(type,  typeVarAssigns);	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds(type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	74	None	replace
261	[BUG]  [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound,  toComponentType);  [CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound,  toComponentType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toComponentType  =  getImplicitUpperBounds((  GenericArrayType)type,  bound,  toComponentType);	  Type    toComponentType    =    getImplicitUpperBounds((    GenericArrayType)type,    bound);    	non-compiled	[CE]  variable  toComponentType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	43	None	replace
262	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type),  toComponentType,  typeVarAssigns);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type),  toComponentType,  typeVarAssigns);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type),  toComponentType,  typeVarAssigns);	  Class    <?>    typeVarAssigns    =    getImplicitUpperBounds((    GenericArrayType)type),    toComponentType);    	non-compiled	[CE]  ';'  expected	76	None	replace
263	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitLowerBounds((  GenericArrayType)type),  toComponentType);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitLowerBounds((  GenericArrayType)type),  toComponentType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitLowerBounds((  GenericArrayType)type),  toComponentType);	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type),    toComponentType);    	non-compiled	[CE]  ';'  expected	70	None	replace
264	[BUG]  [BUGGY]  return  isAssignable(type,  toComponentType,((  GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,  toComponentType,((  GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,  toComponentType,((  GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(type,((GenericArrayType)type).getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
265	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType),  typeVarAssigns).getGenericComponentType();  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType),  typeVarAssigns).getGenericComponentType();  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType),  typeVarAssigns).getGenericComponentType();	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    toComponentType).getGenericComponentType();    	non-compiled	[CE]  ';'  expected	53	None	replace
266	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType),  typeVarAssigns).getGenericComponentType();  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType),  typeVarAssigns).getGenericComponentType();  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType),  typeVarAssigns).getGenericComponentType();	  Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    toComponentType).getGenericComponentType();    	non-compiled	[CE]  ';'  expected	56	None	replace
267	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds(toComponentType,(GenericArrayType)type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds(toComponentType,(GenericArrayType)type);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds(toComponentType,(GenericArrayType)type);	  Type    toGenericArrayType    =    getImplicitUpperBounds(type,(    GenericArrayType)type);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	49	None	replace
268	[BUG]  [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  toComponentType);  [CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  toComponentType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  typeVarAssigns  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  toComponentType);	  Class    <?>    typeVarAssigns    =    getImplicitUpperBounds((    GenericArrayType)type,    toComponentType);    	non-compiled	[CE]  variable  typeVarAssigns  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	20	None	replace
269	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType.type);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType.type);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type).getGenericComponentType(),  toComponentType.type);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type).getGenericComponentType(),    toComponentType);    	non-compiled	[CE]  ';'  expected	18	None	replace
270	[BUG]  [BUGGY]  Type  toGenericArrayType  =((  GenericArrayType)type).getGenericComponentType(),  toComponentType.type;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =((  GenericArrayType)type).getGenericComponentType(),  toComponentType.type;  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =((  GenericArrayType)type).getGenericComponentType(),  toComponentType.type;	  Type    toGenericArrayType    =((    GenericArrayType)type).getGenericComponentType(),    toComponentType;    	non-compiled	[CE]  ';'  expected	34	None	replace
271	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  bounds);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  bounds);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  bounds);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    bound);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	4	None	replace
272	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  bounds,  toComponentType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  bounds,  toComponentType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  bounds,  toComponentType);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    bound);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	4	None	replace
273	[BUG]  [BUGGY]  return  isAssignable(type,  toComponentType,  getGenericComponentType(),  typeVarAssigns,  toGenericArrayType);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,  toComponentType,  getGenericComponentType(),  typeVarAssigns,  toGenericArrayType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,  toComponentType,  getGenericComponentType(),  typeVarAssigns,  toGenericArrayType);	  return    isAssignable(type,((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
274	[BUG]  [BUGGY]  Type  toGenericArrayType  =(type  instanceof  GenericArrayType)?((  GenericArrayType)type).getGenericComponentType()  :  typeVarAssigns);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =(type  instanceof  GenericArrayType)?((  GenericArrayType)type).getGenericComponentType()  :  typeVarAssigns);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =(type  instanceof  GenericArrayType)?((  GenericArrayType)type).getGenericComponentType()  :  typeVarAssigns);	  Type    toGenericArrayType    =(type    instanceof    GenericArrayType)?((    GenericArrayType)type).getGenericComponentType()    :    type;    	non-compiled	[CE]  ';'  expected	64	None	replace
275	[BUG]  [BUGGY]  return  isAssignable(type,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  this);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(type,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  this);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(type,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  this);	  return    isAssignable(type,((    GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    bound);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	59	None	replace
276	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  getImplicitUpperBounds(type));  [CE]  method  getImplicitUpperBounds  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  getImplicitUpperBounds(type));  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  getImplicitUpperBounds(type));	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    map);    	non-compiled	[CE]  method  getImplicitUpperBounds  in  class  TypeUtils  cannot  be  applied  to  given  types;	30	None	replace
277	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =(GenericArrayType)type.toObject();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =(GenericArrayType)type.toObject();  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =(GenericArrayType)type.toObject();	  GenericArrayType    toGenericArrayType    =(GenericArrayType)type.toArray();    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	73	None	replace
278	[BUG]  [BUGGY]  return  isAssignable(toComponentType,  type.getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(toComponentType,  type.getGenericComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(toComponentType,  type.getGenericComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(type,    toComponentType.getGenericComponentType(),    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
279	[BUG]  [BUGGY]  return  isAssignable(toComponentType,  toComponentType.getGenericComponentType(),  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(toComponentType,  toComponentType.getGenericComponentType(),  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(toComponentType,  toComponentType.getGenericComponentType(),  typeVarAssigns);	  return    isAssignable(type,    toComponentType.getGenericComponentType(),    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
280	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  decodeGenericVarAssigns);  [CE]  cannot  find  symbol  decodeGenericVarAssigns  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  decodeGenericVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  decodeGenericVarAssigns);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typesVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  decodeGenericVarAssigns	78	None	replace
281	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType)  {  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type);  return  isAssignable(toGenericArrayType,  toGenericArrayType);  }  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  if(type  instanceof  GenericArrayType)  {  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type);  return  isAssignable(toGenericArrayType,  toGenericArrayType);  }  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	if(type  instanceof  GenericArrayType)  {  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type);  return  isAssignable(toGenericArrayType,  toGenericArrayType);  }	          Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type);    return    isAssignable(toGenericArrayType,    toGenericArrayType);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	16	None	replace
282	[BUG]  [BUGGY]  return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);  return  isAssigned(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);  return  isAssigned(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return    isAssignable(toComponentType,((    GenericArrayType)type).getGenericComponentType(),    typeVarAssigns);    return  isAssigned(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  typeVarAssigns);	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
283	[BUG]  [BUGGY]  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [CE]  cannot  find  symbol  cls  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(toComponentType.getComponentType(),    toComponentType,    typeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  cls	32	None	replace
284	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls,  typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls,  typeVarAssigns);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls,  typeVarAssigns);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    cls);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	3	None	replace
285	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  fromGenericArrayType);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  fromGenericArrayType);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  fromGenericArrayType);	  return    isAssignable(((GenericArrayType)type).getComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
286	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType.type);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType.type);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType.type);	  return    isAssignable(((GenericArrayType)type).getComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
287	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls,  typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls,  typeVarAssigns);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  cls,  typeVarAssigns);	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    cls);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	11	None	replace
288	[BUG]  [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  this.typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  this.typeVarAssigns);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  this.typeVarAssigns);	  Class    <?>    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    toComponentType);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	13	None	replace
289	[BUG]  [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType.assigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType.assigns);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType.assigns);	  Class    <?>    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    typeVarAssigns);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	75	None	replace
290	[BUG]  [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  bounds);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  bounds);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  bounds);	  Class    <?>    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    bound);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	15	None	replace
291	[BUG]  [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  bounds,  toComponentType);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  bounds,  toComponentType);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	Class  <?>  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  bounds,  toComponentType);	  Class    <?>    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    bound);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	15	None	replace
292	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  typeVarAssigns);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  toGenericArrayType,  typeVarAssigns);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    toGenericArrayType,    bounds);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,GenericArrayType,Map<TypeVariable<?>,Type>)	68	None	replace
293	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null,  toGenericArrayType,  toGenericParameterTypes);  [CE]  cannot  find  symbol  toGenericParameterTypes  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null,  toGenericArrayType,  toGenericParameterTypes);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  null,  toGenericArrayType,  toGenericParameterTypes);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    null,    toGenericArrayType);    	non-compiled	[CE]  cannot  find  symbol  toGenericParameterTypes	29	None	replace
294	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  bounds);  [CE]  cannot  find  symbol  bounds  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  bounds);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  bounds);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    bound);    	non-compiled	[CE]  cannot  find  symbol  bounds	25	None	replace
295	[BUG]  [BUGGY]  return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(toComponentType,((  GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns);	  return    isAssignable(toComponentType,((    GenericArrayType)type).getGenericComponentType(),    typeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type,Map<TypeVariable<?>,Type>)	7	None	replace
296	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  this.typeVarAssigns);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  this.typeVarAssigns);  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),      toComponentType,  typeVarAssigns);  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	GenericArrayType  toGenericArrayType  =  getImplicitUpperBounds((  GenericArrayType)type,  toComponentType,  this.typeVarAssigns);	  GenericArrayType    toGenericArrayType    =    getImplicitUpperBounds((    GenericArrayType)type,    toComponentType);    	non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	10	None	replace
297	[BUG]  [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  typeVarAssigns);  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {        [BUGGY]  return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  typeVarAssigns);  [BUGGY]      toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	289	290	2	replace	return  isAssignable(((GenericArrayType)type).getGenericComponentType(),  toComponentType,  typeVarAssigns,  typeVarAssigns);	  return    isAssignable(((GenericArrayType)type).getGenericComponentType(),    toComponentType,    typeVarAssigns,    this.typeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Map<TypeVariable<?>,Type>)	40	None	replace
