bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Type  bound  =  type.isArray()?  toClass.getComponentType()  :  toClass;  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  type.isArray()?  toClass.getComponentType()  :  toClass;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  type.isArray()?  toClass.getComponentType()  :  toClass;	  Type    bound    =    toClass.isArray()?    type.getComponentType()    :    toClass;    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
2	[BUG]  [BUGGY]  Type  bound  =  toClass,  type.isArray()?  toClass.getComponentType()  :  toClass;  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass,  type.isArray()?  toClass.getComponentType()  :  toClass;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass,  type.isArray()?  toClass.getComponentType()  :  toClass;	  Type    bound    =    toClass.isArray()?    type.getComponentType()    :    toClass;    	non-compiled	[CE]  ';'  expected	66	None	replace
3	[BUG]  [BUGGY]  Type  bound  =  toClass  instanceof  ParameterizedType?  ((  ParameterizedType)type).getRawType()  :  type.getRawType();  [CE]  inconvertible  types  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass  instanceof  ParameterizedType?  ((  ParameterizedType)type).getRawType()  :  type.getRawType();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass  instanceof  ParameterizedType?  ((  ParameterizedType)type).getRawType()  :  type.getRawType();	  Type    bound    =    type    instanceof    ParameterizedType?    ((    ParameterizedType)type).getRawType()    :    toClass.getRawType();    	non-compiled	[CE]  inconvertible  types	78	None	replace
4	[BUG]  [BUGGY]  Type  bound  =  toClass.getRawType()  instanceof  ParameterizedType?  ((  ParameterizedType)type).getRawType()  :  type.getRawType();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.getRawType()  instanceof  ParameterizedType?  ((  ParameterizedType)type).getRawType()  :  type.getRawType();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass.getRawType()  instanceof  ParameterizedType?  ((  ParameterizedType)type).getRawType()  :  type.getRawType();	  Type    bound    =    type    instanceof    ParameterizedType?    ((    ParameterizedType)type).getRawType()    :    toClass.getRawType();    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
5	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isObject()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isObject()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isObject()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);	  Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass.isObject()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
6	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbounds()  :  toClass,  subtypeVarAssigns;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbounds()  :  toClass,  subtypeVarAssigns;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbounds()  :  toClass,  subtypeVarAssigns;	  Type    bound    =(type    instanceof    ParameterizedType)?((    ParameterizedType)type).getbounds()    :    toClass;    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
7	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbounds()  :  toClass.isArray();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbounds()  :  toClass.isArray();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbounds()  :  toClass.isArray();	  Type    bound    =(type    instanceof    ParameterizedType)?((    ParameterizedType)type).getbounds()    :    toClass;    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
8	[BUG]  [BUGGY]  Type  bound  =  toClass.getComponentType()?  toClass.getComponentType()  :  toClass;  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.getComponentType()?  toClass.getComponentType()  :  toClass;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass.getComponentType()?  toClass.getComponentType()  :  toClass;	          Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass;    Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass;    	non-compiled	[CE]  incompatible  types	28	None	replace
9	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  boundSeparator);  [CE]  cannot  find  symbol  boundSeparator  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  boundSeparator);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  boundSeparator);	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    target);    	non-compiled	[CE]  cannot  find  symbol  boundSeparator	56	None	replace
10	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,Type)  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isInterface()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);	  Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass.isInterface()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,Type)	49	None	replace
11	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isConstructor()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isConstructor()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isConstructor()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass.isInterface()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
12	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass);  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass);	  Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass);    	non-compiled	[CE]  incompatible  types	18	None	replace
13	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isArray());  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,boolean)  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isArray());  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isArray());	  Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,boolean)	18	None	replace
14	[BUG]  [BUGGY]  return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass.isArray());  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass.isArray());  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass.isArray());	  return    getParameterizedType((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    toClass);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
15	[BUG]  [BUGGY]  Type  toClass  =  toClass.isArray()?  toClass.getComponentType()  :  toClass;  [CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  toClass  =  toClass.isArray()?  toClass.getComponentType()  :  toClass;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  toClass  =  toClass.isArray()?  toClass.getComponentType()  :  toClass;	          Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass;    Type    toClass    =    toClass.isArray()?    toClass.getComponentType()    :    toClass;    	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)	29	None	replace
16	[BUG]  [BUGGY]  Type  toClass  =  toClass.isArray()?  type.getComponentType()  :  toClass;  [CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  toClass  =  toClass.isArray()?  type.getComponentType()  :  toClass;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  toClass  =  toClass.isArray()?  type.getComponentType()  :  toClass;	          Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass;    Type    toClass    =    toClass.isArray()?    toClass.getComponentType()    :    toClass;    	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)	29	None	replace
17	[BUG]  [BUGGY]  Type  toClass  =  toClass.isArray()?  toClass.getComponentType()  :  type;  [CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  toClass  =  toClass.isArray()?  toClass.getComponentType()  :  type;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  toClass  =  toClass.isArray()?  toClass.getComponentType()  :  type;	          Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass;    Type    toClass    =    toClass.isArray()?    toClass.getComponentType()    :    toClass;    	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)	29	None	replace
18	[BUG]  [BUGGY]  Type  toClass  =  toClass.isArray()?  toClass.getComponentType()  :  null;  [CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  toClass  =  toClass.isArray()?  toClass.getComponentType()  :  null;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  toClass  =  toClass.isArray()?  toClass.getComponentType()  :  null;	          Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass;    Type    toClass    =    toClass.isArray()?    toClass.getComponentType()    :    toClass;    	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)	29	None	replace
19	[BUG]  [BUGGY]  return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type.isArray());  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type.isArray());  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type.isArray());	  return    getParameterizedType((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
20	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type,  bound);  [CE]  cannot  find  symbol  bound  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type,  bound);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type,  bound);	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  cannot  find  symbol  bound	37	None	replace
21	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  bound,  type);  [CE]  cannot  find  symbol  bound  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  bound,  type);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  bound,  type);	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  cannot  find  symbol  bound	37	None	replace
22	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type;  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type;  [CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type;  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    type;    Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type;	  	non-compiled	[CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)	8	None	add
23	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type;  Type  toClass  =  toClass.isArray()?  toClass.getComponentType()  :  type;  [CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)  [FE]      IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type;  Type  toClass  =  toClass.isArray()?  toClass.getComponentType()  :  type;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    type;    Type  toClass  =  toClass.isArray()?  toClass.getComponentType()  :  type;	  	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)	8	None	add
24	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type;  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type);  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type;  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    type;    Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type);	  	non-compiled	[CE]  ';'  expected	8	None	add
25	[BUG]  [BUGGY]  Type  bound  =  subtypeVarAssigns.getRawType();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  subtypeVarAssigns.getRawType();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  subtypeVarAssigns.getRawType();	  Type    bound    =    type.getRawType();    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
26	[BUG]  [BUGGY]  Type  bound  =((  ParameterizedType)type).getBounds(),  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =((  ParameterizedType)type).getBounds(),  toClass,  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =((  ParameterizedType)type).getBounds(),  toClass,  subtypeVarAssigns);	  Type    bound    =((    ParameterizedType)type).getBounds(),    toClass;    	non-compiled	[CE]  ';'  expected	33	None	replace
27	[BUG]  [BUGGY]  Type  bound  =((  ParameterizedType)type).getBounds(),  toClass.isArray()?  toClass.getComponentType()  :  toClass;  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =((  ParameterizedType)type).getBounds(),  toClass.isArray()?  toClass.getComponentType()  :  toClass;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =((  ParameterizedType)type).getBounds(),  toClass.isArray()?  toClass.getComponentType()  :  toClass;	  Type    bound    =((    ParameterizedType)type).getBounds(),    toClass;    	non-compiled	[CE]  ';'  expected	33	None	replace
28	[BUG]  [BUGGY]  Type  bound  =((  ParameterizedType)type).getBounds(),  toClass,  subtypeVarAssigns;  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =((  ParameterizedType)type).getBounds(),  toClass,  subtypeVarAssigns;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =((  ParameterizedType)type).getBounds(),  toClass,  subtypeVarAssigns;	  Type    bound    =((    ParameterizedType)type).getBounds(),    toClass;    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
29	[BUG]  [BUGGY]  return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  null);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  null);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  null);	  return    getParameterizedType((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    bound);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
30	[BUG]  [BUGGY]  return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  this);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  this);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  this);	  return    getParameterizedType((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    bound);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	1	None	replace
31	[BUG]  [BUGGY]  Class  <?>  bound  =  toClass,  toClass.getRawClass();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Class  <?>  bound  =  toClass,  toClass.getRawClass();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Class  <?>  bound  =  toClass,  toClass.getRawClass();	  Class    <?>    bound    =    toClass,    type.getRawClass();    	non-compiled	[CE]  ';'  expected	20	None	replace
32	[BUG]  [BUGGY]  Class  <?>  bound  =  type,  toClass.getRawClass();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Class  <?>  bound  =  type,  toClass.getRawClass();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Class  <?>  bound  =  type,  toClass.getRawClass();	  Class    <?>    bound    =    toClass,    type.getRawClass();    	non-compiled	[CE]  ';'  expected	20	None	replace
33	[BUG]  [BUGGY]  return  getTypeArguments(((ParameterizedType)type).isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  toClass);  [CE]  cannot  find  symbol  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments(((ParameterizedType)type).isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  toClass);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments(((ParameterizedType)type).isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  toClass);	          return    getTypeArguments(((ParameterizedType)type).isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
34	[BUG]  [BUGGY]  return  getTypeArguments(((ParameterizedType)type).isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments(((ParameterizedType)type).isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments(((ParameterizedType)type).isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);	          return    getTypeArguments(((ParameterizedType)type).isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
35	[BUG]  [BUGGY]  Type  bounds  =((  ParameterizedType)type).getbounds(),  toClass);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bounds  =((  ParameterizedType)type).getbounds(),  toClass);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bounds  =((  ParameterizedType)type).getbounds(),  toClass);	  Type    bounds    =((    ParameterizedType)type).getbounds();    	non-compiled	[CE]  ';'  expected	44	None	replace
36	[BUG]  [BUGGY]  Type  bounds  =((  ParameterizedType)type).bounds();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bounds  =((  ParameterizedType)type).bounds();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bounds  =((  ParameterizedType)type).bounds();	  Type    bounds    =((    ParameterizedType)type).getbounds();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
37	[BUG]  [BUGGY]  Type  bounds  =((  ParameterizedType)type).getbounds(),  toClass;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bounds  =((  ParameterizedType)type).getbounds(),  toClass;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bounds  =((  ParameterizedType)type).getbounds(),  toClass;	  Type    bounds    =((    ParameterizedType)type).getbounds();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
38	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass,  subtypeVarAssigns);  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,Class<CAP#2>,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass,  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass,  subtypeVarAssigns);	  Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    toClass);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,Class<CAP#2>,Map<TypeVariable<?>,Type>)	71	None	replace
39	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  subtypeVarAssigns);  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  subtypeVarAssigns);	  Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    toClass);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,Map<TypeVariable<?>,Type>)	71	None	replace
40	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  true);  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,boolean)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  true);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  true);	  Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    false);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,boolean)	36	None	replace
41	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  false,  toClass);  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,boolean,Class<CAP#2>)  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  false,  toClass);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  false,  toClass);	  Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    false);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,boolean,Class<CAP#2>)	36	None	replace
42	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  true,  false);  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,boolean,boolean)  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  true,  false);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  true,  false);	  Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    false);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,boolean,boolean)	36	None	replace
43	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  true,  toClass);  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,boolean,Class<CAP#2>)  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  true,  toClass);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  true,  toClass);	  Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    false);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,boolean,Class<CAP#2>)	36	None	replace
44	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getRawClass()  :  toClass.getRawClass();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getRawClass()  :  toClass.getRawClass();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getRawClass()  :  toClass.getRawClass();	  Type    bound    =(type    instanceof    ParameterizedType)?((    ParameterizedType)type).getRawClass()    :    type;    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
45	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getRawClass()  :  subtypeVarAssigns;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getRawClass()  :  subtypeVarAssigns;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getRawClass()  :  subtypeVarAssigns;	  Type    bound    =(type    instanceof    ParameterizedType)?((    ParameterizedType)type).getRawClass()    :    type;    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
46	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type,  scope);  [CE]  cannot  find  symbol  scope  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type,  scope);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type,  scope);	  Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  cannot  find  symbol  scope	47	None	replace
47	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isObject()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isObject()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isObject()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);	  Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
48	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type,  null);  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,Type,<null>)  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type,  null);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type,  null);	  Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,Type,<null>)	47	None	replace
49	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  type;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	add	Type  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  type;	  Type    bound    =    toClass.isInterface()?    toClass.getComponentType()    :    toClass;    	compilable	  [FE]  IllegalStateException  	12	5	replace
50	[BUG]  [BUGGY]  Type  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  type;  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  type;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  type;	  Type    bound    =    toClass.isInterface()?    toClass.getComponentType()    :    toClass;    	compilable	  [FE]  IllegalStateException  	12	5	replace
51	[BUG]  [BUGGY]  Type  bound  =  toClass.isInterface()?  toClass.getConstructorType()  :  toClass;  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.isInterface()?  toClass.getConstructorType()  :  toClass;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass.isInterface()?  toClass.getConstructorType()  :  toClass;	  Type    bound    =    toClass.isInterface()?    toClass.getComponentType()    :    toClass;    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
52	[BUG]  [BUGGY]  Type  bound  =  toClass.isInterface()?  toClass.getDeclaredType()  :  toClass;  [CE]  cannot  find  symbol  [FE]        IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.isInterface()?  toClass.getDeclaredType()  :  toClass;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass.isInterface()?  toClass.getDeclaredType()  :  toClass;	  Type    bound    =    toClass.isInterface()?    toClass.getComponentType()    :    toClass;    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
53	[BUG]  [BUGGY]  Type  bounds  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbounds()  :  null;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bounds  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbounds()  :  null;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bounds  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbounds()  :  null;	  Type    bound    =(type    instanceof    ParameterizedType)?((    ParameterizedType)type).getbounds()    :    null;    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
54	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbounds()  :  Collections.emptyMap();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbounds()  :  Collections.emptyMap();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbounds()  :  Collections.emptyMap();	  Type    bound    =(type    instanceof    ParameterizedType)?((    ParameterizedType)type).getbounds()    :    null;    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
55	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getRawClass()  :  Collections.emptyMap();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getRawClass()  :  Collections.emptyMap();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getRawClass()  :  Collections.emptyMap();	  Type    bound    =(type    instanceof    ParameterizedType)?((    ParameterizedType)type).getRawClass()    :    null;    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
56	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  toClass,  subtypeVarAssigns;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  toClass,  subtypeVarAssigns;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  toClass,  subtypeVarAssigns;	  Type    bound    =(type    instanceof    ParameterizedType)?((    ParameterizedType)type).getBounds()    :    toClass;    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
57	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  toClass.getBounds();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  toClass.getBounds();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  toClass.getBounds();	  Type    bound    =(type    instanceof    ParameterizedType)?((    ParameterizedType)type).getBounds()    :    toClass;    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
58	[BUG]  [BUGGY]  Type  bound  =  toClass  instanceof  ParameterizedType?  toClass.getRawType()  :  type.getRawType();  [CE]  inconvertible  types  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass  instanceof  ParameterizedType?  toClass.getRawType()  :  type.getRawType();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass  instanceof  ParameterizedType?  toClass.getRawType()  :  type.getRawType();	  Type    bound    =    type    instanceof    ParameterizedType?    toClass.getRawType()    :    toClass.getRawType();    	non-compiled	[CE]  inconvertible  types	77	None	replace
59	[BUG]  [BUGGY]  Type  bound  =  toClass  instanceof  ParameterizedType?  type.getRawType()  :  toClass.getRawType();  [CE]  inconvertible  types  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass  instanceof  ParameterizedType?  type.getRawType()  :  toClass.getRawType();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass  instanceof  ParameterizedType?  type.getRawType()  :  toClass.getRawType();	  Type    bound    =    type    instanceof    ParameterizedType?    toClass.getRawType()    :    toClass.getRawType();    	non-compiled	[CE]  inconvertible  types	77	None	replace
60	[BUG]  [BUGGY]  Type  bound  =  toClass  instanceof  ParameterizedType?  toClass.getRawType()  :  toClass.getRawType();  [CE]  inconvertible  types  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass  instanceof  ParameterizedType?  toClass.getRawType()  :  toClass.getRawType();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass  instanceof  ParameterizedType?  toClass.getRawType()  :  toClass.getRawType();	  Type    bound    =    type    instanceof    ParameterizedType?    toClass.getRawType()    :    toClass.getRawType();    	non-compiled	[CE]  inconvertible  types	77	None	replace
61	[BUG]  [BUGGY]  Type  bound  =  toClass.getRawType()  instanceof  ParameterizedType?  toClass.getRawType()  :  toClass.getRawType();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.getRawType()  instanceof  ParameterizedType?  toClass.getRawType()  :  toClass.getRawType();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass.getRawType()  instanceof  ParameterizedType?  toClass.getRawType()  :  toClass.getRawType();	  Type    bound    =    type    instanceof    ParameterizedType?    toClass.getRawType()    :    toClass.getRawType();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
62	[BUG]  [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getParameterType(),  toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getParameterType(),  toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments(((ParameterizedType)type).getParameterType(),  toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);	          return    getTypeArguments(((ParameterizedType)type).getParameterType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
63	[BUG]  [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getParameterType(),  toClass.isObject()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getParameterType(),  toClass.isObject()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments(((ParameterizedType)type).getParameterType(),  toClass.isObject()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	          return    getTypeArguments(((ParameterizedType)type).getParameterType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
64	[BUG]  [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getParameterType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  toClass);  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getParameterType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  toClass);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments(((ParameterizedType)type).getParameterType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  toClass);	          return    getTypeArguments(((ParameterizedType)type).getParameterType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
65	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.getComponentType(),  subtypeVarAssigns);  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.getComponentType(),  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.getComponentType(),  subtypeVarAssigns);	  Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass.getComponentType());    	non-compiled	[CE]  incompatible  types	72	None	replace
66	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass.getComponentType());  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass.getComponentType());  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass.getComponentType());	  Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass.getComponentType());    	non-compiled	[CE]  incompatible  types	72	None	replace
67	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns.getComponentType());  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns.getComponentType());  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns.getComponentType());	  Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass.getComponentType());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
68	[BUG]  [BUGGY]  Type  bound  =  type.getRawType(),  subtypeVarAssigns);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  type.getRawType(),  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  type.getRawType(),  subtypeVarAssigns);	  Type    bound    =    toClass.getRawType(),    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	41	None	replace
69	[BUG]  [BUGGY]  Type  bound  =  toClass.getRawType(),  subtypeVarAssigns,  type);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.getRawType(),  subtypeVarAssigns,  type);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass.getRawType(),  subtypeVarAssigns,  type);	  Type    bound    =    toClass.getRawType(),    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	41	None	replace
70	[BUG]  [BUGGY]  Type  bound  =  toClass.getRawType(),  type);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.getRawType(),  type);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass.getRawType(),  type);	  Type    bound    =    toClass.getRawType(),    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	41	None	replace
71	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(type,  toClass,(ParameterizedType)type);  [CE]  no  suitable  method  found  for  getTypeArguments(Type,Class<CAP#1>,ParameterizedType)  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments(type,  toClass,(ParameterizedType)type);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments(type,  toClass,(ParameterizedType)type);	  Type    bound    =    getTypeArguments(type,(    ParameterizedType)type);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Type,Class<CAP#1>,ParameterizedType)	19	None	replace
72	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(toClass,(ParameterizedType)type);  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,ParameterizedType)  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments(toClass,(ParameterizedType)type);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments(toClass,(ParameterizedType)type);	  Type    bound    =    getTypeArguments(type,(    ParameterizedType)type);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,ParameterizedType)	19	None	replace
73	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(type,(ParameterizedType)type,  toClass);  [CE]  no  suitable  method  found  for  getTypeArguments(Type,ParameterizedType,Class<CAP#1>)  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments(type,(ParameterizedType)type,  toClass);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments(type,(ParameterizedType)type,  toClass);	  Type    bound    =    getTypeArguments(type,(    ParameterizedType)type);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Type,ParameterizedType,Class<CAP#1>)	19	None	replace
74	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(type,(ParameterizedType)type,  subtypeVarAssigns);  [CE]  no  suitable  method  found  for  getTypeArguments(Type,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments(type,(ParameterizedType)type,  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments(type,(ParameterizedType)type,  subtypeVarAssigns);	  Type    bound    =    getTypeArguments(type,(    ParameterizedType)type);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Type,ParameterizedType,Map<TypeVariable<?>,Type>)	19	None	replace
75	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass);	          Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass;    Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass);    	non-compiled	[CE]  ';'  expected	30	None	replace
76	[BUG]  [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getDeclaredType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  toClass);  [CE]  cannot  find  symbol  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getDeclaredType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  toClass);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments(((ParameterizedType)type).getDeclaredType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  toClass);	          return    getTypeArguments(((ParameterizedType)type).getDeclaredType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
77	[BUG]  [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getDeclaredType(),  toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getDeclaredType(),  toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments(((ParameterizedType)type).getDeclaredType(),  toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);	          return    getTypeArguments(((ParameterizedType)type).getDeclaredType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
78	[BUG]  [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getDeclaredType(),  toClass.isObject()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getDeclaredType(),  toClass.isObject()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments(((ParameterizedType)type).getDeclaredType(),  toClass.isObject()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	          return    getTypeArguments(((ParameterizedType)type).getDeclaredType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
79	[BUG]  [BUGGY]  return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,.isArray());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,.isArray());  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,.isArray());	  return    getParameterizedType((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    bound.isArray());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
80	[BUG]  [BUGGY]  return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  null.isArray());  [CE]  <null>  cannot  be  dereferenced  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  null.isArray());  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  null.isArray());	  return    getParameterizedType((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    bound.isArray());    	non-compiled	[CE]  <null>  cannot  be  dereferenced	3	None	replace
81	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  type;  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  type;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  type;	  Type    bound    =    toClass.isAssignableFrom(type)?    toClass.getComponentType()    :    toClass;    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	10	None	replace
82	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  type.getComponentType()  :  toClass;  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  type.getComponentType()  :  toClass;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  type.getComponentType()  :  toClass;	  Type    bound    =    toClass.isAssignableFrom(type)?    toClass.getComponentType()    :    toClass;    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	10	None	replace
83	[BUG]  [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.getRawType();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.getRawType();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass,  subtypeVarAssigns.getRawType();	  Type    bound    =    toClass,    type.getRawType();    	non-compiled	[CE]  ';'  expected	42	None	replace
84	[BUG]  [BUGGY]  Type  bound  =  type,  toClass.getRawType();  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  type,  toClass.getRawType();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  type,  toClass.getRawType();	  Type    bound    =    toClass,    type.getRawType();    	non-compiled	[CE]  ';'  expected	42	None	replace
85	[BUG]  [BUGGY]  Type  bound  =  toClass,  type.getRawType(),  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass,  type.getRawType(),  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass,  type.getRawType(),  subtypeVarAssigns);	  Type    bound    =    toClass,    type.getRawType();    	non-compiled	[CE]  ';'  expected	42	None	replace
86	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  null,  toClass);  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,<null>,Class<CAP#2>)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  null,  toClass);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  null,  toClass);	  Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    null);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,<null>,Class<CAP#2>)	35	None	replace
87	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type,  null);  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,Type,<null>)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type,  null);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type,  null);	  Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    null);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,Type,<null>)	35	None	replace
88	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  null,  type);  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,<null>,Type)  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  null,  type);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  null,  type);	  Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    null);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,<null>,Type)	35	None	replace
89	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getCOMponentType()  :  toClass;  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getCOMponentType()  :  toClass;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass.isArray()?  toClass.getCOMponentType()  :  toClass;	          Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass;    Type    bound    =    toClass.isArray()?    toClass.getCOMponentType()    :    toClass;    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
90	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  1);  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,int)  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  1);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  1);	  Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    0);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,int)	55	None	replace
91	[BUG]  [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getGenericComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getGenericComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments(((ParameterizedType)type).getGenericComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);	          return    getTypeArguments(((ParameterizedType)type).getGenericComponentType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
92	[BUG]  [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getGenericComponentType(),  toClass.isObject()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getGenericComponentType(),  toClass.isObject()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments(((ParameterizedType)type).getGenericComponentType(),  toClass.isObject()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	          return    getTypeArguments(((ParameterizedType)type).getGenericComponentType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
93	[BUG]  [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getGenericComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  toClass);  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getGenericComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  toClass);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments(((ParameterizedType)type).getGenericComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  toClass);	          return    getTypeArguments(((ParameterizedType)type).getGenericComponentType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
94	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getRawClass()  :  toClass,  subtypeVarAssigns;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getRawClass()  :  toClass,  subtypeVarAssigns;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getRawClass()  :  toClass,  subtypeVarAssigns;	  Type    bound    =(type    instanceof    ParameterizedType)?((    ParameterizedType)type).getRawClass()    :    toClass;    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
95	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,.isArray()?  toClass.getComponentType()  :  toClass);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,.isArray()?  toClass.getComponentType()  :  toClass);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,.isArray()?  toClass.getComponentType()  :  toClass);	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,.isArray());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
96	[BUG]  [BUGGY]  return  getTypeArguments(type,  toClass,  subtypeVarAssigns,  bound);  [CE]  cannot  find  symbol  bound  [FE]                IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments(type,  toClass,  subtypeVarAssigns,  bound);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments(type,  toClass,  subtypeVarAssigns,  bound);	          return    getTypeArguments(type,    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  bound	17	None	replace
97	[BUG]  [BUGGY]  return  getParameterizedType(type,  toClass,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getParameterizedType(type,  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getParameterizedType(type,  toClass,  subtypeVarAssigns);	          return    getTypeArguments(type,    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
98	[BUG]  [BUGGY]  return  getTypeArguments(type,  toClass,  subtypeVarAssigns,  bounds);  [CE]  cannot  find  symbol  bounds  [FE]                    IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments(type,  toClass,  subtypeVarAssigns,  bounds);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments(type,  toClass,  subtypeVarAssigns,  bounds);	          return    getTypeArguments(type,    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  bounds	17	None	replace
99	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  Object.class,  type.isArray());  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  Object.class,  type.isArray());  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  Object.class,  type.isArray());	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    Object.class.isArray());    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
100	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  Object.class,  bound.isArray());  [CE]  cannot  find  symbol  bound  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  Object.class,  bound.isArray());  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  Object.class,  bound.isArray());	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    Object.class.isArray());    	non-compiled	[CE]  cannot  find  symbol  bound	74	None	replace
101	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  object.class.isArray());  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  object.class.isArray());  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  object.class.isArray());	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    Object.class.isArray());    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
102	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type.isArray()?  toClass.getComponentType()  :  toClass.isArray());  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type.isArray()?  toClass.getComponentType()  :  toClass.isArray());  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type.isArray()?  toClass.getComponentType()  :  toClass.isArray());	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    type.isArray());    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
103	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,!type.isArray());  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,!type.isArray());  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,!type.isArray());	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    type.isArray());    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
104	[BUG]  [BUGGY]  Class  <?>  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Class  <?>  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Class  <?>  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  if(toClass.isArray())    {    return    getTypeArguments(((ParameterizedType)type).getComponentType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    }    	non-compiled	[CE]  ';'  expected	70	None	replace
105	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Class  <?>  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getComponentType();  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	add	Class  <?>  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getComponentType();	  if(toClass.isArray())    {    return    getTypeArguments(((ParameterizedType)type).getComponentType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    }    	compilable	  [FE]  IllegalStateException  	70	5	replace
106	[BUG]  [BUGGY]  Class  <?>  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getComponentType();  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Class  <?>  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getComponentType();  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Class  <?>  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getComponentType();	  if(toClass.isArray())    {    return    getTypeArguments(((ParameterizedType)type).getComponentType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    }    	compilable	  [FE]  IllegalStateException  	70	5	replace
107	[BUG]  [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getComponentType(),  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getComponentType(),  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments(((ParameterizedType)type).getComponentType(),  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns);	  if(toClass.isArray())    {    return    getTypeArguments(((ParameterizedType)type).getComponentType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    }    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
108	[BUG]  [BUGGY]  Type  bounds  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbounds()  :  bounds;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bounds  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbounds()  :  bounds;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bounds  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbounds()  :  bounds;	  Type    bound    =(type    instanceof    ParameterizedType)?((    ParameterizedType)type).getbounds()    :    bounds;    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
109	[BUG]  [BUGGY]  Type  bounds  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbounds()  :  toClass;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bounds  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbounds()  :  toClass;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bounds  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbounds()  :  toClass;	  Type    bound    =(type    instanceof    ParameterizedType)?((    ParameterizedType)type).getbounds()    :    bounds;    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
110	[BUG]  [BUGGY]  Type  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  toClass;  Type  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  toClass;  [CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  toClass;  Type  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  toClass;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type    bound    =    toClass.isInterface()?    toClass.getComponentType()    :    toClass;    Type  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  toClass;	  	non-compiled	[CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)	11	None	add
111	[BUG]  [BUGGY]  Type  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  toClass;  Type  toClass  =  toClass.isInterface()?  toClass.getComponentType()  :  toClass;  [CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)  [FE]      IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  toClass;  Type  toClass  =  toClass.isInterface()?  toClass.getComponentType()  :  toClass;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type    bound    =    toClass.isInterface()?    toClass.getComponentType()    :    toClass;    Type  toClass  =  toClass.isInterface()?  toClass.getComponentType()  :  toClass;	  	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)	11	None	add
112	[BUG]  [BUGGY]  Type  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  toClass;  Type  bound  =  toClass.isinterface()?  toClass.getComponentType()  :  toClass;  [CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)  [FE]        IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  toClass;  Type  bound  =  toClass.isinterface()?  toClass.getComponentType()  :  toClass;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type    bound    =    toClass.isInterface()?    toClass.getComponentType()    :    toClass;    Type  bound  =  toClass.isinterface()?  toClass.getComponentType()  :  toClass;	  	non-compiled	[CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)	11	None	add
113	[BUG]  [BUGGY]  Type  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  toClass;  Type  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  toClass);  [CE]  ';'  expected  [FE]          IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  toClass;  Type  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  toClass);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type    bound    =    toClass.isInterface()?    toClass.getComponentType()    :    toClass;    Type  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  toClass);	  	non-compiled	[CE]  ';'  expected	11	None	add
114	[BUG]  [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getParameters(),  toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getParameters(),  toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments(((ParameterizedType)type).getParameters(),  toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);	  return    getTypeArguments(((ParameterizedType)type).getParameters(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
115	[BUG]  [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getParameters(),  toClass.isObject()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getParameters(),  toClass.isObject()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments(((ParameterizedType)type).getParameters(),  toClass.isObject()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  return    getTypeArguments(((ParameterizedType)type).getParameters(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
116	[BUG]  [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getParameters(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  toClass);  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getParameters(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  toClass);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments(((ParameterizedType)type).getParameters(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  toClass);	  return    getTypeArguments(((ParameterizedType)type).getParameters(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
117	[BUG]  [BUGGY]  Type  bounds  =((  ParameterizedType)type).getBounds(),  toClass;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bounds  =((  ParameterizedType)type).getBounds(),  toClass;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bounds  =((  ParameterizedType)type).getBounds(),  toClass;	  Type    bounds    =((    ParameterizedType)type).getBounds();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
118	[BUG]  [BUGGY]  Type  bounds  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  null;  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bounds  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  null;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bounds  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  null;	  Type    bounds    =((    ParameterizedType)type).getBounds();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
119	[BUG]  [BUGGY]  Type  bounds  =((  ParameterizedType)type).getBounds(),  toClass);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bounds  =((  ParameterizedType)type).getBounds(),  toClass);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bounds  =((  ParameterizedType)type).getBounds(),  toClass);	  Type    bounds    =((    ParameterizedType)type).getBounds();    	non-compiled	[CE]  ';'  expected	32	None	replace
120	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(toClass,(  ParameterizedType)type,  subtypeVarAssigns);  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,ParameterizedType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments(toClass,(  ParameterizedType)type,  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments(toClass,(  ParameterizedType)type,  subtypeVarAssigns);	  Type    bound    =    getTypeArguments((    ParameterizedType)type,    subtypeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,ParameterizedType,Map<TypeVariable<?>,Type>)	60	None	replace
121	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(type,  toClass,  subtypeVarAssigns);  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments(type,  toClass,  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments(type,  toClass,  subtypeVarAssigns);	  Type    bound    =    getTypeArguments((    ParameterizedType)type,    subtypeVarAssigns);    	non-compiled	[CE]  incompatible  types	60	None	replace
122	[BUG]  [BUGGY]  Class  <?>  bound  =  type.bounds.getRawClass();  [CE]  cannot  find  symbol  bounds  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Class  <?>  bound  =  type.bounds.getRawClass();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Class  <?>  bound  =  type.bounds.getRawClass();	  Class    <?>    bound    =    this.bounds.getRawClass();    	non-compiled	[CE]  cannot  find  symbol  bounds	43	None	replace
123	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  null;  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  null;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  null;	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    null;    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	68	None	replace
124	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type,  toClass);  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,Type,Class<CAP#2>)  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type,  toClass);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type,  toClass);	  Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,Type,Class<CAP#2>)	34	None	replace
125	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type.isArray());  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type.isArray());  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type.isArray());	  Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
126	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  subtypeVarAssigns;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  subtypeVarAssigns;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  subtypeVarAssigns;	  Type    bound    =(type    instanceof    ParameterizedType)?((    ParameterizedType)type).getbound()    :    type;    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
127	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  type.toClass;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  type.toClass;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  type.toClass;	  Type    bound    =(type    instanceof    ParameterizedType)?((    ParameterizedType)type).getbound()    :    type;    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
128	[BUG]  [BUGGY]  Type  bounds  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  bounds;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bounds  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  bounds;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bounds  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  bounds;	  Type    bound    =(type    instanceof    ParameterizedType)?((    ParameterizedType)type).getBounds()    :    bounds;    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
129	[BUG]  [BUGGY]  Type  bounds  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  toClass;  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bounds  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  toClass;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bounds  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  toClass;	  Type    bound    =(type    instanceof    ParameterizedType)?((    ParameterizedType)type).getBounds()    :    bounds;    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
130	[BUG]  [BUGGY]  Type  bound  =((  ParameterizedType)type).getRawClass(),  toClass.isArray()?  toClass.getComponentType()  :  toClass;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =((  ParameterizedType)type).getRawClass(),  toClass.isArray()?  toClass.getComponentType()  :  toClass;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =((  ParameterizedType)type).getRawClass(),  toClass.isArray()?  toClass.getComponentType()  :  toClass;	  Type    bound    =((    ParameterizedType)type).getRawClass(),    toClass;    	non-compiled	[CE]  ';'  expected	25	None	replace
131	[BUG]  [BUGGY]  Type  bound  =((  ParameterizedType)type).getRawClass(),  toClass.getComponentType();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =((  ParameterizedType)type).getRawClass(),  toClass.getComponentType();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =((  ParameterizedType)type).getRawClass(),  toClass.getComponentType();	  Type    bound    =((    ParameterizedType)type).getRawClass(),    toClass;    	non-compiled	[CE]  ';'  expected	25	None	replace
132	[BUG]  [BUGGY]  Type  bound  =((  ParameterizedType)type).getRawClass(),  toClass,  subtypeVarAssigns;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =((  ParameterizedType)type).getRawClass(),  toClass,  subtypeVarAssigns;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =((  ParameterizedType)type).getRawClass(),  toClass,  subtypeVarAssigns;	  Type    bound    =((    ParameterizedType)type).getRawClass(),    toClass;    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
133	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  null;  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  null;  [CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  null;  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  null;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    null;    Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  null;	  	non-compiled	[CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)	67	None	add
134	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  null;  Type  toClass  =  toClass.isArray()?  toClass.getComponentType()  :  null;  [CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)  [FE]      IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  null;  Type  toClass  =  toClass.isArray()?  toClass.getComponentType()  :  null;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    null;    Type  toClass  =  toClass.isArray()?  toClass.getComponentType()  :  null;	  	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)	67	None	add
135	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  null;  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  Null;  [CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)  [FE]        IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  null;  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  Null;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    null;    Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  Null;	  	non-compiled	[CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)	67	None	add
136	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  Collections.emptyMap();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  Collections.emptyMap();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  Collections.emptyMap();	  Type    bound    =(type    instanceof    ParameterizedType)?((    ParameterizedType)type).getBounds()    :    null;    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
137	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  Collections.EMPTY_LIST;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  Collections.EMPTY_LIST;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  Collections.EMPTY_LIST;	  Type    bound    =(type    instanceof    ParameterizedType)?((    ParameterizedType)type).getBounds()    :    null;    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
138	[BUG]  [BUGGY]  Type  bounds  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  toClass;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bounds  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  toClass;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bounds  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  toClass;	  Type    bound    =(type    instanceof    ParameterizedType)?((    ParameterizedType)type).getbound()    :    bounds;    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
139	[BUG]  [BUGGY]  Type  bounds  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  bounds;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bounds  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  bounds;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bounds  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  bounds;	  Type    bound    =(type    instanceof    ParameterizedType)?((    ParameterizedType)type).getbound()    :    bounds;    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
140	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass.isArray(),  subtypeVarAssigns);  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,boolean,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass.isArray(),  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass.isArray(),  subtypeVarAssigns);	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    toClass.isArray());    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,boolean,Map<TypeVariable<?>,Type>)	5	None	replace
141	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass.isObject());  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass.isObject());  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass.isObject());	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    toClass.isArray());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
142	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  toClass,  subtypeVarAssigns;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  toClass,  subtypeVarAssigns;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  toClass,  subtypeVarAssigns;	  Type    bound    =(type    instanceof    ParameterizedType)?((    ParameterizedType)type).getbound()    :    toClass;    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
143	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  toClass.isArray();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  toClass.isArray();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  toClass.isArray();	  Type    bound    =(type    instanceof    ParameterizedType)?((    ParameterizedType)type).getbound()    :    toClass;    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
144	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  toClass,  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  toClass,  subtypeVarAssigns);	  Type    bound    =(type    instanceof    ParameterizedType)?((    ParameterizedType)type).getbound()    :    toClass;    	non-compiled	[CE]  ';'  expected	23	None	replace
145	[BUG]  [BUGGY]  Type  bound  =((  ParameterizedType)type).getbound(),  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =((  ParameterizedType)type).getbound(),  toClass,  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =((  ParameterizedType)type).getbound(),  toClass,  subtypeVarAssigns);	  Type    bound    =((    ParameterizedType)type).getbound(),    toClass);    	non-compiled	[CE]  ';'  expected	24	None	replace
146	[BUG]  [BUGGY]  Type  bound  =((  ParameterizedType)type).getbound(),  toClass.getComponentType());  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =((  ParameterizedType)type).getbound(),  toClass.getComponentType());  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =((  ParameterizedType)type).getbound(),  toClass.getComponentType());	  Type    bound    =((    ParameterizedType)type).getbound(),    toClass);    	non-compiled	[CE]  ';'  expected	24	None	replace
147	[BUG]  [BUGGY]  Type  bound  =((  ParameterizedType)type).getbound(),  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =((  ParameterizedType)type).getbound(),  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =((  ParameterizedType)type).getbound(),  subtypeVarAssigns);	  Type    bound    =((    ParameterizedType)type).getbound(),    toClass);    	non-compiled	[CE]  ';'  expected	24	None	replace
148	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  bound,  null);  [CE]  cannot  find  symbol  bound  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  bound,  null);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  bound,  null);	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    null);    	non-compiled	[CE]  cannot  find  symbol  bound	38	None	replace
149	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  bounds,  null);  [CE]  cannot  find  symbol  bounds  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  bounds,  null);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  bounds,  null);	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    null);    	non-compiled	[CE]  cannot  find  symbol  bounds	38	None	replace
150	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  null,  bound);  [CE]  cannot  find  symbol  bound  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  null,  bound);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  null,  bound);	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    null);    	non-compiled	[CE]  cannot  find  symbol  bound	38	None	replace
151	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  null,  type.isArray());  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  null,  type.isArray());  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  null,  type.isArray());	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    null.isArray());    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
152	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  null.isObject());  [CE]  <null>  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  null.isObject());  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  null.isObject());	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    null.isArray());    	non-compiled	[CE]  <null>  cannot  be  dereferenced	7	None	replace
153	[BUG]  [BUGGY]  Type  bound  =  type.toClass.getRawType();  [CE]  cannot  find  symbol  toClass  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  type.toClass.getRawType();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  type.toClass.getRawType();	  Type    bound    =    this.toClass.getRawType();    	non-compiled	[CE]  cannot  find  symbol  toClass	61	None	replace
154	[BUG]  [BUGGY]  Class  <?>  bound  =  type,  subtypeVarAssigns.getRawClass();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Class  <?>  bound  =  type,  subtypeVarAssigns.getRawClass();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Class  <?>  bound  =  type,  subtypeVarAssigns.getRawClass();	  Class    <?>    bound    =    toClass,    subtypeVarAssigns.getRawClass();    	non-compiled	[CE]  ';'  expected	69	None	replace
155	[BUG]  [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  toClass);  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  toClass);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments(((ParameterizedType)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  toClass);	          return    getTypeArguments(((ParameterizedType)type).getComponentType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
156	[BUG]  [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getComponentType(),  toClass.isObject()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getComponentType(),  toClass.isObject()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments(((ParameterizedType)type).getComponentType(),  toClass.isObject()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	          return    getTypeArguments(((ParameterizedType)type).getComponentType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
157	[BUG]  [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments(((ParameterizedType)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);	          return    getTypeArguments(((ParameterizedType)type).getComponentType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
158	[BUG]  [BUGGY]  Type  bound  =  getParameterizedType((  ParameterizedType)type,  toClass);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getParameterizedType((  ParameterizedType)type,  toClass);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getParameterizedType((  ParameterizedType)type,  toClass);	  Type    bound    =    getParameterizedType((    ParameterizedType)type);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
159	[BUG]  [BUGGY]  Type  bound  =  getParameterizedType((  ParameterizedType)type,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getParameterizedType((  ParameterizedType)type,  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getParameterizedType((  ParameterizedType)type,  subtypeVarAssigns);	  Type    bound    =    getParameterizedType((    ParameterizedType)type);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
160	[BUG]  [BUGGY]  Type  bound  =  getTypeParameterizedType((  ParameterizedType)type);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeParameterizedType((  ParameterizedType)type);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeParameterizedType((  ParameterizedType)type);	  Type    bound    =    getParameterizedType((    ParameterizedType)type);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
161	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass.getComponentType());  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,Class<CAP#2>)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass.getComponentType());  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass.getComponentType());	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    toClass.isArray());    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,Class<CAP#2>)	5	None	replace
162	[BUG]  [BUGGY]  return  getTypeArguments(type,  toClass,  subtypeVarAssigns,  bound.isArray());  [CE]  cannot  find  symbol  bound  [FE]                IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments(type,  toClass,  subtypeVarAssigns,  bound.isArray());  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments(type,  toClass,  subtypeVarAssigns,  bound.isArray());	          return    getTypeArguments(type,    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol  bound	17	None	replace
163	[BUG]  [BUGGY]  Type  bound  =  toClass.getComponentType()?  toClass.getCOMponentType()  :  toClass;  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.getComponentType()?  toClass.getCOMponentType()  :  toClass;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass.getComponentType()?  toClass.getCOMponentType()  :  toClass;	          Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass;    Type    bound    =    toClass.isArray()?    toClass.getCOMponentType()    :    toClass;    	non-compiled	[CE]  incompatible  types	62	None	replace
164	[BUG]  [BUGGY]  Class  <?>  bound  =  toClass,  subtypeVarAssigns.getParameterType(0);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Class  <?>  bound  =  toClass,  subtypeVarAssigns.getParameterType(0);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Class  <?>  bound  =  toClass,  subtypeVarAssigns.getParameterType(0);	  Class    <?>    bound    =    toClass,    subtypeVarAssigns.getRawClass();    	non-compiled	[CE]  ';'  expected	69	None	replace
165	[BUG]  [BUGGY]  Class  <?>  bound  =  toClass,  subtypeVarAssigns.getParameterType(type);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Class  <?>  bound  =  toClass,  subtypeVarAssigns.getParameterType(type);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Class  <?>  bound  =  toClass,  subtypeVarAssigns.getParameterType(type);	  Class    <?>    bound    =    toClass,    subtypeVarAssigns.getRawClass();    	non-compiled	[CE]  ';'  expected	69	None	replace
166	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  toClass.getParameters();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  toClass.getParameters();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  toClass.getParameters();	  Type    bound    =(type    instanceof    ParameterizedType)?((    ParameterizedType)type).getBounds()    :    toClass;    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
167	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).toClass.getBounds()  :  toClass;  [CE]  cannot  find  symbol  toClass  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).toClass.getBounds()  :  toClass;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).toClass.getBounds()  :  toClass;	  Type    bound    =(type    instanceof    ParameterizedType)?((    ParameterizedType)type).getBounds()    :    toClass;    	non-compiled	[CE]  cannot  find  symbol  toClass	64	None	replace
168	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(type,(  ParameterizedType)type,  toClass,  subtypeVarAssigns);  [CE]  no  suitable  method  found  for  getTypeArguments(Type,ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments(type,(  ParameterizedType)type,  toClass,  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments(type,(  ParameterizedType)type,  toClass,  subtypeVarAssigns);	  Type    bound    =    getTypeArguments((    ParameterizedType)type,    subtypeVarAssigns);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Type,ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>)	60	None	replace
169	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);	  Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  ')'  expected	47	None	replace
170	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [CE]  no  suitable  method  found  for  getTypeArguments(Type,Class<CAP#1>,Map<TypeVariable<?>,Type>,Type)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments(type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments(type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);	  Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Type,Class<CAP#1>,Map<TypeVariable<?>,Type>,Type)	47	None	replace
171	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type;  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  name;  [CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type;  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  name;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    type;    Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  name;	  	non-compiled	[CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)	8	None	add
172	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type;  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  get;  [CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)  [FE]      IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type;  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  get;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    type;    Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  get;	  	non-compiled	[CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)	8	None	add
173	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type.isUnknownType());  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type.isUnknownType());  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type.isUnknownType());	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    type.isArray());    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
174	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(type,  toClass,  subtypeVarAssigns,  type);  [CE]  no  suitable  method  found  for  getTypeArguments(Type,Class<CAP#1>,Map<TypeVariable<?>,Type>,Type)  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments(type,  toClass,  subtypeVarAssigns,  type);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments(type,  toClass,  subtypeVarAssigns,  type);	  Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    toClass);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Type,Class<CAP#1>,Map<TypeVariable<?>,Type>,Type)	71	None	replace
175	[BUG]  [BUGGY]  Type  bound  =  toClass.isObject()?  toClass.getComponentType()  :  toClass;  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.isObject()?  toClass.getComponentType()  :  toClass;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass.isObject()?  toClass.getComponentType()  :  toClass;	          Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass;    Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass;    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
176	[BUG]  [BUGGY]  Type  bound  =  toClass,  type.getParameterType(0);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass,  type.getParameterType(0);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass,  type.getParameterType(0);	  Type    bound    =    toClass,    type.getRawType();    	non-compiled	[CE]  ';'  expected	42	None	replace
177	[BUG]  [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getComponentType(),  bound.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getComponentType(),  bound.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments(((ParameterizedType)type).getComponentType(),  bound.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	          return    getTypeArguments(((ParameterizedType)type).getComponentType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
178	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  toClass.getComponentType();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  toClass.getComponentType();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  toClass.getComponentType();	  Type    bound    =(type    instanceof    ParameterizedType)?((    ParameterizedType)type).getbound()    :    toClass;    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
179	[BUG]  [BUGGY]  Class  <?>  bound  =  this.subtypeVarAssigns.getRawClass();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Class  <?>  bound  =  this.subtypeVarAssigns.getRawClass();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Class  <?>  bound  =  this.subtypeVarAssigns.getRawClass();	  Class    <?>    bound    =    subtypeVarAssigns.getRawClass();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	57	None	replace
180	[BUG]  [BUGGY]  Type  bound  =  toClass.getComponentType()?  toClass.getComponentType()  :  null;  [CE]  incompatible  types  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.getComponentType()?  toClass.getComponentType()  :  null;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass.getComponentType()?  toClass.getComponentType()  :  null;	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    null;    	non-compiled	[CE]  incompatible  types	68	None	replace
181	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  toClass);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  toClass);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  toClass);	  Type    bound    =((    ParameterizedType)type).getbound(),    toClass);    	non-compiled	[CE]  ';'  expected	24	None	replace
182	[BUG]  [BUGGY]  return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  target);  [CE]  cannot  find  symbol  target  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  target);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  target);	  return    getParameterizedType((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    bounds);    	non-compiled	[CE]  cannot  find  symbol  target	2	None	replace
183	[BUG]  [BUGGY]  return  getTypeParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass);	  return    getParameterizedType((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    toClass);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
184	[BUG]  [BUGGY]  return  getTypeArguments(((ParameterizedType)type).isArray()?  toClass,  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  :  expected  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments(((ParameterizedType)type).isArray()?  toClass,  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments(((ParameterizedType)type).isArray()?  toClass,  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	          return    getTypeArguments(((ParameterizedType)type).isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  :  expected	13	None	replace
185	[BUG]  [BUGGY]  return  getTypeArguments(((ParameterizedType)type).isObject()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments(((ParameterizedType)type).isObject()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments(((ParameterizedType)type).isObject()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	          return    getTypeArguments(((ParameterizedType)type).isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
186	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getRawClass()  :  ToClass.class;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getRawClass()  :  ToClass.class;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getRawClass()  :  ToClass.class;	  Type    bound    =(type    instanceof    ParameterizedType)?((    ParameterizedType)type).getRawClass()    :    null;    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
187	[BUG]  [BUGGY]  Type  bound  =  this.bounds.getRawType();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  this.bounds.getRawType();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  this.bounds.getRawType();	  Type    bound    =    type.getRawType();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	40	None	replace
188	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type,  bounds);  [CE]  cannot  find  symbol  bounds  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type,  bounds);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type,  bounds);	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  cannot  find  symbol  bounds	37	None	replace
189	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(type,(ParameterizedType)toClass);  [CE]  inconvertible  types  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments(type,(ParameterizedType)toClass);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments(type,(ParameterizedType)toClass);	  Type    bound    =    getTypeArguments(type,(    ParameterizedType)type);    	non-compiled	[CE]  inconvertible  types	19	None	replace
190	[BUG]  [BUGGY]  Type  bound  =  toClass.isInterface()?  type.getComponentType()  :  toClass;  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.isInterface()?  type.getComponentType()  :  toClass;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass.isInterface()?  type.getComponentType()  :  toClass;	  Type    bound    =    toClass.isInterface()?    toClass.getComponentType()    :    toClass;    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
191	[BUG]  [BUGGY]  Type  bound  =  toClass.isInterface()?  toClass.getParameterType()  :  toClass;  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.isInterface()?  toClass.getParameterType()  :  toClass;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass.isInterface()?  toClass.getParameterType()  :  toClass;	  Type    bound    =    toClass.isInterface()?    toClass.getComponentType()    :    toClass;    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
192	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isObject()?  type.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isObject()?  type.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isObject()?  type.getComponentType()  :  toClass,  subtypeVarAssigns);	  Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass.isObject()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
193	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass);  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  Class  <?>)type,  toClass);	  Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass);    	non-compiled	[CE]  incompatible  types	18	None	replace
194	[BUG]  [BUGGY]  if(type.isArray())  {  return  getTypeArguments(((ParameterizedType)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CE]  cannot  find  symbol  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  if(type.isArray())  {  return  getTypeArguments(((ParameterizedType)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	if(type.isArray())  {  return  getTypeArguments(((ParameterizedType)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }	  if(toClass.isArray())    {    return    getTypeArguments(((ParameterizedType)type).getComponentType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    }    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
195	[BUG]  [BUGGY]  try  {  return  getTypeArguments(((ParameterizedType)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  try  {  return  getTypeArguments(((ParameterizedType)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	try  {  return  getTypeArguments(((ParameterizedType)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }	  if(toClass.isArray())    {    return    getTypeArguments(((ParameterizedType)type).getComponentType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	70	None	replace
196	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Class  <?>  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass;  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	add	Class  <?>  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass;	  if(toClass.isArray())    {    return    getTypeArguments(((ParameterizedType)type).getComponentType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    }    	compilable	  [FE]  IllegalStateException  	70	5	replace
197	[BUG]  [BUGGY]  Class  <?>  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass;  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Class  <?>  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass;  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Class  <?>  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass;	  if(toClass.isArray())    {    return    getTypeArguments(((ParameterizedType)type).getComponentType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    }    	compilable	  [FE]  IllegalStateException  	70	5	replace
198	[BUG]  [BUGGY]  if(type.isArray())  {  return  getTypeArguments(((ParameterizedType)type).getComponentType(),  toClass.isObject()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  if(type.isArray())  {  return  getTypeArguments(((ParameterizedType)type).getComponentType(),  toClass.isObject()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	if(type.isArray())  {  return  getTypeArguments(((ParameterizedType)type).getComponentType(),  toClass.isObject()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }	  if(toClass.isArray())    {    return    getTypeArguments(((ParameterizedType)type).getComponentType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    }    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
199	[BUG]  [BUGGY]  Class  <?>  bound  =  toClass,  type.getParameterType(0);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Class  <?>  bound  =  toClass,  type.getParameterType(0);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Class  <?>  bound  =  toClass,  type.getParameterType(0);	  Class    <?>    bound    =    toClass,    type.getRawClass();    	non-compiled	[CE]  ';'  expected	20	None	replace
200	[BUG]  [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getParameters(),  bound.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getParameters(),  bound.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments(((ParameterizedType)type).getParameters(),  bound.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  return    getTypeArguments(((ParameterizedType)type).getParameters(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
201	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?((  Class  <?>)type).getbounds()  :  toClass;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =(type  instanceof  Class  <?>)?((  Class  <?>)type).getbounds()  :  toClass;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  Class  <?>)?((  Class  <?>)type).getbounds()  :  toClass;	  Type    bound    =(type    instanceof    ParameterizedType)?((    ParameterizedType)type).getbounds()    :    toClass;    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
202	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  null,  bounds);  [CE]  cannot  find  symbol  bounds  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  null,  bounds);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  null,  bounds);	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    null);    	non-compiled	[CE]  cannot  find  symbol  bounds	38	None	replace
203	[BUG]  [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getParameterType(),  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getParameterType(),  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments(((ParameterizedType)type).getParameterType(),  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns);	          return    getTypeArguments(((ParameterizedType)type).getParameterType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
204	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  null;  Type  bound  =  toClass.isArray()?  toClass.getCOMponentType()  :  null;  [CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  null;  Type  bound  =  toClass.isArray()?  toClass.getCOMponentType()  :  null;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    null;    Type  bound  =  toClass.isArray()?  toClass.getCOMponentType()  :  null;	  	non-compiled	[CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)	67	None	add
205	[BUG]  [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getDeclaredType(),  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getDeclaredType(),  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments(((ParameterizedType)type).getDeclaredType(),  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns);	          return    getTypeArguments(((ParameterizedType)type).getDeclaredType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
206	[BUG]  [BUGGY]  Type  bound  =  toClass  instanceof  ParameterizedType?  ((  ParameterizedType)type).getRawType()  :  toClass.getRawType();  [CE]  inconvertible  types  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass  instanceof  ParameterizedType?  ((  ParameterizedType)type).getRawType()  :  toClass.getRawType();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass  instanceof  ParameterizedType?  ((  ParameterizedType)type).getRawType()  :  toClass.getRawType();	  Type    bound    =    type    instanceof    ParameterizedType?    ((    ParameterizedType)type).getRawType()    :    toClass.getRawType();    	non-compiled	[CE]  inconvertible  types	78	None	replace
207	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  ((  ParameterizedType)type).getRawType()  :  type.getRawType();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  ((  ParameterizedType)type).getRawType()  :  type.getRawType();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass.isArray()?  ((  ParameterizedType)type).getRawType()  :  type.getRawType();	  Type    bound    =    type    instanceof    ParameterizedType?    ((    ParameterizedType)type).getRawType()    :    toClass.getRawType();    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
208	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  Object.class.isArray(),  toClass);  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,boolean,Class<CAP#2>)  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  Object.class.isArray(),  toClass);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  Object.class.isArray(),  toClass);	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    Object.class.isArray());    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,boolean,Class<CAP#2>)	74	None	replace
209	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  Object.class);  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,Class<Object>)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  Object.class);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  Object.class);	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    Object.class.isArray());    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,Class<Object>)	74	None	replace
210	[BUG]  [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  Object.class.isArray());  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,boolean)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  Object.class.isArray());  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  Class  <?>)type,  toClass,  subtypeVarAssigns,  Object.class.isArray());	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    Object.class.isArray());    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>,Class<CAP#2>,Map<TypeVariable<?>,Type>,boolean)	74	None	replace
211	[BUG]  [BUGGY]  Type  bound  =(toClass  instanceof  ParameterizedType)?((  ParameterizedType)type).getRawClass()  :  type;  [CE]  inconvertible  types  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =(toClass  instanceof  ParameterizedType)?((  ParameterizedType)type).getRawClass()  :  type;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(toClass  instanceof  ParameterizedType)?((  ParameterizedType)type).getRawClass()  :  type;	  Type    bound    =(type    instanceof    ParameterizedType)?((    ParameterizedType)type).getRawClass()    :    toClass;    	non-compiled	[CE]  inconvertible  types	26	None	replace
212	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	          Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass;    Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass);    	non-compiled	[CE]  ';'  expected	30	None	replace
213	[BUG]  [BUGGY]  return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  target.isArray());  [CE]  cannot  find  symbol  target  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  target.isArray());  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  target.isArray());	  return    getParameterizedType((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    bound.isArray());    	non-compiled	[CE]  cannot  find  symbol  target	3	None	replace
214	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  bound.toClass;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  bound.toClass;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbound()  :  bound.toClass;	  Type    bound    =(type    instanceof    ParameterizedType)?((    ParameterizedType)type).getbound()    :    bound;    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
215	[BUG]  [BUGGY]  Type  bound  =((  ParameterizedType)type).getBounds(),  toClass.getComponentType();  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =((  ParameterizedType)type).getBounds(),  toClass.getComponentType();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =((  ParameterizedType)type).getBounds(),  toClass.getComponentType();	  Type    bound    =((    ParameterizedType)type).getBounds(),    toClass;    	non-compiled	[CE]  ';'  expected	33	None	replace
216	[BUG]  [BUGGY]  Type  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  toClass;  Type  bound  =  toClass.isInterface()?  toClass.getCOMponentType()  :  toClass;  [CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  toClass;  Type  bound  =  toClass.isInterface()?  toClass.getCOMponentType()  :  toClass;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type    bound    =    toClass.isInterface()?    toClass.getComponentType()    :    toClass;    Type  bound  =  toClass.isInterface()?  toClass.getCOMponentType()  :  toClass;	  	non-compiled	[CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)	11	None	add
217	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbounds()  :  Collections.EMPTY_LIST;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbounds()  :  Collections.EMPTY_LIST;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbounds()  :  Collections.EMPTY_LIST;	  Type    bound    =(type    instanceof    ParameterizedType)?((    ParameterizedType)type).getbounds()    :    null;    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
218	[BUG]  [BUGGY]  Class  <?>  bound  =  toClass,  subtypeVarAssigns.getRawClass(),  type);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Class  <?>  bound  =  toClass,  subtypeVarAssigns.getRawClass(),  type);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Class  <?>  bound  =  toClass,  subtypeVarAssigns.getRawClass(),  type);	  Class    <?>    bound    =    toClass,    subtypeVarAssigns.getRawClass();    	non-compiled	[CE]  ';'  expected	69	None	replace
219	[BUG]  [BUGGY]  Class  <?>  bound  =  toClass,  subtypeVarAssigns.getRawClass(),  type;  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Class  <?>  bound  =  toClass,  subtypeVarAssigns.getRawClass(),  type;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Class  <?>  bound  =  toClass,  subtypeVarAssigns.getRawClass(),  type;	  Class    <?>    bound    =    toClass,    subtypeVarAssigns.getRawClass();    	non-compiled	[CE]  ';'  expected	69	None	replace
220	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns;  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns;	  Type    bound    =    toClass.isAssignableFrom(type)?    toClass.getComponentType()    :    toClass;    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	10	None	replace
221	[BUG]  [BUGGY]  Type  bound  =  type  instanceof  ParameterizedType?((  ParameterizedType)type).getRawType()  :  type.getRawType();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  type  instanceof  ParameterizedType?((  ParameterizedType)type).getRawType()  :  type.getRawType();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  type  instanceof  ParameterizedType?((  ParameterizedType)type).getRawType()  :  type.getRawType();	  Type    bound    =    type.getRawType();    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
222	[BUG]  [BUGGY]  Type  bound  =  type  instanceof  ParameterizedType?  type.getRawType()  :  type.getRawType();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  type  instanceof  ParameterizedType?  type.getRawType()  :  type.getRawType();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  type  instanceof  ParameterizedType?  type.getRawType()  :  type.getRawType();	  Type    bound    =    type.getRawType();    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
223	[BUG]  [BUGGY]  Type  bound  =  toClass.getRawType()  instanceof  ParameterizedType?  ((  ParameterizedType)type).getRawType()  :  toClass.getRawType();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.getRawType()  instanceof  ParameterizedType?  ((  ParameterizedType)type).getRawType()  :  toClass.getRawType();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass.getRawType()  instanceof  ParameterizedType?  ((  ParameterizedType)type).getRawType()  :  toClass.getRawType();	  Type    bound    =    type    instanceof    ParameterizedType?    ((    ParameterizedType)type).getRawType()    :    toClass.getRawType();    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
224	[BUG]  [BUGGY]  Type  toClass  =  type.isArray()?  toClass.getComponentType()  :  toClass;  [CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  toClass  =  type.isArray()?  toClass.getComponentType()  :  toClass;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  toClass  =  type.isArray()?  toClass.getComponentType()  :  toClass;	          Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass;    Type    toClass    =    toClass.isArray()?    toClass.getComponentType()    :    toClass;    	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)	29	None	replace
225	[BUG]  [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getGenericComponentType(),  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments(((ParameterizedType)type).getGenericComponentType(),  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments(((ParameterizedType)type).getGenericComponentType(),  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns);	          return    getTypeArguments(((ParameterizedType)type).getGenericComponentType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
226	[BUG]  [BUGGY]  return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  Object.isArray());  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  Object.isArray());  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getParameterizedType((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  Object.isArray());	  return    getParameterizedType((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    bound.isArray());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
227	[BUG]  [BUGGY]  Class  <?>  bound  =  toClass,  type.getRawClass(),  subtypeVarAssigns);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Class  <?>  bound  =  toClass,  type.getRawClass(),  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Class  <?>  bound  =  toClass,  type.getRawClass(),  subtypeVarAssigns);	  Class    <?>    bound    =    toClass,    type.getRawClass();    	non-compiled	[CE]  ';'  expected	20	None	replace
228	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type,  false);  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,Type,boolean)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type,  false);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type,  false);	  Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    false);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,Type,boolean)	36	None	replace
229	[BUG]  [BUGGY]  Type  bound  =  getParameterizedType(type,(  ParameterizedType)type);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getParameterizedType(type,(  ParameterizedType)type);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getParameterizedType(type,(  ParameterizedType)type);	  Type    bound    =    getParameterizedType((    ParameterizedType)type);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
230	[BUG]  [BUGGY]  Type  bounds  =((  ParameterizedType)type).toBounds();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bounds  =((  ParameterizedType)type).toBounds();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bounds  =((  ParameterizedType)type).toBounds();	  Type    bounds    =((    ParameterizedType)type).getBounds();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
231	[BUG]  [BUGGY]  Type  bound  =((  ParameterizedType)type).getbound(),  toClass.isArray());  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =((  ParameterizedType)type).getbound(),  toClass.isArray());  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =((  ParameterizedType)type).getbound(),  toClass.isArray());	  Type    bound    =((    ParameterizedType)type).getbound(),    toClass);    	non-compiled	[CE]  ';'  expected	24	None	replace
232	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getRawClass()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getRawClass()  :  toClass,  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getRawClass()  :  toClass,  subtypeVarAssigns);	  Type    bound    =(type    instanceof    ParameterizedType)?((    ParameterizedType)type).getRawClass()    :    toClass;    	non-compiled	[CE]  ';'  expected	26	None	replace
233	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbounds()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbounds()  :  toClass,  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getbounds()  :  toClass,  subtypeVarAssigns);	  Type    bound    =(type    instanceof    ParameterizedType)?((    ParameterizedType)type).getbounds()    :    toClass;    	non-compiled	[CE]  ';'  expected	46	None	replace
234	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  0,  toClass);  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,int,Class<CAP#2>)  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  0,  toClass);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  0,  toClass);	  Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    0);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,int,Class<CAP#2>)	55	None	replace
235	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getRawClass()  :  type.toClass;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getRawClass()  :  type.toClass;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getRawClass()  :  type.toClass;	  Type    bound    =(type    instanceof    ParameterizedType)?((    ParameterizedType)type).getRawClass()    :    type;    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
236	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  toClass,  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  toClass,  subtypeVarAssigns);	  Type    bound    =(type    instanceof    ParameterizedType)?((    ParameterizedType)type).getBounds()    :    toClass;    	non-compiled	[CE]  ';'  expected	64	None	replace
237	[BUG]  [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.isArray()?  type.getRawType()  :  type;  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.isArray()?  type.getRawType()  :  type;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass,  subtypeVarAssigns.isArray()?  type.getRawType()  :  type;	  Type    bound    =    toClass,    type.getRawType();    	non-compiled	[CE]  ';'  expected	42	None	replace
238	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type,  toClass);  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,Type,Class<CAP#2>)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type,  toClass);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type,  toClass);	  Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,Type,Class<CAP#2>)	47	None	replace
239	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type  instanceof  ParameterizedType);  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,boolean)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type  instanceof  ParameterizedType);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type  instanceof  ParameterizedType);	  Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,boolean)	47	None	replace
240	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass,  bounds);  [CE]  cannot  find  symbol  bounds  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass,  bounds);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass,  bounds);	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    toClass);    	non-compiled	[CE]  cannot  find  symbol  bounds	39	None	replace
241	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass.isArray(),  toClass.isArray());  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,boolean,boolean)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass.isArray(),  toClass.isArray());  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass.isArray(),  toClass.isArray());	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    toClass.isArray());    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,boolean,boolean)	5	None	replace
242	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass.getComponentType(),  toClass.isArray());  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,Class<CAP#2>,boolean)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass.getComponentType(),  toClass.isArray());  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass.getComponentType(),  toClass.isArray());	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    toClass.isArray());    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,Class<CAP#2>,boolean)	5	None	replace
243	[BUG]  [BUGGY]  aughtExceptionHandler.handleType(((ParameterizedType)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  aughtExceptionHandler.handleType(((ParameterizedType)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	aughtExceptionHandler.handleType(((ParameterizedType)type).getComponentType(),  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  if(toClass.isArray())    {    return    getTypeArguments(((ParameterizedType)type).getComponentType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    }    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
244	[BUG]  [BUGGY]  if(type.isArray())  {  return  getTypeArguments(((ParameterizedType)type).getComponentType(),  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  if(type.isArray())  {  return  getTypeArguments(((ParameterizedType)type).getComponentType(),  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns);  }  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	if(type.isArray())  {  return  getTypeArguments(((ParameterizedType)type).getComponentType(),  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns);  }	  if(toClass.isArray())    {    return    getTypeArguments(((ParameterizedType)type).getComponentType(),    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    }    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
245	[BUG]  [BUGGY]  return  getTypeArguments(((ParameterizedType)type).isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [CE]  cannot  find  symbol  [FE]        IllegalStateException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments(((ParameterizedType)type).isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments(((ParameterizedType)type).isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);	          return    getTypeArguments(((ParameterizedType)type).isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
246	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  null,  toClass);  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,<null>,Class<CAP#2>)  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  null,  toClass);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  null,  toClass);	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    null);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,<null>,Class<CAP#2>)	38	None	replace
247	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type,  null);  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,Type,<null>)  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type,  null);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  type,  null);	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    null);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,Type,<null>)	38	None	replace
248	[BUG]  [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  bounds.clone();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  bounds.clone();  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =(type  instanceof  ParameterizedType)?((  ParameterizedType)type).getBounds()  :  bounds.clone();	  Type    bound    =(type    instanceof    ParameterizedType)?((    ParameterizedType)type).getBounds()    :    bounds;    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
249	[BUG]  [BUGGY]  Type  bound  =  toClass.getBounds(),((  ParameterizedType)type).getBounds(),  toClass;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.getBounds(),((  ParameterizedType)type).getBounds(),  toClass;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass.getBounds(),((  ParameterizedType)type).getBounds(),  toClass;	  Type    bound    =((    ParameterizedType)type).getBounds(),    toClass;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
250	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass,  toClass);  [CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,Class<CAP#2>,Class<CAP#3>)  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass,  toClass);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  toClass,  toClass);	  Type    bound    =    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    toClass);    	non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(ParameterizedType,Class<CAP#1>,Map<TypeVariable<?>,Type>,Class<CAP#2>,Class<CAP#3>)	71	None	replace
251	[BUG]  [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  bounds,  type);  [CE]  cannot  find  symbol  bounds  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  bounds,  type);  [BUGGY]      }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	return  getTypeArguments((  ParameterizedType)type,  toClass,  subtypeVarAssigns,  bounds,  type);	  return    getTypeArguments((    ParameterizedType)type,    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  cannot  find  symbol  bounds	37	None	replace
252	[BUG]  [BUGGY]  Type  bound  =((  ParameterizedType)type).getRawClass(),  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =((  ParameterizedType)type).getRawClass(),  toClass,  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =((  ParameterizedType)type).getRawClass(),  toClass,  subtypeVarAssigns);	  Type    bound    =((    ParameterizedType)type).getRawClass(),    toClass;    	non-compiled	[CE]  ';'  expected	25	None	replace
253	[BUG]  [BUGGY]  Type  bound  =  toClass.getRawClass(),((  ParameterizedType)type).getRawClass(),  toClass;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.getRawClass(),((  ParameterizedType)type).getRawClass(),  toClass;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass.getRawClass(),((  ParameterizedType)type).getRawClass(),  toClass;	  Type    bound    =((    ParameterizedType)type).getRawClass(),    toClass;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
254	[BUG]  [BUGGY]  Type  bound  =  toClass.isInterface()?  toClass.getName()  :  toClass;  [CE]  incompatible  types  [FE]    IllegalStateException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  toClass.isInterface()?  toClass.getName()  :  toClass;  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  toClass.isInterface()?  toClass.getName()  :  toClass;	  Type    bound    =    toClass.isInterface()?    toClass.getComponentType()    :    toClass;    	non-compiled	[CE]  incompatible  types	12	None	replace
255	[BUG]  [BUGGY]  Type  bound  =  type  instanceof  ParameterizedType?  toClass.getRawType()  :  toClass.getRawType(),  subtypeVarAssigns);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  type  instanceof  ParameterizedType?  toClass.getRawType()  :  toClass.getRawType(),  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  type  instanceof  ParameterizedType?  toClass.getRawType()  :  toClass.getRawType(),  subtypeVarAssigns);	  Type    bound    =    toClass.getRawType(),    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	41	None	replace
256	[BUG]  [BUGGY]  Type  bound  =  type  instanceof  ParameterizedType?  ((  ParameterizedType)type).getRawType()  :  toClass.getRawType(),  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {      [BUGGY]  Type  bound  =  type  instanceof  ParameterizedType?  ((  ParameterizedType)type).getRawType()  :  toClass.getRawType(),  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  }    if  (type  instanceof  WildcardType)  {  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	552	552	2	replace	Type  bound  =  type  instanceof  ParameterizedType?  ((  ParameterizedType)type).getRawType()  :  toClass.getRawType(),  subtypeVarAssigns);	  Type    bound    =    toClass.getRawType(),    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	41	None	replace
