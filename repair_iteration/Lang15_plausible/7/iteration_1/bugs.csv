bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    type  instanceof  Class  <?>)  {  return  isAssignable(getRawType((  Class  <?>)type),  toClass);  }  [CE]  not  a  statement  [FE]    AssertionError  [CONTEXT]    if  (toClass.equals(type))  {  return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  [BUGGY]    type  instanceof  Class  <?>)  {  return  isAssignable(getRawType((  Class  <?>)type),  toClass);  }  [BUGGY]  if  (type  instanceof  ParameterizedType)  {  return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	134	134	2	replace	    type  instanceof  Class  <?>)  {  return  isAssignable(getRawType((  Class  <?>)type),  toClass);  }		non-compiled	[CE]  not  a  statement	14	None	add
2	[BUG]  [BUGGY]    Type  toClass  =  getRawType(type);  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)  [FE]      AssertionError  [CONTEXT]    if  (toClass.equals(type))  {  return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  [BUGGY]    Type  toClass  =  getRawType(type);  [BUGGY]  if  (type  instanceof  ParameterizedType)  {  return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	134	134	2	replace	    Type  toClass  =  getRawType(type);		non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)	14	None	add
3	[BUG]  [BUGGY]    Class  <?>  toClass  =  getRawType(type);  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)  [FE]        AssertionError  [CONTEXT]    if  (toClass.equals(type))  {  return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  [BUGGY]    Class  <?>  toClass  =  getRawType(type);  [BUGGY]  if  (type  instanceof  ParameterizedType)  {  return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	134	134	2	replace	    Class  <?>  toClass  =  getRawType(type);		non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)	14	None	add
4	[BUG]  [BUGGY]    type  instanceof  Class  <?>)  {  return  isAssignable(getRawType((  TypeVariable  <?>)type),  toClass);  }  [CE]  not  a  statement  [FE]          AssertionError  [CONTEXT]    if  (toClass.equals(type))  {  return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  [BUGGY]    type  instanceof  Class  <?>)  {  return  isAssignable(getRawType((  TypeVariable  <?>)type),  toClass);  }  [BUGGY]  if  (type  instanceof  ParameterizedType)  {  return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	134	134	2	replace	    type  instanceof  Class  <?>)  {  return  isAssignable(getRawType((  TypeVariable  <?>)type),  toClass);  }		non-compiled	[CE]  not  a  statement	14	None	add
5	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  <?>)  {  [CE]  type  ParameterizedType  does  not  take  parameters  [FE]    AssertionError  [CONTEXT]    if  (toClass.equals(type))  {  return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  [BUGGY]  if(type  instanceof  ParameterizedType  <?>)  {  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	134	134	2	replace	if(type  instanceof  ParameterizedType  <?>)  {	if  (type  instanceof  ParameterizedType)  {  	non-compiled	[CE]  type  ParameterizedType  does  not  take  parameters	13	None	replace
6	[BUG]  [BUGGY]  if(toClass  instanceof  ParameterizedType)  {  [CE]  inconvertible  types  [FE]      AssertionError  [CONTEXT]    if  (toClass.equals(type))  {  return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  [BUGGY]  if(toClass  instanceof  ParameterizedType)  {  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	134	134	2	replace	if(toClass  instanceof  ParameterizedType)  {	if  (type  instanceof  ParameterizedType)  {  	non-compiled	[CE]  inconvertible  types	13	None	replace
7	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]    if  (toClass.equals(type))  {  return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  [BUGGY]  if(type  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	134	134	2	add	if(type  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>)  {	if  (type  instanceof  ParameterizedType)  {  	compilable	  [FE]  AssertionError  	13	2	replace
8	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>)  {  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]    if  (toClass.equals(type))  {  return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  [BUGGY]  if(type  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	134	134	2	replace	if(type  instanceof  ParameterizedType  ||  toClass  instanceof  Class  <?>)  {	if  (type  instanceof  ParameterizedType)  {  	compilable	  [FE]  AssertionError  	13	2	replace
9	[BUG]  [BUGGY]    Type  toClass  =  getRawType((  TypeVariable  <?>)type);  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)  [FE]    AssertionError  [CONTEXT]    if  (toClass.equals(type))  {  return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  [BUGGY]    Type  toClass  =  getRawType((  TypeVariable  <?>)type);  [BUGGY]  if  (type  instanceof  ParameterizedType)  {  return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	134	134	2	replace	    Type  toClass  =  getRawType((  TypeVariable  <?>)type);		non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)	14	None	add
10	[BUG]  [BUGGY]    type  instanceof  Class  <?>)  {  return  isAssignable(getRawType((  Class  <?>)type,  toClass);  }  [CE]  not  a  statement  [FE]      AssertionError  [CONTEXT]    if  (toClass.equals(type))  {  return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  [BUGGY]    type  instanceof  Class  <?>)  {  return  isAssignable(getRawType((  Class  <?>)type,  toClass);  }  [BUGGY]  if  (type  instanceof  ParameterizedType)  {  return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	134	134	2	replace	    type  instanceof  Class  <?>)  {  return  isAssignable(getRawType((  Class  <?>)type,  toClass);  }		non-compiled	[CE]  not  a  statement	14	None	add
11	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]    if  (toClass.equals(type))  {  return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  [BUGGY]  if(!(type  instanceof  ParameterizedType))  {  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	134	134	2	add	if(!(type  instanceof  ParameterizedType))  {	if  (type  instanceof  ParameterizedType)  {  	compilable	  [FE]  AssertionError  	13	2	replace
12	[BUG]  [BUGGY]  if(!(type  instanceof  ParameterizedType))  {  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]    if  (toClass.equals(type))  {  return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  [BUGGY]  if(!(type  instanceof  ParameterizedType))  {  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	134	134	2	replace	if(!(type  instanceof  ParameterizedType))  {	if  (type  instanceof  ParameterizedType)  {  	compilable	  [FE]  AssertionError  	13	2	replace
13	[BUG]  [BUGGY]  if(type  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType)  {  [CE]  inconvertible  types  [FE]    AssertionError  [CONTEXT]    if  (toClass.equals(type))  {  return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  [BUGGY]  if(type  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType)  {  [BUGGY]    return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	134	134	2	replace	if(type  instanceof  ParameterizedType  ||  toClass  instanceof  ParameterizedType)  {	if  (type  instanceof  ParameterizedType)  {  	non-compiled	[CE]  inconvertible  types	13	None	replace
14	[BUG]  [BUGGY]    Type  type  =  getRawType((  TypeVariable  <?>)type);  [CE]  variable  type  is  already  defined  in  method  isAssignable(Type,Class<?>)  [FE]    AssertionError  [CONTEXT]    if  (toClass.equals(type))  {  return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  [BUGGY]    Type  type  =  getRawType((  TypeVariable  <?>)type);  [BUGGY]  if  (type  instanceof  ParameterizedType)  {  return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	134	134	2	replace	    Type  type  =  getRawType((  TypeVariable  <?>)type);		non-compiled	[CE]  variable  type  is  already  defined  in  method  isAssignable(Type,Class<?>)	14	None	add
15	[BUG]  [BUGGY]    Type  toClass  =  getRawType(type,  toClass);  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)  [FE]      AssertionError  [CONTEXT]    if  (toClass.equals(type))  {  return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  [BUGGY]    Type  toClass  =  getRawType(type,  toClass);  [BUGGY]  if  (type  instanceof  ParameterizedType)  {  return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	134	134	2	replace	    Type  toClass  =  getRawType(type,  toClass);		non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)	14	None	add
16	[BUG]  [BUGGY]    Class  <?>  toClass  =  getRawType(type,  toClass);  [CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)  [FE]        AssertionError  [CONTEXT]    if  (toClass.equals(type))  {  return  true;  }  if  (type  instanceof  Class<?>)  {  return  ClassUtils.isAssignable((Class<?>)  type,  toClass);  }  [BUGGY]    Class  <?>  toClass  =  getRawType(type,  toClass);  [BUGGY]  if  (type  instanceof  ParameterizedType)  {  return  isAssignable(getRawType((ParameterizedType)  type),  toClass);  }  if  (type  instanceof  TypeVariable<?>)  {    for  (Type  bound  :  ((TypeVariable<?>)  type).getBounds())  {  if  (isAssignable(bound,  toClass))  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  Class<?>  toClass  [VARIABLES]  Type  bound  type  boolean  Class  toClass  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	134	134	2	replace	    Class  <?>  toClass  =  getRawType(type,  toClass);		non-compiled	[CE]  variable  toClass  is  already  defined  in  method  isAssignable(Type,Class<?>)	14	None	add
