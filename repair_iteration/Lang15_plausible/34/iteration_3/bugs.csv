bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);	          Type    lowerBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type    lowerBound    =    substituteTypeVariables(toBound,    toUpperBounds);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
2	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds(typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds(typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBound.getUpperBounds(typeVarAssigns);	  Type[]    lowerBounds    =    toBound.getLowerBounds(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
3	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getLowerBounds(typeVarAssigns,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBound.getLowerBounds(typeVarAssigns,  toUpperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBound.getLowerBounds(typeVarAssigns,  toUpperBounds);	  Type[]    lowerBounds    =    toBound.getLowerBounds(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
4	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getLowerBounds(typeVarAssigns,  toBound);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBound.getLowerBounds(typeVarAssigns,  toBound);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBound.getLowerBounds(typeVarAssigns,  toBound);	  Type[]    lowerBounds    =    toBound.getLowerBounds(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
5	[BUG]  [BUGGY]  Type  lowerBounds  =  toUpperBounds.get(toBound);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toUpperBounds.get(toBound);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toUpperBounds.get(toBound);	  Type    lowerBounds    =    toLowerBounds.get(toBound);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
6	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.get(toLowerBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.get(toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.get(toLowerBounds);	  Type    lowerBounds    =    toLowerBounds.get(toBound);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
7	[BUG]  [BUGGY]  for  (Type  bound  :  toBound.typeVarAssigns)  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for  (Type  bound  :  toBound.typeVarAssigns)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for  (Type  bound  :  toBound.typeVarAssigns)  {	  for    (Type    bound    :    toBound.types)    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	16	None	replace
8	[BUG]  [BUGGY]  for  (Type  toBound  :  toBound.types)  {  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for  (Type  toBound  :  toBound.types)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for  (Type  toBound  :  toBound.types)  {	  for    (Type    bound    :    toBound.types)    {    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	16	None	replace
9	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  1]);  [CE]  ']'  expected  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  1]);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  1]);	  Type[]    lowerBounds    =    toLowerBounds.toArray(new    Type[typeVarAssigns.size()    +    1]);    	non-compiled	[CE]  ']'  expected	32	None	replace
10	[BUG]  [BUGGY]  Type  lowerBound  =  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns);	          Type    lowerBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type    lowerBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
11	[BUG]  [BUGGY]  Type  lowerBound  =  substituteTypeVariables(toBound,  toLowerBounds);  Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  substituteTypeVariables(toBound,  toLowerBounds);  Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  substituteTypeVariables(toBound,  toLowerBounds);  Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);	          Type    lowerBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type    upperBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
12	[BUG]  [BUGGY]  Type  lowerBound  =  substituteTypeVariables(toBound,  toWildcardType);  Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  substituteTypeVariables(toBound,  toWildcardType);  Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  substituteTypeVariables(toBound,  toWildcardType);  Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);	          Type    lowerBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type    upperBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
13	[BUG]  [BUGGY]  Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);	          Type    lowerBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type    upperBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
14	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toLowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);	  Type    toLowerBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
15	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  toUpperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toLowerBounds  =  substituteTypeVariables(toBound,  toUpperBounds);	  Type    toLowerBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
16	[BUG]  [BUGGY]  Type  toLowerBounds  =  typeVarAssigns.subtract(toBound,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toLowerBounds  =  typeVarAssigns.subtract(toBound,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toLowerBounds  =  typeVarAssigns.subtract(toBound,  toLowerBounds);	  Type    toLowerBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
17	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  false);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  false);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toLowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  false);	  Type    toLowerBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
18	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getLeadingBounds();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBound.getLeadingBounds();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBound.getLeadingBounds();	  Type[]    lowerBounds    =    toBound.getUpperBounds();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
19	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getRangeBounds();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBound.getRangeBounds();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBound.getRangeBounds();	  Type[]    lowerBounds    =    toBound.getUpperBounds();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
20	[BUG]  [BUGGY]  Type  lowerBounds  =  replaceTypeVariables(toBound,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  replaceTypeVariables(toBound,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  replaceTypeVariables(toBound,  toLowerBounds);	  Type    lowerBounds    =    replaceTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
21	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.replaceTypeVariables(typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.replaceTypeVariables(typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.replaceTypeVariables(typeVarAssigns);	  Type    lowerBounds    =    replaceTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
22	[BUG]  [BUGGY]  Type  lowerBounds  =  replacementTypeVariables(toBound,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  replacementTypeVariables(toBound,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  replacementTypeVariables(toBound,  toLowerBounds);	  Type    lowerBounds    =    replaceTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
23	[BUG]  [BUGGY]  Type  lowerBound  =  toBound.subtractTypeVariables(typeVarAssigns,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  toBound.subtractTypeVariables(typeVarAssigns,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  toBound.subtractTypeVariables(typeVarAssigns,  toLowerBounds);	  Type    lowerBound    =    toBound.subtractTypeVariables(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
24	[BUG]  [BUGGY]  Type  lowerBound  =  toBound.subtractTypeVariables(toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  toBound.subtractTypeVariables(toBound,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  toBound.subtractTypeVariables(toBound,  typeVarAssigns);	  Type    lowerBound    =    toBound.subtractTypeVariables(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
25	[BUG]  [BUGGY]  Type  lowerBound  =  toBound.subtractTypeVariables(typeVarAssigns,  toBound);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  toBound.subtractTypeVariables(typeVarAssigns,  toBound);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  toBound.subtractTypeVariables(typeVarAssigns,  toBound);	  Type    lowerBound    =    toBound.subtractTypeVariables(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
26	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.get(typeVarAssigns,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.get(typeVarAssigns,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.get(typeVarAssigns,  toLowerBounds);	  Type    lowerBounds    =    toLowerBounds.get(typeVarAssigns,    toBound);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
27	[BUG]  [BUGGY]  Type  toBound  =  toLowerBounds.get(typeVarAssigns,  toBound);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toBound  =  toLowerBounds.get(typeVarAssigns,  toBound);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toBound  =  toLowerBounds.get(typeVarAssigns,  toBound);	  Type    lowerBounds    =    toLowerBounds.get(typeVarAssigns,    toBound);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
28	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  ]),  toBound);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  ]),  toBound);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  ]),  toBound);	  Type[]    lowerBounds    =    toLowerBounds.toArray(new    Type[typeVarAssigns.size()    ]));    	non-compiled	[CE]  ';'  expected	33	None	replace
29	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toUpperBounds.toArray(new  Type[typeVarAssigns.size()  ]));  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toUpperBounds.toArray(new  Type[typeVarAssigns.size()  ]));  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toUpperBounds.toArray(new  Type[typeVarAssigns.size()  ]));	  Type[]    lowerBounds    =    toLowerBounds.toArray(new    Type[typeVarAssigns.size()    ]));    	non-compiled	[CE]  ';'  expected	33	None	replace
30	[BUG]  [BUGGY]  Type  lowerBound  =  substituteTypeVariables(toBound,  toLowerBounds,  typeVarAssigns,  wildcardType);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  substituteTypeVariables(toBound,  toLowerBounds,  typeVarAssigns,  wildcardType);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  substituteTypeVariables(toBound,  toLowerBounds,  typeVarAssigns,  wildcardType);	  Type    lowerBound    =    substituteTypeVariables(toBound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
31	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.getRawClass(typeVarAssigns,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.getRawClass(typeVarAssigns,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.getRawClass(typeVarAssigns,  toLowerBounds);	  Type    lowerBounds    =    toBound.getRawClass(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
32	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.getRawClass(typeVarAssigns,  toBound);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.getRawClass(typeVarAssigns,  toBound);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.getRawClass(typeVarAssigns,  toBound);	  Type    lowerBounds    =    toBound.getRawClass(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
33	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.getRawClass(typeVarAssigns,  toWildcardType);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.getRawClass(typeVarAssigns,  toWildcardType);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.getRawClass(typeVarAssigns,  toWildcardType);	  Type    lowerBounds    =    toBound.getRawClass(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
34	[BUG]  [BUGGY]  for(Type  bound  :  toBound.toLowerBounds)  {  [CE]  cannot  find  symbol  toLowerBounds  [FE]          AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for(Type  bound  :  toBound.toLowerBounds)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for(Type  bound  :  toBound.toLowerBounds)  {	  for(Type    bound    :    toWildcardType.toLowerBounds)    {    	non-compiled	[CE]  cannot  find  symbol  toLowerBounds	42	None	replace
35	[BUG]  [BUGGY]  for(Type  bound  :  toWildcardType.toUpperBounds)  {  [CE]  cannot  find  symbol  toUpperBounds  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for(Type  bound  :  toWildcardType.toUpperBounds)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for(Type  bound  :  toWildcardType.toUpperBounds)  {	  for(Type    bound    :    toWildcardType.toLowerBounds)    {    	non-compiled	[CE]  cannot  find  symbol  toUpperBounds	42	None	replace
36	[BUG]  [BUGGY]  for(Type  toBound  :  toWildcardType.toUpperBounds)  {  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for(Type  toBound  :  toWildcardType.toUpperBounds)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for(Type  toBound  :  toWildcardType.toUpperBounds)  {	  for(Type    bound    :    toWildcardType.toLowerBounds)    {    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	42	None	replace
37	[BUG]  [BUGGY]  for(Type  bound  :  toWildcardType.typeVarAssigns)  {  [CE]  cannot  find  symbol  typeVarAssigns  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for(Type  bound  :  toWildcardType.typeVarAssigns)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for(Type  bound  :  toWildcardType.typeVarAssigns)  {	  for(Type    bound    :    toWildcardType.toLowerBounds)    {    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	42	None	replace
38	[BUG]  [BUGGY]  Type[]  upperBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  +  1]);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  upperBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  +  1]);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  upperBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  +  1]);	  Type[]    upperBounds    =    toLowerBounds.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
39	[BUG]  [BUGGY]  for  (Type  toBound  :  toBound.type)  {  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for  (Type  toBound  :  toBound.type)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for  (Type  toBound  :  toBound.type)  {	  for    (Type    bound    :    toBound.type)    {    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	15	None	replace
40	[BUG]  [BUGGY]  for  (Type  bound  :  toBound.type,  wildcardType)  {  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for  (Type  bound  :  toBound.type,  wildcardType)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for  (Type  bound  :  toBound.type,  wildcardType)  {	  for    (Type    bound    :    toBound.type)    {    	non-compiled	[CE]  ')'  expected	15	None	replace
41	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getRightBounds();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBound.getRightBounds();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBound.getRightBounds();	  Type[]    lowerBounds    =    toBound.getLeftBounds();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
42	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.getBaseType();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.getBaseType();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.getBaseType();	  Type    lowerBounds    =    toBound.getRawType();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
43	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.getLeftType();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.getLeftType();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.getLeftType();	  Type    lowerBounds    =    toBound.getRawType();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
44	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.clone();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBound.clone();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBound.clone();	  Type[]    lowerBounds    =    toLowerBounds.clone();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
45	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[lowerBounds.size()  ]);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[lowerBounds.size()  ]);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[lowerBounds.size()  ]);	  Type[]    lowerBounds    =    toLowerBounds.clone();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
46	[BUG]  [BUGGY]  for(Type  bound  :  toWildcardTypes)  {  [CE]  cannot  find  symbol  toWildcardTypes  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for(Type  bound  :  toWildcardTypes)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for(Type  bound  :  toWildcardTypes)  {	  for(Type    bound    :    toLowerBounds)    {    for(Type    bound    =    toLowerBounds)    {    	non-compiled	[CE]  cannot  find  symbol  toWildcardTypes	22	None	replace
47	[BUG]  [BUGGY]  Type  lowerBound  =  toBound.removeTypeVariables(typeVarAssigns,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  toBound.removeTypeVariables(typeVarAssigns,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  toBound.removeTypeVariables(typeVarAssigns,  toLowerBounds);	  Type    lowerBound    =    toBound.removeTypeVariables(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
48	[BUG]  [BUGGY]  Type  lowerBound  =  toBound.removeTypeVariables(typeVarAssigns,  toBound);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  toBound.removeTypeVariables(typeVarAssigns,  toBound);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  toBound.removeTypeVariables(typeVarAssigns,  toBound);	  Type    lowerBound    =    toBound.removeTypeVariables(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
49	[BUG]  [BUGGY]  Type  lowerBound  =  toBound.removeTypeVariables(toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  toBound.removeTypeVariables(toBound,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  toBound.removeTypeVariables(toBound,  typeVarAssigns);	  Type    lowerBound    =    toBound.removeTypeVariables(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
50	[BUG]  [BUGGY]  for(Type  toBound  :  toLowerBounds)  {  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  ]);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for(Type  toBound  :  toLowerBounds)  {  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  ]);  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for(Type  toBound  :  toLowerBounds)  {  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  ]);	  for(Type    bound    :    toLowerBounds)    {    Type[]    lowerBounds    =    toLowerBounds.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	82	None	replace
51	[BUG]  [BUGGY]  for(Type  toBound  :  toUpperBounds)  {  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  ]);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for(Type  toBound  :  toUpperBounds)  {  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  ]);  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for(Type  toBound  :  toUpperBounds)  {  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  ]);	  for(Type    bound    :    toLowerBounds)    {    Type[]    lowerBounds    =    toLowerBounds.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	82	None	replace
52	[BUG]  [BUGGY]  for  (Type  bound  :  toWildcardType.wildcards)  {  [CE]  cannot  find  symbol  wildcards  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for  (Type  bound  :  toWildcardType.wildcards)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for  (Type  bound  :  toWildcardType.wildcards)  {	  for    (Type    bound    :    toWildcardType.assigns)    {    	non-compiled	[CE]  cannot  find  symbol  wildcards	83	None	replace
53	[BUG]  [BUGGY]  for  (Type  bound  :  toWildcardType.wildcardAssigns)  {  [CE]  cannot  find  symbol  wildcardAssigns  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for  (Type  bound  :  toWildcardType.wildcardAssigns)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for  (Type  bound  :  toWildcardType.wildcardAssigns)  {	  for    (Type    bound    :    toWildcardType.assigns)    {    	non-compiled	[CE]  cannot  find  symbol  wildcardAssigns	83	None	replace
54	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toBound,  toUpperBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toBound,  toUpperBounds,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(toBound,  toUpperBounds,  typeVarAssigns);	  Type[]    lowerBounds    =    substituteTypeVariables(toBound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
55	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.subtractTypeVariables(typeVarAssigns,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBound.subtractTypeVariables(typeVarAssigns,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBound.subtractTypeVariables(typeVarAssigns,  toLowerBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(toBound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
56	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.subtractTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBound.subtractTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBound.subtractTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);	  Type[]    lowerBounds    =    substituteTypeVariables(toBound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
57	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  typeVarAssigns,  wildcardType);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  typeVarAssigns,  wildcardType);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  typeVarAssigns,  wildcardType);	  Type[]    lowerBounds    =    substituteTypeVariables(toBound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
58	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.subtract(toBound,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.subtract(toBound,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.subtract(toBound,  toLowerBounds);	  Type    lowerBounds    =    toBound.subtract(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
59	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.subtract(toBound,  typeVarAssigns,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.subtract(toBound,  typeVarAssigns,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.subtract(toBound,  typeVarAssigns,  toLowerBounds);	  Type    lowerBounds    =    toBound.subtract(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
60	[BUG]  [BUGGY]  Type  upperBounds  =  substituteTypeVariables(toBound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  upperBounds  =  substituteTypeVariables(toBound,  toUpperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  upperBounds  =  substituteTypeVariables(toBound,  toUpperBounds);	  Type    upperBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
61	[BUG]  [BUGGY]  Type  upperBounds  =  toBound.subtractTypeVariables(typeVarAssigns,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  upperBounds  =  toBound.subtractTypeVariables(typeVarAssigns,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  upperBounds  =  toBound.subtractTypeVariables(typeVarAssigns,  toLowerBounds);	  Type    upperBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
62	[BUG]  [BUGGY]  Type  upperBounds  =  toBound.subtractTypeVariables(typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  upperBounds  =  toBound.subtractTypeVariables(typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  upperBounds  =  toBound.subtractTypeVariables(typeVarAssigns);	  Type    upperBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
63	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toUpperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  toUpperBounds);	          Type    lowerBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type    lowerBound    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
64	[BUG]  [BUGGY]  Type  lowerBounds  =  toUpperBounds.subtractTypeVariables(toBound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toUpperBounds.subtractTypeVariables(toBound,  toUpperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toUpperBounds.subtractTypeVariables(toBound,  toUpperBounds);	  Type    lowerBounds    =    substituteTypeVariables(toBound,    toUpperBounds);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
65	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.subtractTypeVariables(typeVarAssigns,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.subtractTypeVariables(typeVarAssigns,  toUpperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.subtractTypeVariables(typeVarAssigns,  toUpperBounds);	  Type    lowerBounds    =    substituteTypeVariables(toBound,    toUpperBounds);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
66	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.subtractTypeVariables(typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.subtractTypeVariables(typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.subtractTypeVariables(typeVarAssigns);	  Type    lowerBounds    =    substituteTypeVariables(toBound,    toUpperBounds);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
67	[BUG]  [BUGGY]  Type  upperBounds  =  toBound.getUpperBounds();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  upperBounds  =  toBound.getUpperBounds();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  upperBounds  =  toBound.getUpperBounds();	  Type    upperBounds    =    toBound.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
68	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns);	  Type    toBound    =    substituteTypeVariables(toBound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
69	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toUpperBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toUpperBounds,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  toUpperBounds,  typeVarAssigns);	  Type    toBound    =    substituteTypeVariables(toBound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
70	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  typeVarAssigns,  wildcardType);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  typeVarAssigns,  wildcardType);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  typeVarAssigns,  wildcardType);	  Type    toBound    =    substituteTypeVariables(toBound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
71	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  toUpperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  toUpperBounds);	  Type    toBound    =    substituteTypeVariables(toBound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
72	[BUG]  [BUGGY]  For(Type  bound  :  toLowerBounds)  {  [CE]  ')'  expected  [FE]          AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  For(Type  bound  :  toLowerBounds)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	For(Type  bound  :  toLowerBounds)  {	  for(Type    bound    :    toLowerBounds)    {    For(Type    bound    :    toLowerBounds)    {    	non-compiled	[CE]  ')'  expected	20	None	replace
73	[BUG]  [BUGGY]  For(Type  bound  :  toBound)  {  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  For(Type  bound  :  toBound)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	For(Type  bound  :  toBound)  {	  for(Type    bound    :    toLowerBounds)    {    For(Type    bound    :    toLowerBounds)    {    	non-compiled	[CE]  ')'  expected	20	None	replace
74	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.subtract(typeVarAssigns,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBound.subtract(typeVarAssigns,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBound.subtract(typeVarAssigns,  toLowerBounds);	  Type[]    lowerBounds    =    toBound.subtract(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
75	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.subtract(toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBound.subtract(toBound,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBound.subtract(toBound,  typeVarAssigns);	  Type[]    lowerBounds    =    toBound.subtract(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
76	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.subtract(toLowerBounds);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBound.subtract(toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBound.subtract(toLowerBounds);	  Type[]    lowerBounds    =    toBound.subtract(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
77	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.subtract(toBound);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBound.subtract(toBound);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBound.subtract(toBound);	  Type[]    lowerBounds    =    toBound.subtract(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
78	[BUG]  [BUGGY]  Type[]  upperBounds  =  toBound.getUpperBounds();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  upperBounds  =  toBound.getUpperBounds();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  upperBounds  =  toBound.getUpperBounds();	  Type[]    upperBounds    =    toBound.getLowerBounds();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
79	[BUG]  [BUGGY]  Type  upperBounds  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  upperBounds  =  substituteTypeVariables(toBound,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  upperBounds  =  substituteTypeVariables(toBound,  typeVarAssigns);	  Type    lowerBounds    =    substituteTypeVariables(upperBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
80	[BUG]  [BUGGY]  Type[]  upperBounds  =  toLowerBounds.toArray(new  Type[toLowerBounds.size()  +  1]);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  upperBounds  =  toLowerBounds.toArray(new  Type[toLowerBounds.size()  +  1]);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  upperBounds  =  toLowerBounds.toArray(new  Type[toLowerBounds.size()  +  1]);	  Type[]    upperBounds    =    toLowerBounds.toArray(new    Type[toLowerBounds.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
81	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[toLowerBounds.size()  1]);  [CE]  ']'  expected  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[toLowerBounds.size()  1]);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[toLowerBounds.size()  1]);	  Type[]    lowerBounds    =    toLowerBounds.toArray(new    Type[toLowerBounds.size()    +    1]);    	non-compiled	[CE]  ']'  expected	23	None	replace
82	[BUG]  [BUGGY]  for  (Type  bound  :  toBound.toBounds)  {  [CE]  cannot  find  symbol  toBounds  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for  (Type  bound  :  toBound.toBounds)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for  (Type  bound  :  toBound.toBounds)  {	  for    (Type    bound    :    toWildcardType.toBounds)    {    	non-compiled	[CE]  cannot  find  symbol  toBounds	11	None	replace
83	[BUG]  [BUGGY]  for  (Type  toBound  :  toWildcardType.toBounds)  {  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for  (Type  toBound  :  toWildcardType.toBounds)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for  (Type  toBound  :  toWildcardType.toBounds)  {	  for    (Type    bound    :    toWildcardType.toBounds)    {    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	11	None	replace
84	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.subtractTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.subtractTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.subtractTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);	  Type    lowerBounds    =    substituteTypeVariables(lowerBound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
85	[BUG]  [BUGGY]  Type  lowerBounds  =  replaceTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  replaceTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  replaceTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);	  Type    lowerBounds    =    substituteTypeVariables(lowerBound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
86	[BUG]  [BUGGY]  Type  lowerBounds  =  replacementTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  replacementTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  replacementTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);	  Type    lowerBounds    =    substituteTypeVariables(lowerBound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
87	[BUG]  [BUGGY]  Type  lowerBound  =  substituteTypeVariables(toBound,  toUpperBounds,  wildcardType);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  substituteTypeVariables(toBound,  toUpperBounds,  wildcardType);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  substituteTypeVariables(toBound,  toUpperBounds,  wildcardType);	  Type    lowerBound    =    substituteTypeVariables(toBound,    toLowerBounds,    wildcardType);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
88	[BUG]  [BUGGY]  Type  toBounds  =  substituteTypeVariables(toBound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toBounds  =  substituteTypeVariables(toBound,  toUpperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toBounds  =  substituteTypeVariables(toBound,  toUpperBounds);	  Type    toBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
89	[BUG]  [BUGGY]  Type  toBounds  =  toBound.subtractTypeVariables(typeVarAssigns,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toBounds  =  toBound.subtractTypeVariables(typeVarAssigns,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toBounds  =  toBound.subtractTypeVariables(typeVarAssigns,  toLowerBounds);	  Type    toBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
90	[BUG]  [BUGGY]  Type  toBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);	  Type    toBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
91	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.getLeadingBounds();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.getLeadingBounds();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.getLeadingBounds();	  Type    lowerBounds    =    toBound.getUpperBounds();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
92	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.getRightBounds();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.getRightBounds();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.getRightBounds();	  Type    lowerBounds    =    toBound.getUpperBounds();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
93	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.subtractTypeVariables(typeVarAssigns,  toBound);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBound.subtractTypeVariables(typeVarAssigns,  toBound);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBound.subtractTypeVariables(typeVarAssigns,  toBound);	  Type[]    lowerBounds    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
94	[BUG]  [BUGGY]  Type[]  lowerBounds  =  replaceTypeVariables(toBound,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  replaceTypeVariables(toBound,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  replaceTypeVariables(toBound,  toLowerBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
95	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.subtractTypeVariables(typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBound.subtractTypeVariables(typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBound.subtractTypeVariables(typeVarAssigns);	  Type[]    lowerBounds    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
96	[BUG]  [BUGGY]  Type  lowerBounds  =  substituteTypeVariables(toBound,  toWildcardType,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  substituteTypeVariables(toBound,  toWildcardType,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  substituteTypeVariables(toBound,  toWildcardType,  toLowerBounds);	  Type    lowerBounds    =    substituteTypeVariables(toBound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
97	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns);	  Type    lowerBounds    =    substituteTypeVariables(toBound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
98	[BUG]  [BUGGY]  Type  lowerBound  =  replaceTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  replaceTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  replaceTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);	  Type    lowerBound    =    substituteTypeVariables(toBound,    toUpperBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
99	[BUG]  [BUGGY]  Type  lowerBound  =  toBound.subtractTypeVariables(typeVarAssigns,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  toBound.subtractTypeVariables(typeVarAssigns,  toUpperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  toBound.subtractTypeVariables(typeVarAssigns,  toUpperBounds);	  Type    lowerBound    =    substituteTypeVariables(toBound,    toUpperBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
100	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.subtractTypeVariables(lowerBound,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.subtractTypeVariables(lowerBound,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.subtractTypeVariables(lowerBound,  toLowerBounds);	  Type    lowerBounds    =    substituteTypeVariables(lowerBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
101	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.subtractTypeVariables(toBound,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.subtractTypeVariables(toBound,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.subtractTypeVariables(toBound,  toLowerBounds);	  Type    lowerBounds    =    substituteTypeVariables(lowerBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
102	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.getRawClass(),  typeVarAssigns,  toLowerBounds);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.getRawClass(),  typeVarAssigns,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.getRawClass(),  typeVarAssigns,  toLowerBounds);	  Type    lowerBounds    =    toBound.getRawClass(),    typeVarAssigns);    	non-compiled	[CE]  ';'  expected	43	None	replace
103	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.getRawClass(),  toLowerBounds);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.getRawClass(),  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.getRawClass(),  toLowerBounds);	  Type    lowerBounds    =    toBound.getRawClass(),    typeVarAssigns);    	non-compiled	[CE]  ';'  expected	43	None	replace
104	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.getRawClass(),  toWildcardType);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.getRawClass(),  toWildcardType);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.getRawClass(),  toWildcardType);	  Type    lowerBounds    =    toBound.getRawClass(),    typeVarAssigns);    	non-compiled	[CE]  ';'  expected	43	None	replace
105	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.getRawClass(),  toBound);  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.getRawClass(),  toBound);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.getRawClass(),  toBound);	  Type    lowerBounds    =    toBound.getRawClass(),    typeVarAssigns);    	non-compiled	[CE]  ';'  expected	43	None	replace
106	[BUG]  [BUGGY]  Type  upperBounds  =  toLowerBounds.get(toBound);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  upperBounds  =  toLowerBounds.get(toBound);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  upperBounds  =  toLowerBounds.get(toBound);	  Type    upperBounds    =    toLowerBounds.get(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
107	[BUG]  [BUGGY]  Type  upperBounds  =  toLowerBounds.get(typeVarAssigns,  toBound);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  upperBounds  =  toLowerBounds.get(typeVarAssigns,  toBound);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  upperBounds  =  toLowerBounds.get(typeVarAssigns,  toBound);	  Type    upperBounds    =    toLowerBounds.get(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
108	[BUG]  [BUGGY]  Type  upperBounds  =  toBound.get(typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  upperBounds  =  toBound.get(typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  upperBounds  =  toBound.get(typeVarAssigns);	  Type    upperBounds    =    toLowerBounds.get(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
109	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.subtract(toLowerBounds,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.subtract(toLowerBounds,  toUpperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.subtract(toLowerBounds,  toUpperBounds);	  Type    lowerBounds    =    toBound.subtract(toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
110	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.subtract(toUpperBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.subtract(toUpperBounds,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.subtract(toUpperBounds,  typeVarAssigns);	  Type    lowerBounds    =    toBound.subtract(toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
111	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.subtract(toLowerBounds,  toWildcardType);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.subtract(toLowerBounds,  toWildcardType);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.subtract(toLowerBounds,  toWildcardType);	  Type    lowerBounds    =    toBound.subtract(toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
112	[BUG]  [BUGGY]  Type  lowerBound  =  replacementTypeVariables(toBound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  replacementTypeVariables(toBound,  toUpperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  replacementTypeVariables(toBound,  toUpperBounds);	  Type    lowerBound    =    replacementTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
113	[BUG]  [BUGGY]  Type  lowerBound  =  replacementTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  replacementTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  replacementTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);	  Type    lowerBound    =    replacementTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
114	[BUG]  [BUGGY]  Type  lowerBound  =  replacementTypeVariables(toBound,  toLowerBounds,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  replacementTypeVariables(toBound,  toLowerBounds,  toUpperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  replacementTypeVariables(toBound,  toLowerBounds,  toUpperBounds);	  Type    lowerBound    =    replacementTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
115	[BUG]  [BUGGY]  Type  lowerBound  =  toBound.replacementTypeVariables(toBound,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  toBound.replacementTypeVariables(toBound,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  toBound.replacementTypeVariables(toBound,  toLowerBounds);	  Type    lowerBound    =    replacementTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
116	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.subtract(typeVarAssigns,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.subtract(typeVarAssigns,  toUpperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.subtract(typeVarAssigns,  toUpperBounds);	  Type    lowerBounds    =    toBound.subtract(typeVarAssigns,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
117	[BUG]  [BUGGY]  Type  toBound  =  toBound.subtract(typeVarAssigns,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toBound  =  toBound.subtract(typeVarAssigns,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toBound  =  toBound.subtract(typeVarAssigns,  toLowerBounds);	  Type    lowerBounds    =    toBound.subtract(typeVarAssigns,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
118	[BUG]  [BUGGY]  Type  toLowerBounds  =  toBound.subtract(typeVarAssigns,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toLowerBounds  =  toBound.subtract(typeVarAssigns,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toLowerBounds  =  toBound.subtract(typeVarAssigns,  toLowerBounds);	  Type    lowerBounds    =    toBound.subtract(typeVarAssigns,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
119	[BUG]  [BUGGY]          Type    lowerBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  Type  lowerBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CE]  variable  lowerBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]          Type    lowerBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  Type  lowerBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	                Type        lowerBound        =        substituteTypeVariables(toBound,        typeVarAssigns);        Type    upperBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type  lowerBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);	  	non-compiled	[CE]  variable  lowerBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	73	None	add
120	[BUG]  [BUGGY]          Type    lowerBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  Type  lowerBound  =  replaceTypeVariables(toBound,  typeVarAssigns);  Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CE]  variable  lowerBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]          Type    lowerBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  Type  lowerBound  =  replaceTypeVariables(toBound,  typeVarAssigns);  Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	                Type        lowerBound        =        substituteTypeVariables(toBound,        typeVarAssigns);        Type    upperBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type  lowerBound  =  replaceTypeVariables(toBound,  typeVarAssigns);  Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);	  	non-compiled	[CE]  variable  lowerBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	73	None	add
121	[BUG]  [BUGGY]          Type    lowerBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  Type  lowerBound  =  replacementTypeVariables(toBound,  typeVarAssigns);  Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CE]  variable  lowerBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]          Type    lowerBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  Type  lowerBound  =  replacementTypeVariables(toBound,  typeVarAssigns);  Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	                Type        lowerBound        =        substituteTypeVariables(toBound,        typeVarAssigns);        Type    upperBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type  lowerBound  =  replacementTypeVariables(toBound,  typeVarAssigns);  Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);	  	non-compiled	[CE]  variable  lowerBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	73	None	add
122	[BUG]  [BUGGY]          Type    lowerBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  Type  lowBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CE]  variable  upperBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]          Type    lowerBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  Type  lowBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	                Type        lowerBound        =        substituteTypeVariables(toBound,        typeVarAssigns);        Type    upperBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type  lowBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);	  	non-compiled	[CE]  variable  upperBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	73	None	add
123	[BUG]  [BUGGY]          Type    lowerBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CE]  variable  upperBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]          Type    lowerBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	                Type        lowerBound        =        substituteTypeVariables(toBound,        typeVarAssigns);        Type    upperBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);	  	non-compiled	[CE]  variable  upperBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	73	None	add
124	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.subtractTypeVariables(toBound,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBound.subtractTypeVariables(toBound,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBound.subtractTypeVariables(toBound,  toLowerBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
125	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toBound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toBound,  toUpperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(toBound,  toUpperBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
126	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.keySet();  for(Type  bound  :  toLowerBounds)  {  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.keySet();  for(Type  bound  :  toLowerBounds)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toLowerBounds.keySet();  for(Type  bound  :  toLowerBounds)  {	  for(Type    bound    :    toLowerBounds)    {    Type[]    lowerBounds    =    toLowerBounds.keySet();    for(Type    bound    :    toLowerBounds)    {    	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	80	None	replace
127	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.keySet();  for(Type  bound  :  toUpperBounds)  {  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.keySet();  for(Type  bound  :  toUpperBounds)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toLowerBounds.keySet();  for(Type  bound  :  toUpperBounds)  {	  for(Type    bound    :    toLowerBounds)    {    Type[]    lowerBounds    =    toLowerBounds.keySet();    for(Type    bound    :    toLowerBounds)    {    	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	80	None	replace
128	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.cloneType();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBound.cloneType();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBound.cloneType();	  Type[]    lowerBounds    =    toBound.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
129	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.cloneTypeTree();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBound.cloneTypeTree();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBound.cloneTypeTree();	  Type[]    lowerBounds    =    toBound.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
130	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.cloneTypeVariables();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBound.cloneTypeVariables();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBound.cloneTypeVariables();	  Type[]    lowerBounds    =    toBound.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
131	[BUG]  [BUGGY]  Type  lowerBounds  =  substituteTypeVariables(toBound,  toUpperBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  substituteTypeVariables(toBound,  toUpperBounds,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  substituteTypeVariables(toBound,  toUpperBounds,  typeVarAssigns);	  Type    lowerBounds    =    substituteTypeVariables(toBound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
132	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toWildcardType);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toWildcardType);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  toWildcardType);	          Type    lowerBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type    lowerBound    =    substituteTypeVariables(toBound,    toWildcardType);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
133	[BUG]  [BUGGY]  Type  toWildcardType  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toWildcardType  =  substituteTypeVariables(toBound,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toWildcardType  =  substituteTypeVariables(toBound,  typeVarAssigns);	          Type    lowerBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type    lowerBound    =    substituteTypeVariables(toBound,    toWildcardType);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
134	[BUG]  [BUGGY]  Type  lowerBound  =  substituteTypeVariables(toBound,  toWildcardType);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  substituteTypeVariables(toBound,  toWildcardType);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  substituteTypeVariables(toBound,  toWildcardType);	          Type    lowerBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type    lowerBound    =    substituteTypeVariables(toBound,    toWildcardType);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
135	[BUG]  [BUGGY]  Type  upperBounds  =  toBound.getOwnerBounds();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  upperBounds  =  toBound.getOwnerBounds();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  upperBounds  =  toBound.getOwnerBounds();	  Type    upperBounds    =    toBound.getLowerBounds();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
136	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBounds.cloneTypeTree();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBounds.cloneTypeTree();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBounds.cloneTypeTree();	  Type[]    lowerBounds    =    toLowerBounds.cloneTypeTree();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
137	[BUG]  [BUGGY]  for(Type  bound  :  toUpperBounds)  {  for(Type  bound  :  toUpperBounds)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for(Type  bound  :  toUpperBounds)  {  for(Type  bound  :  toUpperBounds)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for(Type    bound    :    toUpperBounds)    {    for(Type  bound  :  toUpperBounds)  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
138	[BUG]  [BUGGY]  for(Type  bound  :  toUpperBounds)  {  For(Type  bound  :  toUpperBounds)  {  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for(Type  bound  :  toUpperBounds)  {  For(Type  bound  :  toUpperBounds)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for(Type    bound    :    toUpperBounds)    {    For(Type  bound  :  toUpperBounds)  {	  	non-compiled	[CE]  ')'  expected	84	None	add
139	[BUG]  [BUGGY]  for(Type  bound  :  toUpperBounds)  {  for(Type  bound  =  toUpperBounds)  {  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for(Type  bound  :  toUpperBounds)  {  for(Type  bound  =  toUpperBounds)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for(Type    bound    :    toUpperBounds)    {    for(Type  bound  =  toUpperBounds)  {	  	non-compiled	[CE]  ';'  expected	84	None	add
140	[BUG]  [BUGGY]  for(Type  bound  :  toUpperBounds)  {  Type  bound  :  toUpperBounds)  {  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for(Type  bound  :  toUpperBounds)  {  Type  bound  :  toUpperBounds)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for(Type    bound    :    toUpperBounds)    {    Type  bound  :  toUpperBounds)  {	  	non-compiled	[CE]  ';'  expected	84	None	add
141	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.subtractTypeVariables(toBound,  toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.subtractTypeVariables(toBound,  toBound,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.subtractTypeVariables(toBound,  toBound,  typeVarAssigns);	  Type    lowerBounds    =    substituteTypeVariables(toBound,    toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
142	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.subtractTypeVariables(typeVarAssigns,  toBound);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.subtractTypeVariables(typeVarAssigns,  toBound);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.subtractTypeVariables(typeVarAssigns,  toBound);	  Type    lowerBounds    =    substituteTypeVariables(toBound,    toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
143	[BUG]  [BUGGY]  Type  toBound  =  toBound.subtract(typeVarAssigns,  toBound);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toBound  =  toBound.subtract(typeVarAssigns,  toBound);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toBound  =  toBound.subtract(typeVarAssigns,  toBound);	  Type    lowerBounds    =    toBound.subtract(typeVarAssigns,    toBound);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
144	[BUG]  [BUGGY]  Type  toBounds  =  toBound.subtract(typeVarAssigns,  toBound);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toBounds  =  toBound.subtract(typeVarAssigns,  toBound);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toBounds  =  toBound.subtract(typeVarAssigns,  toBound);	  Type    lowerBounds    =    toBound.subtract(typeVarAssigns,    toBound);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
145	[BUG]  [BUGGY]  Type  lowerBound  =  replaceTypeVariables(toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  replaceTypeVariables(toBound,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  replaceTypeVariables(toBound,  typeVarAssigns);	          Type    lowerBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type    lowerBound    =    replaceTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
146	[BUG]  [BUGGY]  Type  toBound  =  replaceTypeVariables(toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toBound  =  replaceTypeVariables(toBound,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toBound  =  replaceTypeVariables(toBound,  typeVarAssigns);	          Type    lowerBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type    lowerBound    =    replaceTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
147	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.subtract(toUpperBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.subtract(toUpperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.subtract(toUpperBounds);	  Type    lowerBounds    =    toBound.subtract(toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
148	[BUG]  [BUGGY]  Type  lowerBounds  =  substituteTypeVariables(toBound,  toBound);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  substituteTypeVariables(toBound,  toBound);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  substituteTypeVariables(toBound,  toBound);	  Type    lowerBounds    =    substituteTypeVariables(lowerBound,    toBound);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
149	[BUG]  [BUGGY]  Type  lowerBounds  =  replaceTypeVariables(toBound,  toBound);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  replaceTypeVariables(toBound,  toBound);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  replaceTypeVariables(toBound,  toBound);	  Type    lowerBounds    =    substituteTypeVariables(lowerBound,    toBound);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
150	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.subtractTypeVariables(toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.subtractTypeVariables(toBound,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.subtractTypeVariables(toBound,  typeVarAssigns);	  Type    lowerBounds    =    substituteTypeVariables(lowerBound,    toBound);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
151	[BUG]  [BUGGY]  Type  lowerBounds  =  replaceTypeVariables(toBound,  toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  replaceTypeVariables(toBound,  toBound,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  replaceTypeVariables(toBound,  toBound,  typeVarAssigns);	  Type    lowerBounds    =    substituteTypeVariables(lowerBound,    toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
152	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toBound,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  toBound,  typeVarAssigns);	  Type    lowerBounds    =    substituteTypeVariables(lowerBound,    toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
153	[BUG]  [BUGGY]  Type  lowerBound  =  substituteTypeVariables(toBound,  toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  substituteTypeVariables(toBound,  toBound,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  substituteTypeVariables(toBound,  toBound,  typeVarAssigns);	  Type    lowerBounds    =    substituteTypeVariables(lowerBound,    toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
154	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.toLowerBounds.cloneType();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBound.toLowerBounds.cloneType();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBound.toLowerBounds.cloneType();	  Type[]    lowerBounds    =    toLowerBounds.cloneType();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
155	[BUG]  [BUGGY]  Type  lowerBound  =  toBound.subtractTypeVariables(toBound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  toBound.subtractTypeVariables(toBound,  toUpperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  toBound.subtractTypeVariables(toBound,  toUpperBounds);	  Type    lowerBound    =    substituteTypeVariables(toBound,    toUpperBounds);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
156	[BUG]  [BUGGY]  Type  lowerBound  =  toBound.stripTypeVariables(toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  toBound.stripTypeVariables(toBound,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  toBound.stripTypeVariables(toBound,  typeVarAssigns);	  Type    lowerBound    =    toBound.stripTypeVariables(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
157	[BUG]  [BUGGY]  Type  lowerBound  =  toBound.stripTypeVariables(typeVarAssigns,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  toBound.stripTypeVariables(typeVarAssigns,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  toBound.stripTypeVariables(typeVarAssigns,  toLowerBounds);	  Type    lowerBound    =    toBound.stripTypeVariables(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
158	[BUG]  [BUGGY]  Type  lowerBound  =  toBound.stripTypeVariables(typeVarAssigns,  toBound);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  toBound.stripTypeVariables(typeVarAssigns,  toBound);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  toBound.stripTypeVariables(typeVarAssigns,  toBound);	  Type    lowerBound    =    toBound.stripTypeVariables(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
159	[BUG]  [BUGGY]  Type  lowerBound  =  toBound.stripTypeVariables(toWildcardType,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  toBound.stripTypeVariables(toWildcardType,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  toBound.stripTypeVariables(toWildcardType,  typeVarAssigns);	  Type    lowerBound    =    toBound.stripTypeVariables(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
160	[BUG]  [BUGGY]  Type  lowerBound  =  substituteTypeVariables(toBound,  toWildcardType,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  substituteTypeVariables(toBound,  toWildcardType,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  substituteTypeVariables(toBound,  toWildcardType,  toLowerBounds);	  Type    lowerBound    =    substituteTypeVariables(toBound,    toUpperBounds,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
161	[BUG]  [BUGGY]  Type  lowerBound  =  substituteTypeVariables(toBound,  toLowerBounds,  toWildcardType);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  substituteTypeVariables(toBound,  toLowerBounds,  toWildcardType);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  substituteTypeVariables(toBound,  toLowerBounds,  toWildcardType);	  Type    lowerBound    =    substituteTypeVariables(toBound,    toUpperBounds,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
162	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.values();  for(Type  bound  :  toLowerBounds)  {  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.values();  for(Type  bound  :  toLowerBounds)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toLowerBounds.values();  for(Type  bound  :  toLowerBounds)  {	  for(Type    bound    :    toLowerBounds)    {    Type[]    lowerBounds    =    toLowerBounds.values();    for(Type    bound    :    toLowerBounds)    {    	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	81	None	replace
163	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.getLeastBounds();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.getLeastBounds();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.getLeastBounds();	  Type    lowerBounds    =    toBound.getLeftBounds();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
164	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.getRightBound();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.getRightBound();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.getRightBound();	  Type    lowerBounds    =    toBound.getLeftBounds();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
165	[BUG]  [BUGGY]  Type  lowerBounds  =  toLowerBounds.get(toBound,  toWildcardType);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toLowerBounds.get(toBound,  toWildcardType);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toLowerBounds.get(toBound,  toWildcardType);	  Type    lowerBounds    =    toLowerBounds.get(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
166	[BUG]  [BUGGY]  Type  lowerBounds  =  toLowerBounds.get(toBound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toLowerBounds.get(toBound,  toUpperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toLowerBounds.get(toBound,  toUpperBounds);	  Type    lowerBounds    =    toLowerBounds.get(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
167	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.getUpperBounds(typeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.getUpperBounds(typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.getUpperBounds(typeVarAssigns);	  Type    lowerBounds    =    toBound.getLowerBounds(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
168	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.getLowerBounds(typeVarAssigns,  toBound);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.getLowerBounds(typeVarAssigns,  toBound);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.getLowerBounds(typeVarAssigns,  toBound);	  Type    lowerBounds    =    toBound.getLowerBounds(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
169	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.getLowerBounds(toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.getLowerBounds(toBound,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.getLowerBounds(toBound,  typeVarAssigns);	  Type    lowerBounds    =    toBound.getLowerBounds(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
170	[BUG]  [BUGGY]  for  (Type  toBound  :  toWildcardType)  {  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for  (Type  toBound  :  toWildcardType)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for  (Type  toBound  :  toWildcardType)  {	  for    (Type    bound    :    toWildcardType)    {    	non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	55	None	replace
171	[BUG]  [BUGGY]  Type  lowerBound  =  toBound.replaceTypeVariables(toBound,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  toBound.replaceTypeVariables(toBound,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  toBound.replaceTypeVariables(toBound,  toLowerBounds);	  Type    lowerBound    =    replaceTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
172	[BUG]  [BUGGY]  Type  lowerBound  =  replaceTypeVariables(toBound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  replaceTypeVariables(toBound,  toUpperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  replaceTypeVariables(toBound,  toUpperBounds);	  Type    lowerBound    =    replaceTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
173	[BUG]  [BUGGY]  Type  lowerBound  =  toBound.replaceTypeVariables(toLowerBounds,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  toBound.replaceTypeVariables(toLowerBounds,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  toBound.replaceTypeVariables(toLowerBounds,  toLowerBounds);	  Type    lowerBound    =    replaceTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
174	[BUG]  [BUGGY]  Type  toBound  =  toBound.subtractTypeVariables(typeVarAssigns,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toBound  =  toBound.subtractTypeVariables(typeVarAssigns,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toBound  =  toBound.subtractTypeVariables(typeVarAssigns,  toLowerBounds);	  Type    toBound    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
175	[BUG]  [BUGGY]  Type  toBound  =  replaceTypeVariables(toBound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toBound  =  replaceTypeVariables(toBound,  toUpperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toBound  =  replaceTypeVariables(toBound,  toUpperBounds);	  Type    toBound    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
176	[BUG]  [BUGGY]  Type  toBound  =  toBound.subtractTypeVariables(typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toBound  =  toBound.subtractTypeVariables(typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toBound  =  toBound.subtractTypeVariables(typeVarAssigns);	  Type    toBound    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
177	[BUG]  [BUGGY]  Type  lowerBound  =  substituteTypeVariables(toBound,  toWildcardType,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  substituteTypeVariables(toBound,  toWildcardType,  toUpperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  substituteTypeVariables(toBound,  toWildcardType,  toUpperBounds);	  Type    lowerBound    =    substituteTypeVariables(toBound,    toLowerBounds,    toUpperBounds);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
178	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toUpperBounds.toArray(new  Type[toLowerBounds.size()  ]));  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toUpperBounds.toArray(new  Type[toLowerBounds.size()  ]));  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toUpperBounds.toArray(new  Type[toLowerBounds.size()  ]));	  Type[]    lowerBounds    =    toLowerBounds.toArray(new    Type[toLowerBounds.size()    ]));    	non-compiled	[CE]  ';'  expected	24	None	replace
179	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.replaceTypeVariables(typeVarAssigns,  toBound);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.replaceTypeVariables(typeVarAssigns,  toBound);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.replaceTypeVariables(typeVarAssigns,  toBound);	  Type    lowerBounds    =    replaceTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
180	[BUG]  [BUGGY]  Type  lowerBounds  =  toUpperBounds  substituteTypeVariables(toBound,  toLowerBounds);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toUpperBounds  substituteTypeVariables(toBound,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toUpperBounds  substituteTypeVariables(toBound,  toLowerBounds);	  Type    lowerBounds    =    substituteTypeVariables(toBound,    toUpperBounds);    	non-compiled	[CE]  ';'  expected	61	None	replace
181	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  upperBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  upperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  upperBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(toBound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
182	[BUG]  [BUGGY]  for(Type  bound  =  toLowerBounds)  {  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for(Type  bound  =  toLowerBounds)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for(Type  bound  =  toLowerBounds)  {	  for(Type    bound    :    toLowerBounds)    {    for(Type    bound    =    toLowerBounds)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
183	[BUG]  [BUGGY]  Type[]  upperBounds  =  typeVarAssigns.getLowerBounds();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  upperBounds  =  typeVarAssigns.getLowerBounds();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  upperBounds  =  typeVarAssigns.getLowerBounds();	  Type[]    upperBounds    =    toBound.getLowerBounds();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
184	[BUG]  [BUGGY]  Type[]  lowerBounds  =  typeVarAssigns.cloneTypeTree();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  typeVarAssigns.cloneTypeTree();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  typeVarAssigns.cloneTypeTree();	  Type[]    lowerBounds    =    toLowerBounds.cloneTypeTree();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
185	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.subtract(lowerBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.subtract(lowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.subtract(lowerBounds);	  Type    lowerBounds    =    toBound.subtract(toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
186	[BUG]  [BUGGY]  Type  lowerBound  =  substituteTypeVariables(toBound,  toLowerBounds,  upperBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  substituteTypeVariables(toBound,  toLowerBounds,  upperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  substituteTypeVariables(toBound,  toLowerBounds,  upperBounds);	  Type    lowerBound    =    substituteTypeVariables(toBound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
187	[BUG]  [BUGGY]  Type  lowerBounds  =  typeVarAssigns.getUpperBounds();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  typeVarAssigns.getUpperBounds();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  typeVarAssigns.getUpperBounds();	  Type    lowerBounds    =    toBound.getUpperBounds();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
188	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.values();  for(Type  bound  :  toUpperBounds)  {  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.values();  for(Type  bound  :  toUpperBounds)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toLowerBounds.values();  for(Type  bound  :  toUpperBounds)  {	  for(Type    bound    :    toLowerBounds)    {    Type[]    lowerBounds    =    toLowerBounds.values();    for(Type    bound    :    toLowerBounds)    {    	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	81	None	replace
189	[BUG]  [BUGGY]  Type  lowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  upperBounds);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  upperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  upperBounds);	  Type    lowerBounds    =    substituteTypeVariables(toBound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
190	[BUG]  [BUGGY]  Type  lowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  typeVarAssigns,  wildcardType);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  typeVarAssigns,  wildcardType);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  typeVarAssigns,  wildcardType);	  Type    lowerBounds    =    substituteTypeVariables(toBound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
191	[BUG]  [BUGGY]  Type  lowerBounds  =  toUpperBounds.get(toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toUpperBounds.get(toBound,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toUpperBounds.get(toBound,  typeVarAssigns);	  Type    lowerBounds    =    toLowerBounds.get(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
192	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  lowerBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  lowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  lowerBounds);	  Type    toBound    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
193	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  upperBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  upperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  upperBounds);	  Type    toBound    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
194	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.getLeadingType();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.getLeadingType();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.getLeadingType();	  Type    lowerBounds    =    toBound.getRawType();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
195	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.getType();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.getType();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.getType();	  Type    lowerBounds    =    toBound.getRawType();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
196	[BUG]  [BUGGY]  Type  lowerBound  =  toBounds.replaceTypeVariables(toBound,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  toBounds.replaceTypeVariables(toBound,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  toBounds.replaceTypeVariables(toBound,  toLowerBounds);	  Type    lowerBound    =    replaceTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
197	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getTopBounds();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBound.getTopBounds();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBound.getTopBounds();	  Type[]    lowerBounds    =    toBound.getLeftBounds();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
198	[BUG]  [BUGGY]  Type  toWildcardType  =  substituteTypeVariables(toBound,  toWildcardType);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toWildcardType  =  substituteTypeVariables(toBound,  toWildcardType);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toWildcardType  =  substituteTypeVariables(toBound,  toWildcardType);	          Type    lowerBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type    lowerBound    =    substituteTypeVariables(toBound,    toWildcardType);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
199	[BUG]  [BUGGY]  for(Type  toBound  :  toLowerBounds)  {  Type[]  lowerBounds  =  toLowerBounds.keySet();  for(Type  bound  :  toLowerBounds)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for(Type  toBound  :  toLowerBounds)  {  Type[]  lowerBounds  =  toLowerBounds.keySet();  for(Type  bound  :  toLowerBounds)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for(Type  toBound  :  toLowerBounds)  {  Type[]  lowerBounds  =  toLowerBounds.keySet();  for(Type  bound  :  toLowerBounds)  {	  for(Type    bound    :    toLowerBounds)    {    Type[]    lowerBounds    =    toLowerBounds.keySet();    for(Type    bound    :    toLowerBounds)    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
200	[BUG]  [BUGGY]  Type  upperBounds  =  typeVarAssigns.getLowerBounds();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  upperBounds  =  typeVarAssigns.getLowerBounds();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  upperBounds  =  typeVarAssigns.getLowerBounds();	  Type    upperBounds    =    toBound.getLowerBounds();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
201	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  lowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  lowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  lowerBounds,  typeVarAssigns);	  Type    toBound    =    substituteTypeVariables(toBound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
202	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  upperBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  upperBounds,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  upperBounds,  typeVarAssigns);	  Type    toBound    =    substituteTypeVariables(toBound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
203	[BUG]  [BUGGY]  Type  toBound  =  replacementTypeVariables(toBound,  lowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toBound  =  replacementTypeVariables(toBound,  lowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toBound  =  replacementTypeVariables(toBound,  lowerBounds,  typeVarAssigns);	  Type    toBound    =    substituteTypeVariables(toBound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
204	[BUG]  [BUGGY]  Type  lowerBound  =  substituteTypeVariables(typeVarAssigns,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  substituteTypeVariables(typeVarAssigns,  toUpperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  substituteTypeVariables(typeVarAssigns,  toUpperBounds);	  Type    lowerBound    =    substituteTypeVariables(toBound,    toUpperBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
205	[BUG]  [BUGGY]  Type  lowerBounds  =  substituteTypeVariables(toBound,  lowBound);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  substituteTypeVariables(toBound,  lowBound);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  substituteTypeVariables(toBound,  lowBound);	  Type    lowerBounds    =    substituteTypeVariables(lowerBound,    toBound);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
206	[BUG]  [BUGGY]  Type  lowerBound  =  substituteTypeVariables(toBound,  toBound);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  substituteTypeVariables(toBound,  toBound);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  substituteTypeVariables(toBound,  toBound);	  Type    lowerBounds    =    substituteTypeVariables(lowerBound,    toBound);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
207	[BUG]  [BUGGY]  Type[]  upperBounds  =  toLowerBounds.toArray(new  Type[lowerBounds.size()  ]);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  upperBounds  =  toLowerBounds.toArray(new  Type[lowerBounds.size()  ]);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  upperBounds  =  toLowerBounds.toArray(new  Type[lowerBounds.size()  ]);	  Type[]    upperBounds    =    toLowerBounds.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
208	[BUG]  [BUGGY]  Type[]  upperBounds  =  toUpperBounds.toArray(new  Type[typeVarAssigns.size()  ]);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  upperBounds  =  toUpperBounds.toArray(new  Type[typeVarAssigns.size()  ]);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  upperBounds  =  toUpperBounds.toArray(new  Type[typeVarAssigns.size()  ]);	  Type[]    upperBounds    =    toLowerBounds.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
209	[BUG]  [BUGGY]  Type[]  lowerBounds  =  typeVarAssigns.getUpperBounds();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  typeVarAssigns.getUpperBounds();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  typeVarAssigns.getUpperBounds();	  Type[]    lowerBounds    =    toBound.getUpperBounds();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
210	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.toLowerBounds();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBound.toLowerBounds();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBound.toLowerBounds();	  Type[]    lowerBounds    =    toBound.getUpperBounds();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
211	[BUG]  [BUGGY]  Type  lowerBound  =  toWildcardType.isAssignableFrom(toBound);  Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  toWildcardType.isAssignableFrom(toBound);  Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  toWildcardType.isAssignableFrom(toBound);  Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);	          Type    lowerBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type    upperBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
212	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  lowerBounds);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  lowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toLowerBounds  =  substituteTypeVariables(toBound,  lowerBounds);	  Type    toLowerBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
213	[BUG]  [BUGGY]  Type  toLowerBounds  =  replaceTypeVariables(toBound,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toLowerBounds  =  replaceTypeVariables(toBound,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toLowerBounds  =  replaceTypeVariables(toBound,  toLowerBounds);	  Type    toLowerBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
214	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  upperBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  upperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toLowerBounds  =  substituteTypeVariables(toBound,  upperBounds);	  Type    toLowerBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
215	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.getRawClass(lowerBounds);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.getRawClass(lowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.getRawClass(lowerBounds);	  Type    lowerBounds    =    toBound.getRawClass(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
216	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.getRawClass(toBound);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.getRawClass(toBound);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.getRawClass(toBound);	  Type    lowerBounds    =    toBound.getRawClass(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
217	[BUG]  [BUGGY]  Type  lowerBound  =  toBound.stripTypeVariables(lowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  toBound.stripTypeVariables(lowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  toBound.stripTypeVariables(lowerBounds,  typeVarAssigns);	  Type    lowerBound    =    toBound.stripTypeVariables(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
218	[BUG]  [BUGGY]  Type  lowerBounds  =  substituteTypeVariables(lowerBound,  toUpperBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  substituteTypeVariables(lowerBound,  toUpperBounds,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  substituteTypeVariables(lowerBound,  toUpperBounds,  typeVarAssigns);	  Type    lowerBounds    =    substituteTypeVariables(lowerBound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
219	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.getRawClass(),  typeVarAssigns,  upperBounds);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.getRawClass(),  typeVarAssigns,  upperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.getRawClass(),  typeVarAssigns,  upperBounds);	  Type    lowerBounds    =    toBound.getRawClass(),    typeVarAssigns);    	non-compiled	[CE]  ';'  expected	43	None	replace
220	[BUG]  [BUGGY]  Type  lowerBounds  =  substituteTypeVariables(lowerBound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  substituteTypeVariables(lowerBound,  toUpperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  substituteTypeVariables(lowerBound,  toUpperBounds);	  Type    lowerBounds    =    substituteTypeVariables(lowerBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
221	[BUG]  [BUGGY]  Type  lowerBounds  =  substituteTypeVariables(upperBound,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  substituteTypeVariables(upperBound,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  substituteTypeVariables(upperBound,  toLowerBounds);	  Type    lowerBounds    =    substituteTypeVariables(lowerBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
222	[BUG]  [BUGGY]  Type  upperBounds  =  toBound.getType();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  upperBounds  =  toBound.getType();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  upperBounds  =  toBound.getType();	  Type    upperBounds    =    toBound.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
223	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBounds.cloneType();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBounds.cloneType();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBounds.cloneType();	  Type[]    lowerBounds    =    toLowerBounds.cloneType();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
224	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.cloneTypeParameters();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBound.cloneTypeParameters();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBound.cloneTypeParameters();	  Type[]    lowerBounds    =    toBound.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
225	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBounds.clone();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBounds.clone();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBounds.clone();	  Type[]    lowerBounds    =    toLowerBounds.clone();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
226	[BUG]  [BUGGY]  Type[]  lowerBounds  =  replacementTypeVariables(toBound,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  replacementTypeVariables(toBound,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  replacementTypeVariables(toBound,  toLowerBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
227	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.  substituteTypeVariables(typeVarAssigns,  toBound);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBound.  substituteTypeVariables(typeVarAssigns,  toBound);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBound.  substituteTypeVariables(typeVarAssigns,  toBound);	  Type[]    lowerBounds    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
228	[BUG]  [BUGGY]  Type  upperBounds  =  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  upperBounds  =  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  upperBounds  =  substituteTypeVariables(toBound,  toWildcardType,  typeVarAssigns);	  Type    lowerBounds    =    substituteTypeVariables(toBound,    toWildcardType,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
229	[BUG]  [BUGGY]  Type  lowerBounds  =  toLowerBounds.get(lowerBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toLowerBounds.get(lowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toLowerBounds.get(lowerBounds);	  Type    lowerBounds    =    toLowerBounds.get(toBound);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
230	[BUG]  [BUGGY]  Type[]  lowerBounds  =  replacementTypeVariables(toBound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  replacementTypeVariables(toBound,  toUpperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  replacementTypeVariables(toBound,  toUpperBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
231	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.subtract(typeVarAssigns,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.subtract(typeVarAssigns,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.subtract(typeVarAssigns,  typeVarAssigns);	  Type    lowerBounds    =    toBound.subtract(typeVarAssigns,    toBound);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
232	[BUG]  [BUGGY]  Type  upperBounds  =  replaceTypeVariables(toBound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  upperBounds  =  replaceTypeVariables(toBound,  toUpperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  upperBounds  =  replaceTypeVariables(toBound,  toUpperBounds);	  Type    upperBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
233	[BUG]  [BUGGY]  for  (Type  bound  :  toBound.typeVariables)  {  [CE]  cannot  find  symbol  typeVariables  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for  (Type  bound  :  toBound.typeVariables)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for  (Type  bound  :  toBound.typeVariables)  {	  for    (Type    bound    :    toBound.types)    {    	non-compiled	[CE]  cannot  find  symbol  typeVariables	16	None	replace
234	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.getLowerBounds(toBound);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.getLowerBounds(toBound);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.getLowerBounds(toBound);	  Type    lowerBounds    =    toBound.getLowerBounds(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
235	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.getLowerBounds(lowerBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.getLowerBounds(lowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.getLowerBounds(lowerBounds);	  Type    lowerBounds    =    toBound.getLowerBounds(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
236	[BUG]  [BUGGY]          Type    lowerBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  Type  lowerBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CE]  variable  lowerBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]          Type    lowerBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  Type  lowerBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	                Type        lowerBound        =        substituteTypeVariables(toBound,        typeVarAssigns);        Type    upperBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type  lowerBound  =  substituteTypeVariables(toBound,  typeVarAssigns);	  	non-compiled	[CE]  variable  lowerBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	73	None	add
237	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.subtract(lowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.subtract(lowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.subtract(lowerBounds,  typeVarAssigns);	  Type    lowerBounds    =    toBound.subtract(toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
238	[BUG]  [BUGGY]  Type  lowerBound  =  toBound.getTypeFactory().removeTypeVariables(typeVarAssigns);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  toBound.getTypeFactory().removeTypeVariables(typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  toBound.getTypeFactory().removeTypeVariables(typeVarAssigns);	  Type    lowerBound    =    toBound.removeTypeVariables(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
239	[BUG]  [BUGGY]  Type  lowerBound  =  toBound.getTypeVariables(typeVarAssigns);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  toBound.getTypeVariables(typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  toBound.getTypeVariables(typeVarAssigns);	  Type    lowerBound    =    toBound.removeTypeVariables(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
240	[BUG]  [BUGGY]  Type  lowerBounds  =  toUpperBounds.get(typeVarAssigns,  toBound);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toUpperBounds.get(typeVarAssigns,  toBound);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toUpperBounds.get(typeVarAssigns,  toBound);	  Type    lowerBounds    =    toLowerBounds.get(typeVarAssigns,    toBound);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
241	[BUG]  [BUGGY]  for(Type  bound  :  toWildcardType)  {  For(Type  bound  :  toLowerBounds)  {  [CE]  ')'  expected  [FE]          AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for(Type  bound  :  toWildcardType)  {  For(Type  bound  :  toLowerBounds)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for(Type  bound  :  toWildcardType)  {  For(Type  bound  :  toLowerBounds)  {	  for(Type    bound    :    toLowerBounds)    {    For(Type    bound    :    toLowerBounds)    {    	non-compiled	[CE]  ')'  expected	20	None	replace
242	[BUG]  [BUGGY]  for(Type  bound  :  toWildcardType)  {  Type  bound  :  toLowerBounds)  {  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for(Type  bound  :  toWildcardType)  {  Type  bound  :  toLowerBounds)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for(Type  bound  :  toWildcardType)  {  Type  bound  :  toLowerBounds)  {	  for(Type    bound    :    toLowerBounds)    {    Type    bound    :    toLowerBounds)    {    	non-compiled	[CE]  ';'  expected	65	None	replace
243	[BUG]  [BUGGY]  for(Type  bound  :  toLowerBounds)  {  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[toLowerBounds.size()  ]);  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for(Type  bound  :  toLowerBounds)  {  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[toLowerBounds.size()  ]);  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for(Type  bound  :  toLowerBounds)  {  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[toLowerBounds.size()  ]);	  for(Type    bound    :    toLowerBounds)    {    Type    bound    :    toLowerBounds)    {    	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	65	None	replace
244	[BUG]  [BUGGY]  for(Type  bound  :  toWildcardType)  {  Type[]  lowerBounds  =  toLowerBounds.values();  [CE]  for-each  not  applicable  to  expression  type  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for(Type  bound  :  toWildcardType)  {  Type[]  lowerBounds  =  toLowerBounds.values();  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for(Type  bound  :  toWildcardType)  {  Type[]  lowerBounds  =  toLowerBounds.values();	  for(Type    bound    :    toLowerBounds)    {    Type    bound    :    toLowerBounds)    {    	non-compiled	[CE]  for-each  not  applicable  to  expression  type	65	None	replace
245	[BUG]  [BUGGY]  for(Type  bound  :  toUpperBounds)  {  Type[]  lowerBounds  =  toLowerBounds.cloneTree();  for(Type  bound  :  toUpperBounds)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for(Type  bound  :  toUpperBounds)  {  Type[]  lowerBounds  =  toLowerBounds.cloneTree();  for(Type  bound  :  toUpperBounds)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for(Type    bound    :    toUpperBounds)    {    Type[]  lowerBounds  =  toLowerBounds.cloneTree();  for(Type  bound  :  toUpperBounds)  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
246	[BUG]  [BUGGY]  for(Type  bound  :  toUpperBounds)  {  Type[]  lowerBounds  =  toLowerBounds.keySet();  for(Type  bound  :  toUpperBounds)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for(Type  bound  :  toUpperBounds)  {  Type[]  lowerBounds  =  toLowerBounds.keySet();  for(Type  bound  :  toUpperBounds)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for(Type    bound    :    toUpperBounds)    {    Type[]  lowerBounds  =  toLowerBounds.keySet();  for(Type  bound  :  toUpperBounds)  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
247	[BUG]  [BUGGY]  for(Type  bound  :  toUpperBounds)  {  Type[]  lowerBounds  =  toLowerBounds.values();  for(Type  bound  :  toUpperBounds)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for(Type  bound  :  toUpperBounds)  {  Type[]  lowerBounds  =  toLowerBounds.values();  for(Type  bound  :  toUpperBounds)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for(Type    bound    :    toUpperBounds)    {    Type[]  lowerBounds  =  toLowerBounds.values();  for(Type  bound  :  toUpperBounds)  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
248	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.subtract(typeVarAssigns,  upperBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.subtract(typeVarAssigns,  upperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.subtract(typeVarAssigns,  upperBounds);	  Type    lowerBounds    =    toBound.subtract(typeVarAssigns,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
249	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.subtract(lowerBounds,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.subtract(lowerBounds,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.subtract(lowerBounds,  toLowerBounds);	  Type    lowerBounds    =    toBound.subtract(typeVarAssigns,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
250	[BUG]  [BUGGY]  Type  toBounds  =  substituteTypeVariables(toBound,  lowerBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toBounds  =  substituteTypeVariables(toBound,  lowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toBounds  =  substituteTypeVariables(toBound,  lowerBounds);	  Type    toBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
251	[BUG]  [BUGGY]  Type  toBounds  =  substituteTypeVariables(toBound,  upperBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toBounds  =  substituteTypeVariables(toBound,  upperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toBounds  =  substituteTypeVariables(toBound,  upperBounds);	  Type    toBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
252	[BUG]  [BUGGY]  Type  toBounds  =  replaceTypeVariables(toBound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toBounds  =  replaceTypeVariables(toBound,  toUpperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toBounds  =  replaceTypeVariables(toBound,  toUpperBounds);	  Type    toBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
253	[BUG]  [BUGGY]  Type  upperBounds  =  toUpperBounds.get(typeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  upperBounds  =  toUpperBounds.get(typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  upperBounds  =  toUpperBounds.get(typeVarAssigns);	  Type    upperBounds    =    toLowerBounds.get(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
254	[BUG]  [BUGGY]  Type  upperBounds  =  toLowerBounds.get(lowerBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  upperBounds  =  toLowerBounds.get(lowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  upperBounds  =  toLowerBounds.get(lowerBounds);	  Type    upperBounds    =    toLowerBounds.get(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
255	[BUG]  [BUGGY]  for(Type  bound  :  toUpperBounds)  {  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  ]);  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for(Type  bound  :  toUpperBounds)  {  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  ]);  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for(Type  bound  :  toUpperBounds)  {  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  ]);	  for(Type    bound    :    toLowerBounds)    {    Type[]    lowerBounds    =    toLowerBounds.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	82	None	replace
256	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.getLeftBounds()  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.getLeftBounds()  -  1;  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.getLeftBounds()  -  1;	  Type    lowerBounds    =    toBound.getLeftBounds();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
257	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getLowerBounds(typeVarAssigns,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBound.getLowerBounds(typeVarAssigns,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBound.getLowerBounds(typeVarAssigns,  toLowerBounds);	  Type[]    lowerBounds    =    toBound.getLowerBounds(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
258	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.keySet();  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.keySet();  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toLowerBounds.keySet();	  for(Type    bound    :    toLowerBounds)    {    Type[]    lowerBounds    =    toLowerBounds.keySet();    for(Type    bound    :    toLowerBounds)    {    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
259	[BUG]  [BUGGY]  Type[]  upperBounds  =  toLowerBounds.keySet();  for(Type  bound  :  upperBounds)  {  [CE]  variable  upperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  upperBounds  =  toLowerBounds.keySet();  for(Type  bound  :  upperBounds)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  upperBounds  =  toLowerBounds.keySet();  for(Type  bound  :  upperBounds)  {	  for(Type    bound    :    toLowerBounds)    {    Type[]    lowerBounds    =    toLowerBounds.keySet();    for(Type    bound    :    toLowerBounds)    {    	non-compiled	[CE]  variable  upperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	80	None	replace
260	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.replaceTypeVariables(typeVarAssigns,  replaceTypeVariables);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.replaceTypeVariables(typeVarAssigns,  replaceTypeVariables);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.replaceTypeVariables(typeVarAssigns,  replaceTypeVariables);	  Type    lowerBounds    =    replaceTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
261	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.lowerBounds.clone();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBound.lowerBounds.clone();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBound.lowerBounds.clone();	  Type[]    lowerBounds    =    toLowerBounds.clone();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
262	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.toArray(new  Type[toLowerBounds.size()  ]);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBound.toArray(new  Type[toLowerBounds.size()  ]);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBound.toArray(new  Type[toLowerBounds.size()  ]);	  Type[]    lowerBounds    =    toLowerBounds.clone();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
263	[BUG]  [BUGGY]  Type  upperBounds  =  toBound.getHeight();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  upperBounds  =  toBound.getHeight();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  upperBounds  =  toBound.getHeight();	  Type    upperBounds    =    toBound.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
264	[BUG]  [BUGGY]  Type  lowerBound  =  toBound.stripTypeVariables(typeVarAssigns,  wildcardType);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  toBound.stripTypeVariables(typeVarAssigns,  wildcardType);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  toBound.stripTypeVariables(typeVarAssigns,  wildcardType);	  Type    lowerBound    =    toBound.stripTypeVariables(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
265	[BUG]  [BUGGY]  Type  lowerBound  =  toBound.stripTypeVariables(toLowerBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  toBound.stripTypeVariables(toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  toBound.stripTypeVariables(toLowerBounds);	  Type    lowerBound    =    toBound.stripTypeVariables(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
266	[BUG]  [BUGGY]  Type[]  upperBounds  =  toBound.toUpperBounds();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  upperBounds  =  toBound.toUpperBounds();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  upperBounds  =  toBound.toUpperBounds();	  Type[]    upperBounds    =    toBound.getLowerBounds();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
267	[BUG]  [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toLowerBounds  =  substituteTypeVariables(toBound,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toLowerBounds  =  substituteTypeVariables(toBound,  typeVarAssigns);	  Type    toLowerBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
268	[BUG]  [BUGGY]          Type    lowerBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  Type  lowerBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  Type  upperBound  =  replaceTypeVariables(toBound,  typeVarAssigns);  [CE]  variable  lowerBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]          Type    lowerBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type  upperBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  Type  lowerBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  Type  upperBound  =  replaceTypeVariables(toBound,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	                Type        lowerBound        =        substituteTypeVariables(toBound,        typeVarAssigns);        Type    upperBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type  lowerBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  Type  upperBound  =  replaceTypeVariables(toBound,  typeVarAssigns);	  	non-compiled	[CE]  variable  lowerBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	73	None	add
269	[BUG]  [BUGGY]  Type[]  toWildcardType  =  toWildcardType.getVariables();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  toWildcardType  =  toWildcardType.getVariables();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  toWildcardType  =  toWildcardType.getVariables();	          Type    lowerBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type    lowerBound    =    substituteTypeVariables(toBound,    toWildcardType);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
270	[BUG]  [BUGGY]  Type[]  toWildcardType  =  toWildcardType.getOwnerTypes();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  toWildcardType  =  toWildcardType.getOwnerTypes();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  toWildcardType  =  toWildcardType.getOwnerTypes();	          Type    lowerBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type    lowerBound    =    substituteTypeVariables(toBound,    toWildcardType);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
271	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toWildcardType.getVariables();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  toLowerBounds  =  toWildcardType.getVariables();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  toLowerBounds  =  toWildcardType.getVariables();	          Type    lowerBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type    lowerBound    =    substituteTypeVariables(toBound,    toWildcardType);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
272	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getRawTypeVariables();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getRawTypeVariables();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toWildcardType.getRawTypeVariables();	          Type    lowerBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type    lowerBound    =    substituteTypeVariables(toBound,    toWildcardType);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
273	[BUG]  [BUGGY]  Type  upperBounds  =  toBound.toUpperBounds();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  upperBounds  =  toBound.toUpperBounds();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  upperBounds  =  toBound.toUpperBounds();	  Type    upperBounds    =    toBound.getLowerBounds();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
274	[BUG]  [BUGGY]  Type  upperBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  upperBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  upperBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  typeVarAssigns);	  Type    upperBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
275	[BUG]  [BUGGY]  Type  upperBounds  =  replaceTypeVariables(toBound,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  upperBounds  =  replaceTypeVariables(toBound,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  upperBounds  =  replaceTypeVariables(toBound,  toLowerBounds);	  Type    upperBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
276	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBounds.toArray(new  Type[typeVarAssigns.size()  ]);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBounds.toArray(new  Type[typeVarAssigns.size()  ]);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBounds.toArray(new  Type[typeVarAssigns.size()  ]);	          Type    lowerBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type    lowerBound    =    substituteTypeVariables(toBound,    toUpperBounds);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
277	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLowerBounds();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toWildcardType.getLowerBounds();	          Type    lowerBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type    lowerBound    =    substituteTypeVariables(toBound,    toUpperBounds);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
278	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.values();  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.values();  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toLowerBounds.values();	  for(Type    bound    :    toLowerBounds)    {    Type[]    lowerBounds    =    toLowerBounds.values();    for(Type    bound    :    toLowerBounds)    {    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
279	[BUG]  [BUGGY]  Type[]  upperBounds  =  toLowerBounds.values();  for(Type  bound  :  upperBounds)  {  [CE]  variable  upperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  upperBounds  =  toLowerBounds.values();  for(Type  bound  :  upperBounds)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  upperBounds  =  toLowerBounds.values();  for(Type  bound  :  upperBounds)  {	  for(Type    bound    :    toLowerBounds)    {    Type[]    lowerBounds    =    toLowerBounds.values();    for(Type    bound    :    toLowerBounds)    {    	non-compiled	[CE]  variable  upperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	81	None	replace
280	[BUG]  [BUGGY]  Type  lowerBounds  =  replacementTypeVariables(toBound,  toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  replacementTypeVariables(toBound,  toBound,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  replacementTypeVariables(toBound,  toBound,  typeVarAssigns);	  Type    lowerBounds    =    substituteTypeVariables(lowerBound,    toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
281	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.getRawClass(),  typeVarAssigns,  wildcardType);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.getRawClass(),  typeVarAssigns,  wildcardType);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.getRawClass(),  typeVarAssigns,  wildcardType);	  Type    lowerBounds    =    toBound.getRawClass(),    typeVarAssigns);    	non-compiled	[CE]  ';'  expected	43	None	replace
282	[BUG]  [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  lowerBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  lowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds,  lowerBounds);	  Type    toBound    =    substituteTypeVariables(toBound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
283	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.subtract(typeVarAssigns,  toBound);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBound.subtract(typeVarAssigns,  toBound);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBound.subtract(typeVarAssigns,  toBound);	  Type    lowerBounds    =    toBound.subtract(typeVarAssigns,    toBound);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
284	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[toLowerBounds.size()  ]),  toUpperBounds);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[toLowerBounds.size()  ]),  toUpperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[toLowerBounds.size()  ]),  toUpperBounds);	  Type[]    lowerBounds    =    toLowerBounds.toArray(new    Type[toLowerBounds.size()    ]));    	non-compiled	[CE]  ';'  expected	24	None	replace
285	[BUG]  [BUGGY]  Type  lowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  toUpperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  toUpperBounds);	  Type    lowerBounds    =    substituteTypeVariables(toBound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
286	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.subtract(toLowerBounds,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBound.subtract(toLowerBounds,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBound.subtract(toLowerBounds,  typeVarAssigns);	  Type[]    lowerBounds    =    toBound.subtract(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
287	[BUG]  [BUGGY]  Type  lowerBounds  =  toLowerBounds.get(typeVarAssigns,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toLowerBounds.get(typeVarAssigns,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toLowerBounds.get(typeVarAssigns,  typeVarAssigns);	  Type    lowerBounds    =    toLowerBounds.get(typeVarAssigns,    toBound);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
288	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.getLowerBounds(typeVarAssigns,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.getLowerBounds(typeVarAssigns,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.getLowerBounds(typeVarAssigns,  toLowerBounds);	  Type    lowerBounds    =    toBound.getLowerBounds(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
289	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.getLowerBounds(typeVarAssigns,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.getLowerBounds(typeVarAssigns,  toUpperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.getLowerBounds(typeVarAssigns,  toUpperBounds);	  Type    lowerBounds    =    toBound.getLowerBounds(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
290	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.toLowerBounds();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.toLowerBounds();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.toLowerBounds();	  Type    lowerBounds    =    toBound.getUpperBounds();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
291	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.cloneTree();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.cloneTree();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.cloneTree();	  Type    lowerBounds    =    toBound.getUpperBounds();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
292	[BUG]  [BUGGY]  Type  lowerBounds  =  toLowerBounds.get(type);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toLowerBounds.get(type);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toLowerBounds.get(type);	  Type    lowerBounds    =    toLowerBounds.get(toBound);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
293	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.typeTree();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBound.typeTree();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBound.typeTree();	  Type[]    lowerBounds    =    toLowerBounds.cloneTypeTree();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
294	[BUG]  [BUGGY]  for  (Type  bound  :  toBound.type),  wildcardType)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for  (Type  bound  :  toBound.type),  wildcardType)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for  (Type  bound  :  toBound.type),  wildcardType)  {	  for    (Type    bound    :    toBound.type)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
295	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.removeTypeVariables(typeVarAssigns);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBound.removeTypeVariables(typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBound.removeTypeVariables(typeVarAssigns);	  Type[]    lowerBounds    =    substituteTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
296	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.getLeastSupertype(typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.getLeastSupertype(typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.getLeastSupertype(typeVarAssigns);	  Type    lowerBounds    =    toBound.getRawType();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
297	[BUG]  [BUGGY]  Type  lowerBound  =  toBound.replaceTypeVariables(type,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  toBound.replaceTypeVariables(type,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  toBound.replaceTypeVariables(type,  toLowerBounds);	  Type    lowerBound    =    replaceTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
298	[BUG]  [BUGGY]  Type  upperBounds  =  toBound.subtract(typeVarAssigns,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  upperBounds  =  toBound.subtract(typeVarAssigns,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  upperBounds  =  toBound.subtract(typeVarAssigns,  toLowerBounds);	  Type    lowerBounds    =    toBound.subtract(toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
299	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.getRawClass(typeVarAssigns,  wildcardType);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.getRawClass(typeVarAssigns,  wildcardType);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.getRawClass(typeVarAssigns,  wildcardType);	  Type    lowerBounds    =    toBound.getRawClass(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
300	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.getRawClass(typeVarAssigns,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.getRawClass(typeVarAssigns,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.getRawClass(typeVarAssigns,  typeVarAssigns);	  Type    lowerBounds    =    toBound.getRawClass(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
301	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.toArray(new  Type[toBound.size()  ]);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBound.toArray(new  Type[toBound.size()  ]);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBound.toArray(new  Type[toBound.size()  ]);	  Type[]    lowerBounds    =    toBound.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
302	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  2]);  [CE]  ']'  expected  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  2]);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  2]);	  Type[]    lowerBounds    =    toLowerBounds.toArray(new    Type[typeVarAssigns.size()    +    1]);    	non-compiled	[CE]  ']'  expected	32	None	replace
303	[BUG]  [BUGGY]  for(Type[]  lowerBounds  :  toLowerBounds)  {  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for(Type[]  lowerBounds  :  toLowerBounds)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for(Type[]  lowerBounds  :  toLowerBounds)  {	  for(Type    bound    :    toLowerBounds)    {    for(Type    bound    =    toLowerBounds)    {    	non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	22	None	replace
304	[BUG]  [BUGGY]  for(Type[]  lowerBounds  =  toLowerBounds.size())  {  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for(Type[]  lowerBounds  =  toLowerBounds.size())  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for(Type[]  lowerBounds  =  toLowerBounds.size())  {	  for(Type    bound    :    toLowerBounds)    {    for(Type    bound    =    toLowerBounds)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
305	[BUG]  [BUGGY]  Type  lowerBound  =  substituteTypeVariables(toBound,  typeVarAssigns,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  substituteTypeVariables(toBound,  typeVarAssigns,  toUpperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  substituteTypeVariables(toBound,  typeVarAssigns,  toUpperBounds);	  Type    lowerBound    =    substituteTypeVariables(toBound,    toLowerBounds,    toUpperBounds);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
306	[BUG]  [BUGGY]  for(Type  bound  :  toBound.toUpperBounds)  {  [CE]  cannot  find  symbol  toUpperBounds  [FE]          AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for(Type  bound  :  toBound.toUpperBounds)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for(Type  bound  :  toBound.toUpperBounds)  {	  for(Type    bound    :    toWildcardType.toLowerBounds)    {    	non-compiled	[CE]  cannot  find  symbol  toUpperBounds	42	None	replace
307	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getTypeVariables();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBound.getTypeVariables();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBound.getTypeVariables();	          Type    lowerBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type    lowerBound    =    replaceTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
308	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getTypes();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBound.getTypes();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBound.getTypes();	          Type    lowerBound    =    substituteTypeVariables(toBound,    typeVarAssigns);    Type    lowerBound    =    replaceTypeVariables(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
309	[BUG]  [BUGGY]  Type  lowerBound  =  toBound.getTypeVariables();  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  toBound.getTypeVariables();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  toBound.getTypeVariables();	  Type    lowerBound    =    toBound.removeTypeVariables(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
310	[BUG]  [BUGGY]  Type  toBounds  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  toBounds  =  substituteTypeVariables(toBound,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  toBounds  =  substituteTypeVariables(toBound,  typeVarAssigns);	  Type    toBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
311	[BUG]  [BUGGY]  Type  upperBounds  =  substituteTypeVariables(upperBound,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  upperBounds  =  substituteTypeVariables(upperBound,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  upperBounds  =  substituteTypeVariables(upperBound,  toLowerBounds);	  Type    lowerBounds    =    substituteTypeVariables(upperBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
312	[BUG]  [BUGGY]  Type  lowerBounds  =  toBound.subtract(type,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toBound.subtract(type,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toBound.subtract(type,  typeVarAssigns);	  Type    lowerBounds    =    toBound.subtract(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
313	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.toUpperBounds();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toBound.toUpperBounds();  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toBound.toUpperBounds();	  Type[]    lowerBounds    =    toBound.getUpperBounds();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
314	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[toLowerBounds.size()  2]);  [CE]  ']'  expected  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[toLowerBounds.size()  2]);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[toLowerBounds.size()  2]);	  Type[]    lowerBounds    =    toLowerBounds.toArray(new    Type[toLowerBounds.size()    +    1]);    	non-compiled	[CE]  ']'  expected	23	None	replace
315	[BUG]  [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  toUpperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  substituteTypeVariables(toBound,  toLowerBounds,  toUpperBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(toBound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
316	[BUG]  [BUGGY]  For(Type  bound  :  toBounds)  {  [CE]  ')'  expected  [FE]          AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  For(Type  bound  :  toBounds)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	For(Type  bound  :  toBounds)  {	  for(Type    bound    :    toLowerBounds)    {    For(Type    bound    :    toLowerBounds)    {    	non-compiled	[CE]  ')'  expected	20	None	replace
317	[BUG]  [BUGGY]  Type  lowerBounds  =  substituteTypeVariables(lowerBound,  toLowerBounds,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  substituteTypeVariables(lowerBound,  toLowerBounds,  toUpperBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  substituteTypeVariables(lowerBound,  toLowerBounds,  toUpperBounds);	  Type    lowerBounds    =    substituteTypeVariables(lowerBound,    toLowerBounds,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
318	[BUG]  [BUGGY]  for(Type  bound  :  toUpperBounds)  {  Type[]  lowerBounds  =  toUpperBounds.cloneTree();  for(Type  bound  :  toUpperBounds)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for(Type  bound  :  toUpperBounds)  {  Type[]  lowerBounds  =  toUpperBounds.cloneTree();  for(Type  bound  :  toUpperBounds)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for(Type    bound    :    toUpperBounds)    {    Type[]  lowerBounds  =  toUpperBounds.cloneTree();  for(Type  bound  :  toUpperBounds)  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
319	[BUG]  [BUGGY]  for(Type  bound  :  toUpperBounds)  {  Type[]  lowerBounds  =  toUpperBounds.keySet();  for(Type  bound  :  toUpperBounds)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for(Type  bound  :  toUpperBounds)  {  Type[]  lowerBounds  =  toUpperBounds.keySet();  for(Type  bound  :  toUpperBounds)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for(Type    bound    :    toUpperBounds)    {    Type[]  lowerBounds  =  toUpperBounds.keySet();  for(Type  bound  :  toUpperBounds)  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
320	[BUG]  [BUGGY]  for(Type  bound  :  toUpperBounds)  {  Type[]  lowerBounds  =  toUpperBounds.values();  for(Type  bound  :  toUpperBounds)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for(Type  bound  :  toUpperBounds)  {  Type[]  lowerBounds  =  toUpperBounds.values();  for(Type  bound  :  toUpperBounds)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for(Type    bound    :    toUpperBounds)    {    Type[]  lowerBounds  =  toUpperBounds.values();  for(Type  bound  :  toUpperBounds)  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
321	[BUG]  [BUGGY]  Type  lowerBound  =  substituteTypeVariables(toBound,  typeVarAssigns,  toLowerBounds);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  substituteTypeVariables(toBound,  typeVarAssigns,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  substituteTypeVariables(toBound,  typeVarAssigns,  toLowerBounds);	  Type    lowerBound    =    substituteTypeVariables(toBound,    toUpperBounds,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
322	[BUG]  [BUGGY]  Type  lowerBounds  =  toLowerBounds.get(type,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBounds  =  toLowerBounds.get(type,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBounds  =  toLowerBounds.get(type,  typeVarAssigns);	  Type    lowerBounds    =    toLowerBounds.get(toBound,    typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
323	[BUG]  [BUGGY]  for(Type  bound  :  toLowerBounds)  {  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  ]);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for(Type  bound  :  toLowerBounds)  {  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  ]);  }  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for(Type  bound  :  toLowerBounds)  {  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  ]);  }	  for(Type    bound    :    toLowerBounds)    {    Type[]    lowerBounds    =    toLowerBounds.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
324	[BUG]  [BUGGY]  for(Type  bound  :  toWildcardType.type)  {  [CE]  cannot  find  symbol  type  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for(Type  bound  :  toWildcardType.type)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for(Type  bound  :  toWildcardType.type)  {	  for    (Type    bound    :    toWildcardType)    {    	non-compiled	[CE]  cannot  find  symbol  type	55	None	replace
325	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toLowerBounds  substituteTypeVariables(toBound,  typeVarAssigns);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toLowerBounds  substituteTypeVariables(toBound,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toLowerBounds  substituteTypeVariables(toBound,  typeVarAssigns);	  Type[]    lowerBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  ';'  expected	63	None	replace
326	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toLowerBounds  substituteTypeVariables(toBound,  toLowerBounds);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type[]  lowerBounds  =  toLowerBounds  substituteTypeVariables(toBound,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type[]  lowerBounds  =  toLowerBounds  substituteTypeVariables(toBound,  toLowerBounds);	  Type[]    lowerBounds    =    substituteTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  ';'  expected	63	None	replace
327	[BUG]  [BUGGY]  Type  lowerBound  =  replacementTypeVariables(toBound,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  replacementTypeVariables(toBound,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  replacementTypeVariables(toBound,  typeVarAssigns);	  Type    lowerBound    =    replacementTypeVariables(toBound,    toLowerBounds);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
328	[BUG]  [BUGGY]  Type  lowerBound  =  toBound.subtractTypeVariables(toLowerBounds);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  Type  lowerBound  =  toBound.subtractTypeVariables(toLowerBounds);  [BUGGY]      for  (Type  bound  :  lowerBounds)  {  if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	Type  lowerBound  =  toBound.subtractTypeVariables(toLowerBounds);	  Type    lowerBound    =    toBound.subtractTypeVariables(typeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
329	[BUG]  [BUGGY]  for  (Type  bound  :  toBounds.types)  {  [CE]  cannot  find  symbol  toBounds  [FE]                AssertionError      [CONTEXT]      }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);          [BUGGY]  for  (Type  bound  :  toBounds.types)  {  [BUGGY]      if  (!isAssignable(toBound,  bound,  typeVarAssigns))  {  return  false;  }  }  }  return  true;  }  for  (Type  toBound  :  toUpperBounds)  {  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	384	384	2	replace	for  (Type  bound  :  toBounds.types)  {	  for    (Type    bound    :    toBound.types)    {    	non-compiled	[CE]  cannot  find  symbol  toBounds	16	None	replace
