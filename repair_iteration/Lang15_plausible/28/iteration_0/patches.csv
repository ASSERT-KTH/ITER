bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(toBound,  lowerBounds);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]    AssertionError  [CONTEXT]  Type[]  toLowerBounds  =  getImplicitLowerBounds(toWildcardType);  if  (type  instanceof  WildcardType)  {  WildcardType  wildcardType  =  (WildcardType)  type;  Type[]  upperBounds  =  getImplicitUpperBounds(wildcardType);  Type[]  lowerBounds  =  getImplicitLowerBounds(wildcardType);  for  (Type  toBound  :  toUpperBounds)  {    [BUGGY]  toBound  =  substituteTypeVariables(toBound,  lowerBounds);  [BUGGY]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	364	364	2	replace	toBound  =  substituteTypeVariables(toBound,  lowerBounds);	toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	55	None	replace
2	[BUG]  [BUGGY]  toBound  =  replaceTypeVariables(toBound,  lowerBounds);  [CE]  cannot  find  symbol  [FE]      AssertionError  [CONTEXT]  Type[]  toLowerBounds  =  getImplicitLowerBounds(toWildcardType);  if  (type  instanceof  WildcardType)  {  WildcardType  wildcardType  =  (WildcardType)  type;  Type[]  upperBounds  =  getImplicitUpperBounds(wildcardType);  Type[]  lowerBounds  =  getImplicitLowerBounds(wildcardType);  for  (Type  toBound  :  toUpperBounds)  {    [BUGGY]  toBound  =  replaceTypeVariables(toBound,  lowerBounds);  [BUGGY]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	364	364	2	replace	toBound  =  replaceTypeVariables(toBound,  lowerBounds);	toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  	non-compiled	[CE]  cannot  find  symbol	55	None	replace
3	[BUG]  [BUGGY]  toBound  =  replacementTypeVariables(toBound,  lowerBounds);  [CE]  cannot  find  symbol  [FE]        AssertionError  [CONTEXT]  Type[]  toLowerBounds  =  getImplicitLowerBounds(toWildcardType);  if  (type  instanceof  WildcardType)  {  WildcardType  wildcardType  =  (WildcardType)  type;  Type[]  upperBounds  =  getImplicitUpperBounds(wildcardType);  Type[]  lowerBounds  =  getImplicitLowerBounds(wildcardType);  for  (Type  toBound  :  toUpperBounds)  {    [BUGGY]  toBound  =  replacementTypeVariables(toBound,  lowerBounds);  [BUGGY]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	364	364	2	replace	toBound  =  replacementTypeVariables(toBound,  lowerBounds);	toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  	non-compiled	[CE]  cannot  find  symbol	55	None	replace
4	[BUG]  [BUGGY]  toBound  =  toBound.subtractTypeVariables(type,  typeVarAssigns);  [CE]  cannot  find  symbol  [FE]          AssertionError  [CONTEXT]  Type[]  toLowerBounds  =  getImplicitLowerBounds(toWildcardType);  if  (type  instanceof  WildcardType)  {  WildcardType  wildcardType  =  (WildcardType)  type;  Type[]  upperBounds  =  getImplicitUpperBounds(wildcardType);  Type[]  lowerBounds  =  getImplicitLowerBounds(wildcardType);  for  (Type  toBound  :  toUpperBounds)  {    [BUGGY]  toBound  =  toBound.subtractTypeVariables(type,  typeVarAssigns);  [BUGGY]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	364	364	2	replace	toBound  =  toBound.subtractTypeVariables(type,  typeVarAssigns);	toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  	non-compiled	[CE]  cannot  find  symbol	55	None	replace
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError  [CONTEXT]  Type[]  toLowerBounds  =  getImplicitLowerBounds(toWildcardType);  if  (type  instanceof  WildcardType)  {  WildcardType  wildcardType  =  (WildcardType)  type;  Type[]  upperBounds  =  getImplicitUpperBounds(wildcardType);  Type[]  lowerBounds  =  getImplicitLowerBounds(wildcardType);  for  (Type  toBound  :  toUpperBounds)  {    [BUGGY]    [BUGGY]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	364	364	2	add	  	toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  	compilable	  [FE]  AssertionError  	55	2	replace
6	[BUG]  [BUGGY]    [FE]  AssertionError  [FE]            AssertionError  [CONTEXT]  Type[]  toLowerBounds  =  getImplicitLowerBounds(toWildcardType);  if  (type  instanceof  WildcardType)  {  WildcardType  wildcardType  =  (WildcardType)  type;  Type[]  upperBounds  =  getImplicitUpperBounds(wildcardType);  Type[]  lowerBounds  =  getImplicitLowerBounds(wildcardType);  for  (Type  toBound  :  toUpperBounds)  {    [BUGGY]    [BUGGY]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	364	364	2	replace	  	toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  	compilable	  [FE]  AssertionError  	55	2	replace
7	[BUG]  [BUGGY]    Type[]  toLowerBounds  =  getImplicitLowerBounds(toBound);  [CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError  [CONTEXT]  Type[]  toLowerBounds  =  getImplicitLowerBounds(toWildcardType);  if  (type  instanceof  WildcardType)  {  WildcardType  wildcardType  =  (WildcardType)  type;  Type[]  upperBounds  =  getImplicitUpperBounds(wildcardType);  Type[]  lowerBounds  =  getImplicitLowerBounds(wildcardType);  for  (Type  toBound  :  toUpperBounds)  {    [BUGGY]    Type[]  toLowerBounds  =  getImplicitLowerBounds(toBound);  [BUGGY]  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	364	364	2	replace	    Type[]  toLowerBounds  =  getImplicitLowerBounds(toBound);		non-compiled	[CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	56	None	add
8	[BUG]  [BUGGY]    Type[]  toLowerBounds  =  getImplicitUpperBounds(toBound);  [CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError  [CONTEXT]  Type[]  toLowerBounds  =  getImplicitLowerBounds(toWildcardType);  if  (type  instanceof  WildcardType)  {  WildcardType  wildcardType  =  (WildcardType)  type;  Type[]  upperBounds  =  getImplicitUpperBounds(wildcardType);  Type[]  lowerBounds  =  getImplicitLowerBounds(wildcardType);  for  (Type  toBound  :  toUpperBounds)  {    [BUGGY]    Type[]  toLowerBounds  =  getImplicitUpperBounds(toBound);  [BUGGY]  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	364	364	2	replace	    Type[]  toLowerBounds  =  getImplicitUpperBounds(toBound);		non-compiled	[CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	56	None	add
9	[BUG]  [BUGGY]    Type[]  lowerBounds  =  getImplicitLowerBounds(toBound);  [CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError  [CONTEXT]  Type[]  toLowerBounds  =  getImplicitLowerBounds(toWildcardType);  if  (type  instanceof  WildcardType)  {  WildcardType  wildcardType  =  (WildcardType)  type;  Type[]  upperBounds  =  getImplicitUpperBounds(wildcardType);  Type[]  lowerBounds  =  getImplicitLowerBounds(wildcardType);  for  (Type  toBound  :  toUpperBounds)  {    [BUGGY]    Type[]  lowerBounds  =  getImplicitLowerBounds(toBound);  [BUGGY]  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	364	364	2	replace	    Type[]  lowerBounds  =  getImplicitLowerBounds(toBound);		non-compiled	[CE]  variable  lowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	56	None	add
10	[BUG]  [BUGGY]    Type[]  toLowerBounds  =  getImplicitLowerBounds(toBound,  typeVarAssigns);  [CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError  [CONTEXT]  Type[]  toLowerBounds  =  getImplicitLowerBounds(toWildcardType);  if  (type  instanceof  WildcardType)  {  WildcardType  wildcardType  =  (WildcardType)  type;  Type[]  upperBounds  =  getImplicitUpperBounds(wildcardType);  Type[]  lowerBounds  =  getImplicitLowerBounds(wildcardType);  for  (Type  toBound  :  toUpperBounds)  {    [BUGGY]    Type[]  toLowerBounds  =  getImplicitLowerBounds(toBound,  typeVarAssigns);  [BUGGY]  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	364	364	2	replace	    Type[]  toLowerBounds  =  getImplicitLowerBounds(toBound,  typeVarAssigns);		non-compiled	[CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	56	None	add
11	[BUG]  [BUGGY]    Type[]  toLowerBounds  =  getImplicitLowerBounds(toWildcardType);  [CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError  [CONTEXT]  Type[]  toLowerBounds  =  getImplicitLowerBounds(toWildcardType);  if  (type  instanceof  WildcardType)  {  WildcardType  wildcardType  =  (WildcardType)  type;  Type[]  upperBounds  =  getImplicitUpperBounds(wildcardType);  Type[]  lowerBounds  =  getImplicitLowerBounds(wildcardType);  for  (Type  toBound  :  toUpperBounds)  {    [BUGGY]    Type[]  toLowerBounds  =  getImplicitLowerBounds(toWildcardType);  [BUGGY]  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	364	364	2	replace	    Type[]  toLowerBounds  =  getImplicitLowerBounds(toWildcardType);		non-compiled	[CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	56	None	add
12	[BUG]  [BUGGY]  toBound  =  substituteTypeVariables(toBound,  upperBounds);  [CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]    AssertionError  [CONTEXT]  Type[]  toLowerBounds  =  getImplicitLowerBounds(toWildcardType);  if  (type  instanceof  WildcardType)  {  WildcardType  wildcardType  =  (WildcardType)  type;  Type[]  upperBounds  =  getImplicitUpperBounds(wildcardType);  Type[]  lowerBounds  =  getImplicitLowerBounds(wildcardType);  for  (Type  toBound  :  toUpperBounds)  {    [BUGGY]  toBound  =  substituteTypeVariables(toBound,  upperBounds);  [BUGGY]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	364	364	2	replace	toBound  =  substituteTypeVariables(toBound,  upperBounds);	toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  	non-compiled	[CE]  method  substituteTypeVariables  in  class  TypeUtils  cannot  be  applied  to  given  types;	55	None	replace
13	[BUG]  [BUGGY]    Type[]  toBounds  =  getImplicitLowerBounds(toBound);  [CE]  method  getImplicitLowerBounds  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]    AssertionError  [CONTEXT]  Type[]  toLowerBounds  =  getImplicitLowerBounds(toWildcardType);  if  (type  instanceof  WildcardType)  {  WildcardType  wildcardType  =  (WildcardType)  type;  Type[]  upperBounds  =  getImplicitUpperBounds(wildcardType);  Type[]  lowerBounds  =  getImplicitLowerBounds(wildcardType);  for  (Type  toBound  :  toUpperBounds)  {    [BUGGY]    Type[]  toBounds  =  getImplicitLowerBounds(toBound);  [BUGGY]  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	364	364	2	replace	    Type[]  toBounds  =  getImplicitLowerBounds(toBound);		non-compiled	[CE]  method  getImplicitLowerBounds  in  class  TypeUtils  cannot  be  applied  to  given  types;	56	None	add
14	[BUG]  [BUGGY]    Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds);  [CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError  [CONTEXT]  Type[]  toLowerBounds  =  getImplicitLowerBounds(toWildcardType);  if  (type  instanceof  WildcardType)  {  WildcardType  wildcardType  =  (WildcardType)  type;  Type[]  upperBounds  =  getImplicitUpperBounds(wildcardType);  Type[]  lowerBounds  =  getImplicitLowerBounds(wildcardType);  for  (Type  toBound  :  toUpperBounds)  {    [BUGGY]    Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds);  [BUGGY]  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	364	364	2	replace	    Type  toBound  =  substituteTypeVariables(toBound,  toLowerBounds);		non-compiled	[CE]  variable  toBound  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	56	None	add
15	[BUG]  [BUGGY]    Type[]  toBounds  =  getImplicitUpperBounds(toBound);  [CE]  method  getImplicitUpperBounds  in  class  TypeUtils  cannot  be  applied  to  given  types;  [FE]        AssertionError  [CONTEXT]  Type[]  toLowerBounds  =  getImplicitLowerBounds(toWildcardType);  if  (type  instanceof  WildcardType)  {  WildcardType  wildcardType  =  (WildcardType)  type;  Type[]  upperBounds  =  getImplicitUpperBounds(wildcardType);  Type[]  lowerBounds  =  getImplicitLowerBounds(wildcardType);  for  (Type  toBound  :  toUpperBounds)  {    [BUGGY]    Type[]  toBounds  =  getImplicitUpperBounds(toBound);  [BUGGY]  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	364	364	2	replace	    Type[]  toBounds  =  getImplicitUpperBounds(toBound);		non-compiled	[CE]  method  getImplicitUpperBounds  in  class  TypeUtils  cannot  be  applied  to  given  types;	56	None	add
16	[BUG]  [BUGGY]    Type[]  toLowerBounds  =  getImplicitUpperBounds(wildcardType);  [CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError  [CONTEXT]  Type[]  toLowerBounds  =  getImplicitLowerBounds(toWildcardType);  if  (type  instanceof  WildcardType)  {  WildcardType  wildcardType  =  (WildcardType)  type;  Type[]  upperBounds  =  getImplicitUpperBounds(wildcardType);  Type[]  lowerBounds  =  getImplicitLowerBounds(wildcardType);  for  (Type  toBound  :  toUpperBounds)  {    [BUGGY]    Type[]  toLowerBounds  =  getImplicitUpperBounds(wildcardType);  [BUGGY]  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	364	364	2	replace	    Type[]  toLowerBounds  =  getImplicitUpperBounds(wildcardType);		non-compiled	[CE]  variable  toLowerBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	56	None	add
17	[BUG]  [BUGGY]    Type[]  upperBounds  =  getImplicitLowerBounds(toBound);  [CE]  variable  upperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError  [CONTEXT]  Type[]  toLowerBounds  =  getImplicitLowerBounds(toWildcardType);  if  (type  instanceof  WildcardType)  {  WildcardType  wildcardType  =  (WildcardType)  type;  Type[]  upperBounds  =  getImplicitUpperBounds(wildcardType);  Type[]  lowerBounds  =  getImplicitLowerBounds(wildcardType);  for  (Type  toBound  :  toUpperBounds)  {    [BUGGY]    Type[]  upperBounds  =  getImplicitLowerBounds(toBound);  [BUGGY]  toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	364	364	2	replace	    Type[]  upperBounds  =  getImplicitLowerBounds(toBound);		non-compiled	[CE]  variable  upperBounds  is  already  defined  in  method  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>)	56	None	add
18	[BUG]  [BUGGY]  toBound  =  replaceTypeVariables(toBound,  toLowerBounds);  [CE]  cannot  find  symbol  [FE]    AssertionError  [CONTEXT]  Type[]  toLowerBounds  =  getImplicitLowerBounds(toWildcardType);  if  (type  instanceof  WildcardType)  {  WildcardType  wildcardType  =  (WildcardType)  type;  Type[]  upperBounds  =  getImplicitUpperBounds(wildcardType);  Type[]  lowerBounds  =  getImplicitLowerBounds(wildcardType);  for  (Type  toBound  :  toUpperBounds)  {    [BUGGY]  toBound  =  replaceTypeVariables(toBound,  toLowerBounds);  [BUGGY]      for  (Type  bound  :  upperBounds)  {  if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	364	364	2	replace	toBound  =  replaceTypeVariables(toBound,  toLowerBounds);	toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  	non-compiled	[CE]  cannot  find  symbol	55	None	replace
