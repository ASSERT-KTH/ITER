bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericConstructor();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  Type  toGenericArrayType  =  type.getGenericConstructor();  [BUGGY]    if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  type.getGenericConstructor();	      Type    toGenericArrayType    =    toGenericArrayType.getGenericConstructor();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
2	[BUG]  [BUGGY]  Type  toGenericArrayType  =  cls.getGenericConstructor();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  Type  toGenericArrayType  =  cls.getGenericConstructor();  [BUGGY]    if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  cls.getGenericConstructor();	      Type    toGenericArrayType    =    toGenericArrayType.getGenericConstructor();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
3	[BUG]  [BUGGY]  Type  toGenericArrayType  =  types.getGenericConstructor();  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  Type  toGenericArrayType  =  types.getGenericConstructor();  [BUGGY]    if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  types.getGenericConstructor();	      Type    toGenericArrayType    =    toGenericArrayType.getGenericConstructor();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
4	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  if(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  if(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  if(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type    instanceof    GenericArrayType    ||    type    instanceof    Class    <?>)    {    if(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
5	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  If(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  if(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  If(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type    instanceof    GenericArrayType    ||    type    instanceof    Class    <?>)    {    If(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {	  	non-compiled	[CE]  ';'  expected	6	None	add
6	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGeneric();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  Type  toGenericArrayType  =  type.getGeneric();  [BUGGY]    if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  type.getGeneric();	      Type    toGenericArrayType    =    toGenericArrayType.getGeneric();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
7	[BUG]  [BUGGY]  Type  toGenericArrayType  =  cls.getGeneric();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  Type  toGenericArrayType  =  cls.getGeneric();  [BUGGY]    if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  cls.getGeneric();	      Type    toGenericArrayType    =    toGenericArrayType.getGeneric();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
8	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  Class  <?>)  {  [CE]  inconvertible  types  [FE]    AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  if(toGenericArrayType  instanceof  Class  <?>)  {  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  Class  <?>)  {	  if(toGenericArrayType    instanceof    GenericArrayType)    {    	non-compiled	[CE]  inconvertible  types	9	None	replace
9	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  Class  <?>)  {  [CE]  inconvertible  types  [FE]      AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  Class  <?>)  {  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  Class  <?>)  {	  if(toGenericArrayType    instanceof    GenericArrayType)    {    	non-compiled	[CE]  inconvertible  types	9	None	replace
10	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  Class  <?>  ||  toGenericArrayType  instanceof  GenericArrayType)  {  [CE]  inconvertible  types  [FE]        AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  if(toGenericArrayType  instanceof  Class  <?>  ||  toGenericArrayType  instanceof  GenericArrayType)  {  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  Class  <?>  ||  toGenericArrayType  instanceof  GenericArrayType)  {	  if(toGenericArrayType    instanceof    GenericArrayType)    {    	non-compiled	[CE]  inconvertible  types	9	None	replace
11	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericComponentType();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  Type  toGenericArrayType  =  type.getGenericComponentType();  [BUGGY]    if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  type.getGenericComponentType();	      Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
12	[BUG]  [BUGGY]  Type  toGenericArrayType  =  cls.getGenericComponentType();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  Type  toGenericArrayType  =  cls.getGenericComponentType();  [BUGGY]    if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  cls.getGenericComponentType();	      Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
13	[BUG]  [BUGGY]  Type  toGenericArrayType  =  types.getGenericComponentType();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  Type  toGenericArrayType  =  types.getGenericComponentType();  [BUGGY]    if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  types.getGenericComponentType();	      Type    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
14	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGenericComponentType();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  GenericArrayType  toGenericArrayType  =  type.getGenericComponentType();  [BUGGY]    if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	GenericArrayType  toGenericArrayType  =  type.getGenericComponentType();	      GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
15	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  cls.getGenericComponentType();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  GenericArrayType  toGenericArrayType  =  cls.getGenericComponentType();  [BUGGY]    if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	GenericArrayType  toGenericArrayType  =  cls.getGenericComponentType();	      GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
16	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  types.getGenericComponentType();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  GenericArrayType  toGenericArrayType  =  types.getGenericComponentType();  [BUGGY]    if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	GenericArrayType  toGenericArrayType  =  types.getGenericComponentType();	      GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
17	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(0);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(0);  [BUGGY]    if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  type.getGenericParameterType(0);	      Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(0);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
18	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();  [BUGGY]    if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType();	      Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(0);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
19	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(1);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(1);  [BUGGY]    if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  type.getGenericParameterType(1);	      Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(0);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
20	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  toComponentType);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  toComponentType);  [BUGGY]    if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  toComponentType);	      Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
21	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  cls);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  cls);  [BUGGY]    if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  cls);	      Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
22	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType);  [BUGGY]    if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType);	      Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
23	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType)  {  if(toGenericArrayType  instanceof  GenericArrayType)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType)  {  if(toGenericArrayType  instanceof  GenericArrayType)  {  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType    instanceof    GenericArrayType)    {    if(toGenericArrayType  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
24	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType)  {  If(toGenericArrayType  instanceof  GenericArrayType)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType)  {  If(toGenericArrayType  instanceof  GenericArrayType)  {  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType    instanceof    GenericArrayType)    {    If(toGenericArrayType  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
25	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType)  {  if(toGenericArrayType  instancesof  GenericArrayType)  {  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType)  {  if(toGenericArrayType  instancesof  GenericArrayType)  {  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType    instanceof    GenericArrayType)    {    if(toGenericArrayType  instancesof  GenericArrayType)  {	  	non-compiled	[CE]  ')'  expected	8	None	add
26	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType)  {  if(toGenericArrayType  instanceof  GenericArrayType),  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType)  {  if(toGenericArrayType  instanceof  GenericArrayType),  {  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType    instanceof    GenericArrayType)    {    if(toGenericArrayType  instanceof  GenericArrayType),  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
27	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  UnknownType)  {  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  UnknownType)  {  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  UnknownType)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    UnknownType)    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
28	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  UnknownType)  {  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  UnknownType)  {  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  UnknownType)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    UnknownType)    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
29	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ||  type  instanceof  UnknownType  ||  toGenericArrayType  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  if(type  instanceof  GenericArrayType  ||  type  instanceof  UnknownType  ||  toGenericArrayType  instanceof  Class  <?>)  {  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  ||  type  instanceof  UnknownType  ||  toGenericArrayType  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    UnknownType)    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
30	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  type  instanceof  UnknownType)  {  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  type  instanceof  UnknownType)  {  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  ||  type  instanceof  UnknownType)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    UnknownType)    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
31	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType)  {  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType)  {  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    TokenType)    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
32	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType)  {  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType)  {  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    TokenType)    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
33	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ||  type  instanceof  TokenType  ||  toGenericArrayType  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  if(type  instanceof  GenericArrayType  ||  type  instanceof  TokenType  ||  toGenericArrayType  instanceof  Class  <?>)  {  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  ||  type  instanceof  TokenType  ||  toGenericArrayType  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    TokenType)    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
34	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ||  type  instanceof  TokenType  ||  toGenericArrayType  instanceof  WildcardType)  {  [CE]  cannot  find  symbol  [FE]                    AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  if(type  instanceof  GenericArrayType  ||  type  instanceof  TokenType  ||  toGenericArrayType  instanceof  WildcardType)  {  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  ||  type  instanceof  TokenType  ||  toGenericArrayType  instanceof  WildcardType)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    TokenType)    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
35	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  if(type  instanceof  GenericArrayType  &&  type  instanceof  Class  <?>)  {  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	add	if(type  instanceof  GenericArrayType  &&  type  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	7	2	replace
36	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  &&  type  instanceof  Class  <?>)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  if(type  instanceof  GenericArrayType  &&  type  instanceof  Class  <?>)  {  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  &&  type  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	7	2	replace
37	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  if(type  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	add	if(type  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	7	2	replace
38	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  if(type  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	7	2	replace
39	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  <?>)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]            AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  <?>)  {  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  <?>)  {	  if(type    instanceof    GenericArrayType    <?>)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	10	None	replace
40	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.isAssignableFrom(type))  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]              AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  if(type  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.isAssignableFrom(type))  {  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.isAssignableFrom(type))  {	  if(type    instanceof    GenericArrayType    <?>)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	10	None	replace
41	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.isInterface())  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  if(type  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.isInterface())  {  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.isInterface())  {	  if(type    instanceof    GenericArrayType    <?>)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	10	None	replace
42	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.isVarAssignable())  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                  AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  if(type  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.isVarAssignable())  {  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.isVarAssignable())  {	  if(type    instanceof    GenericArrayType    <?>)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	10	None	replace
43	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  toComponentType);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  toComponentType);  [BUGGY]    if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  toComponentType);	      Type    toGenericArrayType    =    getImplicitUpperBounds((    WildcardType)type);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
44	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  cls);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  cls);  [BUGGY]    if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  cls);	      Type    toGenericArrayType    =    getImplicitUpperBounds((    WildcardType)type);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
45	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  bound);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  bound);  [BUGGY]    if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  bound);	      Type    toGenericArrayType    =    getImplicitUpperBounds((    WildcardType)type);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
46	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds(type,(  WildcardType)type);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds(type,(  WildcardType)type);  [BUGGY]    if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds(type,(  WildcardType)type);	      Type    toGenericArrayType    =    getImplicitUpperBounds((    WildcardType)type);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
47	[BUG]  [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGeneric();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGeneric();  [BUGGY]    if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  typeVarAssigns.getGeneric();	      Type    toGenericArrayType    =    toGenericArrayType.getGeneric();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
48	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  Class  <?>)type);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  Class  <?>)type);  [BUGGY]    if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  Class  <?>)type);	      Type    toGenericArrayType    =    toGenericArrayType.getGeneric();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
49	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericArrayType();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericArrayType();  [BUGGY]    if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericArrayType();	      GenericArrayType    toGenericArrayType    =    toGenericArrayType.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
50	[BUG]  [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGenericConstructor();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGenericConstructor();  [BUGGY]    if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  typeVarAssigns.getGenericConstructor();	      Type    toGenericArrayType    =    toGenericArrayType.getGenericConstructor();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
51	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  if(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type    instanceof    GenericArrayType    ||    type    instanceof    Class    <?>)    {    type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {	  	non-compiled	[CE]  not  a  statement	6	None	add
52	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  &&  type  instanceof  TokenType)  {  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  if(type  instanceof  GenericArrayType  &&  type  instanceof  TokenType)  {  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  &&  type  instanceof  TokenType)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    TokenType)    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
53	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ==?>)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  if(type  instanceof  GenericArrayType  ==?>)  {  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  ==?>)  {	  if(type    instanceof    GenericArrayType    <?>)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
54	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.getGenericComponentType()!=  typeVarAssigns)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]              AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  if(type  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.getGenericComponentType()!=  typeVarAssigns)  {  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.getGenericComponentType()!=  typeVarAssigns)  {	  if(type    instanceof    GenericArrayType    <?>)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	10	None	replace
55	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  Class  <?>)  {  [CE]  inconvertible  types  [FE]    AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  Class  <?>)  {  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    Class    <?>)    {    	non-compiled	[CE]  inconvertible  types	7	None	replace
56	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	add	if(toGenericArrayType  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	7	2	replace
57	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	7	2	replace
58	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericArrayType();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  Type  toGenericArrayType  =  type.getGenericArrayType();  [BUGGY]    if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  type.getGenericArrayType();	      Type    toGenericArrayType    =    toGenericArrayType.getGeneric();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
59	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType)  {  if(ToGenericArrayType  instanceof  GenericArrayType)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType)  {  if(ToGenericArrayType  instanceof  GenericArrayType)  {  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType    instanceof    GenericArrayType)    {    if(ToGenericArrayType  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
60	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ||  toComponentType  instanceof  UnknownType)  {  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }    [BUGGY]  if(type  instanceof  GenericArrayType  ||  toComponentType  instanceof  UnknownType)  {  [BUGGY]      return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  ||  toComponentType  instanceof  UnknownType)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    UnknownType)    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
