bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  &&  toGenericArrayType  instanceof  TokenType)  {  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  &&  toGenericArrayType  instanceof  TokenType)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  &&  toGenericArrayType  instanceof  TokenType)  {	  if(type    instanceof    GenericArrayType    &&    type    instanceof    TokenType)    {    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
2	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  &&  type  instanceof  TokenType)  {  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  &&  type  instanceof  TokenType)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  &&  type  instanceof  TokenType)  {	  if(type    instanceof    GenericArrayType    &&    type    instanceof    TokenType)    {    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
3	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  &&  toGenericArrayType  instanceof  TokenType)  {  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  &&  toGenericArrayType  instanceof  TokenType)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  &&  toGenericArrayType  instanceof  TokenType)  {	  if(type    instanceof    GenericArrayType    &&    type    instanceof    TokenType)    {    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
4	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ==?>)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ==?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  ==?>)  {	  if(type    instanceof    GenericArrayType    ==?>)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
5	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType!=?>)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType!=?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType!=?>)  {	  if(type    instanceof    GenericArrayType    ==?>)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
6	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ==?>  ||  toGenericArrayType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  ==?>  ||  toGenericArrayType  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  ==?>  ||  toGenericArrayType  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    ==?>)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
7	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  <?>  &&  type.isInterface())  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                    AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  <?>  &&  type.isInterface())  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  <?>  &&  type.isInterface())  {	  if(type    instanceof    GenericArrayType    <?>    &&    toGenericArrayType.isInterface())    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	41	None	replace
8	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  <?>  ||  toGenericArrayType.isInterface())  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                      AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  <?>  ||  toGenericArrayType.isInterface())  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  <?>  ||  toGenericArrayType.isInterface())  {	  if(type    instanceof    GenericArrayType    <?>    &&    toGenericArrayType.isInterface())    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	41	None	replace
9	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.isInterface())  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                        AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.isInterface())  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.isInterface())  {	  if(type    instanceof    GenericArrayType    <?>    &&    toGenericArrayType.isInterface())    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	41	None	replace
10	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.isInterface()  ||  toGenericArrayType.isAssignableFrom(type))  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                          AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.isInterface()  ||  toGenericArrayType.isAssignableFrom(type))  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.isInterface()  ||  toGenericArrayType.isAssignableFrom(type))  {	  if(type    instanceof    GenericArrayType    <?>    &&    toGenericArrayType.isInterface())    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	41	None	replace
11	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  &&  toComponentType  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	add	if(type  instanceof  GenericArrayType  &&  toComponentType  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    ||    toComponentType    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	38	2	replace
12	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  &&  toComponentType  instanceof  Class  <?>)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  &&  toComponentType  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  &&  toComponentType  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    ||    toComponentType    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	38	2	replace
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toComponentType  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	add	if(toComponentType  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    ||    toComponentType    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	38	2	replace
14	[BUG]  [BUGGY]  if(toComponentType  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toComponentType  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toComponentType  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    ||    toComponentType    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	38	2	replace
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  WildcardType)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	add	if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  WildcardType)  {	  if(toGenericArrayType    instanceof    GenericArrayType)    {    if(ToGenericArrayType    instanceof    GenericArrayType)    {    	compilable	  [FE]  AssertionError  	59	2	replace
16	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  WildcardType)  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  WildcardType)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  WildcardType)  {	  if(toGenericArrayType    instanceof    GenericArrayType)    {    if(ToGenericArrayType    instanceof    GenericArrayType)    {    	compilable	  [FE]  AssertionError  	59	2	replace
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  &&  toComponentType  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	add	if(toGenericArrayType  instanceof  GenericArrayType  &&  toComponentType  instanceof  Class  <?>)  {	  if(toGenericArrayType    instanceof    GenericArrayType    ||    toComponentType    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	57	2	replace
18	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  &&  toComponentType  instanceof  Class  <?>)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  &&  toComponentType  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  &&  toComponentType  instanceof  Class  <?>)  {	  if(toGenericArrayType    instanceof    GenericArrayType    ||    toComponentType    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	57	2	replace
19	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  toComponentType,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  toComponentType,  typeVarAssigns);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  toComponentType,  typeVarAssigns);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    WildcardType)type,    toComponentType);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
20	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  toComponentType,  toGenericArrayType);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  toComponentType,  toGenericArrayType);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  toComponentType,  toGenericArrayType);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    WildcardType)type,    toComponentType);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
21	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  toComponentType,  cls);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  toComponentType,  cls);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  toComponentType,  cls);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    WildcardType)type,    toComponentType);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
22	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  toComponentType,  bound);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  toComponentType,  bound);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  toComponentType,  bound);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    WildcardType)type,    toComponentType);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
23	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  &&  toGenericArrayType  instanceof  Class  <?>)  {  [CE]  inconvertible  types  [FE]    AssertionError    [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  &&  toGenericArrayType  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  &&  toGenericArrayType  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    &&    type    instanceof    Class    <?>)    {    	non-compiled	[CE]  inconvertible  types	36	None	replace
24	[BUG]  [BUGGY]  if(toComponentType  instanceof  GenericArrayType  ||  type  instanceof  UnknownType)  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toComponentType  instanceof  GenericArrayType  ||  type  instanceof  UnknownType)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toComponentType  instanceof  GenericArrayType  ||  type  instanceof  UnknownType)  {	  if(type    instanceof    GenericArrayType    ||    toComponentType    instanceof    UnknownType)    {    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
25	[BUG]  [BUGGY]  if(toComponentType  instanceof  GenericArrayType  ||  toComponentType  instanceof  UnknownType)  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toComponentType  instanceof  GenericArrayType  ||  toComponentType  instanceof  UnknownType)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toComponentType  instanceof  GenericArrayType  ||  toComponentType  instanceof  UnknownType)  {	  if(type    instanceof    GenericArrayType    ||    toComponentType    instanceof    UnknownType)    {    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
26	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ||  toComponentType  instanceof  UnknownType  ||  toGenericArrayType  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  ||  toComponentType  instanceof  UnknownType  ||  toGenericArrayType  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  ||  toComponentType  instanceof  UnknownType  ||  toGenericArrayType  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    ||    toComponentType    instanceof    UnknownType)    {    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
27	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toComponentType  instanceof  UnknownType)  {  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toComponentType  instanceof  UnknownType)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  ||  toComponentType  instanceof  UnknownType)  {	  if(type    instanceof    GenericArrayType    ||    toComponentType    instanceof    UnknownType)    {    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
28	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  Class  <?>)type,  toComponentType);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  Class  <?>)type,  toComponentType);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  Class  <?>)type,  toComponentType);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    Class    <?>)type);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
29	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  Class  <?>)type,  bound);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  Class  <?>)type,  bound);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  Class  <?>)type,  bound);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    Class    <?>)type);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
30	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitLowerBounds((  Class  <?>)type);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  getImplicitLowerBounds((  Class  <?>)type);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  getImplicitLowerBounds((  Class  <?>)type);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    Class    <?>)type);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
31	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  type  instanceof  UnknownType  ||  toGenericArrayType  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  type  instanceof  UnknownType  ||  toGenericArrayType  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  ||  type  instanceof  UnknownType  ||  toGenericArrayType  instanceof  Class  <?>)  {	  if(toGenericArrayType    instanceof    GenericArrayType    ||    type    instanceof    UnknownType)    {    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
32	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  toGenericArrayType  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  toGenericArrayType  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  toGenericArrayType  instanceof  Class  <?>)  {	  if(toGenericArrayType    instanceof    GenericArrayType    ||    toGenericArrayType    instanceof    TokenType)    {    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
33	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType,  typeVarAssigns)  {  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType,  typeVarAssigns)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType,  typeVarAssigns)  {	  if(toGenericArrayType    instanceof    GenericArrayType    ||    toGenericArrayType    instanceof    TokenType)    {    	non-compiled	[CE]  ')'  expected	31	None	replace
34	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toComponentType.getGenericComponentType();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  toComponentType.getGenericComponentType();  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  toComponentType.getGenericComponentType();	  Type    toGenericArrayType    =    type.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
35	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  bound,  toGenericArrayType);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  bound,  toGenericArrayType);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  bound,  toGenericArrayType);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    WildcardType)type,    bound);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
36	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  bound,  toComponentType);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  bound,  toComponentType);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  bound,  toComponentType);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    WildcardType)type,    bound);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
37	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  bound,  cls);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  bound,  cls);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  bound,  cls);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    WildcardType)type,    bound);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
38	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  GenericArrayType)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	add	if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  GenericArrayType)  {	  if(toGenericArrayType    instanceof    Class    <?>    ||    toGenericArrayType    instanceof    GenericArrayType)    {    	compilable	  [FE]  AssertionError  	10	2	replace
39	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  GenericArrayType)  {  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  GenericArrayType)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  GenericArrayType)  {	  if(toGenericArrayType    instanceof    Class    <?>    ||    toGenericArrayType    instanceof    GenericArrayType)    {    	compilable	  [FE]  AssertionError  	10	2	replace
40	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  GenericArrayType)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	add	if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  GenericArrayType)  {	  if(toGenericArrayType    instanceof    Class    <?>    ||    toGenericArrayType    instanceof    GenericArrayType)    {    	compilable	  [FE]  AssertionError  	10	2	replace
41	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  GenericArrayType)  {  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  GenericArrayType)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  GenericArrayType)  {	  if(toGenericArrayType    instanceof    Class    <?>    ||    toGenericArrayType    instanceof    GenericArrayType)    {    	compilable	  [FE]  AssertionError  	10	2	replace
42	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  Class  <?>  ||  toGenericArrayType  instanceof  GenericArrayType)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	add	if(type  instanceof  Class  <?>  ||  toGenericArrayType  instanceof  GenericArrayType)  {	  if(toGenericArrayType    instanceof    Class    <?>    ||    toGenericArrayType    instanceof    GenericArrayType)    {    	compilable	  [FE]  AssertionError  	10	2	replace
43	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  toGenericArrayType  instanceof  GenericArrayType)  {  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  Class  <?>  ||  toGenericArrayType  instanceof  GenericArrayType)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  Class  <?>  ||  toGenericArrayType  instanceof  GenericArrayType)  {	  if(toGenericArrayType    instanceof    Class    <?>    ||    toGenericArrayType    instanceof    GenericArrayType)    {    	compilable	  [FE]  AssertionError  	10	2	replace
44	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(toGenericArrayType);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(toGenericArrayType);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(toGenericArrayType);	  Type    toGenericArrayType    =    type.getGenericParameterType(toGenericArrayType);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
45	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType,  toComponentType);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType,  toComponentType);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType,  toComponentType);	  Type    toGenericArrayType    =    type.getGenericParameterType(toGenericArrayType);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
46	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type);	  Type    toGenericArrayType    =    type.getGenericParameterType(toGenericArrayType);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
47	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  Type)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	add	if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  Type)  {	  if(toGenericArrayType    instanceof    GenericArrayType)    {    if(toGenericArrayType    instanceof    GenericArrayType),    {    	compilable	  [FE]  AssertionError  	26	2	replace
48	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  Type)  {  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  Type)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  Type)  {	  if(toGenericArrayType    instanceof    GenericArrayType)    {    if(toGenericArrayType    instanceof    GenericArrayType),    {    	compilable	  [FE]  AssertionError  	26	2	replace
49	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  type  instanceof  WildcardType)  {  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  type  instanceof  WildcardType)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  type  instanceof  WildcardType)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    TokenType    ||    toGenericArrayType    instanceof    WildcardType)    {    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
50	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  type  instanceof  WildcardType)  {  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  type  instanceof  WildcardType)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  type  instanceof  WildcardType)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    TokenType    ||    toGenericArrayType    instanceof    WildcardType)    {    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
51	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  typeVarAssigns  instanceof  WildcardType)  {  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  typeVarAssigns  instanceof  WildcardType)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  typeVarAssigns  instanceof  WildcardType)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    TokenType    ||    toGenericArrayType    instanceof    WildcardType)    {    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
52	[BUG]  [BUGGY]  If(type  instanceof  GenericArrayType)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  If(type  instanceof  GenericArrayType)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	If(type  instanceof  GenericArrayType)  {	  if(toGenericArrayType    instanceof    GenericArrayType)    {    If(toGenericArrayType    instanceof    GenericArrayType)    {    	non-compiled	[CE]  ';'  expected	24	None	replace
53	[BUG]  [BUGGY]  AssertionError(toGenericArrayType).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  AssertionError(toGenericArrayType).getGenericComponentType(),  toComponentType,  typeVarAssigns);  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	AssertionError(toGenericArrayType).getGenericComponentType(),  toComponentType,  typeVarAssigns);	  if(toGenericArrayType    instanceof    GenericArrayType)    {    If(toGenericArrayType    instanceof    GenericArrayType)    {    	non-compiled	[CE]  ';'  expected	24	None	replace
54	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  if(toGenericArrayType  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  if(toGenericArrayType  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType    instanceof    GenericArrayType    ||    toComponentType    instanceof    Class    <?>)    {    if(toGenericArrayType  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
55	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  If(toGenericArrayType  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  If(toGenericArrayType  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType    instanceof    GenericArrayType    ||    toComponentType    instanceof    Class    <?>)    {    If(toGenericArrayType  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  ';'  expected	56	None	add
56	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  if(fromGenericArrayType  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  if(fromGenericArrayType  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType    instanceof    GenericArrayType    ||    toComponentType    instanceof    Class    <?>)    {    if(fromGenericArrayType  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
57	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  if(type  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  if(type  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType    instanceof    GenericArrayType    ||    toComponentType    instanceof    Class    <?>)    {    if(type  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
58	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  UnknownType  ||  type  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  UnknownType  ||  type  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  UnknownType  ||  type  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    UnknownType    ||    toGenericArrayType    instanceof    Class    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
59	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  UnknownType  ||  type  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  UnknownType  ||  type  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  UnknownType  ||  type  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    UnknownType    ||    toGenericArrayType    instanceof    Class    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
60	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ||  toComponentType  instanceof  UnknownType  ||  type  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  ||  toComponentType  instanceof  UnknownType  ||  type  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  ||  toComponentType  instanceof  UnknownType  ||  type  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    UnknownType    ||    toGenericArrayType    instanceof    Class    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
61	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  toComponentType.getGenericComponentType();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  GenericArrayType  toGenericArrayType  =  toComponentType.getGenericComponentType();  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	GenericArrayType  toGenericArrayType  =  toComponentType.getGenericComponentType();	  GenericArrayType    toGenericArrayType    =    type.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
62	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericArrayType();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericArrayType();  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericArrayType();	  GenericArrayType    toGenericArrayType    =    typeVarAssigns.getGenericArrayType();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
63	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  cls.getGenericArrayType();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  GenericArrayType  toGenericArrayType  =  cls.getGenericArrayType();  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	GenericArrayType  toGenericArrayType  =  cls.getGenericArrayType();	  GenericArrayType    toGenericArrayType    =    typeVarAssigns.getGenericArrayType();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
64	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericComponentType();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericComponentType();  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericComponentType();	  GenericArrayType    toGenericArrayType    =    typeVarAssigns.getGenericArrayType();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
65	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  type  instanceof  TokenType)  {  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  type  instanceof  TokenType)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  ||  type  instanceof  TokenType)  {	  if(type    instanceof    GenericArrayType    ||    toGenericArrayType    instanceof    TokenType)    {    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
66	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  toGenericArrayType  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  toGenericArrayType  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  toGenericArrayType  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    ||    toGenericArrayType    instanceof    TokenType)    {    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
67	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  toComponentType  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  toComponentType  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    ||    toGenericArrayType    instanceof    TokenType)    {    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
68	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  cls,  toGenericArrayType);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  cls,  toGenericArrayType);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  cls,  toGenericArrayType);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    WildcardType)type,    cls);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
69	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  cls,  toComponentType);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  cls,  toComponentType);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  cls,  toComponentType);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    WildcardType)type,    cls);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
70	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  toGenericArrayType);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  toGenericArrayType);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  toGenericArrayType);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    WildcardType)type,    cls);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
71	[BUG]  [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGenericComponentType();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGenericComponentType();  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  typeVarAssigns.getGenericComponentType();	  Type    toGenericArrayType    =    typeVarAssigns.getGenericConstructor();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
72	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  UnknownType  ||  toGenericArrayType  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  UnknownType  ||  toGenericArrayType  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  UnknownType  ||  toGenericArrayType  instanceof  Class  <?>)  {	  if(toGenericArrayType    instanceof    GenericArrayType    ||    toGenericArrayType    instanceof    UnknownType)    {    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
73	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.isVarAssignable())  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                      AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.isVarAssignable())  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.isVarAssignable())  {	  if(type    instanceof    GenericArrayType    <?>    &&    toGenericArrayType.isVarAssignable())    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	42	None	replace
74	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  <?>  &&  type.isVarAssignable())  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                        AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  <?>  &&  type.isVarAssignable())  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  <?>  &&  type.isVarAssignable())  {	  if(type    instanceof    GenericArrayType    <?>    &&    toGenericArrayType.isVarAssignable())    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	42	None	replace
75	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  <?>  ||  toGenericArrayType.isVarAssignable())  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                          AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  <?>  ||  toGenericArrayType.isVarAssignable())  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  <?>  ||  toGenericArrayType.isVarAssignable())  {	  if(type    instanceof    GenericArrayType    <?>    &&    toGenericArrayType.isVarAssignable())    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	42	None	replace
76	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.isVarAssignable()  ||  toGenericArrayType.isVarAssignable())  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                            AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.isVarAssignable()  ||  toGenericArrayType.isVarAssignable())  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.isVarAssignable()  ||  toGenericArrayType.isVarAssignable())  {	  if(type    instanceof    GenericArrayType    <?>    &&    toGenericArrayType.isVarAssignable())    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	42	None	replace
77	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  <?>  ||  toGenericArrayType  instanceof  Class  <?>)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  <?>  ||  toGenericArrayType  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  <?>  ||  toGenericArrayType  instanceof  Class  <?>)  {	  if(toGenericArrayType    instanceof    GenericArrayType    <?>)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	39	None	replace
78	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  <?>  ||  toGenericArrayType  instanceof  Type  <?>)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                  AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  <?>  ||  toGenericArrayType  instanceof  Type  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  <?>  ||  toGenericArrayType  instanceof  Type  <?>)  {	  if(toGenericArrayType    instanceof    GenericArrayType    <?>)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	39	None	replace
79	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(1);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(1);	  Type    toGenericArrayType    =    type.getGenericParameterType(1);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
80	[BUG]  [BUGGY]  Type  toGenericArrayType  =  cls.getGenericParameterType(1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  cls.getGenericParameterType(1);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  cls.getGenericParameterType(1);	  Type    toGenericArrayType    =    type.getGenericParameterType(1);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
81	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(cls,  type);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(cls,  type);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(cls,  type);	  Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type,    cls);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
82	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  cls,  toComponentType);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  cls,  toComponentType);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  cls,  toComponentType);	  Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type,    cls);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
83	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  cls,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  cls,  typeVarAssigns);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  cls,  typeVarAssigns);	  Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type,    cls);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
84	[BUG]  [BUGGY]  type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    Class    <?>)    {    type    instanceof    GenericArrayType    ||    type    instanceof    Class    <?>)    {    	non-compiled	[CE]  not  a  statement	51	None	replace
85	[BUG]  [BUGGY]  Type  toGenericArrayType  ||  type  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  ||  type  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  ||  type  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    Class    <?>)    {    type    instanceof    GenericArrayType    ||    type    instanceof    Class    <?>)    {    	non-compiled	[CE]  ';'  expected	51	None	replace
86	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    Class    <?>)    {    type    instanceof    GenericArrayType    ||    type    instanceof    Class    <?>)    {    	non-compiled	[CE]  ';'  expected	51	None	replace
87	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  Class  <?>)type).getGenericComponentType();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  Class  <?>)type).getGenericComponentType();  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  Class  <?>)type).getGenericComponentType();	  Type    toGenericArrayType    =    types.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
88	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.isAssignableFrom(type))  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                  AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.isAssignableFrom(type))  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.isAssignableFrom(type))  {	  if(type    instanceof    GenericArrayType    <?>    &&    toGenericArrayType.isAssignableFrom(type))    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	40	None	replace
89	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  <?>  ||  toGenericArrayType.isAssignableFrom(type))  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                    AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  <?>  ||  toGenericArrayType.isAssignableFrom(type))  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  <?>  ||  toGenericArrayType.isAssignableFrom(type))  {	  if(type    instanceof    GenericArrayType    <?>    &&    toGenericArrayType.isAssignableFrom(type))    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	40	None	replace
90	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.isAssignableFrom(type)||  toGenericArrayType.isAssignableFrom(type))  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                      AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.isAssignableFrom(type)||  toGenericArrayType.isAssignableFrom(type))  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.isAssignableFrom(type)||  toGenericArrayType.isAssignableFrom(type))  {	  if(type    instanceof    GenericArrayType    <?>    &&    toGenericArrayType.isAssignableFrom(type))    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	40	None	replace
91	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  <?>  &&  type.isAssignableFrom(type))  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                        AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  <?>  &&  type.isAssignableFrom(type))  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  <?>  &&  type.isAssignableFrom(type))  {	  if(type    instanceof    GenericArrayType    <?>    &&    toGenericArrayType.isAssignableFrom(type))    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	40	None	replace
92	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  &&  type  instanceof  Class  <?>)  {  if(type  instanceof  GenericArrayType  &&  type  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  &&  type  instanceof  Class  <?>)  {  if(type  instanceof  GenericArrayType  &&  type  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type    instanceof    GenericArrayType    &&    type    instanceof    Class    <?>)    {    if(type  instanceof  GenericArrayType  &&  type  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
93	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  &&  type  instanceof  Class  <?>)  {  If(type  instanceof  GenericArrayType  &&  type  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  &&  type  instanceof  Class  <?>)  {  If(type  instanceof  GenericArrayType  &&  type  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type    instanceof    GenericArrayType    &&    type    instanceof    Class    <?>)    {    If(type  instanceof  GenericArrayType  &&  type  instanceof  Class  <?>)  {	  	non-compiled	[CE]  ';'  expected	35	None	add
94	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericArrayType();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericArrayType();  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericArrayType();	  Type    toGenericArrayType    =    type.getGenericArrayType();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
95	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(toComponentType,  type);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(toComponentType,  type);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(toComponentType,  type);	  Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type,    toComponentType);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
96	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(cls,  toComponentType);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(cls,  toComponentType);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(cls,  toComponentType);	  Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type,    toComponentType);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
97	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  type  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  type  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  type  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    TokenType    ||    toGenericArrayType    instanceof    Class    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
98	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  type  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  type  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  type  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    TokenType    ||    toGenericArrayType    instanceof    Class    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
99	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  typeVarAssigns  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  typeVarAssigns  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  typeVarAssigns  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    TokenType    ||    toGenericArrayType    instanceof    Class    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
100	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  if(type  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  if(type  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type    instanceof    GenericArrayType    ||    toComponentType    instanceof    Class    <?>)    {    if(type  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
101	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  If(type  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  If(type  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type    instanceof    GenericArrayType    ||    toComponentType    instanceof    Class    <?>)    {    If(type  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  ';'  expected	37	None	add
102	[BUG]  [BUGGY]  Type  toGenericArrayType  =  cls.getGenericParameterType(0);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  cls.getGenericParameterType(0);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  cls.getGenericParameterType(0);	  Type    toGenericArrayType    =    type.getGenericParameterType(0);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
103	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  &&  toGenericArrayType  instanceof  Class  <?>)  {  [CE]  inconvertible  types  [FE]          AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  &&  toGenericArrayType  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  &&  toGenericArrayType  instanceof  Class  <?>)  {	  if(toGenericArrayType    instanceof    GenericArrayType    ||    toGenericArrayType    instanceof    Class    <?>)    {    	non-compiled	[CE]  inconvertible  types	9	None	replace
104	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds(toComponentType,(WildcardType)type);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds(toComponentType,(WildcardType)type);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds(toComponentType,(WildcardType)type);	  Type    toGenericArrayType    =    getImplicitUpperBounds(type,(    WildcardType)type);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
105	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds(cls,(WildcardType)type);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds(cls,(WildcardType)type);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds(cls,(WildcardType)type);	  Type    toGenericArrayType    =    getImplicitUpperBounds(type,(    WildcardType)type);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
106	[BUG]  [BUGGY]  If(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  If(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	If(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    Class    <?>)    {    If(type    instanceof    GenericArrayType    ||    type    instanceof    Class    <?>)    {    	non-compiled	[CE]  ';'  expected	5	None	replace
107	[BUG]  [BUGGY]  If(type  instanceof  GenericArrayType  &&  type  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  If(type  instanceof  GenericArrayType  &&  type  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	If(type  instanceof  GenericArrayType  &&  type  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    Class    <?>)    {    If(type    instanceof    GenericArrayType    ||    type    instanceof    Class    <?>)    {    	non-compiled	[CE]  ';'  expected	5	None	replace
108	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType();  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  type.getGenericParameterType();	  Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
109	[BUG]  [BUGGY]  Type  toGenericArrayType  =  cls.getGenericParameterType();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  cls.getGenericParameterType();  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  cls.getGenericParameterType();	  Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
110	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  UnknownType  ||  toGenericArrayType  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  UnknownType  ||  toGenericArrayType  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  UnknownType  ||  toGenericArrayType  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    ||    toGenericArrayType    instanceof    UnknownType)    {    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
111	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.getGenericComponentType()!=  typeVarAssigns)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                  AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.getGenericComponentType()!=  typeVarAssigns)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.getGenericComponentType()!=  typeVarAssigns)  {	  if(type    instanceof    GenericArrayType    <?>    &&    toGenericArrayType.getGenericComponentType()!=    typeVarAssigns)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	54	None	replace
112	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.getGenericComponentType()  ==  typeVarAssigns)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                    AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.getGenericComponentType()  ==  typeVarAssigns)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.getGenericComponentType()  ==  typeVarAssigns)  {	  if(type    instanceof    GenericArrayType    <?>    &&    toGenericArrayType.getGenericComponentType()!=    typeVarAssigns)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	54	None	replace
113	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  <?>  &&  toComponentType.getGenericComponentType()!=  typeVarAssigns)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                      AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  <?>  &&  toComponentType.getGenericComponentType()!=  typeVarAssigns)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  <?>  &&  toComponentType.getGenericComponentType()!=  typeVarAssigns)  {	  if(type    instanceof    GenericArrayType    <?>    &&    toGenericArrayType.getGenericComponentType()!=    typeVarAssigns)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	54	None	replace
114	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  typeVarAssigns);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  typeVarAssigns);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    WildcardType)type,    cls);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
115	[BUG]  [BUGGY]  if(toGenericArrayType.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType.isAssignableFrom(type))  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType.isAssignableFrom(type))  {	  if(type    instanceof    GenericArrayType    <?>    &&    toGenericArrayType.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
116	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType,  cls);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType,  cls);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  type.getGenericParameterType(toGenericArrayType,  cls);	  Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type,    cls);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
117	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  type);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  type);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type,  type);	  Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type,    cls);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
118	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  &&  type  instanceof  Class  <?>)  {  type  instanceof  GenericArrayType  &&  type  instanceof  Class  <?>)  {  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  &&  type  instanceof  Class  <?>)  {  type  instanceof  GenericArrayType  &&  type  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type    instanceof    GenericArrayType    &&    type    instanceof    Class    <?>)    {    type  instanceof  GenericArrayType  &&  type  instanceof  Class  <?>)  {	  	non-compiled	[CE]  not  a  statement	35	None	add
119	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toComponentType.getGenericConstructor();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  toComponentType.getGenericConstructor();  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  toComponentType.getGenericConstructor();	  Type    toGenericArrayType    =    type.getGenericConstructor();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
120	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ==  false)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	add	if(toGenericArrayType  instanceof  GenericArrayType  ==  false)  {	  if(toGenericArrayType    instanceof    GenericArrayType    <?>)    {    	compilable	  [FE]  AssertionError  	39	2	replace
121	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ==  false)  {  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ==  false)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  ==  false)  {	  if(toGenericArrayType    instanceof    GenericArrayType    <?>)    {    	compilable	  [FE]  AssertionError  	39	2	replace
122	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitLowerBounds(type,(WildcardType)type);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  getImplicitLowerBounds(type,(WildcardType)type);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  getImplicitLowerBounds(type,(WildcardType)type);	  Type    toGenericArrayType    =    getImplicitUpperBounds(type,(    WildcardType)type);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
123	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  Class  <?>)type,  toGenericArrayType);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  Class  <?>)type,  toGenericArrayType);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  Class  <?>)type,  toGenericArrayType);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    Class    <?>)type);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
124	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(2);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(2);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(2);	  Type    toGenericArrayType    =    type.getGenericParameterType(1);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
125	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  &&  toGenericArrayType  instanceof  UnknownType)  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  &&  toGenericArrayType  instanceof  UnknownType)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  &&  toGenericArrayType  instanceof  UnknownType)  {	  if(toGenericArrayType    instanceof    GenericArrayType    ||    toGenericArrayType    instanceof    UnknownType)    {    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
126	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  &&  toGenericArrayType  instanceof  UnknownType)  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  &&  toGenericArrayType  instanceof  UnknownType)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  &&  toGenericArrayType  instanceof  UnknownType)  {	  if(type    instanceof    GenericArrayType    ||    toGenericArrayType    instanceof    UnknownType)    {    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
127	[BUG]  [BUGGY]  Type  toGenericArrayType  =  cls.getGenericArrayType();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  cls.getGenericArrayType();  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  cls.getGenericArrayType();	  Type    toGenericArrayType    =    cls.getGenericConstructor();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
128	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  bounds);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  bounds);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  bounds);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    WildcardType)type,    bound);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
129	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  toGenericArrayType  instanceof  WildcardType)  {  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  toGenericArrayType  instanceof  WildcardType)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  toGenericArrayType  instanceof  WildcardType)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    TokenType    ||    toGenericArrayType    instanceof    WildcardType)    {    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
130	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  typeVarAssigns  instanceof  WildcardType)  {  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  typeVarAssigns  instanceof  WildcardType)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  typeVarAssigns  instanceof  WildcardType)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    TokenType    ||    toGenericArrayType    instanceof    WildcardType)    {    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
131	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  &&  type  instanceof  UnknownType)  {  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  &&  type  instanceof  UnknownType)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  &&  type  instanceof  UnknownType)  {	  if(toGenericArrayType    instanceof    GenericArrayType    ||    type    instanceof    UnknownType)    {    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
132	[BUG]  [BUGGY]  Type  toGenericArrayType  =  types.getGenericArrayType();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  types.getGenericArrayType();  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  types.getGenericArrayType();	  Type    toGenericArrayType    =    types.getGenericConstructor();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
133	[BUG]  [BUGGY]  Type  toGenericArrayType  =  types.getGenericArray();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  types.getGenericArray();  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  types.getGenericArray();	  Type    toGenericArrayType    =    types.getGenericConstructor();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
134	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	add	if(type  instanceof  Class  <?>)  {	  if(toGenericArrayType    instanceof    GenericArrayType)    {    if(toGenericArrayType    instanceof    GenericArrayType)    {    	compilable	  [FE]  AssertionError  	23	2	replace
135	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  Class  <?>)  {	  if(toGenericArrayType    instanceof    GenericArrayType)    {    if(toGenericArrayType    instanceof    GenericArrayType)    {    	compilable	  [FE]  AssertionError  	23	2	replace
136	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  if(toGENericArrayType  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  if(toGENericArrayType  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType    instanceof    GenericArrayType    ||    toComponentType    instanceof    Class    <?>)    {    if(toGENericArrayType  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
137	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  typeVarAssigns  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  typeVarAssigns  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  typeVarAssigns  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    TokenType    ||    toGenericArrayType    instanceof    Class    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
138	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toComponentType.getGenericParameterType(type,  toGenericArrayType);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  toComponentType.getGenericParameterType(type,  toGenericArrayType);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  toComponentType.getGenericParameterType(type,  toGenericArrayType);	  Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type,    toComponentType);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
139	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toComponentType.getGenericParameterType(type);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  toComponentType.getGenericParameterType(type);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  toComponentType.getGenericParameterType(type);	  Type    toGenericArrayType    =    toGenericArrayType.getGenericParameterType(type,    toComponentType);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
140	[BUG]  [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGenericParameterType(0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGenericParameterType(0);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  typeVarAssigns.getGenericParameterType(0);	  Type    toGenericArrayType    =    typeVarAssigns.getGenericConstructor();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
141	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  cls.getGenericParameterType(0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  GenericArrayType  toGenericArrayType  =  cls.getGenericParameterType(0);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	GenericArrayType  toGenericArrayType  =  cls.getGenericParameterType(0);	  GenericArrayType    toGenericArrayType    =    cls.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
142	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.isInterface()  ||  toGenericArrayType.isInterface())  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                    AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.isInterface()  ||  toGenericArrayType.isInterface())  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.isInterface()  ||  toGenericArrayType.isInterface())  {	  if(type    instanceof    GenericArrayType    <?>    &&    toGenericArrayType.isInterface())    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	41	None	replace
143	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toComponentType.getGenericParameterType(0);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  toComponentType.getGenericParameterType(0);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  toComponentType.getGenericParameterType(0);	  Type    toGenericArrayType    =    type.getGenericParameterType(0);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
144	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toComponentType.getGenericArrayType();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  toComponentType.getGenericArrayType();  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  toComponentType.getGenericArrayType();	  Type    toGenericArrayType    =    type.getGenericArrayType();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
145	[BUG]  [BUGGY]  If(toGenericArrayType  instanceof  GenericArrayType)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  If(toGenericArrayType  instanceof  GenericArrayType)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	If(toGenericArrayType  instanceof  GenericArrayType)  {	  if(toGenericArrayType    instanceof    GenericArrayType)    {    If(toGenericArrayType    instanceof    GenericArrayType)    {    	non-compiled	[CE]  ';'  expected	24	None	replace
146	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toComponentType.getGenericParameterType(toGenericArrayType);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  toComponentType.getGenericParameterType(toGenericArrayType);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  toComponentType.getGenericParameterType(toGenericArrayType);	  Type    toGenericArrayType    =    type.getGenericParameterType(toGenericArrayType);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
147	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  <?>)  {  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  <?>)  {	  if(toGenericArrayType    instanceof    GenericArrayType    ||    toGenericArrayType    instanceof    TokenType)    {    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
148	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  types.getGenericArrayType();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  GenericArrayType  toGenericArrayType  =  types.getGenericArrayType();  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	GenericArrayType  toGenericArrayType  =  types.getGenericArrayType();	  GenericArrayType    toGenericArrayType    =    types.getGenericComponentType();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
149	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  Class  <?>  ||  toGenericArrayType  instanceof  GenericArrayType)  {  [CE]  inconvertible  types  [FE]            AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  Class  <?>  ||  toGenericArrayType  instanceof  GenericArrayType)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  Class  <?>  ||  toGenericArrayType  instanceof  GenericArrayType)  {	  if(toGenericArrayType    instanceof    Class    <?>    ||    toGenericArrayType    instanceof    GenericArrayType)    {    	non-compiled	[CE]  inconvertible  types	10	None	replace
150	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  <?>  ||  toGenericArrayType  instanceof  GenericArrayType)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]              AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  <?>  ||  toGenericArrayType  instanceof  GenericArrayType)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  <?>  ||  toGenericArrayType  instanceof  GenericArrayType)  {	  if(toGenericArrayType    instanceof    Class    <?>    ||    toGenericArrayType    instanceof    GenericArrayType)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	10	None	replace
151	[BUG]  [BUGGY]  if(toComponentType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  Class  <?>)  {  [CE]  inconvertible  types  [FE]    AssertionError    [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toComponentType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toComponentType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  Class  <?>)  {	  if(toGenericArrayType    instanceof    GenericArrayType    ||    toComponentType    instanceof    Class    <?>)    {    	non-compiled	[CE]  inconvertible  types	57	None	replace
152	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.isAssignableFrom(type)||  toComponentType  instanceof  Class  <?>)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                  AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.isAssignableFrom(type)||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.isAssignableFrom(type)||  toComponentType  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    <?>    &&    toGenericArrayType.isAssignableFrom(type))    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	40	None	replace
153	[BUG]  [BUGGY]  If(type  instanceof  GenericArrayType  &&  toComponentType  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  If(type  instanceof  GenericArrayType  &&  toComponentType  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	If(type  instanceof  GenericArrayType  &&  toComponentType  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    Class    <?>)    {    If(type    instanceof    GenericArrayType    ||    type    instanceof    Class    <?>)    {    	non-compiled	[CE]  ';'  expected	5	None	replace
154	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  ||  type  instanceof  WildcardType)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	add	if(type  instanceof  GenericArrayType  ||  type  instanceof  WildcardType)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    Class    <?>)    {    if(type    instanceof    GenericArrayType    ||    type    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	4	2	replace
155	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ||  type  instanceof  WildcardType)  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  ||  type  instanceof  WildcardType)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  ||  type  instanceof  WildcardType)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    Class    <?>)    {    if(type    instanceof    GenericArrayType    ||    type    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	4	2	replace
156	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  <?>  &&  typeVarAssigns.getGenericComponentType()!=  toGenericArrayType)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                  AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  <?>  &&  typeVarAssigns.getGenericComponentType()!=  toGenericArrayType)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  <?>  &&  typeVarAssigns.getGenericComponentType()!=  toGenericArrayType)  {	  if(type    instanceof    GenericArrayType    <?>    &&    toGenericArrayType.getGenericComponentType()!=    typeVarAssigns)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	54	None	replace
157	[BUG]  [BUGGY]  Type  toGenericArrayType  =  type  instanceof  GenericArrayType?((  GenericArrayType)type).getGenericComponentType()  :  toComponentType;  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  type  instanceof  GenericArrayType?((  GenericArrayType)type).getGenericComponentType()  :  toComponentType;  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  type  instanceof  GenericArrayType?((  GenericArrayType)type).getGenericComponentType()  :  toComponentType;	  if(type    instanceof    GenericArrayType    ||    type    instanceof    Class    <?>)    {    type    instanceof    GenericArrayType    ||    type    instanceof    Class    <?>)    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
158	[BUG]  [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGenericArrayType();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  typeVarAssigns.getGenericArrayType();  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  typeVarAssigns.getGenericArrayType();	  Type    toGenericArrayType    =    typeVarAssigns.getGenericConstructor();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
159	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  UnknownType  ||  toComponentType  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  UnknownType  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  UnknownType  ||  toComponentType  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    ||    toGenericArrayType    instanceof    UnknownType)    {    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
160	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  &&  type  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	add	if(toGenericArrayType  instanceof  GenericArrayType  &&  type  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    &&    type    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	36	2	replace
161	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  &&  type  instanceof  Class  <?>)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  &&  type  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  &&  type  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    &&    type    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	36	2	replace
162	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  bounds,  toComponentType);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  bounds,  toComponentType);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  bounds,  toComponentType);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    WildcardType)type,    bound);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
163	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  this.bounds);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  this.bounds);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  this.bounds);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    WildcardType)type,    bound);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
164	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  cls,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  cls,  typeVarAssigns);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type,  cls,  typeVarAssigns);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    WildcardType)type,    cls);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
165	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.isVarAssigns())  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                    AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.isVarAssigns())  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  <?>  &&  toGenericArrayType.isVarAssigns())  {	  if(type    instanceof    GenericArrayType    <?>    &&    toGenericArrayType.isInterface())    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	41	None	replace
166	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  if(ToGenericArrayType  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  if(ToGenericArrayType  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType    instanceof    GenericArrayType    ||    toComponentType    instanceof    Class    <?>)    {    if(ToGenericArrayType  instanceof  GenericArrayType  ||  toComponentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
167	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  UnknownType  ||  typeVarAssigns  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  UnknownType  ||  typeVarAssigns  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  UnknownType  ||  typeVarAssigns  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    UnknownType    ||    toGenericArrayType    instanceof    Class    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
168	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds(toGenericArrayType,(WildcardType)type);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds(toGenericArrayType,(WildcardType)type);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds(toGenericArrayType,(WildcardType)type);	  Type    toGenericArrayType    =    getImplicitUpperBounds(type,(    WildcardType)type);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
169	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  toGenericArrayType  instanceof  WildcardType)  {  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  toGenericArrayType  instanceof  WildcardType)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  ||  toGenericArrayType  instanceof  TokenType  ||  toGenericArrayType  instanceof  WildcardType)  {	  if(type    instanceof    GenericArrayType    ||    type    instanceof    TokenType    ||    toGenericArrayType    instanceof    WildcardType)    {    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
170	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]    AssertionError    [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  <?>  ||  toComponentType  instanceof  Class  <?>)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  <?>  ||  toComponentType  instanceof  Class  <?>)  {	  if(type    instanceof    GenericArrayType    ||    toComponentType    instanceof    Class    <?>)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	38	None	replace
171	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  <?>  ||  type  instanceof  GenericArrayType)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]            AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  <?>  ||  type  instanceof  GenericArrayType)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  <?>  ||  type  instanceof  GenericArrayType)  {	  if(toGenericArrayType    instanceof    Class    <?>    ||    toGenericArrayType    instanceof    GenericArrayType)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	10	None	replace
172	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ==?>  &&  toGenericArrayType.isAssignableFrom(type))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  ==?>  &&  toGenericArrayType.isAssignableFrom(type))  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  ==?>  &&  toGenericArrayType.isAssignableFrom(type))  {	  if(type    instanceof    GenericArrayType    ==?>)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
173	[BUG]  [BUGGY]  GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericArrayType(toComponentType);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericArrayType(toComponentType);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	GenericArrayType  toGenericArrayType  =  typeVarAssigns.getGenericArrayType(toComponentType);	  GenericArrayType    toGenericArrayType    =    typeVarAssigns.getGenericArrayType();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
174	[BUG]  [BUGGY]  Type  toGenericArrayType  =  toComponentType.getGeneric();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  toComponentType.getGeneric();  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  toComponentType.getGeneric();	  Type    toGenericArrayType    =    type.getGeneric();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
175	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  &&  typeVarAssigns  instanceof  TokenType)  {  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  if(type  instanceof  GenericArrayType  &&  typeVarAssigns  instanceof  TokenType)  {  [BUGGY]        return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  &&  typeVarAssigns  instanceof  TokenType)  {	  if(type    instanceof    GenericArrayType    &&    type    instanceof    TokenType)    {    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
176	[BUG]  [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  Class  <?>)type,  typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }      [BUGGY]  Type  toGenericArrayType  =  getImplicitUpperBounds((  Class  <?>)type,  typeVarAssigns);  [BUGGY]      if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	Type  toGenericArrayType  =  getImplicitUpperBounds((  Class  <?>)type,  typeVarAssigns);	  Type    toGenericArrayType    =    getImplicitUpperBounds((    Class    <?>)type);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
