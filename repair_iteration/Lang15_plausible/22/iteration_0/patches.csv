bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError  [CONTEXT]  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]    Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [BUGGY]  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	    Type  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();		non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	44	None	add
2	[BUG]  [BUGGY]    Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError  [CONTEXT]  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]    Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type);  [BUGGY]  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	    Type  toGenericArrayType  =  getImplicitUpperBounds((  WildcardType)type);		non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	44	None	add
3	[BUG]  [BUGGY]    Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]        AssertionError  [CONTEXT]  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]    Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type);  [BUGGY]  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	    Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(type);		non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	44	None	add
4	[BUG]  [BUGGY]    GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]          AssertionError  [CONTEXT]  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]    GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();  [BUGGY]  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	    GenericArrayType  toGenericArrayType  =  toGenericArrayType.getGenericComponentType();		non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	44	None	add
5	[BUG]  [BUGGY]    Type  toGenericArrayType  =  toGenericArrayType.getGenericConstructor();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError  [CONTEXT]  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]    Type  toGenericArrayType  =  toGenericArrayType.getGenericConstructor();  [BUGGY]  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	    Type  toGenericArrayType  =  toGenericArrayType.getGenericConstructor();		non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	44	None	add
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]  if(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	add	if(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {	if  (type  instanceof  GenericArrayType)  {  	compilable	  [FE]  AssertionError  	43	2	replace
7	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]  if(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  ||  type  instanceof  Class  <?>)  {	if  (type  instanceof  GenericArrayType)  {  	compilable	  [FE]  AssertionError  	43	2	replace
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType)  {  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	add	if(toGenericArrayType  instanceof  GenericArrayType)  {	if  (type  instanceof  GenericArrayType)  {  	compilable	  [FE]  AssertionError  	43	2	replace
9	[BUG]  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType)  {  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]  if(toGenericArrayType  instanceof  GenericArrayType)  {  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(toGenericArrayType  instanceof  GenericArrayType)  {	if  (type  instanceof  GenericArrayType)  {  	compilable	  [FE]  AssertionError  	43	2	replace
10	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  <?>)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]        AssertionError  [CONTEXT]  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]  if(type  instanceof  GenericArrayType  <?>)  {  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  <?>)  {	if  (type  instanceof  GenericArrayType)  {  	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	43	None	replace
11	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ||  type  instanceof  TokenType)  {  [CE]  cannot  find  symbol  [FE]          AssertionError  [CONTEXT]  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]  if(type  instanceof  GenericArrayType  ||  type  instanceof  TokenType)  {  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  ||  type  instanceof  TokenType)  {	if  (type  instanceof  GenericArrayType)  {  	non-compiled	[CE]  cannot  find  symbol	43	None	replace
12	[BUG]  [BUGGY]    Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]    AssertionError  [CONTEXT]  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]    Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);  [BUGGY]  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	    Type  toGenericArrayType  =  toGenericArrayType.getGenericParameterType(0);		non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	44	None	add
13	[BUG]  [BUGGY]    Type  toGenericArrayType  =  toGenericArrayType.getGeneric();  [CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)  [FE]      AssertionError  [CONTEXT]  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]    Type  toGenericArrayType  =  toGenericArrayType.getGeneric();  [BUGGY]  if  (type  instanceof  GenericArrayType)  {  return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	    Type  toGenericArrayType  =  toGenericArrayType.getGeneric();		non-compiled	[CE]  variable  toGenericArrayType  is  already  defined  in  method  isAssignable(Type,GenericArrayType,Map<TypeVariable<?>,Type>)	44	None	add
14	[BUG]  [BUGGY]  if(type  instanceof  GenericArrayType  ||  type  instanceof  UnknownType)  {  [CE]  cannot  find  symbol  [FE]    AssertionError  [CONTEXT]  Type  toComponentType  =  toGenericArrayType.getGenericComponentType();  if  (type  instanceof  Class<?>)  {  Class<?>  cls  =  (Class<?>)  type;  return  cls.isArray()  &&  isAssignable(cls.getComponentType(),  toComponentType,  typeVarAssigns);  }  [BUGGY]  if(type  instanceof  GenericArrayType  ||  type  instanceof  UnknownType)  {  [BUGGY]    return  isAssignable(((GenericArrayType)  type).getGenericComponentType(),  toComponentType,  typeVarAssigns);  }  if  (type  instanceof  WildcardType)  {  for  (Type  bound  :  getImplicitUpperBounds((WildcardType)  type))  {  if  (isAssignable(bound,  toGenericArrayType))  {  return  true;  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  GenericArrayType  toGenericArrayType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toComponentType  type  boolean  Class  cls  GenericArrayType  toGenericArrayType  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	287	287	2	replace	if(type  instanceof  GenericArrayType  ||  type  instanceof  UnknownType)  {	if  (type  instanceof  GenericArrayType)  {  	non-compiled	[CE]  cannot  find  symbol	43	None	replace
