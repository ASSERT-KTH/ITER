bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  [BUGGY]  if(toClass  instanceof  Class  <?>)  {  [BUGGY]  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	add	if(toClass  instanceof  Class  <?>)  {	if  (type  instanceof  Class<?>)  {  	compilable	  [FE]  ClassCastException  	83	5	replace
2	[BUG]  [BUGGY]  if(toClass  instanceof  Class  <?>)  {  [FE]  ClassCastException  [FE]    AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  [BUGGY]  if(toClass  instanceof  Class  <?>)  {  [BUGGY]  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(toClass  instanceof  Class  <?>)  {	if  (type  instanceof  Class<?>)  {  	compilable	  [FE]  ClassCastException  	83	5	replace
3	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	add	if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {	if  (type  instanceof  Class<?>)  {  	compilable	  [FE]  ClassCastException  	83	5	replace
4	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [FE]  ClassCastException  [FE]      AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {	if  (type  instanceof  Class<?>)  {  	compilable	  [FE]  ClassCastException  	83	5	replace
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [BUGGY]  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	add	if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {	if  (type  instanceof  Class<?>)  {  	compilable	  [FE]  AssertionError  	83	2	replace
6	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [BUGGY]  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {	if  (type  instanceof  Class<?>)  {  	compilable	  [FE]  AssertionError  	83	2	replace
7	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  [BUGGY]    [BUGGY]  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	  	if  (type  instanceof  Class<?>)  {  	non-compiled	[CE]  illegal  start  of  type	83	None	replace
8	[BUG]  [BUGGY]    Type  bound  =  toClass.getRawType();  [CE]  cannot  find  symbol  [FE]    AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  [BUGGY]    Type  bound  =  toClass.getRawType();  [BUGGY]  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	    Type  bound  =  toClass.getRawType();		non-compiled	[CE]  cannot  find  symbol	84	None	add
9	[BUG]  [BUGGY]    Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getComponentType();  [CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)  [FE]      AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  [BUGGY]    Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getComponentType();  [BUGGY]  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	    Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getComponentType();		non-compiled	[CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)	84	None	add
10	[BUG]  [BUGGY]    Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]        AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  [BUGGY]    Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	    Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);		non-compiled	[CE]  ';'  expected	84	None	add
11	[BUG]  [BUGGY]    Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass;  [CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)  [FE]          AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  [BUGGY]    Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass;  [BUGGY]  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	    Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass;		non-compiled	[CE]  variable  bound  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)	84	None	add
12	[BUG]  [BUGGY]    Type  bound  =  toClass.isArray()?  toClass.getRawType()  :  toClass.getRawType();  [CE]  cannot  find  symbol  [FE]            AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  [BUGGY]    Type  bound  =  toClass.isArray()?  toClass.getRawType()  :  toClass.getRawType();  [BUGGY]  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	    Type  bound  =  toClass.isArray()?  toClass.getRawType()  :  toClass.getRawType();		non-compiled	[CE]  cannot  find  symbol	84	None	add
13	[BUG]  [BUGGY]    Type  bound  =  toClass.getType();  [CE]  cannot  find  symbol  [FE]    AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  [BUGGY]    Type  bound  =  toClass.getType();  [BUGGY]  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	    Type  bound  =  toClass.getType();		non-compiled	[CE]  cannot  find  symbol	84	None	add
14	[BUG]  [BUGGY]    Type  bound  =  getTypeArguments(toClass.getComponentType());  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>)  [FE]      AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  [BUGGY]    Type  bound  =  getTypeArguments(toClass.getComponentType());  [BUGGY]  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	    Type  bound  =  getTypeArguments(toClass.getComponentType());		non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>)	84	None	add
15	[BUG]  [BUGGY]    Type  bound  =  getTypeArguments(toClass.getComponentType(),  toClass);  [CE]  incompatible  types  [FE]        AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  [BUGGY]    Type  bound  =  getTypeArguments(toClass.getComponentType(),  toClass);  [BUGGY]  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	    Type  bound  =  getTypeArguments(toClass.getComponentType(),  toClass);		non-compiled	[CE]  incompatible  types	84	None	add
16	[BUG]  [BUGGY]    Type  bound  =  getTypeArguments(toClass);  [CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>)  [FE]          AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  [BUGGY]    Type  bound  =  getTypeArguments(toClass);  [BUGGY]  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	    Type  bound  =  getTypeArguments(toClass);		non-compiled	[CE]  no  suitable  method  found  for  getTypeArguments(Class<CAP#1>)	84	None	add
17	[BUG]  [BUGGY]    Type  bound  =  getTypeVariables(toClass,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]            AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  [BUGGY]    Type  bound  =  getTypeVariables(toClass,  subtypeVarAssigns);  [BUGGY]  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	    Type  bound  =  getTypeVariables(toClass,  subtypeVarAssigns);		non-compiled	[CE]  cannot  find  symbol	84	None	add
18	[BUG]  [BUGGY]    Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns;  [CE]  variable  subtypeVarAssigns  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)  [FE]    AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  [BUGGY]    Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns;  [BUGGY]  if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	    Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns;		non-compiled	[CE]  variable  subtypeVarAssigns  is  already  defined  in  method  getTypeArguments(Type,Class<?>,Map<TypeVariable<?>,Type>)	84	None	add
19	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>,  toClass!=  subtypeVarAssigns)  {  [CE]  ')'  expected  [FE]    AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  [BUGGY]  if(type  instanceof  Class  <?>,  toClass!=  subtypeVarAssigns)  {  [BUGGY]  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>,  toClass!=  subtypeVarAssigns)  {	if  (type  instanceof  Class<?>)  {  	non-compiled	[CE]  ')'  expected	83	None	replace
