bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Type  bound  =  getTypeVariables(toClass,  toClass,  subtypeVarAssigns,  type);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeVariables(toClass,  toClass,  subtypeVarAssigns,  type);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeVariables(toClass,  toClass,  subtypeVarAssigns,  type);	  Type    bound    =    getTypeVariables(toClass,    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
2	[BUG]  [BUGGY]  Type  bound  =  getTypeVariable(type,  toClass,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeVariable(type,  toClass,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeVariable(type,  toClass,  subtypeVarAssigns);	  Type    bound    =    getTypeVariables(toClass,    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
3	[BUG]  [BUGGY]  Type  bound  =  getTypeVariables(type.getComponentType(),  toClass,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeVariables(type.getComponentType(),  toClass,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeVariables(type.getComponentType(),  toClass,  subtypeVarAssigns);	  Type    bound    =    getTypeVariables(toClass,    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
4	[BUG]  [BUGGY]  If(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  If(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	If(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    If(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    	non-compiled	[CE]  ';'  expected	27	None	replace
5	[BUG]  [BUGGY]  if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    If(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    	non-compiled	[CE]  ';'  expected	27	None	replace
6	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    If(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    	non-compiled	[CE]  ';'  expected	27	None	replace
7	[BUG]  [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  null  :  subtypeVarAssigns.getRawType();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  null  :  subtypeVarAssigns.getRawType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  subtypeVarAssigns!=  null?  null  :  subtypeVarAssigns.getRawType();	  Type    bound    =    subtypeVarAssigns.getRawType();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
8	[BUG]  [BUGGY]  Type  bound  =  subtypeVarAssigns  ==  null?  null  :  subtypeVarAssigns.getRawType();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  subtypeVarAssigns  ==  null?  null  :  subtypeVarAssigns.getRawType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  subtypeVarAssigns  ==  null?  null  :  subtypeVarAssigns.getRawType();	  Type    bound    =    subtypeVarAssigns.getRawType();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
9	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>,  toClass)  {  [CE]  ')'  expected  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>,  toClass)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>,  toClass)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>,    subtypeVarAssigns)    {    	non-compiled	[CE]  ')'  expected	74	None	replace
10	[BUG]  [BUGGY]  if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>,  subtypeVarAssigns)  {  [CE]  ')'  expected  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>,  subtypeVarAssigns)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>,  subtypeVarAssigns)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>,    subtypeVarAssigns)    {    	non-compiled	[CE]  ')'  expected	74	None	replace
11	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>,  subtypeVarAssigns)  {  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>,  subtypeVarAssigns)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>,  subtypeVarAssigns)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>,    subtypeVarAssigns)    {    	non-compiled	[CE]  ')'  expected	74	None	replace
12	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(type.getComponentType(),  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeArguments(type.getComponentType(),  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(type.getComponentType(),  subtypeVarAssigns);	  Type    bound    =    getTypeArguments(toClass.getComponentType(),    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
13	[BUG]  [BUGGY]  Type  bound  =  type,  subtypeVarAssigns.getType();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  type,  subtypeVarAssigns.getType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  type,  subtypeVarAssigns.getType();	  Type    bound    =    toClass,    subtypeVarAssigns.getType();    	non-compiled	[CE]  ';'  expected	72	None	replace
14	[BUG]  [BUGGY]  Type  bound  =  subtypeVarAssigns,  toClass.getType();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  subtypeVarAssigns,  toClass.getType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  subtypeVarAssigns,  toClass.getType();	  Type    bound    =    toClass,    subtypeVarAssigns.getType();    	non-compiled	[CE]  ';'  expected	72	None	replace
15	[BUG]  [BUGGY]  Type  bound  =  toClass,  type.getType();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass,  type.getType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass,  type.getType();	  Type    bound    =    toClass,    subtypeVarAssigns.getType();    	non-compiled	[CE]  ';'  expected	72	None	replace
16	[BUG]  [BUGGY]  Type  bound  =  toClass.getParameterType(type);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.getParameterType(type);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.getParameterType(type);	  Type    bound    =    toClass.getParameterType(0);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
17	[BUG]  [BUGGY]  Type  bound  =  type.getParameterType(0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  type.getParameterType(0);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  type.getParameterType(0);	  Type    bound    =    toClass.getParameterType(0);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
18	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	add	if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    	compilable	  [FE]  ClassCastException  	9	5	replace
19	[BUG]  [BUGGY]  if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    	compilable	  [FE]  ClassCastException  	9	5	replace
20	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	add	if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    	compilable	  [FE]  ClassCastException  	9	5	replace
21	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    	compilable	  [FE]  ClassCastException  	9	5	replace
22	[BUG]  [BUGGY]  if(toClass  instanceof  Class  <?>,  type  ==  subtypeVarAssigns)  {  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(toClass  instanceof  Class  <?>,  type  ==  subtypeVarAssigns)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(toClass  instanceof  Class  <?>,  type  ==  subtypeVarAssigns)  {	  if(type    instanceof    Class    <?>,    toClass    ==    subtypeVarAssigns)    {    	non-compiled	[CE]  ')'  expected	17	None	replace
23	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>,  toClass  ==  null)  {  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>,  toClass  ==  null)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>,  toClass  ==  null)  {	  if(type    instanceof    Class    <?>,    toClass    ==    subtypeVarAssigns)    {    	non-compiled	[CE]  ')'  expected	17	None	replace
24	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  type.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  type.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  type.getComponentType()  :  toClass,  subtypeVarAssigns);	  Type    bound    =    toClass.isArray()?    type.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	45	None	replace
25	[BUG]  [BUGGY]  Type  bound  =  toClass.isInterface()?  type.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isInterface()?  type.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isInterface()?  type.getComponentType()  :  toClass,  subtypeVarAssigns);	  Type    bound    =    toClass.isArray()?    type.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	45	None	replace
26	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getRawType()  :  subtypeVarAssigns.getRawType();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getRawType()  :  subtypeVarAssigns.getRawType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getRawType()  :  subtypeVarAssigns.getRawType();	  Type    bound    =    toClass.isArray()?    toClass.getRawType()    :    subtypeVarAssigns.getRawType();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
27	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  type,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  type,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  type,  subtypeVarAssigns);	  Type    bound    =    toClass.isAssignableFrom(type)?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	44	None	replace
28	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getName()  :  toClass.getComponentType(),  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getName()  :  toClass.getComponentType(),  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getName()  :  toClass.getComponentType(),  subtypeVarAssigns);	  Type    bound    =    toClass.isAssignableFrom(type)?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	44	None	replace
29	[BUG]  [BUGGY]  Type  bound  =  toClass.getRawType(),  subtypeVarAssigns,  type);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.getRawType(),  subtypeVarAssigns,  type);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.getRawType(),  subtypeVarAssigns,  type);	  Type    bound    =    toClass.getRawType(),    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	51	None	replace
30	[BUG]  [BUGGY]  Type  bound  =  type.getRawType(),  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  type.getRawType(),  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  type.getRawType(),  subtypeVarAssigns);	  Type    bound    =    toClass.getRawType(),    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	51	None	replace
31	[BUG]  [BUGGY]  Type  bound  =  toClass.getRawType(),  type);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.getRawType(),  type);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.getRawType(),  type);	  Type    bound    =    toClass.getRawType(),    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	51	None	replace
32	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns,  toClass;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns,  toClass;  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns,  toClass;	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns,    type;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
33	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type;  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type;	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns,    type;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
34	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(subtypeVarAssigns.getComponentType(),  toClass,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeArguments(subtypeVarAssigns.getComponentType(),  toClass,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(subtypeVarAssigns.getComponentType(),  toClass,  subtypeVarAssigns);	  Type    bound    =    getTypeArguments(subtypeVarAssigns.getComponentType(),    toClass);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
35	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(type,  toClass.getComponentType());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeArguments(type,  toClass.getComponentType());  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(type,  toClass.getComponentType());	  Type    bound    =    getTypeArguments(toClass,    toClass.getComponentType());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
36	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(toClass,  toClass.getComponentType(),  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeArguments(toClass,  toClass.getComponentType(),  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(toClass,  toClass.getComponentType(),  subtypeVarAssigns);	  Type    bound    =    getTypeArguments(toClass,    toClass.getComponentType());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
37	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(toClass,  toClass.isArray()?  toClass.getComponentType()  :  toClass);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeArguments(toClass,  toClass.isArray()?  toClass.getComponentType()  :  toClass);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(toClass,  toClass.isArray()?  toClass.getComponentType()  :  toClass);	  Type    bound    =    getTypeArguments(toClass,    toClass.getComponentType());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
38	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(toClass,  subtypeVarAssigns.getComponentType());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeArguments(toClass,  subtypeVarAssigns.getComponentType());  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(toClass,  subtypeVarAssigns.getComponentType());	  Type    bound    =    getTypeArguments(toClass,    toClass.getComponentType());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
39	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type.getComponentType()  :  toClass,  subtypeVarAssigns;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type.getComponentType()  :  toClass,  subtypeVarAssigns;  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type.getComponentType()  :  toClass,  subtypeVarAssigns;	  Type    bound    =    toClass.isArray()?    type.getComponentType()    :    toClass.getComponentType()    :    toClass,    subtypeVarAssigns;    	non-compiled	[CE]  ';'  expected	21	None	replace
40	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass.getComponentType()  :  toClass,  subtypeVarAssigns;  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass.getComponentType()  :  toClass,  subtypeVarAssigns;  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass.getComponentType()  :  toClass,  subtypeVarAssigns;	  Type    bound    =    toClass.isArray()?    type.getComponentType()    :    toClass.getComponentType()    :    toClass,    subtypeVarAssigns;    	non-compiled	[CE]  ';'  expected	21	None	replace
41	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getComponentType()  :  toClass,  subtypeVarAssigns;  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getComponentType()  :  toClass,  subtypeVarAssigns;  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getComponentType()  :  toClass,  subtypeVarAssigns;	  Type    bound    =    toClass.isArray()?    type.getComponentType()    :    toClass.getComponentType()    :    toClass,    subtypeVarAssigns;    	non-compiled	[CE]  ';'  expected	21	None	replace
42	[BUG]  [BUGGY]  if(toClass  instanceof  Class  <?>,  type  ==  toClass)  {  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(toClass  instanceof  Class  <?>,  type  ==  toClass)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(toClass  instanceof  Class  <?>,  type  ==  toClass)  {	  if(type    instanceof    Class    <?>,    toClass    ==    toClass)    {    	non-compiled	[CE]  ')'  expected	19	None	replace
43	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>,  toClass  ==  bound)  {  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>,  toClass  ==  bound)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>,  toClass  ==  bound)  {	  if(type    instanceof    Class    <?>,    toClass    ==    toClass)    {    	non-compiled	[CE]  ')'  expected	19	None	replace
44	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>,  toClass  ==  subtypeVarAssigns  ||  type  instanceof  Class  <?>)  {  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>,  toClass  ==  subtypeVarAssigns  ||  type  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>,  toClass  ==  subtypeVarAssigns  ||  type  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>,    toClass!=    subtypeVarAssigns    ||    type    instanceof    Class    <?>)    {    	non-compiled	[CE]  ')'  expected	84	None	replace
45	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>,  toClass  ==  subtypeVarAssigns  &&  type  instanceof  Class  <?>)  {  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>,  toClass  ==  subtypeVarAssigns  &&  type  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>,  toClass  ==  subtypeVarAssigns  &&  type  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>,    toClass!=    subtypeVarAssigns    ||    type    instanceof    Class    <?>)    {    	non-compiled	[CE]  ')'  expected	84	None	replace
46	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>,  toClass  ==  subtypeVarAssigns  ||  toClass  instanceof  Class  <?>)  {  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>,  toClass  ==  subtypeVarAssigns  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>,  toClass  ==  subtypeVarAssigns  ||  toClass  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>,    toClass!=    subtypeVarAssigns    ||    type    instanceof    Class    <?>)    {    	non-compiled	[CE]  ')'  expected	84	None	replace
47	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass;  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass;	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    type;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
48	[BUG]  [BUGGY]  if(toClass  instanceof  Class  <?>,  toClass  instanceof  Class  <?>)  {  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(toClass  instanceof  Class  <?>,  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(toClass  instanceof  Class  <?>,  toClass  instanceof  Class  <?>)  {	  if(toClass    instanceof    Class    <?>,    type    instanceof    Class    <?>)    {    	non-compiled	[CE]  ')'  expected	60	None	replace
49	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>,  type  instanceof  Class  <?>)  {  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>,  type  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>,  type  instanceof  Class  <?>)  {	  if(toClass    instanceof    Class    <?>,    type    instanceof    Class    <?>)    {    	non-compiled	[CE]  ')'  expected	60	None	replace
50	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns,  toClass);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns,  toClass);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns,  toClass);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  ';'  expected	79	None	replace
51	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  ';'  expected	79	None	replace
52	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  null,  subtypeVarAssigns,  type);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  null,  subtypeVarAssigns,  type);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  null,  subtypeVarAssigns,  type);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  ';'  expected	79	None	replace
53	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(toClass.getComponentType(),  type,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeArguments(toClass.getComponentType(),  type,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(toClass.getComponentType(),  type,  subtypeVarAssigns);	  Type    bound    =    getTypeArguments(toClass.getComponentType(),    type);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
54	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getComponentType(),  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getComponentType(),  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getComponentType(),  subtypeVarAssigns);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    type,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	43	None	replace
55	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    type,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	43	None	replace
56	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  type.getComponentType();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  type.getComponentType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  type.getComponentType();	  Type    bound    =    toClass.isAssignableFrom(type)?    toClass.getComponentType()    :    toClass.getComponentType();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
57	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  type.getComponentType()  :  toClass.getComponentType();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  type.getComponentType()  :  toClass.getComponentType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  type.getComponentType()  :  toClass.getComponentType();	  Type    bound    =    toClass.isAssignableFrom(type)?    toClass.getComponentType()    :    toClass.getComponentType();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
58	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getName()  :  toClass.getComponentType();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getName()  :  toClass.getComponentType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getName()  :  toClass.getComponentType();	  Type    bound    =    toClass.isAssignableFrom(type)?    toClass.getComponentType()    :    toClass.getComponentType();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
59	[BUG]  [BUGGY]  Type  bound  =  toClass.getRawType()?  type.getRawType()  :  toClass.getRawType();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.getRawType()?  type.getRawType()  :  toClass.getRawType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.getRawType()?  type.getRawType()  :  toClass.getRawType();	  Type    bound    =    toClass.getRawType()?    toClass.getRawType()    :    toClass.getRawType();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
60	[BUG]  [BUGGY]  Type  bound  =  toClass.getRawType()?  toClass.getRawType()  :  type.getRawType();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.getRawType()?  toClass.getRawType()  :  type.getRawType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.getRawType()?  toClass.getRawType()  :  type.getRawType();	  Type    bound    =    toClass.getRawType()?    toClass.getRawType()    :    toClass.getRawType();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
61	[BUG]  [BUGGY]  Type  bound  =  toClass.getRawType()?  toClass.getRawType()  :  subtypeVarAssigns.getRawType();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.getRawType()?  toClass.getRawType()  :  subtypeVarAssigns.getRawType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.getRawType()?  toClass.getRawType()  :  subtypeVarAssigns.getRawType();	  Type    bound    =    toClass.getRawType()?    toClass.getRawType()    :    toClass.getRawType();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
62	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  If(toClass  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  If(toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>)  {  If(toClass  instanceof  Class  <?>)  {	  if(toClass    instanceof    Class    <?>)    {    If(toClass    instanceof    Class    <?>)    {    	non-compiled	[CE]  ';'  expected	54	None	replace
63	[BUG]  [BUGGY]  if(!(toClass  instanceof  Class  <?>))  {  If(toClass  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(!(toClass  instanceof  Class  <?>))  {  If(toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(!(toClass  instanceof  Class  <?>))  {  If(toClass  instanceof  Class  <?>)  {	  if(toClass    instanceof    Class    <?>)    {    If(toClass    instanceof    Class    <?>)    {    	non-compiled	[CE]  ';'  expected	54	None	replace
64	[BUG]  [BUGGY]  if(fromClass  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  fromClass  [FE]          ClassCastException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(fromClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(fromClass  instanceof  Class  <?>)  {	  if(toClass    instanceof    Class    <?>)    {    if(fromClass    instanceof    Class    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  fromClass	53	None	replace
65	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(!(toClass  instanceof  Class  <?>)||(toClass  instanceof  Class  <?>))  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	add	if(!(toClass  instanceof  Class  <?>)||(toClass  instanceof  Class  <?>))  {	  if(toClass    instanceof    Class    <?>)    {    if(fromClass    instanceof    Class    <?>)    {    	compilable	  [FE]  ClassCastException  	53	5	replace
66	[BUG]  [BUGGY]  if(!(toClass  instanceof  Class  <?>)||(toClass  instanceof  Class  <?>))  {  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(!(toClass  instanceof  Class  <?>)||(toClass  instanceof  Class  <?>))  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(!(toClass  instanceof  Class  <?>)||(toClass  instanceof  Class  <?>))  {	  if(toClass    instanceof    Class    <?>)    {    if(fromClass    instanceof    Class    <?>)    {    	compilable	  [FE]  ClassCastException  	53	5	replace
67	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>,  toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [CE]  ')'  expected  [FE]        ClassCastException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>,  toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>,  toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>,    toClass    instanceof    Class    <?>)    {    	non-compiled	[CE]  ')'  expected	77	None	replace
68	[BUG]  [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.getRawType(),  type);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.getRawType(),  type);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass,  subtypeVarAssigns.getRawType(),  type);	  Type    bound    =    toClass,    subtypeVarAssigns.getRawType();    	non-compiled	[CE]  ';'  expected	78	None	replace
69	[BUG]  [BUGGY]  Type  bound  =  subtypeVarAssigns,  toClass.getRawType();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  subtypeVarAssigns,  toClass.getRawType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  subtypeVarAssigns,  toClass.getRawType();	  Type    bound    =    toClass,    subtypeVarAssigns.getRawType();    	non-compiled	[CE]  ';'  expected	78	None	replace
70	[BUG]  [BUGGY]  Type  bound  =  type.getDeclaredType();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  type.getDeclaredType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  type.getDeclaredType();	  Type    bound    =    type.getType();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
71	[BUG]  [BUGGY]  Type  bound  =  getTypeVariables(toClass,  toClass.getComponentType());  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeVariables(toClass,  toClass.getComponentType());  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeVariables(toClass,  toClass.getComponentType());	  Type    bound    =    getTypeVariables(toClass,    toClass);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
72	[BUG]  [BUGGY]  Type  bound  =  getTypeVariables(toClass,  type);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeVariables(toClass,  type);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeVariables(toClass,  type);	  Type    bound    =    getTypeVariables(type,    toClass);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
73	[BUG]  [BUGGY]  Type  bound  =  getTypeVariables(type,  toClass.getComponentType());  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeVariables(type,  toClass.getComponentType());  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeVariables(type,  toClass.getComponentType());	  Type    bound    =    getTypeVariables(type,    toClass);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
74	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
75	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  toClass  instancesof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [CE]  ')'  expected  [FE]      ClassCastException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  toClass  instancesof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    if(type  instanceof  Class  <?>  ||  toClass  instancesof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {	  	non-compiled	[CE]  ')'  expected	8	None	add
76	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  toClass.isArray()  ||  toClass  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  toClass.isArray()  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    if(type  instanceof  Class  <?>  ||  toClass.isArray()  ||  toClass  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
77	[BUG]  [BUGGY]  Type  bound  =  toClass.isObject()?  toClass.getRawType()  :  type.getRawType();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isObject()?  toClass.getRawType()  :  type.getRawType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isObject()?  toClass.getRawType()  :  type.getRawType();	  Type    bound    =    toClass.isObject()?    toClass.getRawType()    :    toClass.getRawType();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
78	[BUG]  [BUGGY]  Type  bound  =  toClass.isType()?  toClass.getRawType()  :  toClass.getRawType();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isType()?  toClass.getRawType()  :  toClass.getRawType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isType()?  toClass.getRawType()  :  toClass.getRawType();	  Type    bound    =    toClass.isObject()?    toClass.getRawType()    :    toClass.getRawType();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
79	[BUG]  [BUGGY]  Class  <?>  bound  =  type.getRawClass();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Class  <?>  bound  =  type.getRawClass();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Class  <?>  bound  =  type.getRawClass();	  Class    <?>    bound    =    toClass.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
80	[BUG]  [BUGGY]  Class  <?>  bound  =  toClass.getRawClass(type);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Class  <?>  bound  =  toClass.getRawClass(type);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Class  <?>  bound  =  toClass.getRawClass(type);	  Class    <?>    bound    =    toClass.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
81	[BUG]  [BUGGY]  Class  <?>  bound  =  toClass.getLeastSuperclass();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Class  <?>  bound  =  toClass.getLeastSuperclass();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Class  <?>  bound  =  toClass.getLeastSuperclass();	  Class    <?>    bound    =    toClass.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
82	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(type,  toClass,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeArguments(type,  toClass,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(type,  toClass,  subtypeVarAssigns);	  Type    bound    =    getTypeArguments(type,    toClass);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
83	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(toClass,  type);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeArguments(toClass,  type);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(toClass,  type);	  Type    bound    =    getTypeArguments(type,    toClass);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
84	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  type  instanceof  TypeVariable  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	add	if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  type  instanceof  TypeVariable  <?>)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>    ||    toClass    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  ClassCastException  	1	5	replace
85	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  type  instanceof  TypeVariable  <?>)  {  [FE]  ClassCastException  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  type  instanceof  TypeVariable  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  type  instanceof  TypeVariable  <?>)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>    ||    toClass    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  ClassCastException  	1	5	replace
86	[BUG]  [BUGGY]  if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(toClass    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
87	[BUG]  [BUGGY]  if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(toClass    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
88	[BUG]  [BUGGY]  if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  if(fromClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  if(fromClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(toClass    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    if(fromClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
89	[BUG]  [BUGGY]  if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  if(ToClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  if(ToClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(toClass    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    if(ToClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
90	[BUG]  [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  toClass.getType()  :  subtypeVarAssigns;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  toClass.getType()  :  subtypeVarAssigns;  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  subtypeVarAssigns!=  null?  toClass.getType()  :  subtypeVarAssigns;	  Type    bound    =    subtypeVarAssigns.getType();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
91	[BUG]  [BUGGY]  Type  bound  =  subtypeVarAssigns  ==  null?  toClass.getType()  :  subtypeVarAssigns;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  subtypeVarAssigns  ==  null?  toClass.getType()  :  subtypeVarAssigns;  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  subtypeVarAssigns  ==  null?  toClass.getType()  :  subtypeVarAssigns;	  Type    bound    =    subtypeVarAssigns.getType();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
92	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  TypeVariable  <?>)  {  [CE]  inconvertible  types  [FE]        ClassCastException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  TypeVariable  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>  ||  toClass  instanceof  TypeVariable  <?>)  {	  if(toClass    instanceof    Class    <?>    ||    toClass    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  inconvertible  types	28	None	replace
93	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          ClassCastException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  TypeVariable  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	add	if(type  instanceof  Class  <?>  ||  type  instanceof  TypeVariable  <?>)  {	  if(toClass    instanceof    Class    <?>    ||    toClass    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  AssertionError  	28	2	replace
94	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  TypeVariable  <?>)  {  [FE]  AssertionError  [FE]          ClassCastException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  TypeVariable  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>  ||  type  instanceof  TypeVariable  <?>)  {	  if(toClass    instanceof    Class    <?>    ||    toClass    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  AssertionError  	28	2	replace
95	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  >=?>)  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  >=?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  >=?>)  {	  if(type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    if(type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
96	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  type.getComponentType()  :  toClass,  subtypeVarAssigns;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  type.getComponentType()  :  toClass,  subtypeVarAssigns;  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  type.getComponentType()  :  toClass,  subtypeVarAssigns;	  Type    bound    =    toClass.isArray()?    type.getComponentType()    :    toClass,    subtypeVarAssigns;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
97	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns;  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns;	  Type    bound    =    toClass.isArray()?    type.getComponentType()    :    toClass,    subtypeVarAssigns;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
98	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          ClassCastException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(!(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>))  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	add	if(!(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>))  {	  if(type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    if(type    instanceof    Class    <?>    ||    toClass    instancesof    Class    <?>)    {    	compilable	  [FE]  IllegalStateException  	38	5	replace
99	[BUG]  [BUGGY]  if(!(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>))  {  [FE]  IllegalStateException  [FE]          ClassCastException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(!(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>))  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(!(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>))  {	  if(type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    if(type    instanceof    Class    <?>    ||    toClass    instancesof    Class    <?>)    {    	compilable	  [FE]  IllegalStateException  	38	5	replace
100	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(subtypeVarAssigns,  toClass.getComponentType(),  type);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeArguments(subtypeVarAssigns,  toClass.getComponentType(),  type);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(subtypeVarAssigns,  toClass.getComponentType(),  type);	  Type    bound    =    getTypeArguments(subtypeVarAssigns,    toClass.getComponentType());    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
101	[BUG]  [BUGGY]  Type  bound  =  getTypeVariables(type,  subtypeVarAssigns,  toClass);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeVariables(type,  subtypeVarAssigns,  toClass);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeVariables(type,  subtypeVarAssigns,  toClass);	  Type    bound    =    getTypeVariables(toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
102	[BUG]  [BUGGY]  Type  bound  =  getTypeVariables(toClass,  type,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeVariables(toClass,  type,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeVariables(toClass,  type,  subtypeVarAssigns);	  Type    bound    =    getTypeVariables(toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
103	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(toClass,  toClass,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeArguments(toClass,  toClass,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(toClass,  toClass,  subtypeVarAssigns);	  Type    bound    =    getTypeArguments(toClass,    toClass);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
104	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(subtypeVarAssigns,  toClass);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeArguments(subtypeVarAssigns,  toClass);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(subtypeVarAssigns,  toClass);	  Type    bound    =    getTypeArguments(subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
105	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns.getComponentType();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns.getComponentType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns.getComponentType();	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    subtypeVarAssigns.getComponentType();    	non-compiled	[CE]  ';'  expected	15	None	replace
106	[BUG]  [BUGGY]  Type  bound  =  getTypeVariables(type,  toClass,  subtypeVarAssigns,  type);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeVariables(type,  toClass,  subtypeVarAssigns,  type);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeVariables(type,  toClass,  subtypeVarAssigns,  type);	  Type    bound    =    getTypeVariables(type,    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
107	[BUG]  [BUGGY]  Type  bound  =  getTypeVariables(type,  toClass,  subtypeVarAssigns,  false);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeVariables(type,  toClass,  subtypeVarAssigns,  false);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeVariables(type,  toClass,  subtypeVarAssigns,  false);	  Type    bound    =    getTypeVariables(type,    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
108	[BUG]  [BUGGY]  Type  bound  =  getTypeVariables(type,  toClass,  subtypeVarAssigns,  null);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeVariables(type,  toClass,  subtypeVarAssigns,  null);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeVariables(type,  toClass,  subtypeVarAssigns,  null);	  Type    bound    =    getTypeVariables(type,    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
109	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getParameterType(type);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getParameterType(type);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getParameterType(type);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass.getParameterType(subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
110	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type.getParameterType(subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type.getParameterType(subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type.getParameterType(subtypeVarAssigns);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass.getParameterType(subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
111	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getParameterType(subtypeVarAssigns,  type);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getParameterType(subtypeVarAssigns,  type);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getParameterType(subtypeVarAssigns,  type);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass.getParameterType(subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
112	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
113	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toClass  instancesof  Class  <?>)  {  [CE]  ')'  expected  [FE]      ClassCastException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toClass  instancesof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toClass  instancesof  Class  <?>)  {	  	non-compiled	[CE]  ')'  expected	2	None	add
114	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  fromClass  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  fromClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  fromClass  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
115	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	add	if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    	compilable	  [FE]  ClassCastException  	3	5	replace
116	[BUG]  [BUGGY]  if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    	compilable	  [FE]  ClassCastException  	3	5	replace
117	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	add	if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    	compilable	  [FE]  ClassCastException  	3	5	replace
118	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    	compilable	  [FE]  ClassCastException  	3	5	replace
119	[BUG]  [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  toClass.getRawType()  :  type.getRawType();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  toClass.getRawType()  :  type.getRawType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  subtypeVarAssigns!=  null?  toClass.getRawType()  :  type.getRawType();	  Type    bound    =    type.getRawType();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
120	[BUG]  [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  type.getRawType()  :  toClass.getRawType();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  type.getRawType()  :  toClass.getRawType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  subtypeVarAssigns!=  null?  type.getRawType()  :  toClass.getRawType();	  Type    bound    =    type.getRawType();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
121	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getRawType()  :  toClass.getRawType();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getRawType()  :  toClass.getRawType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getRawType()  :  toClass.getRawType();	  Type    bound    =    toClass.isArray()?    type.getRawType()    :    toClass.getRawType();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
122	[BUG]  [BUGGY]  Type  bound  =  toClass,  type.isArray()?  toClass.getRawType()  :  subtypeVarAssigns;  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass,  type.isArray()?  toClass.getRawType()  :  subtypeVarAssigns;  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass,  type.isArray()?  toClass.getRawType()  :  subtypeVarAssigns;	  Type    bound    =    toClass,    type.getRawType();    	non-compiled	[CE]  ';'  expected	67	None	replace
123	[BUG]  [BUGGY]  Type  bound  =  toClass,  type.isArray()?  toClass.getRawType()  :  null;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass,  type.isArray()?  toClass.getRawType()  :  null;  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass,  type.isArray()?  toClass.getRawType()  :  null;	  Type    bound    =    toClass,    type.getRawType();    	non-compiled	[CE]  ';'  expected	67	None	replace
124	[BUG]  [BUGGY]  Type  bound  =  toClass.getType(),  subtypeVarAssigns,  type);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.getType(),  subtypeVarAssigns,  type);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.getType(),  subtypeVarAssigns,  type);	  Type    bound    =    toClass.getType(),    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	23	None	replace
125	[BUG]  [BUGGY]  Type  bound  =  type.getType(),  subtypeVarAssigns);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  type.getType(),  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  type.getType(),  subtypeVarAssigns);	  Type    bound    =    toClass.getType(),    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	23	None	replace
126	[BUG]  [BUGGY]  Type  bound  =  toClass.getType(),  type);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.getType(),  type);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.getType(),  type);	  Type    bound    =    toClass.getType(),    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	23	None	replace
127	[BUG]  [BUGGY]  Type  bound  =  toClass.getRestrictedType(),  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.getRestrictedType(),  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.getRestrictedType(),  subtypeVarAssigns);	  Type    bound    =    toClass.getRestrictedType();    	non-compiled	[CE]  ';'  expected	83	None	replace
128	[BUG]  [BUGGY]  Type  bound  =  toClass.getDeclaredType();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.getDeclaredType();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.getDeclaredType();	  Type    bound    =    toClass.getRestrictedType();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
129	[BUG]  [BUGGY]  Type  bound  =  type.getRestrictedType();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  type.getRestrictedType();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  type.getRestrictedType();	  Type    bound    =    toClass.getRestrictedType();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
130	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(type.getComponentType(),  toClass,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeArguments(type.getComponentType(),  toClass,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(type.getComponentType(),  toClass,  subtypeVarAssigns);	  Type    bound    =    getTypeArguments(type.getComponentType(),    toClass);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
131	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getComponentType(),  subtypeVarAssigns;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getComponentType(),  subtypeVarAssigns;  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getComponentType(),  subtypeVarAssigns;	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    type,    subtypeVarAssigns;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
132	[BUG]  [BUGGY]  Type  bound  =  toClass.getBounds(),  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.getBounds(),  subtypeVarAssigns);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.getBounds(),  subtypeVarAssigns);	  Type    bound    =    toClass.getBounds();    	non-compiled	[CE]  ';'  expected	82	None	replace
133	[BUG]  [BUGGY]  Type  bound  =  toClass.getDeclaredTypes();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.getDeclaredTypes();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.getDeclaredTypes();	  Type    bound    =    toClass.getBounds();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
134	[BUG]  [BUGGY]  Type  bound  =  type.getBounds();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  type.getBounds();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  type.getBounds();	  Type    bound    =    toClass.getBounds();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
135	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>,  type!=  subtypeVarAssigns)  {  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>,  type!=  subtypeVarAssigns)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>,  type!=  subtypeVarAssigns)  {	  if(toClass    instanceof    Class    <?>,    type!=    subtypeVarAssigns)    {    	non-compiled	[CE]  ')'  expected	18	None	replace
136	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(toClass.getComponentType(),  toClass,  subtypeVarAssigns,  type);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeArguments(toClass.getComponentType(),  toClass,  subtypeVarAssigns,  type);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(toClass.getComponentType(),  toClass,  subtypeVarAssigns,  type);	  Type    bound    =    getTypeArguments(toClass.getComponentType(),    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
137	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  &&  toClass  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  &&  toClass  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>  &&  toClass  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  &&  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type    instanceof    Class    <?>    &&    toClass    instanceof    Class    <?>)    {    if(type  instanceof  Class  <?>  &&  toClass  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
138	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  &&  toClass  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>  &&  toClass  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type    instanceof    Class    <?>    &&    toClass    instanceof    Class    <?>)    {    if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
139	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  &&  toClass  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  &&  toClass  instancesof  Class  <?>)  {  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>  &&  toClass  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  &&  toClass  instancesof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type    instanceof    Class    <?>    &&    toClass    instanceof    Class    <?>)    {    if(type  instanceof  Class  <?>  &&  toClass  instancesof  Class  <?>)  {	  	non-compiled	[CE]  ')'  expected	70	None	add
140	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  &&  toClass  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  &&  toClass  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>  &&  toClass  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  &&  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type    instanceof    Class    <?>    &&    toClass    instanceof    Class    <?>)    {    If(type  instanceof  Class  <?>  &&  toClass  instanceof  Class  <?>)  {	  	non-compiled	[CE]  ';'  expected	70	None	add
141	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getRawType()  :  type.getRawType();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getRawType()  :  type.getRawType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getRawType()  :  type.getRawType();	  Type    bound    =    toClass.isArray()?    toClass.getRawType()    :    type.getRawType();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
142	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  null,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  null,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  null,  subtypeVarAssigns);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    null,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	63	None	replace
143	[BUG]  [BUGGY]  Type  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  null,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  null,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isInterface()?  toClass.getComponentType()  :  null,  subtypeVarAssigns);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    null,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	63	None	replace
144	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  type.getComponentType()  :  toClass;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  type.getComponentType()  :  toClass;  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  type.getComponentType()  :  toClass;	  Type    bound    =    toClass.isArray()?    type.getComponentType()    :    toClass;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
145	[BUG]  [BUGGY]  If(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  If(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	If(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    If(type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
146	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    If(type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
147	[BUG]  [BUGGY]  if(toClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  if(toClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(toClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  if(toClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(toClass    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    if(toClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
148	[BUG]  [BUGGY]  if(toClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(toClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(toClass    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
149	[BUG]  [BUGGY]  if(toClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  if(fromClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(toClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  if(fromClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(toClass    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    if(fromClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
150	[BUG]  [BUGGY]  if(toClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  if(ToClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(toClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  if(ToClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(toClass    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    if(ToClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
151	[BUG]  [BUGGY]  if(toClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  If(toClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]            ClassCastException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(toClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  If(toClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(toClass    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    If(toClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {	  	non-compiled	[CE]  ';'  expected	6	None	add
152	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(toClass  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	add	if(toClass  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    &&    toClass    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	71	2	replace
153	[BUG]  [BUGGY]  if(toClass  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(toClass  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(toClass  instanceof  Class  <?>  &&  type  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    &&    toClass    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	71	2	replace
154	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(toClass  instanceof  Class  <?>  &&  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	add	if(toClass  instanceof  Class  <?>  &&  toClass  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    &&    toClass    instanceof    Class    <?>)    {    	compilable	  [FE]  ClassCastException  	71	5	replace
155	[BUG]  [BUGGY]  if(toClass  instanceof  Class  <?>  &&  toClass  instanceof  Class  <?>)  {  [FE]  ClassCastException  [FE]      AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(toClass  instanceof  Class  <?>  &&  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(toClass  instanceof  Class  <?>  &&  toClass  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    &&    toClass    instanceof    Class    <?>)    {    	compilable	  [FE]  ClassCastException  	71	5	replace
156	[BUG]  [BUGGY]  if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  >=?>)  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  >=?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  >=?>)  {	  if(toClass    instanceof    Class    <?>)    {    if(toClass    instanceof    Class    >=?>)    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
157	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getComponentType()  :  type,  subtypeVarAssigns;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getComponentType()  :  type,  subtypeVarAssigns;  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getComponentType()  :  type,  subtypeVarAssigns;	  Type    bound    =    toClass.isArray()?    type.getComponentType()    :    toClass.getComponentType()    :    toClass,    subtypeVarAssigns;    	non-compiled	[CE]  ';'  expected	21	None	replace
158	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          ClassCastException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(!(toClass  instanceof  Class  <?>))  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	add	if(!(toClass  instanceof  Class  <?>))  {	  if(toClass    instanceof    Class    <?>)    {    if(fromClass    instanceof    Class    <?>)    {    	compilable	  [FE]  IllegalStateException  	53	5	replace
159	[BUG]  [BUGGY]  if(!(toClass  instanceof  Class  <?>))  {  [FE]  IllegalStateException  [FE]          ClassCastException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(!(toClass  instanceof  Class  <?>))  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(!(toClass  instanceof  Class  <?>))  {	  if(toClass    instanceof    Class    <?>)    {    if(fromClass    instanceof    Class    <?>)    {    	compilable	  [FE]  IllegalStateException  	53	5	replace
160	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <? ">  ||  toClass  instanceof  Class  <?>)  {  [CE]  unclosed  string  literal  [FE]    ClassCastException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <? ">  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <? ">  ||  toClass  instanceof  Class  <?>)  {	  	non-compiled	[CE]  unclosed  string  literal	2	None	add
161	[BUG]  [BUGGY]  Type  bound  =  toClass.getType(0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.getType(0);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.getType(0);	  Type    bound    =    toClass.getParameterType(0);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
162	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>,  toClass  ==  typeVarAssigns)  {  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>,  toClass  ==  typeVarAssigns)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>,  toClass  ==  typeVarAssigns)  {	  if(type    instanceof    Class    <?>,    toClass    ==    toClass)    {    	non-compiled	[CE]  ')'  expected	19	None	replace
163	[BUG]  [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.getDeclaredType();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.getDeclaredType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass,  subtypeVarAssigns.getDeclaredType();	  Type    bound    =    toClass,    subtypeVarAssigns.getRawType();    	non-compiled	[CE]  ';'  expected	78	None	replace
164	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        ClassCastException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  TypeVariable  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	add	if(type  instanceof  TypeVariable  <?>)  {	  if(toClass    instanceof    Class    <?>)    {    if(toClass    instanceof    Class    >=?>)    {    	compilable	  [FE]  IllegalStateException  	64	5	replace
165	[BUG]  [BUGGY]  if(type  instanceof  TypeVariable  <?>)  {  [FE]  IllegalStateException  [FE]        ClassCastException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  TypeVariable  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  TypeVariable  <?>)  {	  if(toClass    instanceof    Class    <?>)    {    if(toClass    instanceof    Class    >=?>)    {    	compilable	  [FE]  IllegalStateException  	64	5	replace
166	[BUG]  [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.getType(),  type;  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.getType(),  type;  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass,  subtypeVarAssigns.getType(),  type;	  Type    bound    =    toClass,    subtypeVarAssigns.getType();    	non-compiled	[CE]  ';'  expected	72	None	replace
167	[BUG]  [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.getParameterType(0);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.getParameterType(0);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass,  subtypeVarAssigns.getParameterType(0);	  Type    bound    =    toClass,    subtypeVarAssigns.getType();    	non-compiled	[CE]  ';'  expected	72	None	replace
168	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(type.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeArguments(type.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(type.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	  Type    bound    =    getTypeArguments(toClass.getComponentType(),    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
169	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(subtypeVarAssigns.getComponentType(),  toClass,  toClass);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeArguments(subtypeVarAssigns.getComponentType(),  toClass,  toClass);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(subtypeVarAssigns.getComponentType(),  toClass,  toClass);	  Type    bound    =    getTypeArguments(toClass.getComponentType(),    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
170	[BUG]  [BUGGY]  Class  <?>  bound  =  subtypeVarAssigns.getRawClass();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Class  <?>  bound  =  subtypeVarAssigns.getRawClass();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Class  <?>  bound  =  subtypeVarAssigns.getRawClass();	  Class    <?>    bound    =    toClass.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
171	[BUG]  [BUGGY]  Class  <?>  bound  =  toClass.getRawParameterType(0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Class  <?>  bound  =  toClass.getRawParameterType(0);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Class  <?>  bound  =  toClass.getRawParameterType(0);	  Class    <?>    bound    =    toClass.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
172	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(subtypeVarAssigns,  type.getComponentType());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeArguments(subtypeVarAssigns,  type.getComponentType());  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(subtypeVarAssigns,  type.getComponentType());	  Type    bound    =    getTypeArguments(subtypeVarAssigns,    toClass.getComponentType());    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
173	[BUG]  [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  type.getRawType()  :  toClass;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  type.getRawType()  :  toClass;  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  subtypeVarAssigns!=  null?  type.getRawType()  :  toClass;	  Type    bound    =    type.getRawType();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
174	[BUG]  [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  toClass.getType()  :  subtypeVarAssigns.getType();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  toClass.getType()  :  subtypeVarAssigns.getType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  subtypeVarAssigns!=  null?  toClass.getType()  :  subtypeVarAssigns.getType();	  Type    bound    =    subtypeVarAssigns.getType();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
175	[BUG]  [BUGGY]  if(toClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  if(toClass.isArray()  ||  type  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(toClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  if(toClass.isArray()  ||  type  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(toClass    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    if(toClass.isArray()  ||  type  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
176	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(class,  toClass);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeArguments(class,  toClass);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(class,  toClass);	  Type    bound    =    getTypeArguments(toClass,    toClass);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
177	[BUG]  [BUGGY]  Type  bound  =  getTypeVariables(fromClass,  toClass,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeVariables(fromClass,  toClass,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeVariables(fromClass,  toClass,  subtypeVarAssigns);	  Type    bound    =    getTypeVariables(toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
178	[BUG]  [BUGGY]  Type  bound  =  toClass.getDeclaredType(type);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.getDeclaredType(type);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.getDeclaredType(type);	  Type    bound    =    toClass.getBounds();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
179	[BUG]  [BUGGY]  Type  bound  =  getTypeVariables(type,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeVariables(type,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeVariables(type,  subtypeVarAssigns);	  Type    bound    =    getTypeVariables(type,    toClass);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
180	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getRawType()  :  subtypeVarAssigns;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getRawType()  :  subtypeVarAssigns;  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  toClass.getRawType()  :  subtypeVarAssigns;	  Type    bound    =    toClass.isArray()?    toClass.getRawType()    :    type.getRawType();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
181	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  type.getConstructorType()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  type.getConstructorType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  type.getConstructorType()  :  toClass,  subtypeVarAssigns);	  Type    bound    =    toClass.isArray()?    type.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	45	None	replace
182	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns,  toClass;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns,  toClass;  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns,  toClass;	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns,    type;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
183	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass.getParameterType(subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass.getParameterType(subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass.getParameterType(subtypeVarAssigns);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass.getParameterType(subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
184	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type.getParameterType(0);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type.getParameterType(0);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type.getParameterType(0);	  Type    bound    =    toClass.isArray()?    type.getComponentType()    :    toClass.getComponentType();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
185	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getParameterType(subtypeVarAssigns.getComponentType());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getParameterType(subtypeVarAssigns.getComponentType());  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getParameterType(subtypeVarAssigns.getComponentType());	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    subtypeVarAssigns.getComponentType();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
186	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getParameterTypes().getComponentType();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getParameterTypes().getComponentType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getParameterTypes().getComponentType();	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    subtypeVarAssigns.getComponentType();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
187	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  null,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  null,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  type.getComponentType()  :  null,  subtypeVarAssigns);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    null,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	63	None	replace
188	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  null,  type);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  null,  type);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  null,  type);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    null,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	63	None	replace
189	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>)  {	  if(toClass    instanceof    Class    <?>)    {    If(toClass    instanceof    Class    <?>)    {    	non-compiled	[CE]  ';'  expected	54	None	replace
190	[BUG]  [BUGGY]  Type  bound  =  getTypeVariables(subtypeVarAssigns,  toClass);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeVariables(subtypeVarAssigns,  toClass);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeVariables(subtypeVarAssigns,  toClass);	  Type    bound    =    getTypeVariables(toClass,    toClass);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
191	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  <?>  ||  toClass  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>  <?>  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>  <?>  ||  toClass  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    If(type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
192	[BUG]  [BUGGY]  if(toClass  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(toClass  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(toClass  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    If(type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
193	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>,  toClass  ==  subtypeVarAssigns  ||  toClass.isArray())  {  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>,  toClass  ==  subtypeVarAssigns  ||  toClass.isArray())  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>,  toClass  ==  subtypeVarAssigns  ||  toClass.isArray())  {	  if(type    instanceof    Class    <?>,    toClass!=    subtypeVarAssigns    ||    type    instanceof    Class    <?>)    {    	non-compiled	[CE]  ')'  expected	84	None	replace
194	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>,  toClass  >=  subtypeVarAssigns  ||  type  instanceof  Class  <?>)  {  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>,  toClass  >=  subtypeVarAssigns  ||  type  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>,  toClass  >=  subtypeVarAssigns  ||  type  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>,    toClass!=    subtypeVarAssigns    ||    type    instanceof    Class    <?>)    {    	non-compiled	[CE]  ')'  expected	84	None	replace
195	[BUG]  [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  toClass.getRawType()  :  subtypeVarAssigns.getRawType();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  toClass.getRawType()  :  subtypeVarAssigns.getRawType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  subtypeVarAssigns!=  null?  toClass.getRawType()  :  subtypeVarAssigns.getRawType();	  Type    bound    =    subtypeVarAssigns.getRawType();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
196	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns,  toClass);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns,  toClass);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns,  toClass);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  ';'  expected	79	None	replace
197	[BUG]  [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  type.getType()  :  toClass;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  type.getType()  :  toClass;  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  subtypeVarAssigns!=  null?  type.getType()  :  toClass;	  Type    bound    =    type.getType();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
198	[BUG]  [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  toClass.getType()  :  type;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  toClass.getType()  :  type;  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  subtypeVarAssigns!=  null?  toClass.getType()  :  type;	  Type    bound    =    type.getType();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
199	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  type  instanceof  TypeVariable  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	add	if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  type  instanceof  TypeVariable  <?>)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>    ||    toClass    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  ClassCastException  	1	5	replace
200	[BUG]  [BUGGY]  if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  type  instanceof  TypeVariable  <?>)  {  [FE]  ClassCastException  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  type  instanceof  TypeVariable  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  type  instanceof  TypeVariable  <?>)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>    ||    toClass    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  ClassCastException  	1	5	replace
201	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  toClass  instanceof  TypeVariable  <?>)  {  [CE]  inconvertible  types  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  toClass  instanceof  TypeVariable  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  toClass  instanceof  TypeVariable  <?>)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>    ||    toClass    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  inconvertible  types	1	None	replace
202	[BUG]  [BUGGY]  Type  bound  =  toClass.isObject()?  toClass.getRawType()  :  subtypeVarAssigns.getRawType();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isObject()?  toClass.getRawType()  :  subtypeVarAssigns.getRawType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isObject()?  toClass.getRawType()  :  subtypeVarAssigns.getRawType();	  Type    bound    =    toClass.isObject()?    toClass.getRawType()    :    toClass.getRawType();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
203	[BUG]  [BUGGY]  if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  if(toClass.isArray()  ||  toClass  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  if(toClass.isArray()  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(toClass    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    if(toClass.isArray()  ||  toClass  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
204	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    If(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    	non-compiled	[CE]  ';'  expected	27	None	replace
205	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  bound  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  bound  [FE]    ClassCastException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>  ||  bound  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>  ||  bound  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  bound	9	None	replace
206	[BUG]  [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.isArray()?  type.getRawType()  :  toClass;  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.isArray()?  type.getRawType()  :  toClass;  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass,  subtypeVarAssigns.isArray()?  type.getRawType()  :  toClass;	  Type    bound    =    toClass,    type.getRawType();    	non-compiled	[CE]  ';'  expected	67	None	replace
207	[BUG]  [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.isArray()?  toClass.getRawType()  :  type;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.isArray()?  toClass.getRawType()  :  type;  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass,  subtypeVarAssigns.isArray()?  toClass.getRawType()  :  type;	  Type    bound    =    toClass,    type.getRawType();    	non-compiled	[CE]  ';'  expected	67	None	replace
208	[BUG]  [BUGGY]  Type  bound  =  toClass.getRestrictedType(type);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.getRestrictedType(type);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.getRestrictedType(type);	  Type    bound    =    toClass.getRestrictedType();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
209	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>,  toClass  >  subtypeVarAssigns)  {  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>,  toClass  >  subtypeVarAssigns)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>,  toClass  >  subtypeVarAssigns)  {	  if(type    instanceof    Class    <?>,    toClass    >=    subtypeVarAssigns)    {    	non-compiled	[CE]  ')'  expected	59	None	replace
210	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>,  toClass  ==  null  ||  toClass  ==  subtypeVarAssigns)  {  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>,  toClass  ==  null  ||  toClass  ==  subtypeVarAssigns)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>,  toClass  ==  null  ||  toClass  ==  subtypeVarAssigns)  {	  if(type    instanceof    Class    <?>,    toClass    ==    subtypeVarAssigns)    {    	non-compiled	[CE]  ')'  expected	17	None	replace
211	[BUG]  [BUGGY]  If(toClass  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  If(toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	If(toClass  instanceof  Class  <?>)  {	  if(toClass    instanceof    Class    <?>)    {    If(toClass    instanceof    Class    <?>)    {    	non-compiled	[CE]  ';'  expected	54	None	replace
212	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(class,  toClass,  subtypeVarAssigns);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeArguments(class,  toClass,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(class,  toClass,  subtypeVarAssigns);	  Type    bound    =    getTypeArguments(toClass,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
213	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>[])  {  [CE]  inconvertible  types  [FE]    AssertionError    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>[])  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>[])  {	  if(type    instanceof    Class    <?>    &&    toClass    instanceof    Class    <?>)    {    	non-compiled	[CE]  inconvertible  types	71	None	replace
214	[BUG]  [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  toClass.getRawType()  :  subtypeVarAssigns;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  subtypeVarAssigns!=  null?  toClass.getRawType()  :  subtypeVarAssigns;  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  subtypeVarAssigns!=  null?  toClass.getRawType()  :  subtypeVarAssigns;	  Type    bound    =    subtypeVarAssigns.getRawType();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
215	[BUG]  [BUGGY]  Type  bound  =  subtypeVarAssigns  ==  null?  toClass.getRawType()  :  subtypeVarAssigns;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  subtypeVarAssigns  ==  null?  toClass.getRawType()  :  subtypeVarAssigns;  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  subtypeVarAssigns  ==  null?  toClass.getRawType()  :  subtypeVarAssigns;	  Type    bound    =    subtypeVarAssigns.getRawType();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
216	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getName()  :  null,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getName()  :  null,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  toClass.getName()  :  null,  subtypeVarAssigns);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    null,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	63	None	replace
217	[BUG]  [BUGGY]  Type  bound  =  subtypeVarAssigns.getType(type);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  subtypeVarAssigns.getType(type);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  subtypeVarAssigns.getType(type);	  Type    bound    =    type.getType();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
218	[BUG]  [BUGGY]  Type  bound  =  this.bounds.getType();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  this.bounds.getType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  this.bounds.getType();	  Type    bound    =    type.getType();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
219	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(type.isArray()?  toClass.getComponentType()  :  toClass);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeArguments(type.isArray()?  toClass.getComponentType()  :  toClass);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(type.isArray()?  toClass.getComponentType()  :  toClass);	  Type    bound    =    getTypeArguments(type.getComponentType(),    toClass);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
220	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(toClass,  type.getComponentType());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeArguments(toClass,  type.getComponentType());  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(toClass,  type.getComponentType());	  Type    bound    =    getTypeArguments(toClass,    toClass.getComponentType());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
221	[BUG]  [BUGGY]  Type  bound  =  getTypeVariables(subtypeVarAssigns,  toClass,  toClass);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeVariables(subtypeVarAssigns,  toClass,  toClass);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeVariables(subtypeVarAssigns,  toClass,  toClass);	  Type    bound    =    getTypeVariables(toClass,    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
222	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getName()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getName()  :  toClass,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getName()  :  toClass,  subtypeVarAssigns);	  Type    bound    =    toClass.isAssignableFrom(type)?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	44	None	replace
223	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getType()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getType()  :  toClass,  subtypeVarAssigns);	  Type    bound    =    toClass.isAssignableFrom(type)?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	44	None	replace
224	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getDeclaredType()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getDeclaredType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getDeclaredType()  :  toClass,  subtypeVarAssigns);	  Type    bound    =    toClass.isAssignableFrom(type)?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	44	None	replace
225	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  type.getName()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  type.getName()  :  toClass,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  type.getName()  :  toClass,  subtypeVarAssigns);	  Type    bound    =    toClass.isArray()?    type.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	45	None	replace
226	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  type.getRawType()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  type.getRawType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  type.getRawType()  :  toClass,  subtypeVarAssigns);	  Type    bound    =    toClass.isArray()?    type.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	45	None	replace
227	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  type.getDeclaredType()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  type.getDeclaredType()  :  toClass,  subtypeVarAssigns);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  type.getDeclaredType()  :  toClass,  subtypeVarAssigns);	  Type    bound    =    toClass.isArray()?    type.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	45	None	replace
228	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(type.getRawClass());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeArguments(type.getRawClass());  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(type.getRawClass());	  Type    bound    =    getTypeArguments(type.getComponentType());    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
229	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(type.getDeclaredType());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeArguments(type.getDeclaredType());  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(type.getDeclaredType());	  Type    bound    =    getTypeArguments(type.getComponentType());    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
230	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>,  toClass!=  subtypeVarAssigns  &&  type  instanceof  Class  <?>)  {  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>,  toClass!=  subtypeVarAssigns  &&  type  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>,  toClass!=  subtypeVarAssigns  &&  type  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>,    toClass!=    subtypeVarAssigns    ||    type    instanceof    Class    <?>)    {    	non-compiled	[CE]  ')'  expected	84	None	replace
231	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>,  toClass  ==  null  ||  type  instanceof  Class  <?>)  {  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>,  toClass  ==  null  ||  type  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>,  toClass  ==  null  ||  type  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>,    toClass!=    subtypeVarAssigns    ||    type    instanceof    Class    <?>)    {    	non-compiled	[CE]  ')'  expected	84	None	replace
232	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  type.getDeclaredType()  :  toClass,  subtypeVarAssigns;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  type.getDeclaredType()  :  toClass,  subtypeVarAssigns;  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  type.getDeclaredType()  :  toClass,  subtypeVarAssigns;	  Type    bound    =    toClass.isArray()?    type.getComponentType()    :    toClass,    subtypeVarAssigns;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
233	[BUG]  [BUGGY]  Class  <?>  bound  =  toClass.getDeclaredClass();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Class  <?>  bound  =  toClass.getDeclaredClass();  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Class  <?>  bound  =  toClass.getDeclaredClass();	  Class    <?>    bound    =    toClass.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
234	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns,  type;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns,  type;  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns,  type;	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns,    type;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
235	[BUG]  [BUGGY]  Type  bound  =  toClass.isRawType()?  toClass.getRawType()  :  toClass.getRawType();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isRawType()?  toClass.getRawType()  :  toClass.getRawType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isRawType()?  toClass.getRawType()  :  toClass.getRawType();	  Type    bound    =    toClass.getRawType()?    toClass.getRawType()    :    toClass.getRawType();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
236	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        ClassCastException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(!(type  instanceof  Class  <?>))  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	add	if(!(type  instanceof  Class  <?>))  {	  if(toClass    instanceof    Class    <?>)    {    if(toClass    instanceof    Class    <?>)    {    	compilable	  [FE]  IllegalStateException  	52	5	replace
237	[BUG]  [BUGGY]  if(!(type  instanceof  Class  <?>))  {  [FE]  IllegalStateException  [FE]        ClassCastException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(!(type  instanceof  Class  <?>))  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(!(type  instanceof  Class  <?>))  {	  if(toClass    instanceof    Class    <?>)    {    if(toClass    instanceof    Class    <?>)    {    	compilable	  [FE]  IllegalStateException  	52	5	replace
238	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>,  bound  ==  toClass)  {  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>,  bound  ==  toClass)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>,  bound  ==  toClass)  {	  if(type    instanceof    Class    <?>,    toClass    ==    toClass)    {    	non-compiled	[CE]  ')'  expected	19	None	replace
239	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          ClassCastException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(subtypeVarAssigns!=  null)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	add	if(subtypeVarAssigns!=  null)  {	  if(type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    if(type    instanceof    Class    <?>    ||    toClass    instancesof    Class    <?>)    {    	compilable	  [FE]  IllegalStateException  	38	5	replace
240	[BUG]  [BUGGY]  if(subtypeVarAssigns!=  null)  {  [FE]  IllegalStateException  [FE]          ClassCastException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(subtypeVarAssigns!=  null)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(subtypeVarAssigns!=  null)  {	  if(type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    if(type    instanceof    Class    <?>    ||    toClass    instancesof    Class    <?>)    {    	compilable	  [FE]  IllegalStateException  	38	5	replace
241	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>,  subtypeVarAssigns)  {  [CE]  ')'  expected  [FE]            ClassCastException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>,  subtypeVarAssigns)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>,  subtypeVarAssigns)  {	  if(type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    if(type    instanceof    Class    <?>    ||    toClass    instancesof    Class    <?>)    {    	non-compiled	[CE]  ')'  expected	38	None	replace
242	[BUG]  [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.getType(),  type);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.getType(),  type);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass,  subtypeVarAssigns.getType(),  type);	  Type    bound    =    toClass,    subtypeVarAssigns.getType();    	non-compiled	[CE]  ';'  expected	72	None	replace
243	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getRawType()  :  toClass.getComponentType();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getRawType()  :  toClass.getComponentType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  toClass.getRawType()  :  toClass.getComponentType();	  Type    bound    =    toClass.isArray()?    toClass.getRawType()    :    subtypeVarAssigns.getRawType();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
244	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass.getParameterType(0);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass.getParameterType(0);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass.getParameterType(0);	  Type    bound    =    toClass.isArray()?    type.getComponentType()    :    toClass.getComponentType();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
245	[BUG]  [BUGGY]  Type  bound  =  getTypeVariables(type,  toClass,  subtypeVarAssigns,  this);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeVariables(type,  toClass,  subtypeVarAssigns,  this);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeVariables(type,  toClass,  subtypeVarAssigns,  this);	  Type    bound    =    getTypeVariables(type,    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
246	[BUG]  [BUGGY]  Type  bound  =  toClass.getDeclaredType(0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.getDeclaredType(0);  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.getDeclaredType(0);	  Type    bound    =    toClass.getParameterType(0);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
247	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  subtypeVarAssigns,  type);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  subtypeVarAssigns,  type);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  subtypeVarAssigns,  type);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    type,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	43	None	replace
248	[BUG]  [BUGGY]  Type  bound  =  toClass.isObject()?  type.getRawType()  :  toClass.getRawType();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isObject()?  type.getRawType()  :  toClass.getRawType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isObject()?  type.getRawType()  :  toClass.getRawType();	  Type    bound    =    toClass.isArray()?    type.getRawType()    :    toClass.getRawType();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
249	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              ClassCastException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(!(toClass  instanceof  Class  <?>)&&!(toClass  instanceof  Class  <?>))  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	add	if(!(toClass  instanceof  Class  <?>)&&!(toClass  instanceof  Class  <?>))  {	  if(toClass    instanceof    Class    <?>)    {    if(toClass    instancesof    Class    <?>)    {    	compilable	  [FE]  IllegalStateException  	55	5	replace
250	[BUG]  [BUGGY]  if(!(toClass  instanceof  Class  <?>)&&!(toClass  instanceof  Class  <?>))  {  [FE]  IllegalStateException  [FE]              ClassCastException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(!(toClass  instanceof  Class  <?>)&&!(toClass  instanceof  Class  <?>))  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(!(toClass  instanceof  Class  <?>)&&!(toClass  instanceof  Class  <?>))  {	  if(toClass    instanceof    Class    <?>)    {    if(toClass    instancesof    Class    <?>)    {    	compilable	  [FE]  IllegalStateException  	55	5	replace
251	[BUG]  [BUGGY]  if(subtypeVarAssigns  instanceof  Class  <?>)  {  [CE]  inconvertible  types  [FE]                ClassCastException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(subtypeVarAssigns  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(subtypeVarAssigns  instanceof  Class  <?>)  {	  if(toClass    instanceof    Class    <?>)    {    if(toClass    instancesof    Class    <?>)    {    	non-compiled	[CE]  inconvertible  types	55	None	replace
252	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass.isArray()  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	add	if(type  instanceof  Class  <?>  ||  toClass.isArray()  ||  toClass  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    	compilable	  [FE]  ClassCastException  	9	5	replace
253	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass.isArray()  ||  toClass  instanceof  Class  <?>)  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass.isArray()  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>  ||  toClass.isArray()  ||  toClass  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    	compilable	  [FE]  ClassCastException  	9	5	replace
254	[BUG]  [BUGGY]  Type  bound  =  toClass.getRawType(),  subtypeVarAssigns,  null);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.getRawType(),  subtypeVarAssigns,  null);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.getRawType(),  subtypeVarAssigns,  null);	  Type    bound    =    toClass.getRawType(),    subtypeVarAssigns);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
255	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>,  toClass  <?>,  subtypeVarAssigns)  {  [CE]  ')'  expected  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>,  toClass  <?>,  subtypeVarAssigns)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>,  toClass  <?>,  subtypeVarAssigns)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>,    subtypeVarAssigns)    {    	non-compiled	[CE]  ')'  expected	74	None	replace
256	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getParameterType(0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getParameterType(0);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getParameterType(0);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    subtypeVarAssigns.getComponentType();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
257	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns,  type);	  Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns,    type);    	non-compiled	[CE]  ';'  expected	79	None	replace
258	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  type.getConstructorType()  :  toClass;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  type.getConstructorType()  :  toClass;  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  type.getConstructorType()  :  toClass;	  Type    bound    =    toClass.isArray()?    type.getComponentType()    :    toClass;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
259	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  TypeVariable  <?>  ||  type  instanceof  Class  <?>)  {  [CE]  inconvertible  types  [FE]        AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  TypeVariable  <?>  ||  type  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>  ||  toClass  instanceof  TypeVariable  <?>  ||  type  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>    ||    toClass    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  inconvertible  types	1	None	replace
260	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  TypeVariable  <?>  ||  toClass  instanceof  Class  <?>)  {  [CE]  inconvertible  types  [FE]          AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  TypeVariable  <?>  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>  ||  toClass  instanceof  TypeVariable  <?>  ||  toClass  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>    ||    toClass    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  inconvertible  types	1	None	replace
261	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>,  toClass!=  null)  {  [CE]  ')'  expected  [FE]        ClassCastException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>,  toClass!=  null)  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>,  toClass!=  null)  {	  if(type    instanceof    Class    <?>,    toClass    instanceof    Class    <?>)    {    	non-compiled	[CE]  ')'  expected	77	None	replace
262	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>,  toClass.isArray())  {  [CE]  ')'  expected  [FE]          ClassCastException      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  if(type  instanceof  Class  <?>,  toClass.isArray())  {  [BUGGY]      return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>,  toClass.isArray())  {	  if(type    instanceof    Class    <?>,    toClass    instanceof    Class    <?>)    {    	non-compiled	[CE]  ')'  expected	77	None	replace
263	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  type.getDeclaredType()  :  toClass.getComponentType()  :  toClass,  subtypeVarAssigns;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass.isArray()?  type.getDeclaredType()  :  toClass.getComponentType()  :  toClass,  subtypeVarAssigns;  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  type.getDeclaredType()  :  toClass.getComponentType()  :  toClass,  subtypeVarAssigns;	  Type    bound    =    toClass.isArray()?    type.getComponentType()    :    toClass.getComponentType()    :    toClass,    subtypeVarAssigns;    	non-compiled	[CE]  ';'  expected	21	None	replace
264	[BUG]  [BUGGY]  Type  bound  =  type,  subtypeVarAssigns.getRawType();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  type,  subtypeVarAssigns.getRawType();  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  type,  subtypeVarAssigns.getRawType();	  Type    bound    =    toClass,    subtypeVarAssigns.getRawType();    	non-compiled	[CE]  ';'  expected	78	None	replace
265	[BUG]  [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.isArray()?  type.getRawType()  :  type;  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.isArray()?  type.getRawType()  :  type;  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass,  subtypeVarAssigns.isArray()?  type.getRawType()  :  type;	  Type    bound    =    toClass,    type.getRawType();    	non-compiled	[CE]  ';'  expected	67	None	replace
266	[BUG]  [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.isArray()?  type.getRawType()  :  null;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.isArray()?  type.getRawType()  :  null;  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass,  subtypeVarAssigns.isArray()?  type.getRawType()  :  null;	  Type    bound    =    toClass,    type.getRawType();    	non-compiled	[CE]  ';'  expected	67	None	replace
267	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(toClass,  toClass.getComponentType(),  type);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {      [BUGGY]  Type  bound  =  getTypeArguments(toClass,  toClass.getComponentType(),  type);  [BUGGY]      if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(toClass,  toClass.getComponentType(),  type);	  Type    bound    =    getTypeArguments(toClass.getComponentType(),    type);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
