bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toClass  instanceof  TypeVariable  <?>)  {  [CE]  inconvertible  types  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toClass  instanceof  TypeVariable  <?>)  {  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toClass  instanceof  TypeVariable  <?>)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    	non-compiled	[CE]  inconvertible  types	6	None	replace
2	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	add	if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    	compilable	  [FE]  ClassCastException  	6	5	replace
3	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [FE]  ClassCastException  [FE]      AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    	compilable	  [FE]  ClassCastException  	6	5	replace
4	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	add	if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    	compilable	  [FE]  ClassCastException  	6	5	replace
5	[BUG]  [BUGGY]  if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [FE]  ClassCastException  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    	compilable	  [FE]  ClassCastException  	6	5	replace
6	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  if(toClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	add	if(toClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    	compilable	  [FE]  ClassCastException  	4	5	replace
7	[BUG]  [BUGGY]  if(toClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  if(toClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(toClass  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    	compilable	  [FE]  ClassCastException  	4	5	replace
8	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	add	if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    	compilable	  [FE]  ClassCastException  	4	5	replace
9	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    	compilable	  [FE]  ClassCastException  	4	5	replace
10	[BUG]  [BUGGY]  Type  bound  =  getTypeVariables(toClass,  toClass,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  getTypeVariables(toClass,  toClass,  subtypeVarAssigns);  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeVariables(toClass,  toClass,  subtypeVarAssigns);	      Type    bound    =    getTypeVariables(toClass,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
11	[BUG]  [BUGGY]  Type  bound  =  getTypeVariables(type,  toClass,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  getTypeVariables(type,  toClass,  subtypeVarAssigns);  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeVariables(type,  toClass,  subtypeVarAssigns);	      Type    bound    =    getTypeVariables(toClass,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
12	[BUG]  [BUGGY]  Type  bound  =  getTypeVariables(type,  toClass);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  getTypeVariables(type,  toClass);  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeVariables(type,  toClass);	      Type    bound    =    getTypeVariables(toClass,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
13	[BUG]  [BUGGY]  Type  bound  =  getTypeVariables(toClass,  toClass);  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  getTypeVariables(toClass,  toClass);  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeVariables(toClass,  toClass);	      Type    bound    =    getTypeVariables(toClass,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
14	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type.getComponentType();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type.getComponentType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type.getComponentType();	      Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass.getComponentType();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
15	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  subtypeVarAssigns.getComponentType();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  subtypeVarAssigns.getComponentType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  subtypeVarAssigns.getComponentType();	      Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass.getComponentType();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
16	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass.getComponentType();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass.getComponentType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass.getComponentType();	      Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass.getComponentType();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
17	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>,  toClass  ==  subtypeVarAssigns)  {  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  if(type  instanceof  Class  <?>,  toClass  ==  subtypeVarAssigns)  {  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>,  toClass  ==  subtypeVarAssigns)  {	  if(type    instanceof    Class    <?>,    toClass!=    subtypeVarAssigns)    {    	non-compiled	[CE]  ')'  expected	19	None	replace
18	[BUG]  [BUGGY]  if(toClass  instanceof  Class  <?>,  type!=  subtypeVarAssigns)  {  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  if(toClass  instanceof  Class  <?>,  type!=  subtypeVarAssigns)  {  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(toClass  instanceof  Class  <?>,  type!=  subtypeVarAssigns)  {	  if(type    instanceof    Class    <?>,    toClass!=    subtypeVarAssigns)    {    	non-compiled	[CE]  ')'  expected	19	None	replace
19	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>,  toClass  ==  toClass)  {  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  if(type  instanceof  Class  <?>,  toClass  ==  toClass)  {  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>,  toClass  ==  toClass)  {	  if(type    instanceof    Class    <?>,    toClass!=    subtypeVarAssigns)    {    	non-compiled	[CE]  ')'  expected	19	None	replace
20	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns;  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns;	      Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
21	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass.getComponentType()  :  toClass,  subtypeVarAssigns;  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass.getComponentType()  :  toClass,  subtypeVarAssigns;  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass.getComponentType()  :  toClass,  subtypeVarAssigns;	      Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns;    	non-compiled	[CE]  ';'  expected	18	None	replace
22	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns;  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns;	      Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
23	[BUG]  [BUGGY]  Type  bound  =  toClass.getType(),  subtypeVarAssigns);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  toClass.getType(),  subtypeVarAssigns);  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.getType(),  subtypeVarAssigns);	      Type    bound    =    toClass.getType();    	non-compiled	[CE]  ';'  expected	13	None	replace
24	[BUG]  [BUGGY]  Type  bound  =  type.getType();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  type.getType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  type.getType();	      Type    bound    =    toClass.getType();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
25	[BUG]  [BUGGY]  Type  bound  =  subtypeVarAssigns.getType();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  subtypeVarAssigns.getType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  subtypeVarAssigns.getType();	      Type    bound    =    toClass.getType();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
26	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
27	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    If(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
28	[BUG]  [BUGGY]  if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  TypeVariable  <?>)  {  [CE]  inconvertible  types  [FE]    ClassCastException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  TypeVariable  <?>)  {  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(toClass  instanceof  Class  <?>  ||  toClass  instanceof  TypeVariable  <?>)  {	  if(toClass    instanceof    Class    <?>)    {    	non-compiled	[CE]  inconvertible  types	2	None	replace
29	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(type.getComponentType(),  toClass);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  getTypeArguments(type.getComponentType(),  toClass);  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(type.getComponentType(),  toClass);	      Type    bound    =    getTypeArguments(toClass.getComponentType(),    toClass);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
30	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(toClass.getComponentType(),  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  getTypeArguments(toClass.getComponentType(),  subtypeVarAssigns);  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(toClass.getComponentType(),  subtypeVarAssigns);	      Type    bound    =    getTypeArguments(toClass.getComponentType(),    toClass);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
31	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(toClass.getComponentType(),  toClass,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  getTypeArguments(toClass.getComponentType(),  toClass,  subtypeVarAssigns);  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(toClass.getComponentType(),  toClass,  subtypeVarAssigns);	      Type    bound    =    getTypeArguments(toClass.getComponentType(),    toClass);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
32	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(toClass.getComponentType(),  type);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  getTypeArguments(toClass.getComponentType(),  type);  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(toClass.getComponentType(),  type);	      Type    bound    =    getTypeArguments(toClass.getComponentType(),    toClass);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
33	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(type,  toClass);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  getTypeArguments(type,  toClass);  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(type,  toClass);	      Type    bound    =    getTypeArguments(toClass);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
34	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(toClass,  subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  getTypeArguments(toClass,  subtypeVarAssigns);  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(toClass,  subtypeVarAssigns);	      Type    bound    =    getTypeArguments(toClass);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
35	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(toClass,  toClass);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  getTypeArguments(toClass,  toClass);  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(toClass,  toClass);	      Type    bound    =    getTypeArguments(toClass);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
36	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(type);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  getTypeArguments(type);  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(type);	      Type    bound    =    getTypeArguments(toClass);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
37	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
38	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  toClass  instancesof  Class  <?>)  {  [CE]  ')'  expected  [FE]      ClassCastException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  if(type  instanceof  Class  <?>  ||  toClass  instancesof  Class  <?>)  {  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    if(type  instanceof  Class  <?>  ||  toClass  instancesof  Class  <?>)  {	  	non-compiled	[CE]  ')'  expected	3	None	add
39	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]        ClassCastException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  if(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  If(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    If(type  instanceof  Class  <?>  ||  toClass  instanceof  Class  <?>)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
40	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type;  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type;	      Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
41	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass;  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass;	      Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
42	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  subtypeVarAssigns;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  subtypeVarAssigns;  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  subtypeVarAssigns;	      Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
43	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  type,  subtypeVarAssigns);	      Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	10	None	replace
44	[BUG]  [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isAssignableFrom(type)?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);	      Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	10	None	replace
45	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns);  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass,  subtypeVarAssigns);	      Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	10	None	replace
46	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getRawType()  :  type.getRawType();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getRawType()  :  type.getRawType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  toClass.getRawType()  :  type.getRawType();	      Type    bound    =    toClass.isArray()?    toClass.getRawType()    :    toClass.getRawType();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
47	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  type.getRawType()  :  toClass.getRawType();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  toClass.isArray()?  type.getRawType()  :  toClass.getRawType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  type.getRawType()  :  toClass.getRawType();	      Type    bound    =    toClass.isArray()?    toClass.getRawType()    :    toClass.getRawType();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
48	[BUG]  [BUGGY]  Type  bound  =  toClass.getRawType()?  toClass.getRawType()  :  toClass.getRawType();  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  toClass.getRawType()?  toClass.getRawType()  :  toClass.getRawType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.getRawType()?  toClass.getRawType()  :  toClass.getRawType();	      Type    bound    =    toClass.isArray()?    toClass.getRawType()    :    toClass.getRawType();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
49	[BUG]  [BUGGY]  Type  bound  =  type.getRawType();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  type.getRawType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  type.getRawType();	      Type    bound    =    toClass.getRawType();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
50	[BUG]  [BUGGY]  Type  bound  =  subtypeVarAssigns.getRawType();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  subtypeVarAssigns.getRawType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  subtypeVarAssigns.getRawType();	      Type    bound    =    toClass.getRawType();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
51	[BUG]  [BUGGY]  Type  bound  =  toClass.getRawType(),  subtypeVarAssigns);  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  toClass.getRawType(),  subtypeVarAssigns);  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.getRawType(),  subtypeVarAssigns);	      Type    bound    =    toClass.getRawType();    	non-compiled	[CE]  ';'  expected	8	None	replace
52	[BUG]  [BUGGY]  if(toClass  instanceof  Class  <?>)  {  if(toClass  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  if(toClass  instanceof  Class  <?>)  {  if(toClass  instanceof  Class  <?>)  {  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(toClass    instanceof    Class    <?>)    {    if(toClass  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
53	[BUG]  [BUGGY]  if(toClass  instanceof  Class  <?>)  {  if(fromClass  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  if(toClass  instanceof  Class  <?>)  {  if(fromClass  instanceof  Class  <?>)  {  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(toClass    instanceof    Class    <?>)    {    if(fromClass  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
54	[BUG]  [BUGGY]  if(toClass  instanceof  Class  <?>)  {  If(toClass  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]        ClassCastException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  if(toClass  instanceof  Class  <?>)  {  If(toClass  instanceof  Class  <?>)  {  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(toClass    instanceof    Class    <?>)    {    If(toClass  instanceof  Class  <?>)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
55	[BUG]  [BUGGY]  if(toClass  instanceof  Class  <?>)  {  if(toClass  instancesof  Class  <?>)  {  [CE]  ')'  expected  [FE]          ClassCastException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  if(toClass  instanceof  Class  <?>)  {  if(toClass  instancesof  Class  <?>)  {  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(toClass    instanceof    Class    <?>)    {    if(toClass  instancesof  Class  <?>)  {	  	non-compiled	[CE]  ')'  expected	1	None	add
56	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(type.getComponentType());  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  getTypeArguments(type.getComponentType());  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(type.getComponentType());	      Type    bound    =    getTypeArguments(toClass.getComponentType());    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
57	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(toClass,  toClass.getComponentType());  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  getTypeArguments(toClass,  toClass.getComponentType());  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(toClass,  toClass.getComponentType());	      Type    bound    =    getTypeArguments(toClass.getComponentType());    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
58	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(subtypeVarAssigns.getComponentType(),  toClass);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  getTypeArguments(subtypeVarAssigns.getComponentType(),  toClass);  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(subtypeVarAssigns.getComponentType(),  toClass);	      Type    bound    =    getTypeArguments(toClass.getComponentType(),    toClass);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
59	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>,  toClass  >=  subtypeVarAssigns)  {  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  if(type  instanceof  Class  <?>,  toClass  >=  subtypeVarAssigns)  {  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>,  toClass  >=  subtypeVarAssigns)  {	  if(type    instanceof    Class    <?>,    toClass!=    subtypeVarAssigns)    {    	non-compiled	[CE]  ')'  expected	19	None	replace
60	[BUG]  [BUGGY]  if(toClass  instanceof  Class  <?>,  type  instanceof  Class  <?>)  {  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  if(toClass  instanceof  Class  <?>,  type  instanceof  Class  <?>)  {  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(toClass  instanceof  Class  <?>,  type  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>,    toClass!=    subtypeVarAssigns)    {    	non-compiled	[CE]  ')'  expected	19	None	replace
61	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(subtypeVarAssigns.getComponentType());  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  getTypeArguments(subtypeVarAssigns.getComponentType());  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(subtypeVarAssigns.getComponentType());	      Type    bound    =    getTypeArguments(toClass.getComponentType());    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
62	[BUG]  [BUGGY]  Type  bound  =  getTypeVariables(toClass,  subtypeVarAssigns,  type);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  getTypeVariables(toClass,  subtypeVarAssigns,  type);  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeVariables(toClass,  subtypeVarAssigns,  type);	      Type    bound    =    getTypeVariables(toClass,    subtypeVarAssigns);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
63	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  null,  subtypeVarAssigns);  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  null,  subtypeVarAssigns);  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  null,  subtypeVarAssigns);	      Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	10	None	replace
64	[BUG]  [BUGGY]  if(toClass  instanceof  Class  <?>)  {  if(toClass  instanceof  Class  >=?>)  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  if(toClass  instanceof  Class  <?>)  {  if(toClass  instanceof  Class  >=?>)  {  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(toClass    instanceof    Class    <?>)    {    if(toClass  instanceof  Class  >=?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
65	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getParameterType(subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getParameterType(subtypeVarAssigns);  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass.getParameterType(subtypeVarAssigns);	      Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass.getComponentType();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
66	[BUG]  [BUGGY]  Type  bound  =  toClass.isObject()?  toClass.getRawType()  :  toClass.getRawType();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  toClass.isObject()?  toClass.getRawType()  :  toClass.getRawType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isObject()?  toClass.getRawType()  :  toClass.getRawType();	      Type    bound    =    toClass.isArray()?    toClass.getRawType()    :    toClass.getRawType();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
67	[BUG]  [BUGGY]  Type  bound  =  toClass,  type.getRawType();  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  toClass,  type.getRawType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass,  type.getRawType();	      Type    bound    =    toClass.getRawType();    	non-compiled	[CE]  ';'  expected	8	None	replace
68	[BUG]  [BUGGY]  Type  bound  =  toClass.getParameterType(0);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  toClass.getParameterType(0);  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.getParameterType(0);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
69	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(subtypeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  getTypeArguments(subtypeVarAssigns);  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(subtypeVarAssigns);	      Type    bound    =    getTypeArguments(toClass);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
70	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    ClassCastException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  if(type  instanceof  Class  <?>  &&  toClass  instanceof  Class  <?>)  {  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	add	if(type  instanceof  Class  <?>  &&  toClass  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	4	2	replace
71	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  &&  toClass  instanceof  Class  <?>)  {  [FE]  AssertionError  [FE]    ClassCastException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  if(type  instanceof  Class  <?>  &&  toClass  instanceof  Class  <?>)  {  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>  &&  toClass  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	4	2	replace
72	[BUG]  [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.getType();  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.getType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass,  subtypeVarAssigns.getType();	      Type    bound    =    toClass.getType();    	non-compiled	[CE]  ';'  expected	13	None	replace
73	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getRawType()  :  subtypeVarAssigns.getRawType();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getRawType()  :  subtypeVarAssigns.getRawType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  toClass.getRawType()  :  subtypeVarAssigns.getRawType();	      Type    bound    =    toClass.isArray()?    toClass.getRawType()    :    toClass.getRawType();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
74	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>,  subtypeVarAssigns)  {  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>,  subtypeVarAssigns)  {  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>  ||  type  instanceof  Class  <?>,  subtypeVarAssigns)  {	  if(type    instanceof    Class    <?>    ||    type    instanceof    Class    <?>)    {    	non-compiled	[CE]  ')'  expected	6	None	replace
75	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass.getComponentType();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass.getComponentType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  type.getComponentType()  :  toClass.getComponentType();	      Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass.getComponentType();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
76	[BUG]  [BUGGY]  Type  bound  =  getTypeArguments(subtypeVarAssigns,  toClass.getComponentType());  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  getTypeArguments(subtypeVarAssigns,  toClass.getComponentType());  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  getTypeArguments(subtypeVarAssigns,  toClass.getComponentType());	      Type    bound    =    getTypeArguments(toClass.getComponentType());    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
77	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>,  toClass  instanceof  Class  <?>)  {  [CE]  ')'  expected  [FE]    ClassCastException    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  if(type  instanceof  Class  <?>,  toClass  instanceof  Class  <?>)  {  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>,  toClass  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>    ||    toClass    instanceof    Class    <?>)    {    	non-compiled	[CE]  ')'  expected	4	None	replace
78	[BUG]  [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.getRawType();  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  toClass,  subtypeVarAssigns.getRawType();  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass,  subtypeVarAssigns.getRawType();	      Type    bound    =    toClass.getRawType();    	non-compiled	[CE]  ';'  expected	8	None	replace
79	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type);	      Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns);    	non-compiled	[CE]  ';'  expected	10	None	replace
80	[BUG]  [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type;  [BUGGY]    if  (type  instanceof  Class<?>)  {  return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.isArray()?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns,  type;	      Type    bound    =    toClass.isArray()?    toClass.getComponentType()    :    toClass,    subtypeVarAssigns;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
81	[BUG]  [BUGGY]  Class  <?>  bound  =  toClass.getRawClass();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Class  <?>  bound  =  toClass.getRawClass();  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Class  <?>  bound  =  toClass.getRawClass();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
82	[BUG]  [BUGGY]  Type  bound  =  toClass.getBounds();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  toClass.getBounds();  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.getBounds();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
83	[BUG]  [BUGGY]  Type  bound  =  toClass.getRestrictedType();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  Type  bound  =  toClass.getRestrictedType();  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	Type  bound  =  toClass.getRestrictedType();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
84	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>,  toClass!=  subtypeVarAssigns  ||  type  instanceof  Class  <?>)  {  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {    [BUGGY]  if(type  instanceof  Class  <?>,  toClass!=  subtypeVarAssigns  ||  type  instanceof  Class  <?>)  {  [BUGGY]    return  getTypeArguments((Class<?>)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  ParameterizedType)  {  return  getTypeArguments((ParameterizedType)  type,  toClass,  subtypeVarAssigns);  }  if  (type  instanceof  GenericArrayType)  {  return  getTypeArguments(((GenericArrayType)  type).getGenericComponentType(),  toClass  .isArray()  ?  toClass.getComponentType()  :  toClass,  subtypeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Type  type  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  Type  bound  type  boolean  Class  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.6324555320336759	547	547	2	replace	if(type  instanceof  Class  <?>,  toClass!=  subtypeVarAssigns  ||  type  instanceof  Class  <?>)  {	  if(type    instanceof    Class    <?>,    toClass!=    subtypeVarAssigns)    {    	non-compiled	[CE]  ')'  expected	19	None	replace
