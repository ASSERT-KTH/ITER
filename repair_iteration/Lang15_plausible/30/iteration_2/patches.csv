bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Type[]  upperBounds  =  toBound.getTypes();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  upperBounds  =  toBound.getTypes();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  upperBounds  =  toBound.getTypes();	  Type[]    upperBounds    =    bound.getTypes();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
2	[BUG]  [BUGGY]  Type[]  upperBounds  =  toWildcardType.getTypes();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  upperBounds  =  toWildcardType.getTypes();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  upperBounds  =  toWildcardType.getTypes();	  Type[]    upperBounds    =    bound.getTypes();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(toBound,  toWildcardType,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	add	if  (!isAssignable(toBound,  toWildcardType,  typeVarAssigns))  {	  if    (!isAssignable(bound,    toWildcardType,    typeVarAssigns))    {    	compilable	  [FE]  AssertionError  	34	2	replace
4	[BUG]  [BUGGY]  if  (!isAssignable(toBound,  toWildcardType,  typeVarAssigns))  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(toBound,  toWildcardType,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(toBound,  toWildcardType,  typeVarAssigns))  {	  if    (!isAssignable(bound,    toWildcardType,    typeVarAssigns))    {    	compilable	  [FE]  AssertionError  	34	2	replace
5	[BUG]  [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  toLowerBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[])  [FE]      AssertionError    [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  toLowerBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(bound,  toWildcardType,  toLowerBounds))  {	  if    (!isAssignable(bound,    toWildcardType,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[])	34	None	replace
6	[BUG]  [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  wildcardType))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,WildcardType)  [FE]        AssertionError    [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  wildcardType))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(bound,  toWildcardType,  wildcardType))  {	  if    (!isAssignable(bound,    toWildcardType,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,WildcardType)	34	None	replace
7	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getUpperBounds();  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  toWildcardType.getUpperBounds();	  Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
8	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLowerBounds(bound);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLowerBounds(bound);  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  toWildcardType.getLowerBounds(bound);	  Type[]    lowerBounds    =    toWildcardType.getLowerBounds();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
9	[BUG]  [BUGGY]  typeVarAssigns.put(bound,  toWildcardType);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  typeVarAssigns.put(bound,  toWildcardType);  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	typeVarAssigns.put(bound,  toWildcardType);	  typeVarAssigns.put(bound,    toBound);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
10	[BUG]  [BUGGY]  typeVarAssigns.put(toBound,  bound);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  typeVarAssigns.put(toBound,  bound);  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	typeVarAssigns.put(toBound,  bound);	  typeVarAssigns.put(bound,    toBound);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
11	[BUG]  [BUGGY]  typeVarAssigns.put(bound,  bound);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  typeVarAssigns.put(bound,  bound);  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	typeVarAssigns.put(bound,  bound);	  typeVarAssigns.put(bound,    toBound);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
12	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getAllBounds();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  toBound.getAllBounds();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  toBound.getAllBounds();	  Type[]    lowerBounds    =    bound.getAllBounds();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
13	[BUG]  [BUGGY]  Type[]  lowerBounds  =  bound.getRangeBounds();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  bound.getRangeBounds();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  bound.getRangeBounds();	  Type[]    lowerBounds    =    bound.getAllBounds();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
14	[BUG]  [BUGGY]  if  (!isAssignable(toBound,  toLowerBounds,  typeVarAssigns,  wildcardType))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Map<TypeVariable<?>,Type>,WildcardType)  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(toBound,  toLowerBounds,  typeVarAssigns,  wildcardType))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(toBound,  toLowerBounds,  typeVarAssigns,  wildcardType))  {	  if    (!isAssignable(bound,    toLowerBounds,    typeVarAssigns,    wildcardType))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Map<TypeVariable<?>,Type>,WildcardType)	73	None	replace
15	[BUG]  [BUGGY]  if  (!isAssignable(toWildcardType,  toLowerBounds,  typeVarAssigns,  bound))  {  [CE]  no  suitable  method  found  for  isAssignable(WildcardType,Type[],Map<TypeVariable<?>,Type>,Type)  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(toWildcardType,  toLowerBounds,  typeVarAssigns,  bound))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(toWildcardType,  toLowerBounds,  typeVarAssigns,  bound))  {	  if    (!isAssignable(bound,    toLowerBounds,    typeVarAssigns,    wildcardType))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(WildcardType,Type[],Map<TypeVariable<?>,Type>,Type)	73	None	replace
16	[BUG]  [BUGGY]  if  (!isAssignable(wildcardType,  toLowerBounds,  typeVarAssigns,  bound))  {  [CE]  no  suitable  method  found  for  isAssignable(WildcardType,Type[],Map<TypeVariable<?>,Type>,Type)  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(wildcardType,  toLowerBounds,  typeVarAssigns,  bound))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(wildcardType,  toLowerBounds,  typeVarAssigns,  bound))  {	  if    (!isAssignable(bound,    toLowerBounds,    typeVarAssigns,    wildcardType))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(WildcardType,Type[],Map<TypeVariable<?>,Type>,Type)	73	None	replace
17	[BUG]  [BUGGY]  if  (!isAssignable(toLowerBounds,  toLowerBounds,  typeVarAssigns,  wildcardType))  {  [CE]  no  suitable  method  found  for  isAssignable(Type[],Type[],Map<TypeVariable<?>,Type>,WildcardType)  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(toLowerBounds,  toLowerBounds,  typeVarAssigns,  wildcardType))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(toLowerBounds,  toLowerBounds,  typeVarAssigns,  wildcardType))  {	  if    (!isAssignable(bound,    toLowerBounds,    typeVarAssigns,    wildcardType))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type[],Type[],Map<TypeVariable<?>,Type>,WildcardType)	73	None	replace
18	[BUG]  [BUGGY]  if(!isAssignable(toBound,  toLowerBounds,  toUpperBounds,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Type[],Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(toBound,  toLowerBounds,  toUpperBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(toBound,  toLowerBounds,  toUpperBounds,  typeVarAssigns))  {	  if(!isAssignable(bound,    toBound,    toUpperBounds,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Type[],Map<TypeVariable<?>,Type>)	48	None	replace
19	[BUG]  [BUGGY]  if(!isAssignable(toBound,  toWildcardType,  toUpperBounds,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(toBound,  toWildcardType,  toUpperBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(toBound,  toWildcardType,  toUpperBounds,  typeVarAssigns))  {	  if(!isAssignable(bound,    toBound,    toUpperBounds,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Map<TypeVariable<?>,Type>)	48	None	replace
20	[BUG]  [BUGGY]  if(!isAssignable(toBound,  toUpperBounds,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(toBound,  toUpperBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(toBound,  toUpperBounds,  typeVarAssigns))  {	  if(!isAssignable(bound,    toBound,    toUpperBounds,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Map<TypeVariable<?>,Type>)	48	None	replace
21	[BUG]  [BUGGY]  Type[]  upperBounds  =  toBound.getBaseTypes();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  upperBounds  =  toBound.getBaseTypes();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  upperBounds  =  toBound.getBaseTypes();	  Type[]    upperBounds    =    bound.getBaseTypes();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
22	[BUG]  [BUGGY]  if(!isAssignable(toBound,  toBound,  lowerBounds,  upperBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[])  [FE]            AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(toBound,  toBound,  lowerBounds,  upperBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(toBound,  toBound,  lowerBounds,  upperBounds))  {	  if(!isAssignable(bound,    toBound,    lowerBounds,    upperBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[])	74	None	replace
23	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  toLowerBounds,  lowerBounds,  upperBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[],Type[])  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  toLowerBounds,  lowerBounds,  upperBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  toLowerBounds,  lowerBounds,  upperBounds))  {	  if(!isAssignable(bound,    toBound,    lowerBounds,    upperBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[],Type[])	74	None	replace
24	[BUG]  [BUGGY]  if(!isAssignable(toBound,  toBound,  lowerBounds,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(toBound,  toBound,  lowerBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(toBound,  toBound,  lowerBounds,  typeVarAssigns))  {	  if(!isAssignable(bound,    toBound,    lowerBounds,    upperBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Map<TypeVariable<?>,Type>)	74	None	replace
25	[BUG]  [BUGGY]  Type[]  upperBounds  =  toBound.values();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  upperBounds  =  toBound.values();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  upperBounds  =  toBound.values();	  Type[]    upperBounds    =    bound.values();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
26	[BUG]  [BUGGY]  Type[]  upperBounds  =  toWildcardType.values();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  upperBounds  =  toWildcardType.values();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  upperBounds  =  toWildcardType.values();	  Type[]    upperBounds    =    bound.values();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
27	[BUG]  [BUGGY]  if(!isAssignable(bound,  toLowerBounds,  toLowerBounds,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Type[],Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toLowerBounds,  toLowerBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toLowerBounds,  toLowerBounds,  typeVarAssigns))  {	  if(!isAssignable(toBound,    toLowerBounds,    upperBounds,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Type[],Map<TypeVariable<?>,Type>)	25	None	replace
28	[BUG]  [BUGGY]  Type[]  upperBounds  =  toBound.getRawTypes();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  upperBounds  =  toBound.getRawTypes();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  upperBounds  =  toBound.getRawTypes();	  Type[]    upperBounds    =    bound.getRawTypes();    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
29	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.getRawTypes();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.getRawTypes();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  toLowerBounds.getRawTypes();	  Type[]    lowerBounds    =    toLowerBounds.getTypes();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
30	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getTypes();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  toBound.getTypes();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  toBound.getTypes();	  Type[]    lowerBounds    =    bound.getTypes();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
31	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getTypes();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getTypes();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  toWildcardType.getTypes();	  Type[]    lowerBounds    =    bound.getTypes();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
32	[BUG]  [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  toLowerBounds,  toUpperBounds,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Type[],Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  toLowerBounds,  toUpperBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(bound,  toWildcardType,  toLowerBounds,  toUpperBounds,  typeVarAssigns))  {	  if    (!isAssignable(bound,    toLowerBounds,    toUpperBounds,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Type[],Map<TypeVariable<?>,Type>)	35	None	replace
33	[BUG]  [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  toUpperBounds,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  toUpperBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(bound,  toWildcardType,  toUpperBounds,  typeVarAssigns))  {	  if    (!isAssignable(bound,    toLowerBounds,    toUpperBounds,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Map<TypeVariable<?>,Type>)	35	None	replace
34	[BUG]  [BUGGY]  if  (!isAssignable(toWildcardType,  toLowerBounds,  toUpperBounds,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(WildcardType,Type[],Type[],Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(toWildcardType,  toLowerBounds,  toUpperBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(toWildcardType,  toLowerBounds,  toUpperBounds,  typeVarAssigns))  {	  if    (!isAssignable(bound,    toLowerBounds,    toUpperBounds,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(WildcardType,Type[],Type[],Map<TypeVariable<?>,Type>)	35	None	replace
35	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  bound.getUpperBounds();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  toLowerBounds  =  bound.getUpperBounds();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  toLowerBounds  =  bound.getUpperBounds();	  Type[]    toLowerBounds    =    toUpperBounds.getLowerBounds();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
36	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  binding.getLowerBounds();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  toLowerBounds  =  binding.getLowerBounds();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  toLowerBounds  =  binding.getLowerBounds();	  Type[]    toLowerBounds    =    toUpperBounds.getLowerBounds();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
37	[BUG]  [BUGGY]  if(!isAssignable(toBound,  toBound,  upperBounds,  lowerBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[])  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(toBound,  toBound,  upperBounds,  lowerBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(toBound,  toBound,  upperBounds,  lowerBounds))  {	  if(!isAssignable(bound,    toBound,    upperBounds,    lowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[])	59	None	replace
38	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  toLowerBounds,  upperBounds,  lowerBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[],Type[])  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  toLowerBounds,  upperBounds,  lowerBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  toLowerBounds,  upperBounds,  lowerBounds))  {	  if(!isAssignable(bound,    toBound,    upperBounds,    lowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[],Type[])	59	None	replace
39	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  toLowerBounds,  lowerBounds,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[],Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  toLowerBounds,  lowerBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  toLowerBounds,  lowerBounds,  typeVarAssigns))  {	  if(!isAssignable(bound,    toBound,    lowerBounds,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[],Map<TypeVariable<?>,Type>)	78	None	replace
40	[BUG]  [BUGGY]  if(!isAssignable(type,  toBound,  lowerBounds,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(type,  toBound,  lowerBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(type,  toBound,  lowerBounds,  typeVarAssigns))  {	  if(!isAssignable(bound,    toBound,    lowerBounds,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Map<TypeVariable<?>,Type>)	78	None	replace
41	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  bound.getTypes();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  toLowerBounds  =  bound.getTypes();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  toLowerBounds  =  bound.getTypes();	  Type[]    toLowerBounds    =    toUpperBounds.getTypes();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
42	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  bound.getTypes();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  toUpperBounds  =  bound.getTypes();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  toUpperBounds  =  bound.getTypes();	  Type[]    toLowerBounds    =    toUpperBounds.getTypes();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
43	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  binding.getTypes();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  toLowerBounds  =  binding.getTypes();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  toLowerBounds  =  binding.getTypes();	  Type[]    toLowerBounds    =    toUpperBounds.getTypes();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
44	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  getLowerBounds();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  toLowerBounds  =  getLowerBounds();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  toLowerBounds  =  getLowerBounds();	  Type[]    toLowerBounds    =    getUpperBounds();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
45	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.getLowerBounds();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.getLowerBounds();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  toLowerBounds  =  toLowerBounds.getLowerBounds();	  Type[]    toLowerBounds    =    bound.getLowerBounds();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
46	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  bound.getOwnerBounds();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  toLowerBounds  =  bound.getOwnerBounds();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  toLowerBounds  =  bound.getOwnerBounds();	  Type[]    toLowerBounds    =    bound.getLowerBounds();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
47	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  bound.getLeadingBounds();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  toLowerBounds  =  bound.getLeadingBounds();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  toLowerBounds  =  bound.getLeadingBounds();	  Type[]    toLowerBounds    =    bound.getLowerBounds();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
48	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLeftBounds();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLeftBounds();  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  toWildcardType.getLeftBounds();	  Type[]    lowerBounds    =    toWildcardType.getRangeBounds();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
49	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  bound.getLeadingTypes();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  toLowerBounds  =  bound.getLeadingTypes();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  toLowerBounds  =  bound.getLeadingTypes();	  Type[]    toLowerBounds    =    bound.getRawTypes();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
50	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  bound.getVarAssigns();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  toLowerBounds  =  bound.getVarAssigns();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  toLowerBounds  =  bound.getVarAssigns();	  Type[]    toLowerBounds    =    bound.getRawTypes();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
51	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  bound.values();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  toLowerBounds  =  bound.values();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  toLowerBounds  =  bound.values();	  Type[]    toLowerBounds    =    toUpperBounds.values();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
52	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.values();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.values();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  toLowerBounds  =  toLowerBounds.values();	  Type[]    toLowerBounds    =    toUpperBounds.values();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
53	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toWildcardType.values();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  toLowerBounds  =  toWildcardType.values();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  toLowerBounds  =  toWildcardType.values();	  Type[]    toLowerBounds    =    toUpperBounds.values();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
54	[BUG]  [BUGGY]  if(!isAssignable(toBound,  toLowerBounds,  lowerBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Type[])  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(toBound,  toLowerBounds,  lowerBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(toBound,  toLowerBounds,  lowerBounds))  {	  if(!isAssignable(toBound,    bound,    lowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Type[])	28	None	replace
55	[BUG]  [BUGGY]  if(!isAssignable(toBound,  toWildcardType,  lowerBounds,  lowerBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Type[])  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(toBound,  toWildcardType,  lowerBounds,  lowerBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(toBound,  toWildcardType,  lowerBounds,  lowerBounds))  {	  if(!isAssignable(toBound,    bound,    lowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Type[])	28	None	replace
56	[BUG]  [BUGGY]  if(!isAssignable(toBound,  toWildcardType,  lowerBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[])  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(toBound,  toWildcardType,  lowerBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(toBound,  toWildcardType,  lowerBounds))  {	  if(!isAssignable(toBound,    bound,    lowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[])	28	None	replace
57	[BUG]  [BUGGY]  if  (!isAssignable(toBound,  toLowerBounds,  toWildcardType,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type[],WildcardType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(toBound,  toLowerBounds,  toWildcardType,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(toBound,  toLowerBounds,  toWildcardType,  typeVarAssigns))  {	  if    (!isAssignable(bound,    toLowerBounds,    toWildcardType,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type[],WildcardType,Map<TypeVariable<?>,Type>)	32	None	replace
58	[BUG]  [BUGGY]  if  (!isAssignable(toWildcardType,  toLowerBounds,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(WildcardType,Type[],Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(toWildcardType,  toLowerBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(toWildcardType,  toLowerBounds,  typeVarAssigns))  {	  if    (!isAssignable(bound,    toLowerBounds,    toWildcardType,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(WildcardType,Type[],Map<TypeVariable<?>,Type>)	32	None	replace
59	[BUG]  [BUGGY]  if  (!isAssignable(toWildcardType,  toLowerBounds,  toLowerBounds,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(WildcardType,Type[],Type[],Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(toWildcardType,  toLowerBounds,  toLowerBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(toWildcardType,  toLowerBounds,  toLowerBounds,  typeVarAssigns))  {	  if    (!isAssignable(bound,    toLowerBounds,    toWildcardType,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(WildcardType,Type[],Type[],Map<TypeVariable<?>,Type>)	32	None	replace
60	[BUG]  [BUGGY]  if(!isAssignable(toBound,  toBound,  upperBounds,  toLowerBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[])  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(toBound,  toBound,  upperBounds,  toLowerBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(toBound,  toBound,  upperBounds,  toLowerBounds))  {	  if(!isAssignable(bound,    toBound,    upperBounds,    toLowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[])	65	None	replace
61	[BUG]  [BUGGY]  if(!isAssignable(toBound,  toBound,  lowerBounds,  toLowerBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[])  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(toBound,  toBound,  lowerBounds,  toLowerBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(toBound,  toBound,  lowerBounds,  toLowerBounds))  {	  if(!isAssignable(bound,    toBound,    upperBounds,    toLowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[])	65	None	replace
62	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  toLowerBounds,  toLowerBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[])  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  toLowerBounds,  toLowerBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  toLowerBounds,  toLowerBounds))  {	  if(!isAssignable(bound,    toBound,    upperBounds,    toLowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[])	65	None	replace
63	[BUG]  [BUGGY]  if(!isAssignable(toBound,  bound,  toLowerBounds,  toLowerBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[])  [FE]                      AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(toBound,  bound,  toLowerBounds,  toLowerBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(toBound,  bound,  toLowerBounds,  toLowerBounds))  {	  if(!isAssignable(bound,    toBound,    upperBounds,    toLowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[])	65	None	replace
64	[BUG]  [BUGGY]  Type[]  upperBounds  =  getUpperBounds();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  upperBounds  =  getUpperBounds();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  upperBounds  =  getUpperBounds();	  Type[]    upperBounds    =    getLowerBounds();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
65	[BUG]  [BUGGY]  Type[]  upperBounds  =  toUpperBounds;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  upperBounds  =  toUpperBounds;  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  upperBounds  =  toUpperBounds;	  Type[]    upperBounds    =    getLowerBounds();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
66	[BUG]  [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  toLowerBounds,  upperBounds,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Type[],Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  toLowerBounds,  upperBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(bound,  toWildcardType,  toLowerBounds,  upperBounds,  typeVarAssigns))  {	  if    (!isAssignable(bound,    toLowerBounds,    upperBounds,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Type[],Map<TypeVariable<?>,Type>)	52	None	replace
67	[BUG]  [BUGGY]  Type[]  upperBounds  =  toBound.getAllBounds();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  upperBounds  =  toBound.getAllBounds();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  upperBounds  =  toBound.getAllBounds();	  Type[]    upperBounds    =    bound.getAllBounds();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
68	[BUG]  [BUGGY]  Type[]  upperBounds  =  bound.getUpperBounds();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  upperBounds  =  bound.getUpperBounds();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  upperBounds  =  bound.getUpperBounds();	  Type[]    upperBounds    =    bound.getAllBounds();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
69	[BUG]  [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  toLowerBounds,  lowerBounds,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Type[],Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  toLowerBounds,  lowerBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(bound,  toWildcardType,  toLowerBounds,  lowerBounds,  typeVarAssigns))  {	  if    (!isAssignable(bound,    toLowerBounds,    lowerBounds,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Type[],Map<TypeVariable<?>,Type>)	53	None	replace
70	[BUG]  [BUGGY]  if  (!isAssignable(toWildcardType,  bound,  toLowerBounds,  lowerBounds,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(WildcardType,Type,Type[],Type[],Map<TypeVariable<?>,Type>)  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(toWildcardType,  bound,  toLowerBounds,  lowerBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(toWildcardType,  bound,  toLowerBounds,  lowerBounds,  typeVarAssigns))  {	  if    (!isAssignable(bound,    toLowerBounds,    lowerBounds,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(WildcardType,Type,Type[],Type[],Map<TypeVariable<?>,Type>)	53	None	replace
71	[BUG]  [BUGGY]  if(!isAssignable(toBound,  toBound,  toLowerBounds,  lowerBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[])  [FE]            AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(toBound,  toBound,  toLowerBounds,  lowerBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(toBound,  toBound,  toLowerBounds,  lowerBounds))  {	  if(!isAssignable(toBound,    toBound,    lowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[])	26	None	replace
72	[BUG]  [BUGGY]  if(!isAssignable(toBound,  toLowerBounds,  toLowerBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Type[])  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(toBound,  toLowerBounds,  toLowerBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(toBound,  toLowerBounds,  toLowerBounds))  {	  if(!isAssignable(toBound,    toBound,    lowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Type[])	26	None	replace
73	[BUG]  [BUGGY]  if(!isAssignable(toBound,  toWildcardType,  toLowerBounds,  lowerBounds,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Type[],Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(toBound,  toWildcardType,  toLowerBounds,  lowerBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(toBound,  toWildcardType,  toLowerBounds,  lowerBounds,  typeVarAssigns))  {	  if(!isAssignable(toBound,    toLowerBounds,    lowerBounds,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Type[],Map<TypeVariable<?>,Type>)	24	None	replace
74	[BUG]  [BUGGY]  if(!isAssignable(toBound,  toLowerBounds,  toLowerBounds,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Type[],Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(toBound,  toLowerBounds,  toLowerBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(toBound,  toLowerBounds,  toLowerBounds,  typeVarAssigns))  {	  if(!isAssignable(bound,    toBound,    toLowerBounds,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Type[],Map<TypeVariable<?>,Type>)	6	None	replace
75	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  lowerBounds,  toLowerBounds,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[],Map<TypeVariable<?>,Type>)  [FE]                      AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  lowerBounds,  toLowerBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  lowerBounds,  toLowerBounds,  typeVarAssigns))  {	  if(!isAssignable(bound,    toBound,    toLowerBounds,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[],Map<TypeVariable<?>,Type>)	6	None	replace
76	[BUG]  [BUGGY]  Type[]  upperBounds  =  bound.keySet();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  upperBounds  =  bound.keySet();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  upperBounds  =  bound.keySet();	  Type[]    upperBounds    =    toUpperBounds.keySet();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
77	[BUG]  [BUGGY]  Type[]  lowerBounds  =  bound.keySet().iterator().next();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  bound.keySet().iterator().next();  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  bound.keySet().iterator().next();	  Type[]    lowerBounds    =    toUpperBounds.keySet().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
78	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.keySet().iterator().next();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.keySet().iterator().next();  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  toLowerBounds.keySet().iterator().next();	  Type[]    lowerBounds    =    toUpperBounds.keySet().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
79	[BUG]  [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  typeVarAssigns))  {  if  (!isAssignable(bound,  toWildcardType,  typeVarAssigns))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  typeVarAssigns))  {  if  (!isAssignable(bound,  toWildcardType,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if    (!isAssignable(bound,    toWildcardType,    typeVarAssigns))    {    if  (!isAssignable(bound,  toWildcardType,  typeVarAssigns))  {	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
80	[BUG]  [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  typeVarAssigns))  {  If  (!isAssignable(bound,  toWildcardType,  typeVarAssigns))  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  typeVarAssigns))  {  If  (!isAssignable(bound,  toWildcardType,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if    (!isAssignable(bound,    toWildcardType,    typeVarAssigns))    {    If  (!isAssignable(bound,  toWildcardType,  typeVarAssigns))  {	  	non-compiled	[CE]  ';'  expected	33	None	add
81	[BUG]  [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  typeVarAssigns))  {  if  (!isAssignable(bound,  toWildcardType,  typeVarAssigneds))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  typeVarAssigns))  {  if  (!isAssignable(bound,  toWildcardType,  typeVarAssigneds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if    (!isAssignable(bound,    toWildcardType,    typeVarAssigns))    {    if  (!isAssignable(bound,  toWildcardType,  typeVarAssigneds))  {	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
82	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getRawTypes();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  toBound.getRawTypes();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  toBound.getRawTypes();	  Type[]    lowerBounds    =    bound.getRawTypes();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
83	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getRawTypes();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getRawTypes();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  toWildcardType.getRawTypes();	  Type[]    lowerBounds    =    bound.getRawTypes();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
84	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toUpperBounds.toArray(new  Type[size()  *  1]);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  toUpperBounds.toArray(new  Type[size()  *  1]);  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  toUpperBounds.toArray(new  Type[size()  *  1]);	  Type[]    lowerBounds    =    toUpperBounds.toArray(new    Type[size()    -    1]);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
85	[BUG]  [BUGGY]  if  (!isAssignable(toBound,  toLowerBounds,  typeVarAssigns,  upperBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Map<TypeVariable<?>,Type>,Type[])  [FE]            AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(toBound,  toLowerBounds,  typeVarAssigns,  upperBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(toBound,  toLowerBounds,  typeVarAssigns,  upperBounds))  {	  if    (!isAssignable(bound,    toLowerBounds,    typeVarAssigns,    upperBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Map<TypeVariable<?>,Type>,Type[])	51	None	replace
86	[BUG]  [BUGGY]  if  (!isAssignable(bound,  toLowerBounds,  toWildcardType,  typeVarAssigns,  upperBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type[],WildcardType,Map<TypeVariable<?>,Type>,Type[])  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(bound,  toLowerBounds,  toWildcardType,  typeVarAssigns,  upperBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(bound,  toLowerBounds,  toWildcardType,  typeVarAssigns,  upperBounds))  {	  if    (!isAssignable(bound,    toLowerBounds,    typeVarAssigns,    upperBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type[],WildcardType,Map<TypeVariable<?>,Type>,Type[])	51	None	replace
87	[BUG]  [BUGGY]  if  (!isAssignable(bound,  toLowerBounds,  lowerBounds,  typeVarAssigns,  upperBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Type[],Map<TypeVariable<?>,Type>,Type[])  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(bound,  toLowerBounds,  lowerBounds,  typeVarAssigns,  upperBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(bound,  toLowerBounds,  lowerBounds,  typeVarAssigns,  upperBounds))  {	  if    (!isAssignable(bound,    toLowerBounds,    typeVarAssigns,    upperBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Type[],Map<TypeVariable<?>,Type>,Type[])	51	None	replace
88	[BUG]  [BUGGY]  if  (!isAssignable(toWildcardType,  toLowerBounds,  typeVarAssigns,  upperBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(WildcardType,Type[],Map<TypeVariable<?>,Type>,Type[])  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(toWildcardType,  toLowerBounds,  typeVarAssigns,  upperBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(toWildcardType,  toLowerBounds,  typeVarAssigns,  upperBounds))  {	  if    (!isAssignable(bound,    toLowerBounds,    typeVarAssigns,    upperBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(WildcardType,Type[],Map<TypeVariable<?>,Type>,Type[])	51	None	replace
89	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  bound.keySet();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  toLowerBounds  =  bound.keySet();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  toLowerBounds  =  bound.keySet();	  Type[]    toLowerBounds    =    toUpperBounds.keySet();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
90	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.keySet();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.keySet();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  toLowerBounds  =  toLowerBounds.keySet();	  Type[]    toLowerBounds    =    toUpperBounds.keySet();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
91	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  binding.getAllBounds();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  toLowerBounds  =  binding.getAllBounds();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  toLowerBounds  =  binding.getAllBounds();	  Type[]    toLowerBounds    =    toUpperBounds.getAllBounds();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
92	[BUG]  [BUGGY]  Type[]  toUpperBounds  =  bound.getAllBounds();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  toUpperBounds  =  bound.getAllBounds();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  toUpperBounds  =  bound.getAllBounds();	  Type[]    toLowerBounds    =    toUpperBounds.getAllBounds();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
93	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  toLowerBounds,  toUpperBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[])  [FE]                      AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  toLowerBounds,  toUpperBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  toLowerBounds,  toUpperBounds))  {	  if(!isAssignable(bound,    toBound,    toUpperBounds,    toLowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[])	7	None	replace
94	[BUG]  [BUGGY]  if(!isAssignable(toBound,  toUpperBounds,  toLowerBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Type[])  [FE]                        AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(toBound,  toUpperBounds,  toLowerBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(toBound,  toUpperBounds,  toLowerBounds))  {	  if(!isAssignable(bound,    toBound,    toUpperBounds,    toLowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Type[])	7	None	replace
95	[BUG]  [BUGGY]  if(!isAssignable(toBound,  toLowerBounds,  toUpperBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Type[])  [FE]                          AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(toBound,  toLowerBounds,  toUpperBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(toBound,  toLowerBounds,  toUpperBounds))  {	  if(!isAssignable(bound,    toBound,    toUpperBounds,    toLowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Type[])	7	None	replace
96	[BUG]  [BUGGY]  if(!isAssignable(toBound,  toLowerBounds,  upperBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Type[])  [FE]            AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(toBound,  toLowerBounds,  upperBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(toBound,  toLowerBounds,  upperBounds))  {	  if(!isAssignable(toBound,    toBound,    upperBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Type[])	17	None	replace
97	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toUpperBounds.toArray(new  Type[bound.size()  ]);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  toLowerBounds  =  toUpperBounds.toArray(new  Type[bound.size()  ]);  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  toLowerBounds  =  toUpperBounds.toArray(new  Type[bound.size()  ]);	  Type[]    toLowerBounds    =    toUpperBounds.toArray(new    Type[size()    ]);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
98	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toArray(new  Type[size()  ]);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toArray(new  Type[size()  ]);  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  toLowerBounds  =  toLowerBounds.toArray(new  Type[size()  ]);	  Type[]    toLowerBounds    =    toUpperBounds.toArray(new    Type[size()    ]);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
99	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toUpperBounds.toArray(new  Type[size()  -  1]);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  toLowerBounds  =  toUpperBounds.toArray(new  Type[size()  -  1]);  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  toLowerBounds  =  toUpperBounds.toArray(new  Type[size()  -  1]);	  Type[]    toLowerBounds    =    toUpperBounds.toArray(new    Type[size()    ]);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
100	[BUG]  [BUGGY]  if(!isAssignable(toBound,  toBound,  typeVarAssigns,  lowerBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Type[])  [FE]            AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(toBound,  toBound,  typeVarAssigns,  lowerBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(toBound,  toBound,  typeVarAssigns,  lowerBounds))  {	  if(!isAssignable(bound,    toBound,    typeVarAssigns,    lowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Type[])	57	None	replace
101	[BUG]  [BUGGY]  if(!isAssignable(toBound,  toBound,  typeVarAssigns,  upperBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Type[])  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(toBound,  toBound,  typeVarAssigns,  upperBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(toBound,  toBound,  typeVarAssigns,  upperBounds))  {	  if(!isAssignable(bound,    toBound,    typeVarAssigns,    lowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Type[])	57	None	replace
102	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  toWildcardType,  typeVarAssigns,  lowerBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,WildcardType,Map<TypeVariable<?>,Type>,Type[])  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  toWildcardType,  typeVarAssigns,  lowerBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  toWildcardType,  typeVarAssigns,  lowerBounds))  {	  if(!isAssignable(bound,    toBound,    typeVarAssigns,    lowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,WildcardType,Map<TypeVariable<?>,Type>,Type[])	57	None	replace
103	[BUG]  [BUGGY]  if(!isAssignable(toBound,  toBound,  upperBounds,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(toBound,  toBound,  upperBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(toBound,  toBound,  upperBounds,  typeVarAssigns))  {	  if(!isAssignable(bound,    toBound,    upperBounds,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Map<TypeVariable<?>,Type>)	58	None	replace
104	[BUG]  [BUGGY]  if(!isAssignable(toBound,  toWildcardType,  toLowerBounds,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(toBound,  toWildcardType,  toLowerBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(toBound,  toWildcardType,  toLowerBounds,  typeVarAssigns))  {	  if(!isAssignable(bound,    toWildcardType,    toLowerBounds,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Map<TypeVariable<?>,Type>)	47	None	replace
105	[BUG]  [BUGGY]  if(!isAssignable(toWildcardType,  bound,  toLowerBounds,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(WildcardType,Type,Type[],Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(toWildcardType,  bound,  toLowerBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(toWildcardType,  bound,  toLowerBounds,  typeVarAssigns))  {	  if(!isAssignable(bound,    toWildcardType,    toLowerBounds,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(WildcardType,Type,Type[],Map<TypeVariable<?>,Type>)	47	None	replace
106	[BUG]  [BUGGY]  if(!isAssignable(bound,  toWildcardType,  toLowerBounds,  typeVarAssigns,  wildcardType))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Map<TypeVariable<?>,Type>,WildcardType)  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toWildcardType,  toLowerBounds,  typeVarAssigns,  wildcardType))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toWildcardType,  toLowerBounds,  typeVarAssigns,  wildcardType))  {	  if(!isAssignable(bound,    toWildcardType,    toLowerBounds,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Map<TypeVariable<?>,Type>,WildcardType)	47	None	replace
107	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  ]);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  ]);  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[typeVarAssigns.size()  ]);	  Type[]    lowerBounds    =    toUpperBounds.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
108	[BUG]  [BUGGY]  Type[]  lowerBounds  =  bound.toArray(new  Type[typeVarAssigns.size()  ]);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  bound.toArray(new  Type[typeVarAssigns.size()  ]);  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  bound.toArray(new  Type[typeVarAssigns.size()  ]);	  Type[]    lowerBounds    =    toUpperBounds.toArray(new    Type[typeVarAssigns.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
109	[BUG]  [BUGGY]  Type[]  upperBounds  =  toLowerBounds.values();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  upperBounds  =  toLowerBounds.values();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  upperBounds  =  toLowerBounds.values();	  Type[]    upperBounds    =    toUpperBounds.values();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
110	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.values();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  toBound.values();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  toBound.values();	  Type[]    lowerBounds    =    bound.values();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
111	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.values();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.values();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  toWildcardType.values();	  Type[]    lowerBounds    =    bound.values();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
112	[BUG]  [BUGGY]  Type[]  upperBounds  =  toWildcardType.getLowerBounds();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  upperBounds  =  toWildcardType.getLowerBounds();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  upperBounds  =  toWildcardType.getLowerBounds();	  Type[]    upperBounds    =    toUpperBounds.getLowerBounds();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
113	[BUG]  [BUGGY]  if(!isAssignable(toBound,  toBound,  typeVarAssigns,  toLowerBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Type[])  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(toBound,  toBound,  typeVarAssigns,  toLowerBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(toBound,  toBound,  typeVarAssigns,  toLowerBounds))  {	  if(!isAssignable(bound,    toBound,    typeVarAssigns,    toLowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Type[])	67	None	replace
114	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  toWildcardType,  typeVarAssigns,  toLowerBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,WildcardType,Map<TypeVariable<?>,Type>,Type[])  [FE]                      AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  toWildcardType,  typeVarAssigns,  toLowerBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  toWildcardType,  typeVarAssigns,  toLowerBounds))  {	  if(!isAssignable(bound,    toBound,    typeVarAssigns,    toLowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,WildcardType,Map<TypeVariable<?>,Type>,Type[])	67	None	replace
115	[BUG]  [BUGGY]  if(!isAssignable(toBound,  bound,  typeVarAssigns,  toLowerBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Type[])  [FE]                        AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(toBound,  bound,  typeVarAssigns,  toLowerBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(toBound,  bound,  typeVarAssigns,  toLowerBounds))  {	  if(!isAssignable(bound,    toBound,    typeVarAssigns,    toLowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Type[])	67	None	replace
116	[BUG]  [BUGGY]  if(!isAssignable(toBound,  toLowerBounds,  toBound))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Type)  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(toBound,  toLowerBounds,  toBound))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(toBound,  toLowerBounds,  toBound))  {	  if(!isAssignable(toBound,    toBound,    toLowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Type)	5	None	replace
117	[BUG]  [BUGGY]  if(!isAssignable(toBound,  toWildcardType,  toLowerBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[])  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(toBound,  toWildcardType,  toLowerBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(toBound,  toWildcardType,  toLowerBounds))  {	  if(!isAssignable(toBound,    toBound,    toLowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[])	5	None	replace
118	[BUG]  [BUGGY]  if  (!isAssignable(toWildcardType,  bound,  typeVarAssigns,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(WildcardType,Type,Map<TypeVariable<?>,Type>,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(toWildcardType,  bound,  typeVarAssigns,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(toWildcardType,  bound,  typeVarAssigns,  typeVarAssigns))  {	  if    (!isAssignable(bound,    toWildcardType,    typeVarAssigns,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(WildcardType,Type,Map<TypeVariable<?>,Type>,Map<TypeVariable<?>,Type>)	72	None	replace
119	[BUG]  [BUGGY]  if  (!isAssignable(type,  toWildcardType,  typeVarAssigns,  bound))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>,Type)  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(type,  toWildcardType,  typeVarAssigns,  bound))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(type,  toWildcardType,  typeVarAssigns,  bound))  {	  if    (!isAssignable(bound,    toWildcardType,    typeVarAssigns,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>,Type)	72	None	replace
120	[BUG]  [BUGGY]  if  (!isAssignable(toWildcardType,  toWildcardType,  typeVarAssigns,  upperBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(WildcardType,WildcardType,Map<TypeVariable<?>,Type>,Type[])  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(toWildcardType,  toWildcardType,  typeVarAssigns,  upperBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(toWildcardType,  toWildcardType,  typeVarAssigns,  upperBounds))  {	  if    (!isAssignable(bound,    toWildcardType,    typeVarAssigns,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(WildcardType,WildcardType,Map<TypeVariable<?>,Type>,Type[])	72	None	replace
121	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  bound.getTypeVarAssigns();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  toLowerBounds  =  bound.getTypeVarAssigns();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  toLowerBounds  =  bound.getTypeVarAssigns();	  Type[]    toLowerBounds    =    bound.getAllBounds();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
122	[BUG]  [BUGGY]  Type[]  upperBounds  =  toBound.getLowerBounds();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  upperBounds  =  toBound.getLowerBounds();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  upperBounds  =  toBound.getLowerBounds();	  Type[]    upperBounds    =    bound.getLowerBounds();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
123	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  toBound.getUpperBounds();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  toBound.getUpperBounds();	  Type[]    lowerBounds    =    toBound.getLowerBounds();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
124	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toUpperBounds.toArray(new  Type[bound.size()  +  1]);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  toUpperBounds.toArray(new  Type[bound.size()  +  1]);  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  toUpperBounds.toArray(new  Type[bound.size()  +  1]);	  Type[]    lowerBounds    =    toUpperBounds.toArray(new    Type[bound.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
125	[BUG]  [BUGGY]  Type[]  lowerBounds  =  bound.toArray(new  Type[toUpperBounds.size()  ]);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  bound.toArray(new  Type[toUpperBounds.size()  ]);  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  bound.toArray(new  Type[toUpperBounds.size()  ]);	  Type[]    lowerBounds    =    toUpperBounds.toArray(new    Type[bound.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
126	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toUpperBounds.toArray(new  Type[bound.size()  -  1]);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  toUpperBounds.toArray(new  Type[bound.size()  -  1]);  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  toUpperBounds.toArray(new  Type[bound.size()  -  1]);	  Type[]    lowerBounds    =    toUpperBounds.toArray(new    Type[bound.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
127	[BUG]  [BUGGY]  if(!isAssignable(toBound,  toLowerBounds,  toLowerBounds,  lowerBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Type[],Type[])  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(toBound,  toLowerBounds,  toLowerBounds,  lowerBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(toBound,  toLowerBounds,  toLowerBounds,  lowerBounds))  {	  if(!isAssignable(bound,    toBound,    toLowerBounds,    lowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Type[],Type[])	27	None	replace
128	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  toLowerBounds,  toUpperBounds,  lowerBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[],Type[])  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  toLowerBounds,  toUpperBounds,  lowerBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  toLowerBounds,  toUpperBounds,  lowerBounds))  {	  if(!isAssignable(bound,    toBound,    toLowerBounds,    lowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[],Type[])	27	None	replace
129	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.keySet();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  toBound.keySet();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  toBound.keySet();	  Type[]    lowerBounds    =    bound.keySet();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
130	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.keySet();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.keySet();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  toWildcardType.keySet();	  Type[]    lowerBounds    =    bound.keySet();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
131	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  bound.getDeclaredTypes();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  toLowerBounds  =  bound.getDeclaredTypes();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  toLowerBounds  =  bound.getDeclaredTypes();	  Type[]    toLowerBounds    =    bound.getBaseTypes();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
132	[BUG]  [BUGGY]  Type[]  lowerBounds  =  getLowerBounds(bound,  toUpperBounds);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  getLowerBounds(bound,  toUpperBounds);  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  getLowerBounds(bound,  toUpperBounds);	  Type[]    lowerBounds    =    getLowerBounds(bound);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
133	[BUG]  [BUGGY]  Type[]  lowerBounds  =  getLowerBounds(bound,  toWildcardType);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  getLowerBounds(bound,  toWildcardType);  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  getLowerBounds(bound,  toWildcardType);	  Type[]    lowerBounds    =    getLowerBounds(bound);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
134	[BUG]  [BUGGY]  Type[]  lowerBounds  =  getLowerBounds(bound  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  getLowerBounds(bound  -  1);  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  getLowerBounds(bound  -  1);	  Type[]    lowerBounds    =    getLowerBounds(bound);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
135	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toBound.getBaseTypes();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  toBound.getBaseTypes();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  toBound.getBaseTypes();	  Type[]    lowerBounds    =    bound.getBaseTypes();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
136	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toUpperBounds();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toUpperBounds();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  toLowerBounds.toUpperBounds();	  Type[]    lowerBounds    =    toLowerBounds.values();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
137	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  toWildcardType,  typeVarAssigns,  upperBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,WildcardType,Map<TypeVariable<?>,Type>,Type[])  [FE]            AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  toWildcardType,  typeVarAssigns,  upperBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  toWildcardType,  typeVarAssigns,  upperBounds))  {	  if(!isAssignable(bound,    toBound,    typeVarAssigns,    upperBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,WildcardType,Map<TypeVariable<?>,Type>,Type[])	71	None	replace
138	[BUG]  [BUGGY]  Type[]  upperBounds  =  toUpperBounds.toArray(new  Type[size()  -  1]);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  upperBounds  =  toUpperBounds.toArray(new  Type[size()  -  1]);  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  upperBounds  =  toUpperBounds.toArray(new  Type[size()  -  1]);	  Type[]    upperBounds    =    toUpperBounds.toArray(new    Type[size()    ]);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
139	[BUG]  [BUGGY]  Type[]  upperBounds  =  toUpperBounds.toArray(new  Type[length()  ]);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  upperBounds  =  toUpperBounds.toArray(new  Type[length()  ]);  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  upperBounds  =  toUpperBounds.toArray(new  Type[length()  ]);	  Type[]    upperBounds    =    toUpperBounds.toArray(new    Type[size()    ]);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
140	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toUpperBounds;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  toUpperBounds;  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  toUpperBounds;	  Type[]    lowerBounds    =    getUpperBounds();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
141	[BUG]  [BUGGY]  if(!isAssignable(toBound,  toLowerBounds,  bound))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Type)  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(toBound,  toLowerBounds,  bound))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(toBound,  toLowerBounds,  bound))  {	  if(!isAssignable(toBound,    bound,    toLowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Type)	4	None	replace
142	[BUG]  [BUGGY]  if(!isAssignable(toBound,  bound,  lowerBounds,  toLowerBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[])  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(toBound,  bound,  lowerBounds,  toLowerBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(toBound,  bound,  lowerBounds,  toLowerBounds))  {	  if(!isAssignable(bound,    toBound,    lowerBounds,    toLowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[])	66	None	replace
143	[BUG]  [BUGGY]  Type[]  upperBounds  =  toUpperBounds.toArray(new  Type[bound.size()  +  1]);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  upperBounds  =  toUpperBounds.toArray(new  Type[bound.size()  +  1]);  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  upperBounds  =  toUpperBounds.toArray(new  Type[bound.size()  +  1]);	  Type[]    upperBounds    =    toUpperBounds.toArray(new    Type[bound.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
144	[BUG]  [BUGGY]  Type[]  upperBounds  =  toUpperBounds.toArray(new  Type[bound.size()  -  1]);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  upperBounds  =  toUpperBounds.toArray(new  Type[bound.size()  -  1]);  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  upperBounds  =  toUpperBounds.toArray(new  Type[bound.size()  -  1]);	  Type[]    upperBounds    =    toUpperBounds.toArray(new    Type[bound.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
145	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  lowerBounds,  toLowerBounds,  upperBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[],Type[])  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  lowerBounds,  toLowerBounds,  upperBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  lowerBounds,  toLowerBounds,  upperBounds))  {	  if(!isAssignable(bound,    toBound,    toLowerBounds,    upperBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[],Type[])	18	None	replace
146	[BUG]  [BUGGY]  if(!isAssignable(toBound,  toLowerBounds,  toLowerBounds,  upperBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Type[],Type[])  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(toBound,  toLowerBounds,  toLowerBounds,  upperBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(toBound,  toLowerBounds,  toLowerBounds,  upperBounds))  {	  if(!isAssignable(bound,    toBound,    toLowerBounds,    upperBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Type[],Type[])	18	None	replace
147	[BUG]  [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  typeVarAssigns,  upperBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>,Type[])  [FE]            AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  typeVarAssigns,  upperBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(bound,  toWildcardType,  typeVarAssigns,  upperBounds))  {	  if    (!isAssignable(bound,    toLowerBounds,    typeVarAssigns,    upperBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>,Type[])	51	None	replace
148	[BUG]  [BUGGY]  if  (!isAssignable(bound,  toLowerBounds,  typeVarAssigns,  toUpperBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Map<TypeVariable<?>,Type>,Type[])  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(bound,  toLowerBounds,  typeVarAssigns,  toUpperBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(bound,  toLowerBounds,  typeVarAssigns,  toUpperBounds))  {	  if    (!isAssignable(bound,    toLowerBounds,    typeVarAssigns,    upperBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Map<TypeVariable<?>,Type>,Type[])	51	None	replace
149	[BUG]  [BUGGY]  if  (!isAssignable(bound,  toLowerBounds,  toUpperBounds,  typeVarAssigns,  upperBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Type[],Map<TypeVariable<?>,Type>,Type[])  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(bound,  toLowerBounds,  toUpperBounds,  typeVarAssigns,  upperBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(bound,  toLowerBounds,  toUpperBounds,  typeVarAssigns,  upperBounds))  {	  if    (!isAssignable(bound,    toLowerBounds,    typeVarAssigns,    upperBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Type[],Map<TypeVariable<?>,Type>,Type[])	51	None	replace
150	[BUG]  [BUGGY]  typeVarAssigns.put(bound,  new  Type[]  {  toBound  }  );  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  typeVarAssigns.put(bound,  new  Type[]  {  toBound  }  );  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	typeVarAssigns.put(bound,  new  Type[]  {  toBound  }  );	  typeVarAssigns.put(bound,    toBound);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
151	[BUG]  [BUGGY]  typeVarAssigns.put(bound,  toBound  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  typeVarAssigns.put(bound,  toBound  -  1);  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	typeVarAssigns.put(bound,  toBound  -  1);	  typeVarAssigns.put(bound,    toBound);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
152	[BUG]  [BUGGY]  Type[]  lowerBounds  =  typeVarAssigns.getRawTypes();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  typeVarAssigns.getRawTypes();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  typeVarAssigns.getRawTypes();	  Type[]    lowerBounds    =    bound.getRawTypes();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
153	[BUG]  [BUGGY]  Type[]  lowerBounds  =  bound.getBaseTypes(typeVarAssigns);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  bound.getBaseTypes(typeVarAssigns);  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  bound.getBaseTypes(typeVarAssigns);	  Type[]    lowerBounds    =    bound.getBaseTypes();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
154	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  typeVarAssigns.getAllBounds();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  toLowerBounds  =  typeVarAssigns.getAllBounds();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  toLowerBounds  =  typeVarAssigns.getAllBounds();	  Type[]    toLowerBounds    =    toUpperBounds.getAllBounds();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
155	[BUG]  [BUGGY]  Type[]  lowerBounds  =  typeVarAssigns.getUpperBounds();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  typeVarAssigns.getUpperBounds();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  typeVarAssigns.getUpperBounds();	  Type[]    lowerBounds    =    bound.getUpperBounds();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
156	[BUG]  [BUGGY]  Type[]  upperBounds  =  typeVarAssigns.getBaseTypes();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  upperBounds  =  typeVarAssigns.getBaseTypes();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  upperBounds  =  typeVarAssigns.getBaseTypes();	  Type[]    upperBounds    =    bound.getBaseTypes();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
157	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  typeVarAssigns.getTypes();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  toLowerBounds  =  typeVarAssigns.getTypes();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  toLowerBounds  =  typeVarAssigns.getTypes();	  Type[]    toLowerBounds    =    toUpperBounds.getTypes();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
158	[BUG]  [BUGGY]  if(!isAssignable(toBound,  toLowerBounds,  bound,  lowerBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Type,Type[])  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(toBound,  toLowerBounds,  bound,  lowerBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(toBound,  toLowerBounds,  bound,  lowerBounds))  {	  if(!isAssignable(toBound,    bound,    lowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Type,Type[])	28	None	replace
159	[BUG]  [BUGGY]  if(!isAssignable(toBound,  toWildcardType,  lowerBounds,  toLowerBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Type[])  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(toBound,  toWildcardType,  lowerBounds,  toLowerBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(toBound,  toWildcardType,  lowerBounds,  toLowerBounds))  {	  if(!isAssignable(toBound,    bound,    lowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Type[])	28	None	replace
160	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  toUpperBounds,  toLowerBounds,  lowerBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[],Type[])  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  toUpperBounds,  toLowerBounds,  lowerBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  toUpperBounds,  toLowerBounds,  lowerBounds))  {	  if(!isAssignable(bound,    toBound,    toLowerBounds,    lowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[],Type[])	27	None	replace
161	[BUG]  [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  lowerBounds,  toLowerBounds,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Type[],Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  lowerBounds,  toLowerBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(bound,  toWildcardType,  lowerBounds,  toLowerBounds,  typeVarAssigns))  {	  if    (!isAssignable(bound,    toLowerBounds,    upperBounds,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Type[],Map<TypeVariable<?>,Type>)	52	None	replace
162	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  bound.getVarBounds();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  toLowerBounds  =  bound.getVarBounds();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  toLowerBounds  =  bound.getVarBounds();	  Type[]    toLowerBounds    =    bound.getAllBounds();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
163	[BUG]  [BUGGY]  Type[]  upperBounds  =  getLowerBounds(bound);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  upperBounds  =  getLowerBounds(bound);  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  upperBounds  =  getLowerBounds(bound);	  Type[]    upperBounds    =    getLowerBounds();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
164	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  lowerBounds,  toUpperBounds,  toLowerBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[],Type[])  [FE]                      AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  lowerBounds,  toUpperBounds,  toLowerBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  lowerBounds,  toUpperBounds,  toLowerBounds))  {	  if(!isAssignable(bound,    toBound,    toUpperBounds,    toLowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[],Type[])	7	None	replace
165	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  upperBounds,  toUpperBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[])  [FE]                        AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  upperBounds,  toUpperBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  upperBounds,  toUpperBounds))  {	  if(!isAssignable(bound,    toBound,    toUpperBounds,    toLowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[])	7	None	replace
166	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  toWildcardType,  lowerBounds,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,WildcardType,Type[],Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  toWildcardType,  lowerBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  toWildcardType,  lowerBounds,  typeVarAssigns))  {	  if(!isAssignable(bound,    toBound,    lowerBounds,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,WildcardType,Type[],Map<TypeVariable<?>,Type>)	78	None	replace
167	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  toLowerBounds,  upperBounds,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[],Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  toLowerBounds,  upperBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  toLowerBounds,  upperBounds,  typeVarAssigns))  {	  if(!isAssignable(bound,    toBound,    lowerBounds,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[],Map<TypeVariable<?>,Type>)	78	None	replace
168	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  lowerBounds,  typeVarAssigns,  upperBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Map<TypeVariable<?>,Type>,Type[])  [FE]            AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  lowerBounds,  typeVarAssigns,  upperBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  lowerBounds,  typeVarAssigns,  upperBounds))  {	  if(!isAssignable(bound,    toBound,    typeVarAssigns,    upperBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Map<TypeVariable<?>,Type>,Type[])	71	None	replace
169	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  toLowerBounds,  typeVarAssigns,  upperBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Map<TypeVariable<?>,Type>,Type[])  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  toLowerBounds,  typeVarAssigns,  upperBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  toLowerBounds,  typeVarAssigns,  upperBounds))  {	  if(!isAssignable(bound,    toBound,    typeVarAssigns,    upperBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Map<TypeVariable<?>,Type>,Type[])	71	None	replace
170	[BUG]  [BUGGY]  if(!isAssignable(bound,  toWildcardType,  toLowerBounds,  toLowerBounds,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Type[],Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toWildcardType,  toLowerBounds,  toLowerBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toWildcardType,  toLowerBounds,  toLowerBounds,  typeVarAssigns))  {	  if(!isAssignable(bound,    toBound,    toLowerBounds,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Type[],Map<TypeVariable<?>,Type>)	6	None	replace
171	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  bound.getBaseTypes(typeVarAssigns);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  toLowerBounds  =  bound.getBaseTypes(typeVarAssigns);  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  toLowerBounds  =  bound.getBaseTypes(typeVarAssigns);	  Type[]    toLowerBounds    =    bound.getBaseTypes();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
172	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toUpperBounds.toArray(new  Type[length()  ]);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  toUpperBounds.toArray(new  Type[length()  ]);  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  toUpperBounds.toArray(new  Type[length()  ]);	  Type[]    lowerBounds    =    toUpperBounds.toArray(new    Type[size()    -    1]);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
173	[BUG]  [BUGGY]  if  (!isAssignable(bound,  toLowerBounds,  toWildcardType,  typeVarAssigns,  wildcardType))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type[],WildcardType,Map<TypeVariable<?>,Type>,WildcardType)  [FE]            AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(bound,  toLowerBounds,  toWildcardType,  typeVarAssigns,  wildcardType))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(bound,  toLowerBounds,  toWildcardType,  typeVarAssigns,  wildcardType))  {	  if    (!isAssignable(bound,    toLowerBounds,    toWildcardType,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type[],WildcardType,Map<TypeVariable<?>,Type>,WildcardType)	32	None	replace
174	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  typeVarAssigns,  toLowerBounds,  upperBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Type[],Type[])  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  typeVarAssigns,  toLowerBounds,  upperBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  typeVarAssigns,  toLowerBounds,  upperBounds))  {	  if(!isAssignable(bound,    toBound,    toLowerBounds,    upperBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Type[],Type[])	18	None	replace
175	[BUG]  [BUGGY]  Type[]  upperBounds  =  typeVarAssigns.getAllBounds();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  upperBounds  =  typeVarAssigns.getAllBounds();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  upperBounds  =  typeVarAssigns.getAllBounds();	  Type[]    upperBounds    =    toUpperBounds.getAllBounds();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
176	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toArray(new  Type[bound.size()  ]);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  toLowerBounds  =  toLowerBounds.toArray(new  Type[bound.size()  ]);  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  toLowerBounds  =  toLowerBounds.toArray(new  Type[bound.size()  ]);	  Type[]    toLowerBounds    =    toUpperBounds.toArray(new    Type[size()    ]);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
177	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toUpperBounds.toArray(new  Type[length()  ]);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  toLowerBounds  =  toUpperBounds.toArray(new  Type[length()  ]);  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  toLowerBounds  =  toUpperBounds.toArray(new  Type[length()  ]);	  Type[]    toLowerBounds    =    toUpperBounds.toArray(new    Type[size()    ]);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
178	[BUG]  [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  toUpperBounds,  toLowerBounds,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Type[],Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  toUpperBounds,  toLowerBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(bound,  toWildcardType,  toUpperBounds,  toLowerBounds,  typeVarAssigns))  {	  if    (!isAssignable(bound,    toLowerBounds,    toUpperBounds,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Type[],Map<TypeVariable<?>,Type>)	35	None	replace
179	[BUG]  [BUGGY]  Type[]  upperBounds  =  bound.toArray(new  Type[toUpperBounds.size()  ]);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  upperBounds  =  bound.toArray(new  Type[toUpperBounds.size()  ]);  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  upperBounds  =  bound.toArray(new  Type[toUpperBounds.size()  ]);	  Type[]    upperBounds    =    toUpperBounds.toArray(new    Type[bound.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
180	[BUG]  [BUGGY]  Type[]  upperBounds  =  bound.toArray(new  Type[bound.size()  ]);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  upperBounds  =  bound.toArray(new  Type[bound.size()  ]);  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  upperBounds  =  bound.toArray(new  Type[bound.size()  ]);	  Type[]    upperBounds    =    toUpperBounds.toArray(new    Type[bound.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
181	[BUG]  [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  upperBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[])  [FE]    AssertionError    [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  upperBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(bound,  toWildcardType,  upperBounds))  {	  if    (!isAssignable(bound,    toWildcardType,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[])	34	None	replace
182	[BUG]  [BUGGY]  Type[]  upperBounds  =  typeVarAssigns.values();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  upperBounds  =  typeVarAssigns.values();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  upperBounds  =  typeVarAssigns.values();	  Type[]    upperBounds    =    bound.values();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
183	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  toUpperBounds,  upperBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[])  [FE]            AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  toUpperBounds,  upperBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  toUpperBounds,  upperBounds))  {	  if(!isAssignable(toBound,    toBound,    upperBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[])	17	None	replace
184	[BUG]  [BUGGY]  Type[]  upperBounds  =  typeVarAssigns.getLowerBounds();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  upperBounds  =  typeVarAssigns.getLowerBounds();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  upperBounds  =  typeVarAssigns.getLowerBounds();	  Type[]    upperBounds    =    toUpperBounds.getLowerBounds();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
185	[BUG]  [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  typeVarAssigns,  toLowerBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>,Type[])  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  typeVarAssigns,  toLowerBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(bound,  toWildcardType,  typeVarAssigns,  toLowerBounds))  {	  if    (!isAssignable(bound,    toLowerBounds,    typeVarAssigns,    wildcardType))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>,Type[])	73	None	replace
186	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  lowerBounds,  typeVarAssigns,  toLowerBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Map<TypeVariable<?>,Type>,Type[])  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  lowerBounds,  typeVarAssigns,  toLowerBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  lowerBounds,  typeVarAssigns,  toLowerBounds))  {	  if(!isAssignable(bound,    toBound,    typeVarAssigns,    toLowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Map<TypeVariable<?>,Type>,Type[])	67	None	replace
187	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  toUpperBounds,  typeVarAssigns,  toLowerBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Map<TypeVariable<?>,Type>,Type[])  [FE]                      AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  toUpperBounds,  typeVarAssigns,  toLowerBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  toUpperBounds,  typeVarAssigns,  toLowerBounds))  {	  if(!isAssignable(bound,    toBound,    typeVarAssigns,    toLowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Map<TypeVariable<?>,Type>,Type[])	67	None	replace
188	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  typeVarAssigns.getUpperBounds();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  toLowerBounds  =  typeVarAssigns.getUpperBounds();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  toLowerBounds  =  typeVarAssigns.getUpperBounds();	  Type[]    toLowerBounds    =    getUpperBounds();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
189	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  typeVarAssigns.values();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  toLowerBounds  =  typeVarAssigns.values();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  toLowerBounds  =  typeVarAssigns.values();	  Type[]    toLowerBounds    =    toUpperBounds.values();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
190	[BUG]  [BUGGY]  Type[]  lowerBounds  =  typeVarAssigns.values();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  typeVarAssigns.values();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  typeVarAssigns.values();	  Type[]    lowerBounds    =    bound.values();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
191	[BUG]  [BUGGY]  Type[]  lowerBounds  =  bound.toArray(new  Type[bound.size()  ]);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  bound.toArray(new  Type[bound.size()  ]);  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  bound.toArray(new  Type[bound.size()  ]);	  Type[]    lowerBounds    =    toUpperBounds.toArray(new    Type[bound.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
192	[BUG]  [BUGGY]  Type[]  lowerBounds  =  typeVarAssigns.getTypes();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  typeVarAssigns.getTypes();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  typeVarAssigns.getTypes();	  Type[]    lowerBounds    =    bound.getTypes();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
193	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  type.getRawTypes();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  toLowerBounds  =  type.getRawTypes();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  toLowerBounds  =  type.getRawTypes();	  Type[]    toLowerBounds    =    bound.getRawTypes();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
194	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  bound.getNames();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  toLowerBounds  =  bound.getNames();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  toLowerBounds  =  bound.getNames();	  Type[]    toLowerBounds    =    bound.getRawTypes();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
195	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  toLowerBounds,  typeVarAssigns,  lowerBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Map<TypeVariable<?>,Type>,Type[])  [FE]            AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  toLowerBounds,  typeVarAssigns,  lowerBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  toLowerBounds,  typeVarAssigns,  lowerBounds))  {	  if(!isAssignable(bound,    toBound,    typeVarAssigns,    lowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Map<TypeVariable<?>,Type>,Type[])	57	None	replace
196	[BUG]  [BUGGY]  Type[]  lowerBounds  =  typeVarAssigns.keySet();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  typeVarAssigns.keySet();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  typeVarAssigns.keySet();	  Type[]    lowerBounds    =    bound.keySet();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
197	[BUG]  [BUGGY]  Type[]  lowerBounds  =  typeVarAssigns.getLowerBounds();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  typeVarAssigns.getLowerBounds();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  typeVarAssigns.getLowerBounds();	  Type[]    lowerBounds    =    getUpperBounds();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
198	[BUG]  [BUGGY]  if(!isAssignable(bound,  toWildcardType,  upperBounds,  toLowerBounds,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Type[],Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toWildcardType,  upperBounds,  toLowerBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toWildcardType,  upperBounds,  toLowerBounds,  typeVarAssigns))  {	  if(!isAssignable(bound,    toWildcardType,    toLowerBounds,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Type[],Map<TypeVariable<?>,Type>)	47	None	replace
199	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  toLowerBounds,  toUpperBounds,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[],Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  toLowerBounds,  toUpperBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  toLowerBounds,  toUpperBounds,  typeVarAssigns))  {	  if(!isAssignable(toBound,    toLowerBounds,    lowerBounds,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[],Map<TypeVariable<?>,Type>)	24	None	replace
200	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  typeVarAssigns.getLowerBounds();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  toLowerBounds  =  typeVarAssigns.getLowerBounds();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  toLowerBounds  =  typeVarAssigns.getLowerBounds();	  Type[]    toLowerBounds    =    bound.getLowerBounds();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
201	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  type.getLowerBounds();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  toLowerBounds  =  type.getLowerBounds();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  toLowerBounds  =  type.getLowerBounds();	  Type[]    toLowerBounds    =    bound.getLowerBounds();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
202	[BUG]  [BUGGY]  Type[]  lowerBounds  =  typeVarAssigns.getAllBounds();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  typeVarAssigns.getAllBounds();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  typeVarAssigns.getAllBounds();	  Type[]    lowerBounds    =    bound.getAllBounds();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
203	[BUG]  [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  lowerBounds,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  lowerBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(bound,  toWildcardType,  lowerBounds,  typeVarAssigns))  {	  if    (!isAssignable(bound,    toLowerBounds,    lowerBounds,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Map<TypeVariable<?>,Type>)	53	None	replace
204	[BUG]  [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  toLowerBounds,  typeVarAssigns,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Map<TypeVariable<?>,Type>,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  toLowerBounds,  typeVarAssigns,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(bound,  toWildcardType,  toLowerBounds,  typeVarAssigns,  typeVarAssigns))  {	  if    (!isAssignable(bound,    toWildcardType,    typeVarAssigns,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Map<TypeVariable<?>,Type>,Map<TypeVariable<?>,Type>)	72	None	replace
205	[BUG]  [BUGGY]  if  (!isAssignable(toBound,  toWildcardType,  typeVarAssigns,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(toBound,  toWildcardType,  typeVarAssigns,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(toBound,  toWildcardType,  typeVarAssigns,  typeVarAssigns))  {	  if    (!isAssignable(bound,    toWildcardType,    typeVarAssigns,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>,Map<TypeVariable<?>,Type>)	72	None	replace
206	[BUG]  [BUGGY]  Type[]  upperBounds  =  toUpperBounds.cloneTree();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  upperBounds  =  toUpperBounds.cloneTree();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  upperBounds  =  toUpperBounds.cloneTree();	  Type[]    upperBounds    =    toUpperBounds.getTypes();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
207	[BUG]  [BUGGY]  Type[]  upperBounds  =  typeVarAssigns.keySet();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  upperBounds  =  typeVarAssigns.keySet();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  upperBounds  =  typeVarAssigns.keySet();	  Type[]    upperBounds    =    toUpperBounds.keySet();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
208	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  lowerBounds,  toUpperBounds,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[],Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  lowerBounds,  toUpperBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  lowerBounds,  toUpperBounds,  typeVarAssigns))  {	  if(!isAssignable(bound,    toBound,    toUpperBounds,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[],Map<TypeVariable<?>,Type>)	48	None	replace
209	[BUG]  [BUGGY]  Type[]  upperBounds  =  typeVarAssigns.getTypes();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  upperBounds  =  typeVarAssigns.getTypes();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  upperBounds  =  typeVarAssigns.getTypes();	  Type[]    upperBounds    =    bound.getTypes();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
210	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLeadingBounds();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  toWildcardType.getLeadingBounds();  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  toWildcardType.getLeadingBounds();	  Type[]    lowerBounds    =    toWildcardType.getRangeBounds();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
211	[BUG]  [BUGGY]  if(!isAssignable(toBound,  toWildcardType,  bound,  toLowerBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type,Type[])  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(toBound,  toWildcardType,  bound,  toLowerBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(toBound,  toWildcardType,  bound,  toLowerBounds))  {	  if(!isAssignable(toBound,    bound,    toLowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type,Type[])	4	None	replace
212	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  typeVarAssigns,  lowerBounds,  upperBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Type[],Type[])  [FE]            AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  typeVarAssigns,  lowerBounds,  upperBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  typeVarAssigns,  lowerBounds,  upperBounds))  {	  if(!isAssignable(bound,    toBound,    lowerBounds,    upperBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Type[],Type[])	74	None	replace
213	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  toLowerBounds,  topBounds))  {  [CE]  cannot  find  symbol  topBounds  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  toLowerBounds,  topBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  toLowerBounds,  topBounds))  {	  if(!isAssignable(bound,    toBound,    lowerBounds,    upperBounds))    {    	non-compiled	[CE]  cannot  find  symbol  topBounds	74	None	replace
214	[BUG]  [BUGGY]  Type[]  lowerBounds  =  getLowerBounds(bound,  upperBounds);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  getLowerBounds(bound,  upperBounds);  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  getLowerBounds(bound,  upperBounds);	  Type[]    lowerBounds    =    getLowerBounds(bound);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
215	[BUG]  [BUGGY]  Type[]  upperBounds  =  typeVarAssigns.getRawTypes();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  upperBounds  =  typeVarAssigns.getRawTypes();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  upperBounds  =  typeVarAssigns.getRawTypes();	  Type[]    upperBounds    =    bound.getRawTypes();    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
216	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  typeVarAssigns,  upperBounds,  toLowerBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Type[],Type[])  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  typeVarAssigns,  upperBounds,  toLowerBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  typeVarAssigns,  upperBounds,  toLowerBounds))  {	  if(!isAssignable(bound,    toBound,    upperBounds,    toLowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Type[],Type[])	65	None	replace
217	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[toLowerBounds.size()  ]);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[toLowerBounds.size()  ]);  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[toLowerBounds.size()  ]);	  Type[]    lowerBounds    =    toLowerBounds.getTypes();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
218	[BUG]  [BUGGY]  if(!isAssignable(bound,  wildcardType,  toWildcardType,  toLowerBounds,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,WildcardType,Type[],Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  wildcardType,  toWildcardType,  toLowerBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  wildcardType,  toWildcardType,  toLowerBounds,  typeVarAssigns))  {	  if(!isAssignable(bound,    toWildcardType,    toLowerBounds,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,WildcardType,Type[],Map<TypeVariable<?>,Type>)	47	None	replace
219	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  lowerBounds,  typeVarAssigns,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Map<TypeVariable<?>,Type>,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  lowerBounds,  typeVarAssigns,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  lowerBounds,  typeVarAssigns,  typeVarAssigns))  {	  if(!isAssignable(bound,    toBound,    upperBounds,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Map<TypeVariable<?>,Type>,Map<TypeVariable<?>,Type>)	58	None	replace
220	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  upperBounds,  typeVarAssigns,  wildcardType))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Map<TypeVariable<?>,Type>,WildcardType)  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  upperBounds,  typeVarAssigns,  wildcardType))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  upperBounds,  typeVarAssigns,  wildcardType))  {	  if(!isAssignable(bound,    toBound,    upperBounds,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Map<TypeVariable<?>,Type>,WildcardType)	58	None	replace
221	[BUG]  [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  upperBounds,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  upperBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(bound,  toWildcardType,  upperBounds,  typeVarAssigns))  {	  if    (!isAssignable(bound,    toLowerBounds,    upperBounds,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Map<TypeVariable<?>,Type>)	52	None	replace
222	[BUG]  [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  lowerBounds,  upperBounds,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Type[],Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  lowerBounds,  upperBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(bound,  toWildcardType,  lowerBounds,  upperBounds,  typeVarAssigns))  {	  if    (!isAssignable(bound,    toLowerBounds,    upperBounds,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Type[],Map<TypeVariable<?>,Type>)	52	None	replace
223	[BUG]  [BUGGY]  Type[]  upperBounds  =  bound.toArray(new  Type[size()  ]);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  upperBounds  =  bound.toArray(new  Type[size()  ]);  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  upperBounds  =  bound.toArray(new  Type[size()  ]);	  Type[]    upperBounds    =    toUpperBounds.toArray(new    Type[size()    ]);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
224	[BUG]  [BUGGY]  Type[]  toLowerBounds  =  toBound.getLowerBounds();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  toLowerBounds  =  toBound.getLowerBounds();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  toLowerBounds  =  toBound.getLowerBounds();	  Type[]    toLowerBounds    =    bound.getLowerBounds();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
225	[BUG]  [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  lowerBounds,  typeVarAssigns,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Map<TypeVariable<?>,Type>,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  lowerBounds,  typeVarAssigns,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(bound,  toWildcardType,  lowerBounds,  typeVarAssigns,  typeVarAssigns))  {	  if    (!isAssignable(bound,    toLowerBounds,    lowerBounds,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Type[],Map<TypeVariable<?>,Type>,Map<TypeVariable<?>,Type>)	53	None	replace
226	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  lowBounds,  typeVarAssigns,  upperBounds))  {  [CE]  cannot  find  symbol  lowBounds  [FE]            AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  lowBounds,  typeVarAssigns,  upperBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  lowBounds,  typeVarAssigns,  upperBounds))  {	  if(!isAssignable(bound,    toBound,    typeVarAssigns,    upperBounds))    {    	non-compiled	[CE]  cannot  find  symbol  lowBounds	71	None	replace
227	[BUG]  [BUGGY]  Type[]  lowerBounds  =  binding.keySet();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  binding.keySet();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  binding.keySet();	  Type[]    lowerBounds    =    bound.keySet();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
228	[BUG]  [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  typeVarAssigns))  {  if  (!isAssignedable(bound,  toWildcardType,  typeVarAssigns))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  typeVarAssigns))  {  if  (!isAssignedable(bound,  toWildcardType,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if    (!isAssignable(bound,    toWildcardType,    typeVarAssigns))    {    if  (!isAssignedable(bound,  toWildcardType,  typeVarAssigns))  {	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
229	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  lowerBounds,  typeVarAssigns,  wildcardType))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Map<TypeVariable<?>,Type>,WildcardType)  [FE]            AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  lowerBounds,  typeVarAssigns,  wildcardType))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  lowerBounds,  typeVarAssigns,  wildcardType))  {	  if(!isAssignable(bound,    toBound,    lowerBounds,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Map<TypeVariable<?>,Type>,WildcardType)	78	None	replace
230	[BUG]  [BUGGY]  Type[]  upperBounds  =  binding.getTypes();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  upperBounds  =  binding.getTypes();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  upperBounds  =  binding.getTypes();	  Type[]    upperBounds    =    bound.getTypes();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
231	[BUG]  [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  typeVarAssigns,  wildcardType))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>,WildcardType)  [FE]            AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  typeVarAssigns,  wildcardType))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(bound,  toWildcardType,  typeVarAssigns,  wildcardType))  {	  if    (!isAssignable(bound,    toWildcardType,    typeVarAssigns,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>,WildcardType)	72	None	replace
232	[BUG]  [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  typeVarAssigns,  wildcardType,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>,WildcardType,Map<TypeVariable<?>,Type>)  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  typeVarAssigns,  wildcardType,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(bound,  toWildcardType,  typeVarAssigns,  wildcardType,  typeVarAssigns))  {	  if    (!isAssignable(bound,    toWildcardType,    typeVarAssigns,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,Map<TypeVariable<?>,Type>,WildcardType,Map<TypeVariable<?>,Type>)	72	None	replace
233	[BUG]  [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  wildcardType,  typeVarAssigns,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,WildcardType,Map<TypeVariable<?>,Type>,Map<TypeVariable<?>,Type>)  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(bound,  toWildcardType,  wildcardType,  typeVarAssigns,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(bound,  toWildcardType,  wildcardType,  typeVarAssigns,  typeVarAssigns))  {	  if    (!isAssignable(bound,    toWildcardType,    typeVarAssigns,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,WildcardType,WildcardType,Map<TypeVariable<?>,Type>,Map<TypeVariable<?>,Type>)	72	None	replace
234	[BUG]  [BUGGY]  Type[]  lowerBounds  =  bound.getClass().getLeastSupertypeVarAssigns();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  bound.getClass().getLeastSupertypeVarAssigns();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  bound.getClass().getLeastSupertypeVarAssigns();	  Type[]    lowerBounds    =    bound.getAllBounds();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
235	[BUG]  [BUGGY]  Type[]  lowerBounds  =  binding.getRawTypes();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  binding.getRawTypes();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  binding.getRawTypes();	  Type[]    lowerBounds    =    bound.getRawTypes();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
236	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  upperBounds,  typeVarAssigns,  lowerBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Map<TypeVariable<?>,Type>,Type[])  [FE]            AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  upperBounds,  typeVarAssigns,  lowerBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  upperBounds,  typeVarAssigns,  lowerBounds))  {	  if(!isAssignable(bound,    toBound,    typeVarAssigns,    lowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Map<TypeVariable<?>,Type>,Type[])	57	None	replace
237	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  upperBounds,  typeVarAssigns,  toLowerBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Map<TypeVariable<?>,Type>,Type[])  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  upperBounds,  typeVarAssigns,  toLowerBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  upperBounds,  typeVarAssigns,  toLowerBounds))  {	  if(!isAssignable(bound,    toBound,    typeVarAssigns,    toLowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Map<TypeVariable<?>,Type>,Type[])	67	None	replace
238	[BUG]  [BUGGY]  Type[]  lowerBounds  =  binding.getRangeBounds();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  binding.getRangeBounds();  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  binding.getRangeBounds();	  Type[]    lowerBounds    =    toWildcardType.getRangeBounds();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
239	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  lowBounds))  {  [CE]  cannot  find  symbol  lowBounds  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  lowBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  lowBounds))  {	  if(!isAssignable(toBound,    bound,    lowerBounds))    {    	non-compiled	[CE]  cannot  find  symbol  lowBounds	28	None	replace
240	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  typeVarAssigns,  toUpperBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Type[])  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  typeVarAssigns,  toUpperBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  typeVarAssigns,  toUpperBounds))  {	  if(!isAssignable(bound,    toBound,    toUpperBounds,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Type[])	48	None	replace
241	[BUG]  [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[size()  ]);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[size()  ]);  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  toLowerBounds.toArray(new  Type[size()  ]);	  Type[]    toLowerBounds    =    toUpperBounds.toArray(new    Type[size()    ]);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
242	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  typeVarAssigns,  toLowerBounds,  lowerBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Type[],Type[])  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  typeVarAssigns,  toLowerBounds,  lowerBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  typeVarAssigns,  toLowerBounds,  lowerBounds))  {	  if(!isAssignable(bound,    toBound,    toLowerBounds,    lowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Type[],Type[])	27	None	replace
243	[BUG]  [BUGGY]  if(!isAssignable(bound,  type,  toLowerBounds,  toLowerBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[])  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  type,  toLowerBounds,  toLowerBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  type,  toLowerBounds,  toLowerBounds))  {	  if(!isAssignable(bound,    toBound,    toLowerBounds,    upperBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[])	18	None	replace
244	[BUG]  [BUGGY]  if  (!isAssignable(bound,  toLowerBounds,  wildcardType,  toWildcardType,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type[],WildcardType,WildcardType,Map<TypeVariable<?>,Type>)  [FE]            AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(bound,  toLowerBounds,  wildcardType,  toWildcardType,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(bound,  toLowerBounds,  wildcardType,  toWildcardType,  typeVarAssigns))  {	  if    (!isAssignable(bound,    toLowerBounds,    toWildcardType,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type[],WildcardType,WildcardType,Map<TypeVariable<?>,Type>)	32	None	replace
245	[BUG]  [BUGGY]  Type[]  lowerBounds  =  new  Type[getLowerBounds()  ];  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  new  Type[getLowerBounds()  ];  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  new  Type[getLowerBounds()  ];	  Type[]    lowerBounds    =    getUpperBounds();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
246	[BUG]  [BUGGY]  Type[]  upperBounds  =  toUpperBounds.keySet().iterator().next();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  upperBounds  =  toUpperBounds.keySet().iterator().next();  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  upperBounds  =  toUpperBounds.keySet().iterator().next();	  Type[]    lowerBounds    =    toUpperBounds.keySet().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
247	[BUG]  [BUGGY]  if  (!isAssignable(bound,  toLowerBounds,  lowerBounds,  typeVarAssigns,  wildcardType))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Type[],Map<TypeVariable<?>,Type>,WildcardType)  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if  (!isAssignable(bound,  toLowerBounds,  lowerBounds,  typeVarAssigns,  wildcardType))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if  (!isAssignable(bound,  toLowerBounds,  lowerBounds,  typeVarAssigns,  wildcardType))  {	  if    (!isAssignable(bound,    toLowerBounds,    typeVarAssigns,    wildcardType))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type[],Type[],Map<TypeVariable<?>,Type>,WildcardType)	73	None	replace
248	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  typeVarAssigns,  upperBounds,  lowerBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Type[],Type[])  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  typeVarAssigns,  upperBounds,  lowerBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  typeVarAssigns,  upperBounds,  lowerBounds))  {	  if(!isAssignable(bound,    toBound,    upperBounds,    lowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Map<TypeVariable<?>,Type>,Type[],Type[])	59	None	replace
249	[BUG]  [BUGGY]  Type[]  lowerBounds  =  bound.toUpperBounds();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  bound.toUpperBounds();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  bound.toUpperBounds();	  Type[]    lowerBounds    =    bound.values();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
250	[BUG]  [BUGGY]  Type[]  lowerBounds  =  binding.getBaseTypes();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  binding.getBaseTypes();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  binding.getBaseTypes();	  Type[]    lowerBounds    =    bound.getBaseTypes();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
251	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  upperBounds,  toLowerBounds,  typeVarAssigns))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[],Map<TypeVariable<?>,Type>)  [FE]                    AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  upperBounds,  toLowerBounds,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  upperBounds,  toLowerBounds,  typeVarAssigns))  {	  if(!isAssignable(bound,    toBound,    toLowerBounds,    typeVarAssigns))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[],Type[],Map<TypeVariable<?>,Type>)	6	None	replace
252	[BUG]  [BUGGY]  Type[]  lowerBounds  =  binding.getLowerBounds();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  binding.getLowerBounds();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  binding.getLowerBounds();	  Type[]    lowerBounds    =    bound.getUpperBounds();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
253	[BUG]  [BUGGY]  Type[]  upperBounds  =  toUpperBounds.getAllBounds(bound);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  upperBounds  =  toUpperBounds.getAllBounds(bound);  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  upperBounds  =  toUpperBounds.getAllBounds(bound);	  Type[]    upperBounds    =    toUpperBounds.getAllBounds();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
254	[BUG]  [BUGGY]  Type[]  lowerBounds  =  binding.getTypes();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  Type[]  lowerBounds  =  binding.getTypes();  [BUGGY]      if  (!isAssignable(bound,  toBound,  typeVarAssigns))  {  return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	Type[]  lowerBounds  =  binding.getTypes();	  Type[]    lowerBounds    =    bound.getTypes();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
255	[BUG]  [BUGGY]  if(!isAssignable(bound,  toBound,  toUpperBounds))  {  [CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[])  [FE]                  AssertionError      [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  toBound,  toUpperBounds))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  toBound,  toUpperBounds))  {	  if(!isAssignable(toBound,    toBound,    toLowerBounds))    {    	non-compiled	[CE]  no  suitable  method  found  for  isAssignable(Type,Type,Type[])	5	None	replace
256	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  wildcardType,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	add	if(!isAssignable(bound,  wildcardType,  typeVarAssigns))  {	  if    (!isAssignable(bound,    toWildcardType,    typeVarAssigns))    {    	compilable	  [FE]  AssertionError  	34	2	replace
257	[BUG]  [BUGGY]  if(!isAssignable(bound,  wildcardType,  typeVarAssigns))  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      for  (Type  toBound  :  toUpperBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);    for  (Type  bound  :  upperBounds)  {      [BUGGY]  if(!isAssignable(bound,  wildcardType,  typeVarAssigns))  {  [BUGGY]      return  false;  }  }  }  for  (Type  toBound  :  toLowerBounds)  {    toBound  =  substituteTypeVariables(toBound,  typeVarAssigns);  [CLASS]  TypeUtils  [METHOD]  isAssignable  [RETURN_TYPE]  boolean  Type  type  WildcardType  toWildcardType  Type>  typeVarAssigns  [VARIABLES]  Type  bound  toBound  type  WildcardType  toWildcardType  wildcardType  boolean  Type[]  lowerBounds  toLowerBounds  toUpperBounds  upperBounds  Map  typeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	370	370	2	replace	if(!isAssignable(bound,  wildcardType,  typeVarAssigns))  {	  if    (!isAssignable(bound,    toWildcardType,    typeVarAssigns))    {    	compilable	  [FE]  AssertionError  	34	2	replace
