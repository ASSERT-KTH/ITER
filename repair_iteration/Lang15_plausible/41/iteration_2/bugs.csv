bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Type[]  subtypeVarAssigns  =  cls.getSuperclasses();  [CE]  variable  subtypeVarAssigns  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]                AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  Type[]  subtypeVarAssigns  =  cls.getSuperclasses();  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	Type[]  subtypeVarAssigns  =  cls.getSuperclasses();	      Type[]    subtypeVarAssigns    =    toClass.getSuperclasses();    	non-compiled	[CE]  variable  subtypeVarAssigns  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	12	None	replace
2	[BUG]  [BUGGY]      return  new  HashMap  <  TypeVariable  <?>,  Type>();  [CE]  unreachable  statement  [FE]    IllegalStateException    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]      return  new  HashMap  <  TypeVariable  <?>,  Type>();  [BUGGY]    }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	        return  new  HashMap  <  TypeVariable  <?>,  Type>();	  	non-compiled	[CE]  unreachable  statement	6	None	add
3	[BUG]  [BUGGY]      if(cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [CE]  illegal  start  of  expression  [FE]      IllegalStateException    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]      if(cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]    }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	        if(cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
4	[BUG]  [BUGGY]      if(cls.getTypeParameters().length  ==  0)  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [CE]  illegal  start  of  expression  [FE]        IllegalStateException    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]      if(cls.getTypeParameters().length  ==  0)  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]    }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	        if(cls.getTypeParameters().length  ==  0)  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
5	[BUG]  [BUGGY]  Type  cls  =  typeVarAssigns.getTypeParameters();  [CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  Type  cls  =  typeVarAssigns.getTypeParameters();  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	Type  cls  =  typeVarAssigns.getTypeParameters();	      Type    cls    =    toClass.getTypeParameters();    	non-compiled	[CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	15	None	replace
6	[BUG]  [BUGGY]  Type  cls  =  toClass.getDeclaredTypeParameters();  [CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  Type  cls  =  toClass.getDeclaredTypeParameters();  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	Type  cls  =  toClass.getDeclaredTypeParameters();	      Type    cls    =    toClass.getTypeParameters();    	non-compiled	[CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	15	None	replace
7	[BUG]  [BUGGY]  Type  cls  =  toClass.getTypeVariables();  [CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  Type  cls  =  toClass.getTypeVariables();  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	Type  cls  =  toClass.getTypeVariables();	      Type    cls    =    toClass.getTypeParameters();    	non-compiled	[CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	15	None	replace
8	[BUG]  [BUGGY]  Type[]  subtypeVarAssigns  =  cls.getSubtypeParameters();  [CE]  variable  subtypeVarAssigns  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  Type[]  subtypeVarAssigns  =  cls.getSubtypeParameters();  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	Type[]  subtypeVarAssigns  =  cls.getSubtypeParameters();	      Type[]    subtypeVarAssigns    =    toClass.getSubtypeParameters();    	non-compiled	[CE]  variable  subtypeVarAssigns  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	9	None	replace
9	[BUG]  [BUGGY]  Type[]  subtypeVarAssigns  =  typeVarAssigns.getSubtypeParameters();  [CE]  variable  subtypeVarAssigns  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  Type[]  subtypeVarAssigns  =  typeVarAssigns.getSubtypeParameters();  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	Type[]  subtypeVarAssigns  =  typeVarAssigns.getSubtypeParameters();	      Type[]    subtypeVarAssigns    =    toClass.getSubtypeParameters();    	non-compiled	[CE]  variable  subtypeVarAssigns  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	9	None	replace
10	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToType(toClass,  toClass);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  cls  =  ClassUtils.primitiveToType(toClass,  toClass);  [BUGGY]    }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	cls  =  ClassUtils.primitiveToType(toClass,  toClass);	  cls    =    ClassUtils.primitiveToType(toClass);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
11	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToType(toClass,  typeVarAssigns);  [CE]  cannot  find  symbol  typeVarAssigns  [FE]          AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  cls  =  ClassUtils.primitiveToType(toClass,  typeVarAssigns);  [BUGGY]    }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	cls  =  ClassUtils.primitiveToType(toClass,  typeVarAssigns);	  cls    =    ClassUtils.primitiveToType(toClass);    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	21	None	replace
12	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToType(typeVarAssigns);  [CE]  cannot  find  symbol  typeVarAssigns  [FE]            AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  cls  =  ClassUtils.primitiveToType(typeVarAssigns);  [BUGGY]    }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	cls  =  ClassUtils.primitiveToType(typeVarAssigns);	  cls    =    ClassUtils.primitiveToType(toClass);    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	21	None	replace
13	[BUG]  [BUGGY]  if(cls.isPrimitive())  {  if(cls.getTypeParameters().length  >  0  ||  toClass.equals(typeVarAssigns))  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  if(cls.isPrimitive())  {  if(cls.getTypeParameters().length  >  0  ||  toClass.equals(typeVarAssigns))  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	if(cls.isPrimitive())  {  if(cls.getTypeParameters().length  >  0  ||  toClass.equals(typeVarAssigns))  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	      if(toClass.isPrimitive())    {    if(cls.getTypeParameters().length    >    0    ||    toClass.equals(cls))    {    return    typeVarAssigns;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
14	[BUG]  [BUGGY]  if(cls.isPrimitive())  {  if(toClass.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  if(cls.isPrimitive())  {  if(toClass.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	if(cls.isPrimitive())  {  if(toClass.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	      if(toClass.isPrimitive())    {    if(cls.getTypeParameters().length    >    0    ||    toClass.equals(cls))    {    return    typeVarAssigns;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
15	[BUG]  [BUGGY]  if(cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CE]  cannot  find  symbol  typeVarAssigns  [FE]              AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  if(cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	if(cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }	      if(toClass.isPrimitive())    {    if(cls.getTypeParameters().length    >    0    ||    toClass.equals(cls))    {    return    typeVarAssigns;    }    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	17	None	replace
16	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  if(cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	add	if(cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	      if(toClass.isPrimitive())    {    if(cls.getTypeParameters().length    >    0    ||    toClass.equals(cls))    {    return    typeVarAssigns;    }    	compilable	  [FE]  IllegalStateException  	17	2	replace
17	[BUG]  [BUGGY]  if(cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [FE]  IllegalStateException  [FE]                AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  if(cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	if(cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	      if(toClass.isPrimitive())    {    if(cls.getTypeParameters().length    >    0    ||    toClass.equals(cls))    {    return    typeVarAssigns;    }    	compilable	  [FE]  IllegalStateException  	17	2	replace
18	[BUG]  [BUGGY]  Class  <?>  cls  =  subtypeVarAssigns.getRawClass();  [CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  Class  <?>  cls  =  subtypeVarAssigns.getRawClass();  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	Class  <?>  cls  =  subtypeVarAssigns.getRawClass();	      Class    <?>    cls    =    toClass.getRawClass();    	non-compiled	[CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	11	None	replace
19	[BUG]  [BUGGY]  Class  <?>  cls  =  toClass.getTypeParameters();  [CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]                AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  Class  <?>  cls  =  toClass.getTypeParameters();  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	Class  <?>  cls  =  toClass.getTypeParameters();	      Class    <?>    cls    =    toClass.getRawClass();    	non-compiled	[CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	11	None	replace
20	[BUG]  [BUGGY]  Class  <?>  cls  =  toClass.getParameterTypes();  [CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]                  AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  Class  <?>  cls  =  toClass.getParameterTypes();  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	Class  <?>  cls  =  toClass.getParameterTypes();	      Class    <?>    cls    =    toClass.getRawClass();    	non-compiled	[CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	11	None	replace
21	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(toClass,  toClass,  cls);  [CE]  method  primitiveToWrapper  in  class  ClassUtils  cannot  be  applied  to  given  types;  [FE]            AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(toClass,  toClass,  cls);  [BUGGY]    }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	cls  =  ClassUtils.primitiveToWrapper(toClass,  toClass,  cls);	  cls    =    ClassUtils.primitiveToWrapper(toClass,    cls);    	non-compiled	[CE]  method  primitiveToWrapper  in  class  ClassUtils  cannot  be  applied  to  given  types;	4	None	replace
22	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(toClass,  subtypeVarAssigns,  cls);  [CE]  method  primitiveToWrapper  in  class  ClassUtils  cannot  be  applied  to  given  types;  [FE]              AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(toClass,  subtypeVarAssigns,  cls);  [BUGGY]    }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	cls  =  ClassUtils.primitiveToWrapper(toClass,  subtypeVarAssigns,  cls);	  cls    =    ClassUtils.primitiveToWrapper(toClass,    cls);    	non-compiled	[CE]  method  primitiveToWrapper  in  class  ClassUtils  cannot  be  applied  to  given  types;	4	None	replace
23	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(toClass,  typeVarAssigns,  cls);  [CE]  cannot  find  symbol  typeVarAssigns  [FE]                AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(toClass,  typeVarAssigns,  cls);  [BUGGY]    }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	cls  =  ClassUtils.primitiveToWrapper(toClass,  typeVarAssigns,  cls);	  cls    =    ClassUtils.primitiveToWrapper(toClass,    cls);    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	4	None	replace
24	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(typeVarAssigns,  toClass,  cls);  [CE]  cannot  find  symbol  typeVarAssigns  [FE]                  AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(typeVarAssigns,  toClass,  cls);  [BUGGY]    }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	cls  =  ClassUtils.primitiveToWrapper(typeVarAssigns,  toClass,  cls);	  cls    =    ClassUtils.primitiveToWrapper(toClass,    cls);    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	4	None	replace
25	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);  [BUGGY]    }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	add	cls    =    ClassUtils.primitiveToWrapper(toClass);    cls  =  ClassUtils.primitiveToWrapper(toClass);	  	compilable	  [FE]  AssertionError  	2	2	add
26	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(toClass);  cls  =  ClassUtils.primitiveToWrapper(toClass);  [BUGGY]    }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	cls    =    ClassUtils.primitiveToWrapper(toClass);    cls  =  ClassUtils.primitiveToWrapper(toClass);	  	compilable	  [FE]  AssertionError  	2	2	add
27	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(toClass);  Class  <?>  cls  =  ClassUtils.primitiveToWrapper(toClass);  [CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(toClass);  Class  <?>  cls  =  ClassUtils.primitiveToWrapper(toClass);  [BUGGY]    }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	cls    =    ClassUtils.primitiveToWrapper(toClass);    Class  <?>  cls  =  ClassUtils.primitiveToWrapper(toClass);	  	non-compiled	[CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	2	None	add
28	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(toClass);  typeVarAssigns  =  ClassUtils.primitiveToWrapper(toClass);  [CE]  cannot  find  symbol  typeVarAssigns  [FE]        AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(toClass);  typeVarAssigns  =  ClassUtils.primitiveToWrapper(toClass);  [BUGGY]    }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	cls    =    ClassUtils.primitiveToWrapper(toClass);    typeVarAssigns  =  ClassUtils.primitiveToWrapper(toClass);	  	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	2	None	add
29	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(toClass);  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);  [CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(toClass);  Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);  [BUGGY]    }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	cls    =    ClassUtils.primitiveToWrapper(toClass);    Class  <?>  toClass  =  ClassUtils.primitiveToWrapper(toClass);	  	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	2	None	add
30	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(toClass);  ClassUtils.primitiveToWrapper(toClass);  [BUGGY]    }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	add	cls    =    ClassUtils.primitiveToWrapper(toClass);    ClassUtils.primitiveToWrapper(toClass);	  	compilable	  [FE]  AssertionError  	2	2	add
31	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(toClass);  ClassUtils.primitiveToWrapper(toClass);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(toClass);  ClassUtils.primitiveToWrapper(toClass);  [BUGGY]    }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	cls    =    ClassUtils.primitiveToWrapper(toClass);    ClassUtils.primitiveToWrapper(toClass);	  	compilable	  [FE]  AssertionError  	2	2	add
32	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToClass(toClass,  typeVarAssigns);  [CE]  cannot  find  symbol  typeVarAssigns  [FE]        AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  cls  =  ClassUtils.primitiveToClass(toClass,  typeVarAssigns);  [BUGGY]    }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	cls  =  ClassUtils.primitiveToClass(toClass,  typeVarAssigns);	  cls    =    ClassUtils.primitiveToClass(toClass);    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	1	None	replace
33	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToClass(toClass,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  cls  =  ClassUtils.primitiveToClass(toClass,  subtypeVarAssigns);  [BUGGY]    }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	cls  =  ClassUtils.primitiveToClass(toClass,  subtypeVarAssigns);	  cls    =    ClassUtils.primitiveToClass(toClass);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
34	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToClass(typeVarAssigns);  [CE]  cannot  find  symbol  typeVarAssigns  [FE]            AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  cls  =  ClassUtils.primitiveToClass(typeVarAssigns);  [BUGGY]    }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	cls  =  ClassUtils.primitiveToClass(typeVarAssigns);	  cls    =    ClassUtils.primitiveToClass(toClass);    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	1	None	replace
35	[BUG]  [BUGGY]  if(cls.isPrimitive())  {  if(cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  if(cls.isPrimitive())  {  if(cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	if(cls.isPrimitive())  {  if(cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	      if(toClass.isPrimitive())    {    if(cls.getTypeParameters().length    >    0    ||    toClass.equals(cls))    {    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
36	[BUG]  [BUGGY]  if(cls.isPrimitive())  {  if(cls.getTypeParameters().length  >  0  ||  typeVarAssigns.equals(cls))  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  if(cls.isPrimitive())  {  if(cls.getTypeParameters().length  >  0  ||  typeVarAssigns.equals(cls))  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	if(cls.isPrimitive())  {  if(cls.getTypeParameters().length  >  0  ||  typeVarAssigns.equals(cls))  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	      if(toClass.isPrimitive())    {    if(cls.getTypeParameters().length    >    0    ||    toClass.equals(cls))    {    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
37	[BUG]  [BUGGY]  Class  <?>  cls  =  subtypeVarAssigns.getSuperclass();  [CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  Class  <?>  cls  =  subtypeVarAssigns.getSuperclass();  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	Class  <?>  cls  =  subtypeVarAssigns.getSuperclass();	      Class    <?>    cls    =    toClass.getSuperclass();    	non-compiled	[CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	10	None	replace
38	[BUG]  [BUGGY]  if(cls.isPrimitive())  {  if(cls.getTypeParameters().length  >  0  ||  toClass.equals(typeVarAssigns))  {  return  toClass;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  if(cls.isPrimitive())  {  if(cls.getTypeParameters().length  >  0  ||  toClass.equals(typeVarAssigns))  {  return  toClass;  }  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	if(cls.isPrimitive())  {  if(cls.getTypeParameters().length  >  0  ||  toClass.equals(typeVarAssigns))  {  return  toClass;  }	      if(toClass.isPrimitive())    {    if(cls.getTypeParameters().length    >    0    ||    toClass.equals(cls))    {    return    toClass;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
39	[BUG]  [BUGGY]  if(cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  toClass;  }  [CE]  incompatible  types  [FE]              AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  if(cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  toClass;  }  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	if(cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  toClass;  }	      if(toClass.isPrimitive())    {    if(cls.getTypeParameters().length    >    0    ||    toClass.equals(cls))    {    return    toClass;    }    	non-compiled	[CE]  incompatible  types	18	None	replace
40	[BUG]  [BUGGY]  if(cls.isPrimitive())  {  if(toClass.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  toClass;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  if(cls.isPrimitive())  {  if(toClass.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  toClass;  }  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	if(cls.isPrimitive())  {  if(toClass.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  toClass;  }	      if(toClass.isPrimitive())    {    if(cls.getTypeParameters().length    >    0    ||    toClass.equals(cls))    {    return    toClass;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
41	[BUG]  [BUGGY]  if(cls.isPrimitive())  {  if(cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  toClass;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  if(cls.isPrimitive())  {  if(cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  toClass;  }  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	if(cls.isPrimitive())  {  if(cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  toClass;  }	      if(toClass.isPrimitive())    {    if(cls.getTypeParameters().length    >    0    ||    toClass.equals(cls))    {    return    toClass;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
42	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(toClass,  toClass);  [CE]  method  primitiveToWrapper  in  class  ClassUtils  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(toClass,  toClass);  [BUGGY]    }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	cls  =  ClassUtils.primitiveToWrapper(toClass,  toClass);	  cls    =    ClassUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  method  primitiveToWrapper  in  class  ClassUtils  cannot  be  applied  to  given  types;	3	None	replace
43	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(toClass,  subtypeVarAssigns);  [CE]  method  primitiveToWrapper  in  class  ClassUtils  cannot  be  applied  to  given  types;  [FE]      AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(toClass,  subtypeVarAssigns);  [BUGGY]    }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	cls  =  ClassUtils.primitiveToWrapper(toClass,  subtypeVarAssigns);	  cls    =    ClassUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  method  primitiveToWrapper  in  class  ClassUtils  cannot  be  applied  to  given  types;	3	None	replace
44	[BUG]  [BUGGY]  if(cls.isPrimitive())  {  if(cls.getTypeParameters().length  >  0  ||  toClass.equals(typeVarAssigns))  {  return  subtypeVarAssigns;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  if(cls.isPrimitive())  {  if(cls.getTypeParameters().length  >  0  ||  toClass.equals(typeVarAssigns))  {  return  subtypeVarAssigns;  }  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	if(cls.isPrimitive())  {  if(cls.getTypeParameters().length  >  0  ||  toClass.equals(typeVarAssigns))  {  return  subtypeVarAssigns;  }	      if(toClass.isPrimitive())    {    if(cls.getTypeParameters().length    >    0    ||    toClass.equals(cls))    {    return    subtypeVarAssigns;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
45	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  if(cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  subtypeVarAssigns;  }  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	add	if(cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  subtypeVarAssigns;  }	      if(toClass.isPrimitive())    {    if(cls.getTypeParameters().length    >    0    ||    toClass.equals(cls))    {    return    subtypeVarAssigns;    }    	compilable	  [FE]  IllegalStateException  	19	2	replace
46	[BUG]  [BUGGY]  if(cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  subtypeVarAssigns;  }  [FE]  IllegalStateException  [FE]                AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  if(cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  subtypeVarAssigns;  }  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	if(cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  subtypeVarAssigns;  }	      if(toClass.isPrimitive())    {    if(cls.getTypeParameters().length    >    0    ||    toClass.equals(cls))    {    return    subtypeVarAssigns;    }    	compilable	  [FE]  IllegalStateException  	19	2	replace
47	[BUG]  [BUGGY]  if(cls.isPrimitive())  {  if(cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  subtypeVarAssigns;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  if(cls.isPrimitive())  {  if(cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  subtypeVarAssigns;  }  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	if(cls.isPrimitive())  {  if(cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  subtypeVarAssigns;  }	      if(toClass.isPrimitive())    {    if(cls.getTypeParameters().length    >    0    ||    toClass.equals(cls))    {    return    subtypeVarAssigns;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
48	[BUG]  [BUGGY]  if(cls.isPrimitive())  {  if(cls.getTypeParameters().length  >  0  ||  toClass.equals(subtypeVarAssigns))  {  return  subtypeVarAssigns;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  if(cls.isPrimitive())  {  if(cls.getTypeParameters().length  >  0  ||  toClass.equals(subtypeVarAssigns))  {  return  subtypeVarAssigns;  }  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	if(cls.isPrimitive())  {  if(cls.getTypeParameters().length  >  0  ||  toClass.equals(subtypeVarAssigns))  {  return  subtypeVarAssigns;  }	      if(toClass.isPrimitive())    {    if(cls.getTypeParameters().length    >    0    ||    toClass.equals(cls))    {    return    subtypeVarAssigns;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
49	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToClass(toClass,  toClass,  typeVarAssigns);  [CE]  cannot  find  symbol  typeVarAssigns  [FE]              AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  cls  =  ClassUtils.primitiveToClass(toClass,  toClass,  typeVarAssigns);  [BUGGY]    }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	cls  =  ClassUtils.primitiveToClass(toClass,  toClass,  typeVarAssigns);	  cls    =    ClassUtils.primitiveToClass(toClass,    toClass);    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	5	None	replace
50	[BUG]  [BUGGY]  Type[]  subtypeVarAssigns  =  cls.getTypeParameters();  [CE]  variable  subtypeVarAssigns  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  Type[]  subtypeVarAssigns  =  cls.getTypeParameters();  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	Type[]  subtypeVarAssigns  =  cls.getTypeParameters();	      Type[]    subtypeVarAssigns    =    toClass.getTypeParameters();    	non-compiled	[CE]  variable  subtypeVarAssigns  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	14	None	replace
51	[BUG]  [BUGGY]  Type[]  subtypeVarAssigns  =  typeVarAssigns.getTypeParameters();  [CE]  variable  subtypeVarAssigns  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  Type[]  subtypeVarAssigns  =  typeVarAssigns.getTypeParameters();  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	Type[]  subtypeVarAssigns  =  typeVarAssigns.getTypeParameters();	      Type[]    subtypeVarAssigns    =    toClass.getTypeParameters();    	non-compiled	[CE]  variable  subtypeVarAssigns  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	14	None	replace
52	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToTypeVariable(toClass,  toClass);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  cls  =  ClassUtils.primitiveToTypeVariable(toClass,  toClass);  [BUGGY]    }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	cls  =  ClassUtils.primitiveToTypeVariable(toClass,  toClass);	  cls    =    ClassUtils.primitiveToTypeVariable(toClass);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
53	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToTypeVariable(toClass,  typeVarAssigns);  [CE]  cannot  find  symbol  typeVarAssigns  [FE]          AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  cls  =  ClassUtils.primitiveToTypeVariable(toClass,  typeVarAssigns);  [BUGGY]    }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	cls  =  ClassUtils.primitiveToTypeVariable(toClass,  typeVarAssigns);	  cls    =    ClassUtils.primitiveToTypeVariable(toClass);    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	13	None	replace
54	[BUG]  [BUGGY]  cls  =  toClass.primitiveToTypeVariable(ClassUtils.primitiveToTypeVariable(cls);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  cls  =  toClass.primitiveToTypeVariable(ClassUtils.primitiveToTypeVariable(cls);  [BUGGY]    }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	cls  =  toClass.primitiveToTypeVariable(ClassUtils.primitiveToTypeVariable(cls);	  cls    =    ClassUtils.primitiveToTypeVariable(toClass);    	non-compiled	[CE]  ')'  expected	13	None	replace
55	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToTypeVariable(toClass,  subtypeVarAssigns);  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  cls  =  ClassUtils.primitiveToTypeVariable(toClass,  subtypeVarAssigns);  [BUGGY]    }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	cls  =  ClassUtils.primitiveToTypeVariable(toClass,  subtypeVarAssigns);	  cls    =    ClassUtils.primitiveToTypeVariable(toClass);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
56	[BUG]  [BUGGY]  Context.checkState(cls.getTypeParameters().length  ==  0  ||  toClass.equals(cls))  {  return  toClass;  }  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  Context.checkState(cls.getTypeParameters().length  ==  0  ||  toClass.equals(cls))  {  return  toClass;  }  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	Context.checkState(cls.getTypeParameters().length  ==  0  ||  toClass.equals(cls))  {  return  toClass;  }	      if(toClass.isPrimitive())    {    if(cls.getTypeParameters().length    ==    0    ||    toClass.equals(cls))    {    return    toClass;    }    	non-compiled	[CE]  ';'  expected	20	None	replace
57	[BUG]  [BUGGY]  Type[]  subtypeVarAssigns  =  cls.getParameterTypes();  [CE]  variable  subtypeVarAssigns  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  Type[]  subtypeVarAssigns  =  cls.getParameterTypes();  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	Type[]  subtypeVarAssigns  =  cls.getParameterTypes();	      Type[]    subtypeVarAssigns    =    toClass.getParameterTypes();    	non-compiled	[CE]  variable  subtypeVarAssigns  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	8	None	replace
58	[BUG]  [BUGGY]  Type[]  subtypeVarAssigns  =  toClass.getTypeParameterTypes();  [CE]  variable  subtypeVarAssigns  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  Type[]  subtypeVarAssigns  =  toClass.getTypeParameterTypes();  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	Type[]  subtypeVarAssigns  =  toClass.getTypeParameterTypes();	      Type[]    subtypeVarAssigns    =    toClass.getParameterTypes();    	non-compiled	[CE]  variable  subtypeVarAssigns  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	8	None	replace
59	[BUG]  [BUGGY]  Type[]  subtypeVarAssigns  =  typeVarAssigns.getParameterTypes();  [CE]  variable  subtypeVarAssigns  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  Type[]  subtypeVarAssigns  =  typeVarAssigns.getParameterTypes();  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	Type[]  subtypeVarAssigns  =  typeVarAssigns.getParameterTypes();	      Type[]    subtypeVarAssigns    =    toClass.getParameterTypes();    	non-compiled	[CE]  variable  subtypeVarAssigns  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	8	None	replace
60	[BUG]  [BUGGY]  Class  <?>  cls  =  typeVarAssigns.getRawClass();  [CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  Class  <?>  cls  =  typeVarAssigns.getRawClass();  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	Class  <?>  cls  =  typeVarAssigns.getRawClass();	      Class    <?>    cls    =    toClass.getRawClass();    	non-compiled	[CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	11	None	replace
61	[BUG]  [BUGGY]  if(cls.isPrimitive())  {  if(toClass.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  if(cls.isPrimitive())  {  if(toClass.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	if(cls.isPrimitive())  {  if(toClass.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }	      if(toClass.isPrimitive())    {    if(cls.getTypeParameters().length    >    0    ||    toClass.equals(cls))    {    return    typeVarAssigns;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
62	[BUG]  [BUGGY]  if(cls.isPrimitive())  {  if(toClass.getTypeParameters().length  >  0  ||  subtypeVarAssigns.equals(cls))  {  return  typeVarAssigns;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  if(cls.isPrimitive())  {  if(toClass.getTypeParameters().length  >  0  ||  subtypeVarAssigns.equals(cls))  {  return  typeVarAssigns;  }  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	if(cls.isPrimitive())  {  if(toClass.getTypeParameters().length  >  0  ||  subtypeVarAssigns.equals(cls))  {  return  typeVarAssigns;  }	      if(toClass.isPrimitive())    {    if(cls.getTypeParameters().length    >    0    ||    toClass.equals(cls))    {    return    typeVarAssigns;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
63	[BUG]  [BUGGY]  if(cls.isPrimitive())  {  if(toClass.getTypeParameters().length  >  0  ||  toClass.equals(typeVarAssigns))  {  return  typeVarAssigns;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  if(cls.isPrimitive())  {  if(toClass.getTypeParameters().length  >  0  ||  toClass.equals(typeVarAssigns))  {  return  typeVarAssigns;  }  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	if(cls.isPrimitive())  {  if(toClass.getTypeParameters().length  >  0  ||  toClass.equals(typeVarAssigns))  {  return  typeVarAssigns;  }	      if(toClass.isPrimitive())    {    if(cls.getTypeParameters().length    >    0    ||    toClass.equals(cls))    {    return    typeVarAssigns;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
64	[BUG]  [BUGGY]  if(typeVarAssigns  ==  null)  {  if(toClass.isPrimitive())  {  if(cls.getTypeParameters().length  ==  0  ||  toClass.equals(cls))  {  return  toClass;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  if(typeVarAssigns  ==  null)  {  if(toClass.isPrimitive())  {  if(cls.getTypeParameters().length  ==  0  ||  toClass.equals(cls))  {  return  toClass;  }  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	if(typeVarAssigns  ==  null)  {  if(toClass.isPrimitive())  {  if(cls.getTypeParameters().length  ==  0  ||  toClass.equals(cls))  {  return  toClass;  }	      if(toClass.isPrimitive())    {    if(cls.getTypeParameters().length    ==    0    ||    toClass.equals(cls))    {    return    toClass;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
65	[BUG]  [BUGGY]  if(typeVarAssigns  ==  null)  {  if(toClass.isPrimitive())  {  if(cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  toClass;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  if(typeVarAssigns  ==  null)  {  if(toClass.isPrimitive())  {  if(cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  toClass;  }  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	if(typeVarAssigns  ==  null)  {  if(toClass.isPrimitive())  {  if(cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  toClass;  }	      if(toClass.isPrimitive())    {    if(cls.getTypeParameters().length    >    0    ||    toClass.equals(cls))    {    return    toClass;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
66	[BUG]  [BUGGY]  if(toClass.isPrimitive())  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [CE]  illegal  start  of  expression  [FE]    IllegalStateException    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  if(toClass.isPrimitive())  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]    }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	if(toClass.isPrimitive())  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
67	[BUG]  [BUGGY]  if(typeVarAssigns  ==  null)  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [CE]  illegal  start  of  expression  [FE]      IllegalStateException    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  if(typeVarAssigns  ==  null)  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]    }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	if(typeVarAssigns  ==  null)  {  if(toClass.isPrimitive())  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
68	[BUG]  [BUGGY]  if(cls.isPrimitive())  {  if(toClass.getTypeParameters().length  >  0  ||  typeVarAssigns.equals(cls))  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  if(cls.isPrimitive())  {  if(toClass.getTypeParameters().length  >  0  ||  typeVarAssigns.equals(cls))  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	if(cls.isPrimitive())  {  if(toClass.getTypeParameters().length  >  0  ||  typeVarAssigns.equals(cls))  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	      if(toClass.isPrimitive())    {    if(cls.getTypeParameters().length    >    0    ||    toClass.equals(cls))    {    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
69	[BUG]  [BUGGY]  if(cls.isPrimitive())  {  if(toClass.getTypeParameters().length  >  0  ||  toClass.equals(typeVarAssigns))  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  if(cls.isPrimitive())  {  if(toClass.getTypeParameters().length  >  0  ||  toClass.equals(typeVarAssigns))  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	if(cls.isPrimitive())  {  if(toClass.getTypeParameters().length  >  0  ||  toClass.equals(typeVarAssigns))  {  return  new  HashMap  <  TypeVariable  <?>,  Type>();  }	      if(toClass.isPrimitive())    {    if(cls.getTypeParameters().length    >    0    ||    toClass.equals(cls))    {    return    new    HashMap    <    TypeVariable    <?>,    Type>();    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
70	[BUG]  [BUGGY]  Type[]  subtypeVarAssigns  =  toClass.getSubtypeVariables();  [CE]  variable  subtypeVarAssigns  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  Type[]  subtypeVarAssigns  =  toClass.getSubtypeVariables();  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	Type[]  subtypeVarAssigns  =  toClass.getSubtypeVariables();	      Type[]    subtypeVarAssigns    =    toClass.getTypeParameters();    	non-compiled	[CE]  variable  subtypeVarAssigns  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	14	None	replace
71	[BUG]  [BUGGY]  Type[]  subtypeVarAssigns  =  toClass.getSubtypeVarAssigns();  [CE]  variable  subtypeVarAssigns  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  Type[]  subtypeVarAssigns  =  toClass.getSubtypeVarAssigns();  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	Type[]  subtypeVarAssigns  =  toClass.getSubtypeVarAssigns();	      Type[]    subtypeVarAssigns    =    toClass.getSubtypeParameters();    	non-compiled	[CE]  variable  subtypeVarAssigns  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	9	None	replace
72	[BUG]  [BUGGY]  Type  cls  =  toClass.getTypeArguments();  [CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  Type  cls  =  toClass.getTypeArguments();  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	Type  cls  =  toClass.getTypeArguments();	      Type    cls    =    toClass.getTypeParameters();    	non-compiled	[CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	15	None	replace
73	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(typeVarAssigns);  [CE]  cannot  find  symbol  typeVarAssigns  [FE]    AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(typeVarAssigns);  [BUGGY]    }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	cls  =  ClassUtils.primitiveToWrapper(typeVarAssigns);	  cls    =    ClassUtils.primitiveToWrapper(toClass);    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	3	None	replace
74	[BUG]  [BUGGY]  if(cls.isPrimitive())  {  if(toClass.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  subtypeVarAssigns;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  if(cls.isPrimitive())  {  if(toClass.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  subtypeVarAssigns;  }  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	if(cls.isPrimitive())  {  if(toClass.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  subtypeVarAssigns;  }	      if(toClass.isPrimitive())    {    if(cls.getTypeParameters().length    >    0    ||    toClass.equals(cls))    {    return    subtypeVarAssigns;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
75	[BUG]  [BUGGY]  if(cls.isPrimitive())  {  if(toClass.getTypeParameters().length  >  0  ||  subtypeVarAssigns.equals(cls))  {  return  subtypeVarAssigns;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  if(cls.isPrimitive())  {  if(toClass.getTypeParameters().length  >  0  ||  subtypeVarAssigns.equals(cls))  {  return  subtypeVarAssigns;  }  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	if(cls.isPrimitive())  {  if(toClass.getTypeParameters().length  >  0  ||  subtypeVarAssigns.equals(cls))  {  return  subtypeVarAssigns;  }	      if(toClass.isPrimitive())    {    if(cls.getTypeParameters().length    >    0    ||    toClass.equals(cls))    {    return    subtypeVarAssigns;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
76	[BUG]  [BUGGY]  if(cls.isPrimitive())  {  if(toClass.getTypeParameters().length  >  0  ||  toClass.equals(subtypeVarAssigns))  {  return  subtypeVarAssigns;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  if(cls.isPrimitive())  {  if(toClass.getTypeParameters().length  >  0  ||  toClass.equals(subtypeVarAssigns))  {  return  subtypeVarAssigns;  }  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	if(cls.isPrimitive())  {  if(toClass.getTypeParameters().length  >  0  ||  toClass.equals(subtypeVarAssigns))  {  return  subtypeVarAssigns;  }	      if(toClass.isPrimitive())    {    if(cls.getTypeParameters().length    >    0    ||    toClass.equals(cls))    {    return    subtypeVarAssigns;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
77	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToClass(typeVarAssigns,  toClass);  [CE]  cannot  find  symbol  typeVarAssigns  [FE]              AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  cls  =  ClassUtils.primitiveToClass(typeVarAssigns,  toClass);  [BUGGY]    }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	cls  =  ClassUtils.primitiveToClass(typeVarAssigns,  toClass);	  cls    =    ClassUtils.primitiveToClass(toClass,    toClass);    	non-compiled	[CE]  cannot  find  symbol  typeVarAssigns	5	None	replace
78	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(toClass);  Type  toClass  =  ClassUtils.primitiveToWrapper(toClass);  [CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]    AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(toClass);  Type  toClass  =  ClassUtils.primitiveToWrapper(toClass);  [BUGGY]    }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	cls    =    ClassUtils.primitiveToWrapper(toClass);    Type  toClass  =  ClassUtils.primitiveToWrapper(toClass);	  	non-compiled	[CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	2	None	add
79	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(toClass);  Type[]  cls  =  ClassUtils.primitiveToWrapper(toClass);  [CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]      AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(toClass);  Type[]  cls  =  ClassUtils.primitiveToWrapper(toClass);  [BUGGY]    }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	cls    =    ClassUtils.primitiveToWrapper(toClass);    Type[]  cls  =  ClassUtils.primitiveToWrapper(toClass);	  	non-compiled	[CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	2	None	add
80	[BUG]  [BUGGY]  Class  <?>  cls  =  typeVarAssigns.getSuperclass();  [CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  Class  <?>  cls  =  typeVarAssigns.getSuperclass();  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	Class  <?>  cls  =  typeVarAssigns.getSuperclass();	      Class    <?>    cls    =    toClass.getSuperclass();    	non-compiled	[CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	10	None	replace
81	[BUG]  [BUGGY]  Type[]  subtypeVarAssigns  =  toClass.getDeclaredTypeParameters();  [CE]  variable  subtypeVarAssigns  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]        AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  Type[]  subtypeVarAssigns  =  toClass.getDeclaredTypeParameters();  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	Type[]  subtypeVarAssigns  =  toClass.getDeclaredTypeParameters();	      Type[]    subtypeVarAssigns    =    toClass.getTypeParameters();    	non-compiled	[CE]  variable  subtypeVarAssigns  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	14	None	replace
82	[BUG]  [BUGGY]  if(subtypeVarAssigns.contains(cls))  {  if(toClass.isPrimitive())  {  return  subtypeVarAssigns;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  if(subtypeVarAssigns.contains(cls))  {  if(toClass.isPrimitive())  {  return  subtypeVarAssigns;  }  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	if(subtypeVarAssigns.contains(cls))  {  if(toClass.isPrimitive())  {  return  subtypeVarAssigns;  }	      if(toClass.isPrimitive())    {    if(cls.getTypeParameters().length    >    0    ||    toClass.equals(cls))    {    return    subtypeVarAssigns;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
83	[BUG]  [BUGGY]  if(cls.isPrimitive())  {  if(toClass.getTypeParameters().length  >  0  ||  toClass.equals(typeVarAssigns))  {  return  toClass;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  if(cls.isPrimitive())  {  if(toClass.getTypeParameters().length  >  0  ||  toClass.equals(typeVarAssigns))  {  return  toClass;  }  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	if(cls.isPrimitive())  {  if(toClass.getTypeParameters().length  >  0  ||  toClass.equals(typeVarAssigns))  {  return  toClass;  }	      if(toClass.isPrimitive())    {    if(cls.getTypeParameters().length    >    0    ||    toClass.equals(cls))    {    return    toClass;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
84	[BUG]  [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(toClass,  toClass,  subtypeVarAssigns);  [CE]  method  primitiveToWrapper  in  class  ClassUtils  cannot  be  applied  to  given  types;  [FE]            AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  cls  =  ClassUtils.primitiveToWrapper(toClass,  toClass,  subtypeVarAssigns);  [BUGGY]    }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	cls  =  ClassUtils.primitiveToWrapper(toClass,  toClass,  subtypeVarAssigns);	  cls    =    ClassUtils.primitiveToWrapper(toClass,    cls);    	non-compiled	[CE]  method  primitiveToWrapper  in  class  ClassUtils  cannot  be  applied  to  given  types;	4	None	replace
85	[BUG]  [BUGGY]  Class  <?>  cls  =  toClass.getName();  [CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]            AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  Class  <?>  cls  =  toClass.getName();  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	Class  <?>  cls  =  toClass.getName();	      Class    <?>    cls    =    toClass.getSuperclass();    	non-compiled	[CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	10	None	replace
86	[BUG]  [BUGGY]  Class  <?>  cls  =  toClass.getParameterType(0);  [CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  Class  <?>  cls  =  toClass.getParameterType(0);  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	Class  <?>  cls  =  toClass.getParameterType(0);	      Class    <?>    cls    =    toClass.getSuperclass();    	non-compiled	[CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	10	None	replace
87	[BUG]  [BUGGY]  if(cls.isPrimitive())  {  if(cls.getTypeParameters().length  >  0  ||  toClass.equals(typeVarAssigns))  {  return  typeVarAssigns;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  if(cls.isPrimitive())  {  if(cls.getTypeParameters().length  >  0  ||  toClass.equals(typeVarAssigns))  {  return  typeVarAssigns;  }  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	if(cls.isPrimitive())  {  if(cls.getTypeParameters().length  >  0  ||  toClass.equals(typeVarAssigns))  {  return  typeVarAssigns;  }	      if(toClass.isPrimitive())    {    if(cls.getTypeParameters().length    >    0    ||    toClass.equals(cls))    {    return    typeVarAssigns;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
88	[BUG]  [BUGGY]  Class  <?>  cls  =  toClass.getRawParameterType(0);  [CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]              AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  Class  <?>  cls  =  toClass.getRawParameterType(0);  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	Class  <?>  cls  =  toClass.getRawParameterType(0);	      Class    <?>    cls    =    toClass.getRawClass();    	non-compiled	[CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	11	None	replace
89	[BUG]  [BUGGY]  Class  <?>  cls  =  toClass.getType();  [CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]                AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  Class  <?>  cls  =  toClass.getType();  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	Class  <?>  cls  =  toClass.getType();	      Class    <?>    cls    =    toClass.getRawClass();    	non-compiled	[CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	11	None	replace
90	[BUG]  [BUGGY]  cls  =  toClass.primitiveToTypeVariable(ClassUtils.primitiveToTypeVariable(toClass);  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  cls  =  toClass.primitiveToTypeVariable(ClassUtils.primitiveToTypeVariable(toClass);  [BUGGY]    }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	cls  =  toClass.primitiveToTypeVariable(ClassUtils.primitiveToTypeVariable(toClass);	  cls    =    ClassUtils.primitiveToTypeVariable(toClass);    	non-compiled	[CE]  ')'  expected	13	None	replace
91	[BUG]  [BUGGY]  Type  cls  =  toClass.getType();  [CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]          AssertionError    [CONTEXT]      if  (cls.isPrimitive())  {  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }      [BUGGY]  Type  cls  =  toClass.getType();  [BUGGY]    cls  =  ClassUtils.primitiveToWrapper(cls);  }  HashMap<TypeVariable<?>,  Type>  typeVarAssigns  =  subtypeVarAssigns  ==  null  ?  new  HashMap<TypeVariable<?>,  Type>()  :  new  HashMap<TypeVariable<?>,  Type>(subtypeVarAssigns);  if  (cls.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  return  typeVarAssigns;  }  [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	667	667	2	replace	Type  cls  =  toClass.getType();	      Type    cls    =    toClass.getTypeParameters();    	non-compiled	[CE]  variable  cls  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	15	None	replace
