bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {    [BUGGY]  if  (toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if  (toClass.isPrimitive()  ||  toClass.isPrimitive())  {	if  (toClass.isPrimitive())  {  	compilable	  [FE]  AssertionError  	79	2	replace
2	[BUG]  [BUGGY]  if  (toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {    [BUGGY]  if  (toClass.isPrimitive()  ||  toClass.isPrimitive())  {  [BUGGY]    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if  (toClass.isPrimitive()  ||  toClass.isPrimitive())  {	if  (toClass.isPrimitive())  {  	compilable	  [FE]  AssertionError  	79	2	replace
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {    [BUGGY]  if  (cls.isPrimitive())  {  [BUGGY]    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if  (cls.isPrimitive())  {	if  (toClass.isPrimitive())  {  	compilable	  [FE]  AssertionError  	79	2	replace
4	[BUG]  [BUGGY]  if  (cls.isPrimitive())  {  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {    [BUGGY]  if  (cls.isPrimitive())  {  [BUGGY]    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if  (cls.isPrimitive())  {	if  (toClass.isPrimitive())  {  	compilable	  [FE]  AssertionError  	79	2	replace
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {    [BUGGY]  if(!toClass.isPrimitive())  {  [BUGGY]    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(!toClass.isPrimitive())  {	if  (toClass.isPrimitive())  {  	compilable	  [FE]  AssertionError  	79	2	replace
6	[BUG]  [BUGGY]  if(!toClass.isPrimitive())  {  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {    [BUGGY]  if(!toClass.isPrimitive())  {  [BUGGY]    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!toClass.isPrimitive())  {	if  (toClass.isPrimitive())  {  	compilable	  [FE]  AssertionError  	79	2	replace
7	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {    [BUGGY]    [BUGGY]    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	  	if  (toClass.isPrimitive())  {  	non-compiled	[CE]  illegal  start  of  type	79	None	replace
8	[BUG]  [BUGGY]    Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls);  [CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]    AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {    [BUGGY]    Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls);  [BUGGY]  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	    Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls);		non-compiled	[CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	80	None	add
9	[BUG]  [BUGGY]    Class  <?>  toClass  =  typeVarAssigns.get(cls);  [CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]      AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {    [BUGGY]    Class  <?>  toClass  =  typeVarAssigns.get(cls);  [BUGGY]  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	    Class  <?>  toClass  =  typeVarAssigns.get(cls);		non-compiled	[CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	80	None	add
10	[BUG]  [BUGGY]    Class  <?>  toClass  =  cls.getSuperclass();  [CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]        AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {    [BUGGY]    Class  <?>  toClass  =  cls.getSuperclass();  [BUGGY]  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	    Class  <?>  toClass  =  cls.getSuperclass();		non-compiled	[CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	80	None	add
11	[BUG]  [BUGGY]    Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.keySet();  [CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]          AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {    [BUGGY]    Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.keySet();  [BUGGY]  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	    Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.keySet();		non-compiled	[CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	80	None	add
12	[BUG]  [BUGGY]    Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getName());  [CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]            AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {    [BUGGY]    Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getName());  [BUGGY]  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	    Map  <  TypeVariable  <?>,  Type>  toClass  =  subtypeVarAssigns.get(cls.getName());		non-compiled	[CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	80	None	add
13	[BUG]  [BUGGY]    Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(cls);  [CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]    AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {    [BUGGY]    Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(cls);  [BUGGY]  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	    Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.get(cls);		non-compiled	[CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	80	None	add
14	[BUG]  [BUGGY]    Type  toClass  =  typeVarAssigns.get(cls);  [CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]      AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {    [BUGGY]    Type  toClass  =  typeVarAssigns.get(cls);  [BUGGY]  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	    Type  toClass  =  typeVarAssigns.get(cls);		non-compiled	[CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	80	None	add
15	[BUG]  [BUGGY]    Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.keySet();  [CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]        AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {    [BUGGY]    Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.keySet();  [BUGGY]  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	    Map  <  TypeVariable  <?>,  Type>  toClass  =  typeVarAssigns.keySet();		non-compiled	[CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	80	None	add
16	[BUG]  [BUGGY]    Class  <?>  toClass  =  cls.getRawClass();  [CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)  [FE]    AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {    [BUGGY]    Class  <?>  toClass  =  cls.getRawClass();  [BUGGY]  if  (toClass.isPrimitive())  {    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	    Class  <?>  toClass  =  cls.getRawClass();		non-compiled	[CE]  variable  toClass  is  already  defined  in  method  getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>,Type>)	80	None	add
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {    [BUGGY]  if(!isAssignable(cls,  toClass))  {  [BUGGY]    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(!isAssignable(cls,  toClass))  {	if  (toClass.isPrimitive())  {  	compilable	  [FE]  AssertionError  	79	2	replace
18	[BUG]  [BUGGY]  if(!isAssignable(cls,  toClass))  {  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {    [BUGGY]  if(!isAssignable(cls,  toClass))  {  [BUGGY]    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(!isAssignable(cls,  toClass))  {	if  (toClass.isPrimitive())  {  	compilable	  [FE]  AssertionError  	79	2	replace
19	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {    [BUGGY]  if(toClass.isArray())  {  [BUGGY]    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	add	if(toClass.isArray())  {	if  (toClass.isPrimitive())  {  	compilable	  [FE]  AssertionError  	79	2	replace
20	[BUG]  [BUGGY]  if(toClass.isArray())  {  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  Map<TypeVariable<?>,  Type>  subtypeVarAssigns)  {  if  (!isAssignable(cls,  toClass))  {  return  null;  }  if  (cls.isPrimitive())  {    [BUGGY]  if(toClass.isArray())  {  [BUGGY]    return  new  HashMap<TypeVariable<?>,  Type>();  }  cls  =  ClassUtils.primitiveToWrapper(cls);  }    [CLASS]  TypeUtils  [METHOD]  getTypeArguments  [RETURN_TYPE]  Map  Class<?>  cls  Class<?>  toClass  Type>  subtypeVarAssigns  [VARIABLES]  boolean  HashMap  typeVarAssigns  Class  cls  toClass  Map  subtypeVarAssigns  	projects/Lang15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java	0.7071067811865475	660	660	2	replace	if(toClass.isArray())  {	if  (toClass.isPrimitive())  {  	compilable	  [FE]  AssertionError  	79	2	replace
