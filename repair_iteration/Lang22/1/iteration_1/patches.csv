bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  throw  new  ArithmeticException( "Fraction  denominator  must  not  be  numeric. ",  numerator);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  throw  new  ArithmeticException( "Fraction  denominator  must  not  be  numeric. ",  numerator);  [BUGGY]    }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	throw  new  ArithmeticException( "Fraction  denominator  must  not  be  numeric. ",  numerator);	  throw    new    ArithmeticException(   "Fraction    denominator    must    not    be    numeric.   ");    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
2	[BUG]  [BUGGY]  throw  new  ArithmeticException( "Fraction  numeric  must  not  be  numeric. ");  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  throw  new  ArithmeticException( "Fraction  numeric  must  not  be  numeric. ");  [BUGGY]    }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	throw  new  ArithmeticException( "Fraction  numeric  must  not  be  numeric. ");	  throw    new    ArithmeticException(   "Fraction    denominator    must    not    be    numeric.   ");    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
3	[BUG]  [BUGGY]  throw  new  ArithmeticException( "Numerator  must  not  be  numeric.   "  +  denominator);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  throw  new  ArithmeticException( "Numerator  must  not  be  numeric.   "  +  denominator);  [BUGGY]    }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	throw  new  ArithmeticException( "Numerator  must  not  be  numeric.   "  +  denominator);	  throw    new    ArithmeticException(   "Numerator    must    not    be    numeric.   ");    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
4	[BUG]  [BUGGY]  throw  new  ArithmeticException( "Numeric  must  not  be  numeric. ");  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  throw  new  ArithmeticException( "Numeric  must  not  be  numeric. ");  [BUGGY]    }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	throw  new  ArithmeticException( "Numeric  must  not  be  numeric. ");	  throw    new    ArithmeticException(   "Numerator    must    not    be    numeric.   ");    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
5	[BUG]  [BUGGY]  throw  new  ArithmeticException( "The  numeric  must  not  be  numeric. ");  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  throw  new  ArithmeticException( "The  numeric  must  not  be  numeric. ");  [BUGGY]    }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	throw  new  ArithmeticException( "The  numeric  must  not  be  numeric. ");	  throw    new    ArithmeticException(   "The    denominator    must    not    be    numeric.   ");    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
6	[BUG]  [BUGGY]  Integer  denominator  =  getDenominator(denominator);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  Integer  denominator  =  getDenominator(denominator);  [BUGGY]    throw  new  ArithmeticException(   "The  denominator  must  not  be  zero   ");  }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	Integer  denominator  =  getDenominator(denominator);	      Integer    denominator    =    getDenominator(numerator);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
7	[BUG]  [BUGGY]  Integer  denominator  =  getDenominator(numerator,  denominator);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  Integer  denominator  =  getDenominator(numerator,  denominator);  [BUGGY]    throw  new  ArithmeticException(   "The  denominator  must  not  be  zero   ");  }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	Integer  denominator  =  getDenominator(numerator,  denominator);	      Integer    denominator    =    getDenominator(numerator);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
8	[BUG]  [BUGGY]  Integer  denominator  =  getDenominator(denominator,  denominator);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  Integer  denominator  =  getDenominator(denominator,  denominator);  [BUGGY]    throw  new  ArithmeticException(   "The  denominator  must  not  be  zero   ");  }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	Integer  denominator  =  getDenominator(denominator,  denominator);	      Integer    denominator    =    getDenominator(numerator);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
9	[BUG]  [BUGGY]  Integer  denominator  =  getDenominator(denominator,  numerator);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  Integer  denominator  =  getDenominator(denominator,  numerator);  [BUGGY]    throw  new  ArithmeticException(   "The  denominator  must  not  be  zero   ");  }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	Integer  denominator  =  getDenominator(denominator,  numerator);	      Integer    denominator    =    getDenominator(numerator);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
10	[BUG]  [BUGGY]  int  denominator  =  getDenominator(numerator,  denominator,  numerator);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  int  denominator  =  getDenominator(numerator,  denominator,  numerator);  [BUGGY]    throw  new  ArithmeticException(   "The  denominator  must  not  be  zero   ");  }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	int  denominator  =  getDenominator(numerator,  denominator,  numerator);	      int    denominator    =    getDenominator(numerator,    denominator);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
11	[BUG]  [BUGGY]  int  denominator  =  getDenominator(numerator,  denominator,  gcd);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  int  denominator  =  getDenominator(numerator,  denominator,  gcd);  [BUGGY]    throw  new  ArithmeticException(   "The  denominator  must  not  be  zero   ");  }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	int  denominator  =  getDenominator(numerator,  denominator,  gcd);	      int    denominator    =    getDenominator(numerator,    denominator);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
12	[BUG]  [BUGGY]  int  denominator  =  getDenominator(denominator,  numerator);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  int  denominator  =  getDenominator(denominator,  numerator);  [BUGGY]    throw  new  ArithmeticException(   "The  denominator  must  not  be  zero   ");  }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	int  denominator  =  getDenominator(denominator,  numerator);	      int    denominator    =    getDenominator(numerator,    denominator);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
13	[BUG]  [BUGGY]  int  denominator  =  getDenominator(numerator,  denominator,  hashCode);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  int  denominator  =  getDenominator(numerator,  denominator,  hashCode);  [BUGGY]    throw  new  ArithmeticException(   "The  denominator  must  not  be  zero   ");  }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	int  denominator  =  getDenominator(numerator,  denominator,  hashCode);	      int    denominator    =    getDenominator(numerator,    denominator);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
14	[BUG]  [BUGGY]  int  denominator  =  getDenominator(denominator);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  int  denominator  =  getDenominator(denominator);  [BUGGY]    throw  new  ArithmeticException(   "The  denominator  must  not  be  zero   ");  }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	int  denominator  =  getDenominator(denominator);	      int    denominator    =    getDenominator(numerator);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
15	[BUG]  [BUGGY]  int  denominator  =  getDenominator(denominator,  denominator);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  int  denominator  =  getDenominator(denominator,  denominator);  [BUGGY]    throw  new  ArithmeticException(   "The  denominator  must  not  be  zero   ");  }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	int  denominator  =  getDenominator(denominator,  denominator);	      int    denominator    =    getDenominator(numerator);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
16	[BUG]  [BUGGY]  throw  new  ArithmeticException( "The  numerator  must  not  be  numeric.   "  +  denominator);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  throw  new  ArithmeticException( "The  numerator  must  not  be  numeric.   "  +  denominator);  [BUGGY]    }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	throw  new  ArithmeticException( "The  numerator  must  not  be  numeric.   "  +  denominator);	  throw    new    ArithmeticException(   "The    numerator    must    not    be    numeric.   ");    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
17	[BUG]  [BUGGY]  throw  new  ArithmeticException( "The  numerator  must  not  be  numeric. ",  denominator);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  throw  new  ArithmeticException( "The  numerator  must  not  be  numeric. ",  denominator);  [BUGGY]    }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	throw  new  ArithmeticException( "The  numerator  must  not  be  numeric. ",  denominator);	  throw    new    ArithmeticException(   "The    numerator    must    not    be    numeric.   ");    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
18	[BUG]  [BUGGY]  return  new  Fraction(numerator,  denominator,  numerator);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  return  new  Fraction(numerator,  denominator,  numerator);  [BUGGY]    }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	return  new  Fraction(numerator,  denominator,  numerator);	  return    new    Fraction(numerator,    denominator);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
19	[BUG]  [BUGGY]  return  new  Fraction(numerator,  denominator,  gcd);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  return  new  Fraction(numerator,  denominator,  gcd);  [BUGGY]    }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	return  new  Fraction(numerator,  denominator,  gcd);	  return    new    Fraction(numerator,    denominator);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
20	[BUG]  [BUGGY]  return  new  Fraction(numerator,  denominator,  hashCode);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  return  new  Fraction(numerator,  denominator,  hashCode);  [BUGGY]    }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	return  new  Fraction(numerator,  denominator,  hashCode);	  return    new    Fraction(numerator,    denominator);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
21	[BUG]  [BUGGY]  return  new  Fraction(numerator,  denominator,  denominator);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  return  new  Fraction(numerator,  denominator,  denominator);  [BUGGY]    }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	return  new  Fraction(numerator,  denominator,  denominator);	  return    new    Fraction(numerator,    denominator);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
22	[BUG]  [BUGGY]  Numerator  whole  =  getGcd().getFraction(numerator,  denominator,  hashCode);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  Numerator  whole  =  getGcd().getFraction(numerator,  denominator,  hashCode);  [BUGGY]    throw  new  ArithmeticException(   "The  denominator  must  not  be  zero   ");  }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	Numerator  whole  =  getGcd().getFraction(numerator,  denominator,  hashCode);	      Numerator    whole    =    getGcd().getFraction(numerator,    denominator);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
23	[BUG]  [BUGGY]  Numerator  whole  =  getGcd().getFraction(numerator,  denominator,  numerator);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  Numerator  whole  =  getGcd().getFraction(numerator,  denominator,  numerator);  [BUGGY]    throw  new  ArithmeticException(   "The  denominator  must  not  be  zero   ");  }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	Numerator  whole  =  getGcd().getFraction(numerator,  denominator,  numerator);	      Numerator    whole    =    getGcd().getFraction(numerator,    denominator);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
24	[BUG]  [BUGGY]  Numerator  whole  =  getGcd().getFraction(numerator,  denominator,  gcd);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  Numerator  whole  =  getGcd().getFraction(numerator,  denominator,  gcd);  [BUGGY]    throw  new  ArithmeticException(   "The  denominator  must  not  be  zero   ");  }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	Numerator  whole  =  getGcd().getFraction(numerator,  denominator,  gcd);	      Numerator    whole    =    getGcd().getFraction(numerator,    denominator);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
25	[BUG]  [BUGGY]  Numerator  whole  =  getGcd().getFraction(numerator,  denominator,  false);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  Numerator  whole  =  getGcd().getFraction(numerator,  denominator,  false);  [BUGGY]    throw  new  ArithmeticException(   "The  denominator  must  not  be  zero   ");  }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	Numerator  whole  =  getGcd().getFraction(numerator,  denominator,  false);	      Numerator    whole    =    getGcd().getFraction(numerator,    denominator);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
26	[BUG]  [BUGGY]  Integer  denominator  =  getDenominator(0);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  Integer  denominator  =  getDenominator(0);  [BUGGY]    throw  new  ArithmeticException(   "The  denominator  must  not  be  zero   ");  }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	Integer  denominator  =  getDenominator(0);	      Integer    denominator    =    getDenominator();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
27	[BUG]  [BUGGY]  throw  new  ArithmeticException( "The  denominator  must  not  be  numeric ",  numerator);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  throw  new  ArithmeticException( "The  denominator  must  not  be  numeric ",  numerator);  [BUGGY]    }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	throw  new  ArithmeticException( "The  denominator  must  not  be  numeric ",  numerator);	  throw    new    ArithmeticException(   "The    denominator    must    not    be    numeric   ");    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
28	[BUG]  [BUGGY]  if(denominator  <  0)  {  return  FOUR_FIFTHS;  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  if(denominator  <  0)  {  return  FOUR_FIFTHS;  }  [BUGGY]    throw  new  ArithmeticException(   "The  denominator  must  not  be  zero   ");  }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	if(denominator  <  0)  {  return  FOUR_FIFTHS;  }	      if(denominator    <    0)    {    return    ZERO;    }    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
29	[BUG]  [BUGGY]  if(numerator  <  0)  {  return  denominator;  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  if(numerator  <  0)  {  return  denominator;  }  [BUGGY]    throw  new  ArithmeticException(   "The  denominator  must  not  be  zero   ");  }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	if(numerator  <  0)  {  return  denominator;  }	      if(denominator    <    0)    {    return    ZERO;    }    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
30	[BUG]  [BUGGY]  if(denominator  <  0)  {  return  numerator;  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  if(denominator  <  0)  {  return  numerator;  }  [BUGGY]    throw  new  ArithmeticException(   "The  denominator  must  not  be  zero   ");  }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	if(denominator  <  0)  {  return  numerator;  }	      if(denominator    <    0)    {    return    ZERO;    }    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
31	[BUG]  [BUGGY]  int  denominator  =  getDenominator(0);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  int  denominator  =  getDenominator(0);  [BUGGY]    throw  new  ArithmeticException(   "The  denominator  must  not  be  zero   ");  }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	int  denominator  =  getDenominator(0);	      int    denominator    =    getDenominator();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
32	[BUG]  [BUGGY]  Numerator  whole  =  getFraction(numerator,  denominator,  hashCode);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  Numerator  whole  =  getFraction(numerator,  denominator,  hashCode);  [BUGGY]    throw  new  ArithmeticException(   "The  denominator  must  not  be  zero   ");  }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	Numerator  whole  =  getFraction(numerator,  denominator,  hashCode);	      Numerator    whole    =    getFraction(numerator,    denominator);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
33	[BUG]  [BUGGY]  Numerator  whole  =  getFraction(numerator,  denominator,  gcd);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  Numerator  whole  =  getFraction(numerator,  denominator,  gcd);  [BUGGY]    throw  new  ArithmeticException(   "The  denominator  must  not  be  zero   ");  }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	Numerator  whole  =  getFraction(numerator,  denominator,  gcd);	      Numerator    whole    =    getFraction(numerator,    denominator);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
34	[BUG]  [BUGGY]  Numerator  whole  =  getFraction(numerator,  denominator,  numerator);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  Numerator  whole  =  getFraction(numerator,  denominator,  numerator);  [BUGGY]    throw  new  ArithmeticException(   "The  denominator  must  not  be  zero   ");  }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	Numerator  whole  =  getFraction(numerator,  denominator,  numerator);	      Numerator    whole    =    getFraction(numerator,    denominator);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
35	[BUG]  [BUGGY]  Numerator  whole  =  getFraction(numerator,  denominator,  false);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  Numerator  whole  =  getFraction(numerator,  denominator,  false);  [BUGGY]    throw  new  ArithmeticException(   "The  denominator  must  not  be  zero   ");  }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	Numerator  whole  =  getFraction(numerator,  denominator,  false);	      Numerator    whole    =    getFraction(numerator,    denominator);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
36	[BUG]  [BUGGY]  throw  new  ArithmeticException( "The  desominator  must  not  be  numeric. ");  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  throw  new  ArithmeticException( "The  desominator  must  not  be  numeric. ");  [BUGGY]    }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	throw  new  ArithmeticException( "The  desominator  must  not  be  numeric. ");	  throw    new    ArithmeticException(   "The    denominator    must    not    be    numeric.   ");    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
37	[BUG]  [BUGGY]  return  new  Fraction(denominator,  numerator);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  return  new  Fraction(denominator,  numerator);  [BUGGY]    }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	return  new  Fraction(denominator,  numerator);	  return    new    Fraction(numerator,    denominator);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
38	[BUG]  [BUGGY]  if(denominator  <  0)  {  return  ONE;  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  if(denominator  <  0)  {  return  ONE;  }  [BUGGY]    throw  new  ArithmeticException(   "The  denominator  must  not  be  zero   ");  }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	if(denominator  <  0)  {  return  ONE;  }	      if(denominator    <    0)    {    return    ZERO;    }    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
39	[BUG]  [BUGGY]  if(denominator  ==  0)  {  return  ZERO;  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  if(denominator  ==  0)  {  return  ZERO;  }  [BUGGY]    throw  new  ArithmeticException(   "The  denominator  must  not  be  zero   ");  }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	if(denominator  ==  0)  {  return  ZERO;  }	      if(denominator    <    0)    {    return    ZERO;    }    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
40	[BUG]  [BUGGY]  throw  new  ArithmeticException( "Numeric  parameter  must  not  be  numeric. ");  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  throw  new  ArithmeticException( "Numeric  parameter  must  not  be  numeric. ");  [BUGGY]    }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	throw  new  ArithmeticException( "Numeric  parameter  must  not  be  numeric. ");	  throw    new    ArithmeticException(   "Numerator    must    not    be    numeric.   ");    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
41	[BUG]  [BUGGY]  throw  new  ArithmeticException( "The  numerator  must  not  be  zero. ");  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  throw  new  ArithmeticException( "The  numerator  must  not  be  zero. ");  [BUGGY]    }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	throw  new  ArithmeticException( "The  numerator  must  not  be  zero. ");	  throw    new    ArithmeticException(   "The    denominator    must    not    be    zero.   ");    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
42	[BUG]  [BUGGY]  throw  new  ArithmeticException( "The  numerator  must  not  be  numeric.  Integer,  Denominator  must  not  be  numeric. ");  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  throw  new  ArithmeticException( "The  numerator  must  not  be  numeric.  Integer,  Denominator  must  not  be  numeric. ");  [BUGGY]    }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	throw  new  ArithmeticException( "The  numerator  must  not  be  numeric.  Integer,  Denominator  must  not  be  numeric. ");	  throw    new    ArithmeticException(   "The    numerator    must    not    be    numeric.   ");    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
43	[BUG]  [BUGGY]  return  new  ArithmeticException( "The  numerator  must  not  be  numeric. ");  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  return  new  ArithmeticException( "The  numerator  must  not  be  numeric. ");  [BUGGY]    }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	return  new  ArithmeticException( "The  numerator  must  not  be  numeric. ");	  throw    new    ArithmeticException(   "The    numerator    must    not    be    numeric.   ");    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
44	[BUG]  [BUGGY]  return  new  ArithmeticException( "Fraction  denominator  must  not  be  numeric. ");  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  return  new  ArithmeticException( "Fraction  denominator  must  not  be  numeric. ");  [BUGGY]    }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	return  new  ArithmeticException( "Fraction  denominator  must  not  be  numeric. ");	  throw    new    ArithmeticException(   "Fraction    denominator    must    not    be    numeric.   ");    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
45	[BUG]  [BUGGY]  int  denominator  =  getDenominator(numerator,  denominator,  denominator);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  int  denominator  =  getDenominator(numerator,  denominator,  denominator);  [BUGGY]    throw  new  ArithmeticException(   "The  denominator  must  not  be  zero   ");  }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	int  denominator  =  getDenominator(numerator,  denominator,  denominator);	      int    denominator    =    getDenominator(numerator,    denominator);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
46	[BUG]  [BUGGY]  throw  new  ArithmeticException( "The  denominator  must  not  be  numerator. ");  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  throw  new  ArithmeticException( "The  denominator  must  not  be  numerator. ");  [BUGGY]    }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	throw  new  ArithmeticException( "The  denominator  must  not  be  numerator. ");	  throw    new    ArithmeticException(   "The    denominator    must    not    be    zero.   ");    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
47	[BUG]  [BUGGY]  throw  new  ArithmeticException( "Numerator  must  not  be  numeric.  Infinity. ");  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  static  Fraction  getReducedFraction(int  numerator,  int  denominator)  {  if  (denominator  ==  0)  {    [BUGGY]  throw  new  ArithmeticException( "Numerator  must  not  be  numeric.  Infinity. ");  [BUGGY]    }  if  (numerator==0)  {  return  ZERO;  //  normalize  zero.  }  if  (denominator==Integer.MIN_VALUE  &&  (numerator&1)==0)  {  numerator/=2;  denominator/=2;  }  if  (denominator  <  0)  {  if  (numerator==Integer.MIN_VALUE  ||  [CLASS]  Fraction  [METHOD]  getReducedFraction  [RETURN_TYPE]  Fraction  int  numerator  int  denominator  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	216	216	2	replace	throw  new  ArithmeticException( "Numerator  must  not  be  numeric.  Infinity. ");	  throw    new    ArithmeticException(   "Numerator    must    not    be    numeric.   ");    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
